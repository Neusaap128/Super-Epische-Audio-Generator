
SEAG_F.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006f58  080001e0  080001e0  000101e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000430  08007138  08007138  00017138  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007568  08007568  000200c0  2**0
                  CONTENTS
  4 .ARM          00000008  08007568  08007568  00017568  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007570  08007570  000200c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007570  08007570  00017570  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007574  08007574  00017574  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000c0  20000000  08007578  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000718  200000c0  08007638  000200c0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200007d8  08007638  000207d8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200c0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000200f0  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000e036  00000000  00000000  00020133  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000313e  00000000  00000000  0002e169  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000c78  00000000  00000000  000312a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000092e  00000000  00000000  00031f20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000249a4  00000000  00000000  0003284e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000154a8  00000000  00000000  000571f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d0675  00000000  00000000  0006c69a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000037a4  00000000  00000000  0013cd10  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000073  00000000  00000000  001404b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	; (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	; (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	; (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	200000c0 	.word	0x200000c0
 80001fc:	00000000 	.word	0x00000000
 8000200:	08007120 	.word	0x08007120

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	; (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	; (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	; (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	200000c4 	.word	0x200000c4
 800021c:	08007120 	.word	0x08007120

08000220 <__aeabi_drsub>:
 8000220:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000224:	e002      	b.n	800022c <__adddf3>
 8000226:	bf00      	nop

08000228 <__aeabi_dsub>:
 8000228:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800022c <__adddf3>:
 800022c:	b530      	push	{r4, r5, lr}
 800022e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000232:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000236:	ea94 0f05 	teq	r4, r5
 800023a:	bf08      	it	eq
 800023c:	ea90 0f02 	teqeq	r0, r2
 8000240:	bf1f      	itttt	ne
 8000242:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000246:	ea55 0c02 	orrsne.w	ip, r5, r2
 800024a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800024e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000252:	f000 80e2 	beq.w	800041a <__adddf3+0x1ee>
 8000256:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800025a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800025e:	bfb8      	it	lt
 8000260:	426d      	neglt	r5, r5
 8000262:	dd0c      	ble.n	800027e <__adddf3+0x52>
 8000264:	442c      	add	r4, r5
 8000266:	ea80 0202 	eor.w	r2, r0, r2
 800026a:	ea81 0303 	eor.w	r3, r1, r3
 800026e:	ea82 0000 	eor.w	r0, r2, r0
 8000272:	ea83 0101 	eor.w	r1, r3, r1
 8000276:	ea80 0202 	eor.w	r2, r0, r2
 800027a:	ea81 0303 	eor.w	r3, r1, r3
 800027e:	2d36      	cmp	r5, #54	; 0x36
 8000280:	bf88      	it	hi
 8000282:	bd30      	pophi	{r4, r5, pc}
 8000284:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000288:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800028c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000290:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000294:	d002      	beq.n	800029c <__adddf3+0x70>
 8000296:	4240      	negs	r0, r0
 8000298:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800029c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002a4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002a8:	d002      	beq.n	80002b0 <__adddf3+0x84>
 80002aa:	4252      	negs	r2, r2
 80002ac:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002b0:	ea94 0f05 	teq	r4, r5
 80002b4:	f000 80a7 	beq.w	8000406 <__adddf3+0x1da>
 80002b8:	f1a4 0401 	sub.w	r4, r4, #1
 80002bc:	f1d5 0e20 	rsbs	lr, r5, #32
 80002c0:	db0d      	blt.n	80002de <__adddf3+0xb2>
 80002c2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002c6:	fa22 f205 	lsr.w	r2, r2, r5
 80002ca:	1880      	adds	r0, r0, r2
 80002cc:	f141 0100 	adc.w	r1, r1, #0
 80002d0:	fa03 f20e 	lsl.w	r2, r3, lr
 80002d4:	1880      	adds	r0, r0, r2
 80002d6:	fa43 f305 	asr.w	r3, r3, r5
 80002da:	4159      	adcs	r1, r3
 80002dc:	e00e      	b.n	80002fc <__adddf3+0xd0>
 80002de:	f1a5 0520 	sub.w	r5, r5, #32
 80002e2:	f10e 0e20 	add.w	lr, lr, #32
 80002e6:	2a01      	cmp	r2, #1
 80002e8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002ec:	bf28      	it	cs
 80002ee:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002f2:	fa43 f305 	asr.w	r3, r3, r5
 80002f6:	18c0      	adds	r0, r0, r3
 80002f8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002fc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000300:	d507      	bpl.n	8000312 <__adddf3+0xe6>
 8000302:	f04f 0e00 	mov.w	lr, #0
 8000306:	f1dc 0c00 	rsbs	ip, ip, #0
 800030a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800030e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000312:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000316:	d31b      	bcc.n	8000350 <__adddf3+0x124>
 8000318:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800031c:	d30c      	bcc.n	8000338 <__adddf3+0x10c>
 800031e:	0849      	lsrs	r1, r1, #1
 8000320:	ea5f 0030 	movs.w	r0, r0, rrx
 8000324:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000328:	f104 0401 	add.w	r4, r4, #1
 800032c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000330:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000334:	f080 809a 	bcs.w	800046c <__adddf3+0x240>
 8000338:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800033c:	bf08      	it	eq
 800033e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000342:	f150 0000 	adcs.w	r0, r0, #0
 8000346:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800034a:	ea41 0105 	orr.w	r1, r1, r5
 800034e:	bd30      	pop	{r4, r5, pc}
 8000350:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000354:	4140      	adcs	r0, r0
 8000356:	eb41 0101 	adc.w	r1, r1, r1
 800035a:	3c01      	subs	r4, #1
 800035c:	bf28      	it	cs
 800035e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000362:	d2e9      	bcs.n	8000338 <__adddf3+0x10c>
 8000364:	f091 0f00 	teq	r1, #0
 8000368:	bf04      	itt	eq
 800036a:	4601      	moveq	r1, r0
 800036c:	2000      	moveq	r0, #0
 800036e:	fab1 f381 	clz	r3, r1
 8000372:	bf08      	it	eq
 8000374:	3320      	addeq	r3, #32
 8000376:	f1a3 030b 	sub.w	r3, r3, #11
 800037a:	f1b3 0220 	subs.w	r2, r3, #32
 800037e:	da0c      	bge.n	800039a <__adddf3+0x16e>
 8000380:	320c      	adds	r2, #12
 8000382:	dd08      	ble.n	8000396 <__adddf3+0x16a>
 8000384:	f102 0c14 	add.w	ip, r2, #20
 8000388:	f1c2 020c 	rsb	r2, r2, #12
 800038c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000390:	fa21 f102 	lsr.w	r1, r1, r2
 8000394:	e00c      	b.n	80003b0 <__adddf3+0x184>
 8000396:	f102 0214 	add.w	r2, r2, #20
 800039a:	bfd8      	it	le
 800039c:	f1c2 0c20 	rsble	ip, r2, #32
 80003a0:	fa01 f102 	lsl.w	r1, r1, r2
 80003a4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003a8:	bfdc      	itt	le
 80003aa:	ea41 010c 	orrle.w	r1, r1, ip
 80003ae:	4090      	lslle	r0, r2
 80003b0:	1ae4      	subs	r4, r4, r3
 80003b2:	bfa2      	ittt	ge
 80003b4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003b8:	4329      	orrge	r1, r5
 80003ba:	bd30      	popge	{r4, r5, pc}
 80003bc:	ea6f 0404 	mvn.w	r4, r4
 80003c0:	3c1f      	subs	r4, #31
 80003c2:	da1c      	bge.n	80003fe <__adddf3+0x1d2>
 80003c4:	340c      	adds	r4, #12
 80003c6:	dc0e      	bgt.n	80003e6 <__adddf3+0x1ba>
 80003c8:	f104 0414 	add.w	r4, r4, #20
 80003cc:	f1c4 0220 	rsb	r2, r4, #32
 80003d0:	fa20 f004 	lsr.w	r0, r0, r4
 80003d4:	fa01 f302 	lsl.w	r3, r1, r2
 80003d8:	ea40 0003 	orr.w	r0, r0, r3
 80003dc:	fa21 f304 	lsr.w	r3, r1, r4
 80003e0:	ea45 0103 	orr.w	r1, r5, r3
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	f1c4 040c 	rsb	r4, r4, #12
 80003ea:	f1c4 0220 	rsb	r2, r4, #32
 80003ee:	fa20 f002 	lsr.w	r0, r0, r2
 80003f2:	fa01 f304 	lsl.w	r3, r1, r4
 80003f6:	ea40 0003 	orr.w	r0, r0, r3
 80003fa:	4629      	mov	r1, r5
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	fa21 f004 	lsr.w	r0, r1, r4
 8000402:	4629      	mov	r1, r5
 8000404:	bd30      	pop	{r4, r5, pc}
 8000406:	f094 0f00 	teq	r4, #0
 800040a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800040e:	bf06      	itte	eq
 8000410:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000414:	3401      	addeq	r4, #1
 8000416:	3d01      	subne	r5, #1
 8000418:	e74e      	b.n	80002b8 <__adddf3+0x8c>
 800041a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800041e:	bf18      	it	ne
 8000420:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000424:	d029      	beq.n	800047a <__adddf3+0x24e>
 8000426:	ea94 0f05 	teq	r4, r5
 800042a:	bf08      	it	eq
 800042c:	ea90 0f02 	teqeq	r0, r2
 8000430:	d005      	beq.n	800043e <__adddf3+0x212>
 8000432:	ea54 0c00 	orrs.w	ip, r4, r0
 8000436:	bf04      	itt	eq
 8000438:	4619      	moveq	r1, r3
 800043a:	4610      	moveq	r0, r2
 800043c:	bd30      	pop	{r4, r5, pc}
 800043e:	ea91 0f03 	teq	r1, r3
 8000442:	bf1e      	ittt	ne
 8000444:	2100      	movne	r1, #0
 8000446:	2000      	movne	r0, #0
 8000448:	bd30      	popne	{r4, r5, pc}
 800044a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800044e:	d105      	bne.n	800045c <__adddf3+0x230>
 8000450:	0040      	lsls	r0, r0, #1
 8000452:	4149      	adcs	r1, r1
 8000454:	bf28      	it	cs
 8000456:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800045a:	bd30      	pop	{r4, r5, pc}
 800045c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000460:	bf3c      	itt	cc
 8000462:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000466:	bd30      	popcc	{r4, r5, pc}
 8000468:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800046c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000470:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000474:	f04f 0000 	mov.w	r0, #0
 8000478:	bd30      	pop	{r4, r5, pc}
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf1a      	itte	ne
 8000480:	4619      	movne	r1, r3
 8000482:	4610      	movne	r0, r2
 8000484:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000488:	bf1c      	itt	ne
 800048a:	460b      	movne	r3, r1
 800048c:	4602      	movne	r2, r0
 800048e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000492:	bf06      	itte	eq
 8000494:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000498:	ea91 0f03 	teqeq	r1, r3
 800049c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004a0:	bd30      	pop	{r4, r5, pc}
 80004a2:	bf00      	nop

080004a4 <__aeabi_ui2d>:
 80004a4:	f090 0f00 	teq	r0, #0
 80004a8:	bf04      	itt	eq
 80004aa:	2100      	moveq	r1, #0
 80004ac:	4770      	bxeq	lr
 80004ae:	b530      	push	{r4, r5, lr}
 80004b0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004b4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004b8:	f04f 0500 	mov.w	r5, #0
 80004bc:	f04f 0100 	mov.w	r1, #0
 80004c0:	e750      	b.n	8000364 <__adddf3+0x138>
 80004c2:	bf00      	nop

080004c4 <__aeabi_i2d>:
 80004c4:	f090 0f00 	teq	r0, #0
 80004c8:	bf04      	itt	eq
 80004ca:	2100      	moveq	r1, #0
 80004cc:	4770      	bxeq	lr
 80004ce:	b530      	push	{r4, r5, lr}
 80004d0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004d4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004d8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004dc:	bf48      	it	mi
 80004de:	4240      	negmi	r0, r0
 80004e0:	f04f 0100 	mov.w	r1, #0
 80004e4:	e73e      	b.n	8000364 <__adddf3+0x138>
 80004e6:	bf00      	nop

080004e8 <__aeabi_f2d>:
 80004e8:	0042      	lsls	r2, r0, #1
 80004ea:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004ee:	ea4f 0131 	mov.w	r1, r1, rrx
 80004f2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004f6:	bf1f      	itttt	ne
 80004f8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004fc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000500:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000504:	4770      	bxne	lr
 8000506:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800050a:	bf08      	it	eq
 800050c:	4770      	bxeq	lr
 800050e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000512:	bf04      	itt	eq
 8000514:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000518:	4770      	bxeq	lr
 800051a:	b530      	push	{r4, r5, lr}
 800051c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000520:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000524:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000528:	e71c      	b.n	8000364 <__adddf3+0x138>
 800052a:	bf00      	nop

0800052c <__aeabi_ul2d>:
 800052c:	ea50 0201 	orrs.w	r2, r0, r1
 8000530:	bf08      	it	eq
 8000532:	4770      	bxeq	lr
 8000534:	b530      	push	{r4, r5, lr}
 8000536:	f04f 0500 	mov.w	r5, #0
 800053a:	e00a      	b.n	8000552 <__aeabi_l2d+0x16>

0800053c <__aeabi_l2d>:
 800053c:	ea50 0201 	orrs.w	r2, r0, r1
 8000540:	bf08      	it	eq
 8000542:	4770      	bxeq	lr
 8000544:	b530      	push	{r4, r5, lr}
 8000546:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800054a:	d502      	bpl.n	8000552 <__aeabi_l2d+0x16>
 800054c:	4240      	negs	r0, r0
 800054e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000552:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000556:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800055a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800055e:	f43f aed8 	beq.w	8000312 <__adddf3+0xe6>
 8000562:	f04f 0203 	mov.w	r2, #3
 8000566:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800056a:	bf18      	it	ne
 800056c:	3203      	addne	r2, #3
 800056e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000572:	bf18      	it	ne
 8000574:	3203      	addne	r2, #3
 8000576:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800057a:	f1c2 0320 	rsb	r3, r2, #32
 800057e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000582:	fa20 f002 	lsr.w	r0, r0, r2
 8000586:	fa01 fe03 	lsl.w	lr, r1, r3
 800058a:	ea40 000e 	orr.w	r0, r0, lr
 800058e:	fa21 f102 	lsr.w	r1, r1, r2
 8000592:	4414      	add	r4, r2
 8000594:	e6bd      	b.n	8000312 <__adddf3+0xe6>
 8000596:	bf00      	nop

08000598 <__aeabi_dmul>:
 8000598:	b570      	push	{r4, r5, r6, lr}
 800059a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800059e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005a2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005a6:	bf1d      	ittte	ne
 80005a8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005ac:	ea94 0f0c 	teqne	r4, ip
 80005b0:	ea95 0f0c 	teqne	r5, ip
 80005b4:	f000 f8de 	bleq	8000774 <__aeabi_dmul+0x1dc>
 80005b8:	442c      	add	r4, r5
 80005ba:	ea81 0603 	eor.w	r6, r1, r3
 80005be:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005c2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005c6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005ca:	bf18      	it	ne
 80005cc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005d0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005d8:	d038      	beq.n	800064c <__aeabi_dmul+0xb4>
 80005da:	fba0 ce02 	umull	ip, lr, r0, r2
 80005de:	f04f 0500 	mov.w	r5, #0
 80005e2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005e6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005ea:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005ee:	f04f 0600 	mov.w	r6, #0
 80005f2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005f6:	f09c 0f00 	teq	ip, #0
 80005fa:	bf18      	it	ne
 80005fc:	f04e 0e01 	orrne.w	lr, lr, #1
 8000600:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000604:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000608:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800060c:	d204      	bcs.n	8000618 <__aeabi_dmul+0x80>
 800060e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000612:	416d      	adcs	r5, r5
 8000614:	eb46 0606 	adc.w	r6, r6, r6
 8000618:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800061c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000620:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000624:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000628:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800062c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000630:	bf88      	it	hi
 8000632:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000636:	d81e      	bhi.n	8000676 <__aeabi_dmul+0xde>
 8000638:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800063c:	bf08      	it	eq
 800063e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000642:	f150 0000 	adcs.w	r0, r0, #0
 8000646:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800064a:	bd70      	pop	{r4, r5, r6, pc}
 800064c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000650:	ea46 0101 	orr.w	r1, r6, r1
 8000654:	ea40 0002 	orr.w	r0, r0, r2
 8000658:	ea81 0103 	eor.w	r1, r1, r3
 800065c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000660:	bfc2      	ittt	gt
 8000662:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000666:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800066a:	bd70      	popgt	{r4, r5, r6, pc}
 800066c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000670:	f04f 0e00 	mov.w	lr, #0
 8000674:	3c01      	subs	r4, #1
 8000676:	f300 80ab 	bgt.w	80007d0 <__aeabi_dmul+0x238>
 800067a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800067e:	bfde      	ittt	le
 8000680:	2000      	movle	r0, #0
 8000682:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000686:	bd70      	pople	{r4, r5, r6, pc}
 8000688:	f1c4 0400 	rsb	r4, r4, #0
 800068c:	3c20      	subs	r4, #32
 800068e:	da35      	bge.n	80006fc <__aeabi_dmul+0x164>
 8000690:	340c      	adds	r4, #12
 8000692:	dc1b      	bgt.n	80006cc <__aeabi_dmul+0x134>
 8000694:	f104 0414 	add.w	r4, r4, #20
 8000698:	f1c4 0520 	rsb	r5, r4, #32
 800069c:	fa00 f305 	lsl.w	r3, r0, r5
 80006a0:	fa20 f004 	lsr.w	r0, r0, r4
 80006a4:	fa01 f205 	lsl.w	r2, r1, r5
 80006a8:	ea40 0002 	orr.w	r0, r0, r2
 80006ac:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006b0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006b4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006b8:	fa21 f604 	lsr.w	r6, r1, r4
 80006bc:	eb42 0106 	adc.w	r1, r2, r6
 80006c0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006c4:	bf08      	it	eq
 80006c6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f1c4 040c 	rsb	r4, r4, #12
 80006d0:	f1c4 0520 	rsb	r5, r4, #32
 80006d4:	fa00 f304 	lsl.w	r3, r0, r4
 80006d8:	fa20 f005 	lsr.w	r0, r0, r5
 80006dc:	fa01 f204 	lsl.w	r2, r1, r4
 80006e0:	ea40 0002 	orr.w	r0, r0, r2
 80006e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006e8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006ec:	f141 0100 	adc.w	r1, r1, #0
 80006f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006f4:	bf08      	it	eq
 80006f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006fa:	bd70      	pop	{r4, r5, r6, pc}
 80006fc:	f1c4 0520 	rsb	r5, r4, #32
 8000700:	fa00 f205 	lsl.w	r2, r0, r5
 8000704:	ea4e 0e02 	orr.w	lr, lr, r2
 8000708:	fa20 f304 	lsr.w	r3, r0, r4
 800070c:	fa01 f205 	lsl.w	r2, r1, r5
 8000710:	ea43 0302 	orr.w	r3, r3, r2
 8000714:	fa21 f004 	lsr.w	r0, r1, r4
 8000718:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800071c:	fa21 f204 	lsr.w	r2, r1, r4
 8000720:	ea20 0002 	bic.w	r0, r0, r2
 8000724:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000728:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800072c:	bf08      	it	eq
 800072e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000732:	bd70      	pop	{r4, r5, r6, pc}
 8000734:	f094 0f00 	teq	r4, #0
 8000738:	d10f      	bne.n	800075a <__aeabi_dmul+0x1c2>
 800073a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800073e:	0040      	lsls	r0, r0, #1
 8000740:	eb41 0101 	adc.w	r1, r1, r1
 8000744:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000748:	bf08      	it	eq
 800074a:	3c01      	subeq	r4, #1
 800074c:	d0f7      	beq.n	800073e <__aeabi_dmul+0x1a6>
 800074e:	ea41 0106 	orr.w	r1, r1, r6
 8000752:	f095 0f00 	teq	r5, #0
 8000756:	bf18      	it	ne
 8000758:	4770      	bxne	lr
 800075a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800075e:	0052      	lsls	r2, r2, #1
 8000760:	eb43 0303 	adc.w	r3, r3, r3
 8000764:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000768:	bf08      	it	eq
 800076a:	3d01      	subeq	r5, #1
 800076c:	d0f7      	beq.n	800075e <__aeabi_dmul+0x1c6>
 800076e:	ea43 0306 	orr.w	r3, r3, r6
 8000772:	4770      	bx	lr
 8000774:	ea94 0f0c 	teq	r4, ip
 8000778:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800077c:	bf18      	it	ne
 800077e:	ea95 0f0c 	teqne	r5, ip
 8000782:	d00c      	beq.n	800079e <__aeabi_dmul+0x206>
 8000784:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000788:	bf18      	it	ne
 800078a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800078e:	d1d1      	bne.n	8000734 <__aeabi_dmul+0x19c>
 8000790:	ea81 0103 	eor.w	r1, r1, r3
 8000794:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000798:	f04f 0000 	mov.w	r0, #0
 800079c:	bd70      	pop	{r4, r5, r6, pc}
 800079e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007a2:	bf06      	itte	eq
 80007a4:	4610      	moveq	r0, r2
 80007a6:	4619      	moveq	r1, r3
 80007a8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ac:	d019      	beq.n	80007e2 <__aeabi_dmul+0x24a>
 80007ae:	ea94 0f0c 	teq	r4, ip
 80007b2:	d102      	bne.n	80007ba <__aeabi_dmul+0x222>
 80007b4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007b8:	d113      	bne.n	80007e2 <__aeabi_dmul+0x24a>
 80007ba:	ea95 0f0c 	teq	r5, ip
 80007be:	d105      	bne.n	80007cc <__aeabi_dmul+0x234>
 80007c0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007c4:	bf1c      	itt	ne
 80007c6:	4610      	movne	r0, r2
 80007c8:	4619      	movne	r1, r3
 80007ca:	d10a      	bne.n	80007e2 <__aeabi_dmul+0x24a>
 80007cc:	ea81 0103 	eor.w	r1, r1, r3
 80007d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007d4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007d8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007dc:	f04f 0000 	mov.w	r0, #0
 80007e0:	bd70      	pop	{r4, r5, r6, pc}
 80007e2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007e6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007ea:	bd70      	pop	{r4, r5, r6, pc}

080007ec <__aeabi_ddiv>:
 80007ec:	b570      	push	{r4, r5, r6, lr}
 80007ee:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007f2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007f6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007fa:	bf1d      	ittte	ne
 80007fc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000800:	ea94 0f0c 	teqne	r4, ip
 8000804:	ea95 0f0c 	teqne	r5, ip
 8000808:	f000 f8a7 	bleq	800095a <__aeabi_ddiv+0x16e>
 800080c:	eba4 0405 	sub.w	r4, r4, r5
 8000810:	ea81 0e03 	eor.w	lr, r1, r3
 8000814:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000818:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800081c:	f000 8088 	beq.w	8000930 <__aeabi_ddiv+0x144>
 8000820:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000824:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000828:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800082c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000830:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000834:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000838:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800083c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000840:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000844:	429d      	cmp	r5, r3
 8000846:	bf08      	it	eq
 8000848:	4296      	cmpeq	r6, r2
 800084a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800084e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000852:	d202      	bcs.n	800085a <__aeabi_ddiv+0x6e>
 8000854:	085b      	lsrs	r3, r3, #1
 8000856:	ea4f 0232 	mov.w	r2, r2, rrx
 800085a:	1ab6      	subs	r6, r6, r2
 800085c:	eb65 0503 	sbc.w	r5, r5, r3
 8000860:	085b      	lsrs	r3, r3, #1
 8000862:	ea4f 0232 	mov.w	r2, r2, rrx
 8000866:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800086a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000880:	085b      	lsrs	r3, r3, #1
 8000882:	ea4f 0232 	mov.w	r2, r2, rrx
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008b0:	085b      	lsrs	r3, r3, #1
 80008b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008be:	bf22      	ittt	cs
 80008c0:	1ab6      	subcs	r6, r6, r2
 80008c2:	4675      	movcs	r5, lr
 80008c4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008c8:	ea55 0e06 	orrs.w	lr, r5, r6
 80008cc:	d018      	beq.n	8000900 <__aeabi_ddiv+0x114>
 80008ce:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008d2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008d6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008da:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008de:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008e2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008e6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008ea:	d1c0      	bne.n	800086e <__aeabi_ddiv+0x82>
 80008ec:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008f0:	d10b      	bne.n	800090a <__aeabi_ddiv+0x11e>
 80008f2:	ea41 0100 	orr.w	r1, r1, r0
 80008f6:	f04f 0000 	mov.w	r0, #0
 80008fa:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008fe:	e7b6      	b.n	800086e <__aeabi_ddiv+0x82>
 8000900:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000904:	bf04      	itt	eq
 8000906:	4301      	orreq	r1, r0
 8000908:	2000      	moveq	r0, #0
 800090a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800090e:	bf88      	it	hi
 8000910:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000914:	f63f aeaf 	bhi.w	8000676 <__aeabi_dmul+0xde>
 8000918:	ebb5 0c03 	subs.w	ip, r5, r3
 800091c:	bf04      	itt	eq
 800091e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000922:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000926:	f150 0000 	adcs.w	r0, r0, #0
 800092a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800092e:	bd70      	pop	{r4, r5, r6, pc}
 8000930:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000934:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000938:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800093c:	bfc2      	ittt	gt
 800093e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000942:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000946:	bd70      	popgt	{r4, r5, r6, pc}
 8000948:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800094c:	f04f 0e00 	mov.w	lr, #0
 8000950:	3c01      	subs	r4, #1
 8000952:	e690      	b.n	8000676 <__aeabi_dmul+0xde>
 8000954:	ea45 0e06 	orr.w	lr, r5, r6
 8000958:	e68d      	b.n	8000676 <__aeabi_dmul+0xde>
 800095a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800095e:	ea94 0f0c 	teq	r4, ip
 8000962:	bf08      	it	eq
 8000964:	ea95 0f0c 	teqeq	r5, ip
 8000968:	f43f af3b 	beq.w	80007e2 <__aeabi_dmul+0x24a>
 800096c:	ea94 0f0c 	teq	r4, ip
 8000970:	d10a      	bne.n	8000988 <__aeabi_ddiv+0x19c>
 8000972:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000976:	f47f af34 	bne.w	80007e2 <__aeabi_dmul+0x24a>
 800097a:	ea95 0f0c 	teq	r5, ip
 800097e:	f47f af25 	bne.w	80007cc <__aeabi_dmul+0x234>
 8000982:	4610      	mov	r0, r2
 8000984:	4619      	mov	r1, r3
 8000986:	e72c      	b.n	80007e2 <__aeabi_dmul+0x24a>
 8000988:	ea95 0f0c 	teq	r5, ip
 800098c:	d106      	bne.n	800099c <__aeabi_ddiv+0x1b0>
 800098e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000992:	f43f aefd 	beq.w	8000790 <__aeabi_dmul+0x1f8>
 8000996:	4610      	mov	r0, r2
 8000998:	4619      	mov	r1, r3
 800099a:	e722      	b.n	80007e2 <__aeabi_dmul+0x24a>
 800099c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009a0:	bf18      	it	ne
 80009a2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009a6:	f47f aec5 	bne.w	8000734 <__aeabi_dmul+0x19c>
 80009aa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009ae:	f47f af0d 	bne.w	80007cc <__aeabi_dmul+0x234>
 80009b2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009b6:	f47f aeeb 	bne.w	8000790 <__aeabi_dmul+0x1f8>
 80009ba:	e712      	b.n	80007e2 <__aeabi_dmul+0x24a>

080009bc <__gedf2>:
 80009bc:	f04f 3cff 	mov.w	ip, #4294967295
 80009c0:	e006      	b.n	80009d0 <__cmpdf2+0x4>
 80009c2:	bf00      	nop

080009c4 <__ledf2>:
 80009c4:	f04f 0c01 	mov.w	ip, #1
 80009c8:	e002      	b.n	80009d0 <__cmpdf2+0x4>
 80009ca:	bf00      	nop

080009cc <__cmpdf2>:
 80009cc:	f04f 0c01 	mov.w	ip, #1
 80009d0:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009d4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009d8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009dc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009e0:	bf18      	it	ne
 80009e2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009e6:	d01b      	beq.n	8000a20 <__cmpdf2+0x54>
 80009e8:	b001      	add	sp, #4
 80009ea:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009ee:	bf0c      	ite	eq
 80009f0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009f4:	ea91 0f03 	teqne	r1, r3
 80009f8:	bf02      	ittt	eq
 80009fa:	ea90 0f02 	teqeq	r0, r2
 80009fe:	2000      	moveq	r0, #0
 8000a00:	4770      	bxeq	lr
 8000a02:	f110 0f00 	cmn.w	r0, #0
 8000a06:	ea91 0f03 	teq	r1, r3
 8000a0a:	bf58      	it	pl
 8000a0c:	4299      	cmppl	r1, r3
 8000a0e:	bf08      	it	eq
 8000a10:	4290      	cmpeq	r0, r2
 8000a12:	bf2c      	ite	cs
 8000a14:	17d8      	asrcs	r0, r3, #31
 8000a16:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a1a:	f040 0001 	orr.w	r0, r0, #1
 8000a1e:	4770      	bx	lr
 8000a20:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a24:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a28:	d102      	bne.n	8000a30 <__cmpdf2+0x64>
 8000a2a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a2e:	d107      	bne.n	8000a40 <__cmpdf2+0x74>
 8000a30:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a38:	d1d6      	bne.n	80009e8 <__cmpdf2+0x1c>
 8000a3a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a3e:	d0d3      	beq.n	80009e8 <__cmpdf2+0x1c>
 8000a40:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a44:	4770      	bx	lr
 8000a46:	bf00      	nop

08000a48 <__aeabi_cdrcmple>:
 8000a48:	4684      	mov	ip, r0
 8000a4a:	4610      	mov	r0, r2
 8000a4c:	4662      	mov	r2, ip
 8000a4e:	468c      	mov	ip, r1
 8000a50:	4619      	mov	r1, r3
 8000a52:	4663      	mov	r3, ip
 8000a54:	e000      	b.n	8000a58 <__aeabi_cdcmpeq>
 8000a56:	bf00      	nop

08000a58 <__aeabi_cdcmpeq>:
 8000a58:	b501      	push	{r0, lr}
 8000a5a:	f7ff ffb7 	bl	80009cc <__cmpdf2>
 8000a5e:	2800      	cmp	r0, #0
 8000a60:	bf48      	it	mi
 8000a62:	f110 0f00 	cmnmi.w	r0, #0
 8000a66:	bd01      	pop	{r0, pc}

08000a68 <__aeabi_dcmpeq>:
 8000a68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a6c:	f7ff fff4 	bl	8000a58 <__aeabi_cdcmpeq>
 8000a70:	bf0c      	ite	eq
 8000a72:	2001      	moveq	r0, #1
 8000a74:	2000      	movne	r0, #0
 8000a76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a7a:	bf00      	nop

08000a7c <__aeabi_dcmplt>:
 8000a7c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a80:	f7ff ffea 	bl	8000a58 <__aeabi_cdcmpeq>
 8000a84:	bf34      	ite	cc
 8000a86:	2001      	movcc	r0, #1
 8000a88:	2000      	movcs	r0, #0
 8000a8a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8e:	bf00      	nop

08000a90 <__aeabi_dcmple>:
 8000a90:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a94:	f7ff ffe0 	bl	8000a58 <__aeabi_cdcmpeq>
 8000a98:	bf94      	ite	ls
 8000a9a:	2001      	movls	r0, #1
 8000a9c:	2000      	movhi	r0, #0
 8000a9e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aa2:	bf00      	nop

08000aa4 <__aeabi_dcmpge>:
 8000aa4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa8:	f7ff ffce 	bl	8000a48 <__aeabi_cdrcmple>
 8000aac:	bf94      	ite	ls
 8000aae:	2001      	movls	r0, #1
 8000ab0:	2000      	movhi	r0, #0
 8000ab2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_dcmpgt>:
 8000ab8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000abc:	f7ff ffc4 	bl	8000a48 <__aeabi_cdrcmple>
 8000ac0:	bf34      	ite	cc
 8000ac2:	2001      	movcc	r0, #1
 8000ac4:	2000      	movcs	r0, #0
 8000ac6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aca:	bf00      	nop

08000acc <__aeabi_dcmpun>:
 8000acc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ad0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad4:	d102      	bne.n	8000adc <__aeabi_dcmpun+0x10>
 8000ad6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ada:	d10a      	bne.n	8000af2 <__aeabi_dcmpun+0x26>
 8000adc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae4:	d102      	bne.n	8000aec <__aeabi_dcmpun+0x20>
 8000ae6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aea:	d102      	bne.n	8000af2 <__aeabi_dcmpun+0x26>
 8000aec:	f04f 0000 	mov.w	r0, #0
 8000af0:	4770      	bx	lr
 8000af2:	f04f 0001 	mov.w	r0, #1
 8000af6:	4770      	bx	lr

08000af8 <__aeabi_d2f>:
 8000af8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000afc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b00:	bf24      	itt	cs
 8000b02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b0a:	d90d      	bls.n	8000b28 <__aeabi_d2f+0x30>
 8000b0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b20:	bf08      	it	eq
 8000b22:	f020 0001 	biceq.w	r0, r0, #1
 8000b26:	4770      	bx	lr
 8000b28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b2c:	d121      	bne.n	8000b72 <__aeabi_d2f+0x7a>
 8000b2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b32:	bfbc      	itt	lt
 8000b34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b38:	4770      	bxlt	lr
 8000b3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b42:	f1c2 0218 	rsb	r2, r2, #24
 8000b46:	f1c2 0c20 	rsb	ip, r2, #32
 8000b4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b52:	bf18      	it	ne
 8000b54:	f040 0001 	orrne.w	r0, r0, #1
 8000b58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b64:	ea40 000c 	orr.w	r0, r0, ip
 8000b68:	fa23 f302 	lsr.w	r3, r3, r2
 8000b6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b70:	e7cc      	b.n	8000b0c <__aeabi_d2f+0x14>
 8000b72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b76:	d107      	bne.n	8000b88 <__aeabi_d2f+0x90>
 8000b78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b7c:	bf1e      	ittt	ne
 8000b7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b86:	4770      	bxne	lr
 8000b88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b94:	4770      	bx	lr
 8000b96:	bf00      	nop

08000b98 <__aeabi_uldivmod>:
 8000b98:	b953      	cbnz	r3, 8000bb0 <__aeabi_uldivmod+0x18>
 8000b9a:	b94a      	cbnz	r2, 8000bb0 <__aeabi_uldivmod+0x18>
 8000b9c:	2900      	cmp	r1, #0
 8000b9e:	bf08      	it	eq
 8000ba0:	2800      	cmpeq	r0, #0
 8000ba2:	bf1c      	itt	ne
 8000ba4:	f04f 31ff 	movne.w	r1, #4294967295
 8000ba8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bac:	f000 b970 	b.w	8000e90 <__aeabi_idiv0>
 8000bb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bb8:	f000 f806 	bl	8000bc8 <__udivmoddi4>
 8000bbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bc4:	b004      	add	sp, #16
 8000bc6:	4770      	bx	lr

08000bc8 <__udivmoddi4>:
 8000bc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bcc:	9e08      	ldr	r6, [sp, #32]
 8000bce:	460d      	mov	r5, r1
 8000bd0:	4604      	mov	r4, r0
 8000bd2:	460f      	mov	r7, r1
 8000bd4:	2b00      	cmp	r3, #0
 8000bd6:	d14a      	bne.n	8000c6e <__udivmoddi4+0xa6>
 8000bd8:	428a      	cmp	r2, r1
 8000bda:	4694      	mov	ip, r2
 8000bdc:	d965      	bls.n	8000caa <__udivmoddi4+0xe2>
 8000bde:	fab2 f382 	clz	r3, r2
 8000be2:	b143      	cbz	r3, 8000bf6 <__udivmoddi4+0x2e>
 8000be4:	fa02 fc03 	lsl.w	ip, r2, r3
 8000be8:	f1c3 0220 	rsb	r2, r3, #32
 8000bec:	409f      	lsls	r7, r3
 8000bee:	fa20 f202 	lsr.w	r2, r0, r2
 8000bf2:	4317      	orrs	r7, r2
 8000bf4:	409c      	lsls	r4, r3
 8000bf6:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000bfa:	fa1f f58c 	uxth.w	r5, ip
 8000bfe:	fbb7 f1fe 	udiv	r1, r7, lr
 8000c02:	0c22      	lsrs	r2, r4, #16
 8000c04:	fb0e 7711 	mls	r7, lr, r1, r7
 8000c08:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000c0c:	fb01 f005 	mul.w	r0, r1, r5
 8000c10:	4290      	cmp	r0, r2
 8000c12:	d90a      	bls.n	8000c2a <__udivmoddi4+0x62>
 8000c14:	eb1c 0202 	adds.w	r2, ip, r2
 8000c18:	f101 37ff 	add.w	r7, r1, #4294967295
 8000c1c:	f080 811c 	bcs.w	8000e58 <__udivmoddi4+0x290>
 8000c20:	4290      	cmp	r0, r2
 8000c22:	f240 8119 	bls.w	8000e58 <__udivmoddi4+0x290>
 8000c26:	3902      	subs	r1, #2
 8000c28:	4462      	add	r2, ip
 8000c2a:	1a12      	subs	r2, r2, r0
 8000c2c:	b2a4      	uxth	r4, r4
 8000c2e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000c32:	fb0e 2210 	mls	r2, lr, r0, r2
 8000c36:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000c3a:	fb00 f505 	mul.w	r5, r0, r5
 8000c3e:	42a5      	cmp	r5, r4
 8000c40:	d90a      	bls.n	8000c58 <__udivmoddi4+0x90>
 8000c42:	eb1c 0404 	adds.w	r4, ip, r4
 8000c46:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c4a:	f080 8107 	bcs.w	8000e5c <__udivmoddi4+0x294>
 8000c4e:	42a5      	cmp	r5, r4
 8000c50:	f240 8104 	bls.w	8000e5c <__udivmoddi4+0x294>
 8000c54:	4464      	add	r4, ip
 8000c56:	3802      	subs	r0, #2
 8000c58:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000c5c:	1b64      	subs	r4, r4, r5
 8000c5e:	2100      	movs	r1, #0
 8000c60:	b11e      	cbz	r6, 8000c6a <__udivmoddi4+0xa2>
 8000c62:	40dc      	lsrs	r4, r3
 8000c64:	2300      	movs	r3, #0
 8000c66:	e9c6 4300 	strd	r4, r3, [r6]
 8000c6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c6e:	428b      	cmp	r3, r1
 8000c70:	d908      	bls.n	8000c84 <__udivmoddi4+0xbc>
 8000c72:	2e00      	cmp	r6, #0
 8000c74:	f000 80ed 	beq.w	8000e52 <__udivmoddi4+0x28a>
 8000c78:	2100      	movs	r1, #0
 8000c7a:	e9c6 0500 	strd	r0, r5, [r6]
 8000c7e:	4608      	mov	r0, r1
 8000c80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c84:	fab3 f183 	clz	r1, r3
 8000c88:	2900      	cmp	r1, #0
 8000c8a:	d149      	bne.n	8000d20 <__udivmoddi4+0x158>
 8000c8c:	42ab      	cmp	r3, r5
 8000c8e:	d302      	bcc.n	8000c96 <__udivmoddi4+0xce>
 8000c90:	4282      	cmp	r2, r0
 8000c92:	f200 80f8 	bhi.w	8000e86 <__udivmoddi4+0x2be>
 8000c96:	1a84      	subs	r4, r0, r2
 8000c98:	eb65 0203 	sbc.w	r2, r5, r3
 8000c9c:	2001      	movs	r0, #1
 8000c9e:	4617      	mov	r7, r2
 8000ca0:	2e00      	cmp	r6, #0
 8000ca2:	d0e2      	beq.n	8000c6a <__udivmoddi4+0xa2>
 8000ca4:	e9c6 4700 	strd	r4, r7, [r6]
 8000ca8:	e7df      	b.n	8000c6a <__udivmoddi4+0xa2>
 8000caa:	b902      	cbnz	r2, 8000cae <__udivmoddi4+0xe6>
 8000cac:	deff      	udf	#255	; 0xff
 8000cae:	fab2 f382 	clz	r3, r2
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	f040 8090 	bne.w	8000dd8 <__udivmoddi4+0x210>
 8000cb8:	1a8a      	subs	r2, r1, r2
 8000cba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cbe:	fa1f fe8c 	uxth.w	lr, ip
 8000cc2:	2101      	movs	r1, #1
 8000cc4:	fbb2 f5f7 	udiv	r5, r2, r7
 8000cc8:	fb07 2015 	mls	r0, r7, r5, r2
 8000ccc:	0c22      	lsrs	r2, r4, #16
 8000cce:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000cd2:	fb0e f005 	mul.w	r0, lr, r5
 8000cd6:	4290      	cmp	r0, r2
 8000cd8:	d908      	bls.n	8000cec <__udivmoddi4+0x124>
 8000cda:	eb1c 0202 	adds.w	r2, ip, r2
 8000cde:	f105 38ff 	add.w	r8, r5, #4294967295
 8000ce2:	d202      	bcs.n	8000cea <__udivmoddi4+0x122>
 8000ce4:	4290      	cmp	r0, r2
 8000ce6:	f200 80cb 	bhi.w	8000e80 <__udivmoddi4+0x2b8>
 8000cea:	4645      	mov	r5, r8
 8000cec:	1a12      	subs	r2, r2, r0
 8000cee:	b2a4      	uxth	r4, r4
 8000cf0:	fbb2 f0f7 	udiv	r0, r2, r7
 8000cf4:	fb07 2210 	mls	r2, r7, r0, r2
 8000cf8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000cfc:	fb0e fe00 	mul.w	lr, lr, r0
 8000d00:	45a6      	cmp	lr, r4
 8000d02:	d908      	bls.n	8000d16 <__udivmoddi4+0x14e>
 8000d04:	eb1c 0404 	adds.w	r4, ip, r4
 8000d08:	f100 32ff 	add.w	r2, r0, #4294967295
 8000d0c:	d202      	bcs.n	8000d14 <__udivmoddi4+0x14c>
 8000d0e:	45a6      	cmp	lr, r4
 8000d10:	f200 80bb 	bhi.w	8000e8a <__udivmoddi4+0x2c2>
 8000d14:	4610      	mov	r0, r2
 8000d16:	eba4 040e 	sub.w	r4, r4, lr
 8000d1a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000d1e:	e79f      	b.n	8000c60 <__udivmoddi4+0x98>
 8000d20:	f1c1 0720 	rsb	r7, r1, #32
 8000d24:	408b      	lsls	r3, r1
 8000d26:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d2a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d2e:	fa05 f401 	lsl.w	r4, r5, r1
 8000d32:	fa20 f307 	lsr.w	r3, r0, r7
 8000d36:	40fd      	lsrs	r5, r7
 8000d38:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d3c:	4323      	orrs	r3, r4
 8000d3e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000d42:	fa1f fe8c 	uxth.w	lr, ip
 8000d46:	fb09 5518 	mls	r5, r9, r8, r5
 8000d4a:	0c1c      	lsrs	r4, r3, #16
 8000d4c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000d50:	fb08 f50e 	mul.w	r5, r8, lr
 8000d54:	42a5      	cmp	r5, r4
 8000d56:	fa02 f201 	lsl.w	r2, r2, r1
 8000d5a:	fa00 f001 	lsl.w	r0, r0, r1
 8000d5e:	d90b      	bls.n	8000d78 <__udivmoddi4+0x1b0>
 8000d60:	eb1c 0404 	adds.w	r4, ip, r4
 8000d64:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d68:	f080 8088 	bcs.w	8000e7c <__udivmoddi4+0x2b4>
 8000d6c:	42a5      	cmp	r5, r4
 8000d6e:	f240 8085 	bls.w	8000e7c <__udivmoddi4+0x2b4>
 8000d72:	f1a8 0802 	sub.w	r8, r8, #2
 8000d76:	4464      	add	r4, ip
 8000d78:	1b64      	subs	r4, r4, r5
 8000d7a:	b29d      	uxth	r5, r3
 8000d7c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000d80:	fb09 4413 	mls	r4, r9, r3, r4
 8000d84:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000d88:	fb03 fe0e 	mul.w	lr, r3, lr
 8000d8c:	45a6      	cmp	lr, r4
 8000d8e:	d908      	bls.n	8000da2 <__udivmoddi4+0x1da>
 8000d90:	eb1c 0404 	adds.w	r4, ip, r4
 8000d94:	f103 35ff 	add.w	r5, r3, #4294967295
 8000d98:	d26c      	bcs.n	8000e74 <__udivmoddi4+0x2ac>
 8000d9a:	45a6      	cmp	lr, r4
 8000d9c:	d96a      	bls.n	8000e74 <__udivmoddi4+0x2ac>
 8000d9e:	3b02      	subs	r3, #2
 8000da0:	4464      	add	r4, ip
 8000da2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000da6:	fba3 9502 	umull	r9, r5, r3, r2
 8000daa:	eba4 040e 	sub.w	r4, r4, lr
 8000dae:	42ac      	cmp	r4, r5
 8000db0:	46c8      	mov	r8, r9
 8000db2:	46ae      	mov	lr, r5
 8000db4:	d356      	bcc.n	8000e64 <__udivmoddi4+0x29c>
 8000db6:	d053      	beq.n	8000e60 <__udivmoddi4+0x298>
 8000db8:	b156      	cbz	r6, 8000dd0 <__udivmoddi4+0x208>
 8000dba:	ebb0 0208 	subs.w	r2, r0, r8
 8000dbe:	eb64 040e 	sbc.w	r4, r4, lr
 8000dc2:	fa04 f707 	lsl.w	r7, r4, r7
 8000dc6:	40ca      	lsrs	r2, r1
 8000dc8:	40cc      	lsrs	r4, r1
 8000dca:	4317      	orrs	r7, r2
 8000dcc:	e9c6 7400 	strd	r7, r4, [r6]
 8000dd0:	4618      	mov	r0, r3
 8000dd2:	2100      	movs	r1, #0
 8000dd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dd8:	f1c3 0120 	rsb	r1, r3, #32
 8000ddc:	fa02 fc03 	lsl.w	ip, r2, r3
 8000de0:	fa20 f201 	lsr.w	r2, r0, r1
 8000de4:	fa25 f101 	lsr.w	r1, r5, r1
 8000de8:	409d      	lsls	r5, r3
 8000dea:	432a      	orrs	r2, r5
 8000dec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000df0:	fa1f fe8c 	uxth.w	lr, ip
 8000df4:	fbb1 f0f7 	udiv	r0, r1, r7
 8000df8:	fb07 1510 	mls	r5, r7, r0, r1
 8000dfc:	0c11      	lsrs	r1, r2, #16
 8000dfe:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000e02:	fb00 f50e 	mul.w	r5, r0, lr
 8000e06:	428d      	cmp	r5, r1
 8000e08:	fa04 f403 	lsl.w	r4, r4, r3
 8000e0c:	d908      	bls.n	8000e20 <__udivmoddi4+0x258>
 8000e0e:	eb1c 0101 	adds.w	r1, ip, r1
 8000e12:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e16:	d22f      	bcs.n	8000e78 <__udivmoddi4+0x2b0>
 8000e18:	428d      	cmp	r5, r1
 8000e1a:	d92d      	bls.n	8000e78 <__udivmoddi4+0x2b0>
 8000e1c:	3802      	subs	r0, #2
 8000e1e:	4461      	add	r1, ip
 8000e20:	1b49      	subs	r1, r1, r5
 8000e22:	b292      	uxth	r2, r2
 8000e24:	fbb1 f5f7 	udiv	r5, r1, r7
 8000e28:	fb07 1115 	mls	r1, r7, r5, r1
 8000e2c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e30:	fb05 f10e 	mul.w	r1, r5, lr
 8000e34:	4291      	cmp	r1, r2
 8000e36:	d908      	bls.n	8000e4a <__udivmoddi4+0x282>
 8000e38:	eb1c 0202 	adds.w	r2, ip, r2
 8000e3c:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e40:	d216      	bcs.n	8000e70 <__udivmoddi4+0x2a8>
 8000e42:	4291      	cmp	r1, r2
 8000e44:	d914      	bls.n	8000e70 <__udivmoddi4+0x2a8>
 8000e46:	3d02      	subs	r5, #2
 8000e48:	4462      	add	r2, ip
 8000e4a:	1a52      	subs	r2, r2, r1
 8000e4c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000e50:	e738      	b.n	8000cc4 <__udivmoddi4+0xfc>
 8000e52:	4631      	mov	r1, r6
 8000e54:	4630      	mov	r0, r6
 8000e56:	e708      	b.n	8000c6a <__udivmoddi4+0xa2>
 8000e58:	4639      	mov	r1, r7
 8000e5a:	e6e6      	b.n	8000c2a <__udivmoddi4+0x62>
 8000e5c:	4610      	mov	r0, r2
 8000e5e:	e6fb      	b.n	8000c58 <__udivmoddi4+0x90>
 8000e60:	4548      	cmp	r0, r9
 8000e62:	d2a9      	bcs.n	8000db8 <__udivmoddi4+0x1f0>
 8000e64:	ebb9 0802 	subs.w	r8, r9, r2
 8000e68:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000e6c:	3b01      	subs	r3, #1
 8000e6e:	e7a3      	b.n	8000db8 <__udivmoddi4+0x1f0>
 8000e70:	4645      	mov	r5, r8
 8000e72:	e7ea      	b.n	8000e4a <__udivmoddi4+0x282>
 8000e74:	462b      	mov	r3, r5
 8000e76:	e794      	b.n	8000da2 <__udivmoddi4+0x1da>
 8000e78:	4640      	mov	r0, r8
 8000e7a:	e7d1      	b.n	8000e20 <__udivmoddi4+0x258>
 8000e7c:	46d0      	mov	r8, sl
 8000e7e:	e77b      	b.n	8000d78 <__udivmoddi4+0x1b0>
 8000e80:	3d02      	subs	r5, #2
 8000e82:	4462      	add	r2, ip
 8000e84:	e732      	b.n	8000cec <__udivmoddi4+0x124>
 8000e86:	4608      	mov	r0, r1
 8000e88:	e70a      	b.n	8000ca0 <__udivmoddi4+0xd8>
 8000e8a:	4464      	add	r4, ip
 8000e8c:	3802      	subs	r0, #2
 8000e8e:	e742      	b.n	8000d16 <__udivmoddi4+0x14e>

08000e90 <__aeabi_idiv0>:
 8000e90:	4770      	bx	lr
 8000e92:	bf00      	nop

08000e94 <CodecInit>:
 *  Created on: Mar 17, 2024
 *      Author: seppe
 */
#include "CodecDriver.h"

void CodecInit(I2C_HandleTypeDef *hi2c1){
 8000e94:	b580      	push	{r7, lr}
 8000e96:	b082      	sub	sp, #8
 8000e98:	af00      	add	r7, sp, #0
 8000e9a:	6078      	str	r0, [r7, #4]

	ResetCodec(hi2c1);
 8000e9c:	6878      	ldr	r0, [r7, #4]
 8000e9e:	f000 f88c 	bl	8000fba <ResetCodec>

	HAL_Delay(25);
 8000ea2:	2019      	movs	r0, #25
 8000ea4:	f001 fd5a 	bl	800295c <HAL_Delay>

	//Connect Linput1 to inverting input of left input PGA, 0db gain, connecting Left input PGA to input booster
	//WriteCodecRegister(hi2c1, 0x20, 0b100001000);

	// L out Volume
	WriteCodecRegister(hi2c1, 0x02, 0b101111001);
 8000ea8:	f240 1279 	movw	r2, #377	; 0x179
 8000eac:	2102      	movs	r1, #2
 8000eae:	6878      	ldr	r0, [r7, #4]
 8000eb0:	f000 f890 	bl	8000fd4 <WriteCodecRegister>

	//un mute left channel, LINVOL = +0DB [5:0]
	WriteCodecRegister(hi2c1, 0x00, 0b100010111);
 8000eb4:	f240 1217 	movw	r2, #279	; 0x117
 8000eb8:	2100      	movs	r1, #0
 8000eba:	6878      	ldr	r0, [r7, #4]
 8000ebc:	f000 f88a 	bl	8000fd4 <WriteCodecRegister>

	//mute right channel
	WriteCodecRegister(hi2c1, 0x01, 0b100000000);
 8000ec0:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000ec4:	2101      	movs	r1, #1
 8000ec6:	6878      	ldr	r0, [r7, #4]
 8000ec8:	f000 f884 	bl	8000fd4 <WriteCodecRegister>

	//Enable LB2LO
	WriteCodecRegister(hi2c1, 0x2D, 0b001010000);
 8000ecc:	2250      	movs	r2, #80	; 0x50
 8000ece:	212d      	movs	r1, #45	; 0x2d
 8000ed0:	6878      	ldr	r0, [r7, #4]
 8000ed2:	f000 f87f 	bl	8000fd4 <WriteCodecRegister>


	// ----- Power Management -----

	// outdated R25 VMIDSEL: 01 = driver enable(playback/record), VREF enable, AINL enable, AINR disabled, ADCL enable, ADCR disable, MICB disable, MCLK enabled
	WriteCodecRegister(hi2c1, 0x19, 0b011111100);
 8000ed6:	22fc      	movs	r2, #252	; 0xfc
 8000ed8:	2119      	movs	r1, #25
 8000eda:	6878      	ldr	r0, [r7, #4]
 8000edc:	f000 f87a 	bl	8000fd4 <WriteCodecRegister>

	//left DAC, LOUT1 buffer SPKL PGA, PLL enabled
	WriteCodecRegister(hi2c1, 0x1A, 0b111010000);
 8000ee0:	f44f 72e8 	mov.w	r2, #464	; 0x1d0
 8000ee4:	211a      	movs	r1, #26
 8000ee6:	6878      	ldr	r0, [r7, #4]
 8000ee8:	f000 f874 	bl	8000fd4 <WriteCodecRegister>

	//left PGA enabled, Left output mixer
	WriteCodecRegister(hi2c1, 0x2F, 0b000111100);
 8000eec:	223c      	movs	r2, #60	; 0x3c
 8000eee:	212f      	movs	r1, #47	; 0x2f
 8000ef0:	6878      	ldr	r0, [r7, #4]
 8000ef2:	f000 f86f 	bl	8000fd4 <WriteCodecRegister>
	//WriteCodecRegister(hi2c1, 0x02, 0b100000000);

	//-----------------------

	// Disable master mode codec, I²S format
	WriteCodecRegister(hi2c1, 0x07, 0b000000010);
 8000ef6:	2202      	movs	r2, #2
 8000ef8:	2107      	movs	r1, #7
 8000efa:	6878      	ldr	r0, [r7, #4]
 8000efc:	f000 f86a 	bl	8000fd4 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x20, 0b100001000);
 8000f00:	f44f 7284 	mov.w	r2, #264	; 0x108
 8000f04:	2120      	movs	r1, #32
 8000f06:	6878      	ldr	r0, [r7, #4]
 8000f08:	f000 f864 	bl	8000fd4 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x21, 0b000000000);
 8000f0c:	2200      	movs	r2, #0
 8000f0e:	2121      	movs	r1, #33	; 0x21
 8000f10:	6878      	ldr	r0, [r7, #4]
 8000f12:	f000 f85f 	bl	8000fd4 <WriteCodecRegister>

	//WriteCodecRegister(hi2c1, 0x2D, 0b000000000);

	WriteCodecRegister(hi2c1, 0x2E, 0b000000000);
 8000f16:	2200      	movs	r2, #0
 8000f18:	212e      	movs	r1, #46	; 0x2e
 8000f1a:	6878      	ldr	r0, [r7, #4]
 8000f1c:	f000 f85a 	bl	8000fd4 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x22, 0b101010000);
 8000f20:	f44f 72a8 	mov.w	r2, #336	; 0x150
 8000f24:	2122      	movs	r1, #34	; 0x22
 8000f26:	6878      	ldr	r0, [r7, #4]
 8000f28:	f000 f854 	bl	8000fd4 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x25, 0b001010000);
 8000f2c:	2250      	movs	r2, #80	; 0x50
 8000f2e:	2125      	movs	r1, #37	; 0x25
 8000f30:	6878      	ldr	r0, [r7, #4]
 8000f32:	f000 f84f 	bl	8000fd4 <WriteCodecRegister>

	//Write speaker L volume
	WriteCodecRegister(hi2c1, 0x28, 0b101111001);
 8000f36:	f240 1279 	movw	r2, #377	; 0x179
 8000f3a:	2128      	movs	r1, #40	; 0x28
 8000f3c:	6878      	ldr	r0, [r7, #4]
 8000f3e:	f000 f849 	bl	8000fd4 <WriteCodecRegister>
	//Write speaker R volume
	WriteCodecRegister(hi2c1, 0x29, 0b101111001);
 8000f42:	f240 1279 	movw	r2, #377	; 0x179
 8000f46:	2129      	movs	r1, #41	; 0x29
 8000f48:	6878      	ldr	r0, [r7, #4]
 8000f4a:	f000 f843 	bl	8000fd4 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x34, 0b000000000);
 8000f4e:	2200      	movs	r2, #0
 8000f50:	2134      	movs	r1, #52	; 0x34
 8000f52:	6878      	ldr	r0, [r7, #4]
 8000f54:	f000 f83e 	bl	8000fd4 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x04, 0b000000000);
 8000f58:	2200      	movs	r2, #0
 8000f5a:	2104      	movs	r1, #4
 8000f5c:	6878      	ldr	r0, [r7, #4]
 8000f5e:	f000 f839 	bl	8000fd4 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x08, 0b111000000);
 8000f62:	f44f 72e0 	mov.w	r2, #448	; 0x1c0
 8000f66:	2108      	movs	r1, #8
 8000f68:	6878      	ldr	r0, [r7, #4]
 8000f6a:	f000 f833 	bl	8000fd4 <WriteCodecRegister>

	// Disabled high pass filter
	WriteCodecRegister(hi2c1, 0x05, 0b000000001);
 8000f6e:	2201      	movs	r2, #1
 8000f70:	2105      	movs	r1, #5
 8000f72:	6878      	ldr	r0, [r7, #4]
 8000f74:	f000 f82e 	bl	8000fd4 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x09, 0b000000000);
 8000f78:	2200      	movs	r2, #0
 8000f7a:	2109      	movs	r1, #9
 8000f7c:	6878      	ldr	r0, [r7, #4]
 8000f7e:	f000 f829 	bl	8000fd4 <WriteCodecRegister>

	//Writing ADC and DAC volume
	WriteCodecRegister(hi2c1, 0x15, 0b111000011);
 8000f82:	f240 12c3 	movw	r2, #451	; 0x1c3
 8000f86:	2115      	movs	r1, #21
 8000f88:	6878      	ldr	r0, [r7, #4]
 8000f8a:	f000 f823 	bl	8000fd4 <WriteCodecRegister>
	WriteCodecRegister(hi2c1, 0x16, 0b111000011);
 8000f8e:	f240 12c3 	movw	r2, #451	; 0x1c3
 8000f92:	2116      	movs	r1, #22
 8000f94:	6878      	ldr	r0, [r7, #4]
 8000f96:	f000 f81d 	bl	8000fd4 <WriteCodecRegister>

	//Writing ADC and DAC volume
	WriteCodecRegister(hi2c1, 0x0A, 0b111111111);
 8000f9a:	f240 12ff 	movw	r2, #511	; 0x1ff
 8000f9e:	210a      	movs	r1, #10
 8000fa0:	6878      	ldr	r0, [r7, #4]
 8000fa2:	f000 f817 	bl	8000fd4 <WriteCodecRegister>
	WriteCodecRegister(hi2c1, 0x0B, 0b111111111);
 8000fa6:	f240 12ff 	movw	r2, #511	; 0x1ff
 8000faa:	210b      	movs	r1, #11
 8000fac:	6878      	ldr	r0, [r7, #4]
 8000fae:	f000 f811 	bl	8000fd4 <WriteCodecRegister>
	buf[0]=0x55;
	HAL_I2C_Master_Transmit(hi2c1, codecAddr, buf, 1 , HAL_MAX_DELAY);

	HAL_I2C_Mem_Write(hi2c1, codecAddr, reg , I2C_MEMADD_SIZE_8BIT, data)
	*/
}
 8000fb2:	bf00      	nop
 8000fb4:	3708      	adds	r7, #8
 8000fb6:	46bd      	mov	sp, r7
 8000fb8:	bd80      	pop	{r7, pc}

08000fba <ResetCodec>:


void ResetCodec(I2C_HandleTypeDef *hi2c1){
 8000fba:	b580      	push	{r7, lr}
 8000fbc:	b082      	sub	sp, #8
 8000fbe:	af00      	add	r7, sp, #0
 8000fc0:	6078      	str	r0, [r7, #4]
	WriteCodecRegister(hi2c1, 0x0F, 0xFF);
 8000fc2:	22ff      	movs	r2, #255	; 0xff
 8000fc4:	210f      	movs	r1, #15
 8000fc6:	6878      	ldr	r0, [r7, #4]
 8000fc8:	f000 f804 	bl	8000fd4 <WriteCodecRegister>
}
 8000fcc:	bf00      	nop
 8000fce:	3708      	adds	r7, #8
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	bd80      	pop	{r7, pc}

08000fd4 <WriteCodecRegister>:

void WriteCodecRegister(I2C_HandleTypeDef *hi2c1, uint8_t reg, uint16_t pData){
 8000fd4:	b580      	push	{r7, lr}
 8000fd6:	b088      	sub	sp, #32
 8000fd8:	af04      	add	r7, sp, #16
 8000fda:	6078      	str	r0, [r7, #4]
 8000fdc:	460b      	mov	r3, r1
 8000fde:	70fb      	strb	r3, [r7, #3]
 8000fe0:	4613      	mov	r3, r2
 8000fe2:	803b      	strh	r3, [r7, #0]
	uint8_t regAddrWDataBit = (uint8_t)(reg << 1) | (pData >> 8);
 8000fe4:	78fb      	ldrb	r3, [r7, #3]
 8000fe6:	005b      	lsls	r3, r3, #1
 8000fe8:	b2da      	uxtb	r2, r3
 8000fea:	883b      	ldrh	r3, [r7, #0]
 8000fec:	0a1b      	lsrs	r3, r3, #8
 8000fee:	b29b      	uxth	r3, r3
 8000ff0:	b2db      	uxtb	r3, r3
 8000ff2:	4313      	orrs	r3, r2
 8000ff4:	73fb      	strb	r3, [r7, #15]
	uint8_t lowByte = (uint8_t)(pData & 0xFF);
 8000ff6:	883b      	ldrh	r3, [r7, #0]
 8000ff8:	b2db      	uxtb	r3, r3
 8000ffa:	73bb      	strb	r3, [r7, #14]
	HAL_I2C_Mem_Write(hi2c1, codecAddr, regAddrWDataBit, I2C_MEMADD_SIZE_8BIT, &lowByte, 1, HAL_MAX_DELAY);
 8000ffc:	2334      	movs	r3, #52	; 0x34
 8000ffe:	b299      	uxth	r1, r3
 8001000:	7bfb      	ldrb	r3, [r7, #15]
 8001002:	b29a      	uxth	r2, r3
 8001004:	f04f 33ff 	mov.w	r3, #4294967295
 8001008:	9302      	str	r3, [sp, #8]
 800100a:	2301      	movs	r3, #1
 800100c:	9301      	str	r3, [sp, #4]
 800100e:	f107 030e 	add.w	r3, r7, #14
 8001012:	9300      	str	r3, [sp, #0]
 8001014:	2301      	movs	r3, #1
 8001016:	6878      	ldr	r0, [r7, #4]
 8001018:	f002 fbc4 	bl	80037a4 <HAL_I2C_Mem_Write>
}
 800101c:	bf00      	nop
 800101e:	3710      	adds	r7, #16
 8001020:	46bd      	mov	sp, r7
 8001022:	bd80      	pop	{r7, pc}

08001024 <InitDSP>:

Filters* filters;

uint32_t sampleFrequency;

void InitDSP(uint32_t _sampleFrequency, I2S_HandleTypeDef *hi2s1, I2S_HandleTypeDef *hi2s2){
 8001024:	b580      	push	{r7, lr}
 8001026:	b084      	sub	sp, #16
 8001028:	af00      	add	r7, sp, #0
 800102a:	60f8      	str	r0, [r7, #12]
 800102c:	60b9      	str	r1, [r7, #8]
 800102e:	607a      	str	r2, [r7, #4]

	sampleFrequency =_sampleFrequency;
 8001030:	4a0b      	ldr	r2, [pc, #44]	; (8001060 <InitDSP+0x3c>)
 8001032:	68fb      	ldr	r3, [r7, #12]
 8001034:	6013      	str	r3, [r2, #0]
	//Init filters
	filters = initializeFilters(_sampleFrequency);
 8001036:	68f8      	ldr	r0, [r7, #12]
 8001038:	f000 fa74 	bl	8001524 <initializeFilters>
 800103c:	4603      	mov	r3, r0
 800103e:	4a09      	ldr	r2, [pc, #36]	; (8001064 <InitDSP+0x40>)
 8001040:	6013      	str	r3, [r2, #0]

	//Init I²S
	HAL_I2S_Transmit_DMA(hi2s1, (uint16_t*)&outputData[0], BUFFER_SIZE);
 8001042:	2280      	movs	r2, #128	; 0x80
 8001044:	4908      	ldr	r1, [pc, #32]	; (8001068 <InitDSP+0x44>)
 8001046:	68b8      	ldr	r0, [r7, #8]
 8001048:	f003 f884 	bl	8004154 <HAL_I2S_Transmit_DMA>
	HAL_I2S_Receive_DMA(hi2s2, (uint16_t*)&inputData[0], BUFFER_SIZE);
 800104c:	2280      	movs	r2, #128	; 0x80
 800104e:	4907      	ldr	r1, [pc, #28]	; (800106c <InitDSP+0x48>)
 8001050:	6878      	ldr	r0, [r7, #4]
 8001052:	f003 f927 	bl	80042a4 <HAL_I2S_Receive_DMA>

}
 8001056:	bf00      	nop
 8001058:	3710      	adds	r7, #16
 800105a:	46bd      	mov	sp, r7
 800105c:	bd80      	pop	{r7, pc}
 800105e:	bf00      	nop
 8001060:	200002e4 	.word	0x200002e4
 8001064:	200002e0 	.word	0x200002e0
 8001068:	200001dc 	.word	0x200001dc
 800106c:	200000dc 	.word	0x200000dc

08001070 <DSPUpdate>:


void DSPUpdate(){
 8001070:	b590      	push	{r4, r7, lr}
 8001072:	b083      	sub	sp, #12
 8001074:	af00      	add	r7, sp, #0


	if(dataReadyFlag){
 8001076:	4b1b      	ldr	r3, [pc, #108]	; (80010e4 <DSPUpdate+0x74>)
 8001078:	781b      	ldrb	r3, [r3, #0]
 800107a:	2b00      	cmp	r3, #0
 800107c:	d02d      	beq.n	80010da <DSPUpdate+0x6a>
		float freq = 10;
 800107e:	4b1a      	ldr	r3, [pc, #104]	; (80010e8 <DSPUpdate+0x78>)
 8001080:	603b      	str	r3, [r7, #0]
		for(uint8_t i = 0; i < BUFFER_SIZE/2; i++){
 8001082:	2300      	movs	r3, #0
 8001084:	71fb      	strb	r3, [r7, #7]
 8001086:	e022      	b.n	80010ce <DSPUpdate+0x5e>
			// Process left channel
			if(i % 2 == 0){
 8001088:	79fb      	ldrb	r3, [r7, #7]
 800108a:	f003 0301 	and.w	r3, r3, #1
 800108e:	b2db      	uxtb	r3, r3
 8001090:	2b00      	cmp	r3, #0
 8001092:	d112      	bne.n	80010ba <DSPUpdate+0x4a>

				//int16_t sinValue = sinApproxLut(2*M_PI*(float)j/(BUFFER_SIZE));
				*(outputBufPtr+i) = appendSample(filters, *(inputBufPtr+i));
 8001094:	4b15      	ldr	r3, [pc, #84]	; (80010ec <DSPUpdate+0x7c>)
 8001096:	6818      	ldr	r0, [r3, #0]
 8001098:	4b15      	ldr	r3, [pc, #84]	; (80010f0 <DSPUpdate+0x80>)
 800109a:	681a      	ldr	r2, [r3, #0]
 800109c:	79fb      	ldrb	r3, [r7, #7]
 800109e:	005b      	lsls	r3, r3, #1
 80010a0:	4413      	add	r3, r2
 80010a2:	881b      	ldrh	r3, [r3, #0]
 80010a4:	b219      	sxth	r1, r3
 80010a6:	4b13      	ldr	r3, [pc, #76]	; (80010f4 <DSPUpdate+0x84>)
 80010a8:	681a      	ldr	r2, [r3, #0]
 80010aa:	79fb      	ldrb	r3, [r7, #7]
 80010ac:	005b      	lsls	r3, r3, #1
 80010ae:	18d4      	adds	r4, r2, r3
 80010b0:	f000 faa0 	bl	80015f4 <appendSample>
 80010b4:	4603      	mov	r3, r0
 80010b6:	8023      	strh	r3, [r4, #0]
 80010b8:	e006      	b.n	80010c8 <DSPUpdate+0x58>

			}else{
				*(outputBufPtr+i) = (int16_t)(0);
 80010ba:	4b0e      	ldr	r3, [pc, #56]	; (80010f4 <DSPUpdate+0x84>)
 80010bc:	681a      	ldr	r2, [r3, #0]
 80010be:	79fb      	ldrb	r3, [r7, #7]
 80010c0:	005b      	lsls	r3, r3, #1
 80010c2:	4413      	add	r3, r2
 80010c4:	2200      	movs	r2, #0
 80010c6:	801a      	strh	r2, [r3, #0]
		for(uint8_t i = 0; i < BUFFER_SIZE/2; i++){
 80010c8:	79fb      	ldrb	r3, [r7, #7]
 80010ca:	3301      	adds	r3, #1
 80010cc:	71fb      	strb	r3, [r7, #7]
 80010ce:	79fb      	ldrb	r3, [r7, #7]
 80010d0:	2b3f      	cmp	r3, #63	; 0x3f
 80010d2:	d9d9      	bls.n	8001088 <DSPUpdate+0x18>
			}
		}
		dataReadyFlag = 0;
 80010d4:	4b03      	ldr	r3, [pc, #12]	; (80010e4 <DSPUpdate+0x74>)
 80010d6:	2200      	movs	r2, #0
 80010d8:	701a      	strb	r2, [r3, #0]
	}


}
 80010da:	bf00      	nop
 80010dc:	370c      	adds	r7, #12
 80010de:	46bd      	mov	sp, r7
 80010e0:	bd90      	pop	{r4, r7, pc}
 80010e2:	bf00      	nop
 80010e4:	200002dc 	.word	0x200002dc
 80010e8:	41200000 	.word	0x41200000
 80010ec:	200002e0 	.word	0x200002e0
 80010f0:	20000000 	.word	0x20000000
 80010f4:	20000004 	.word	0x20000004

080010f8 <GetEnabledFilters>:
	}else{
		filters->enabledFilters &= 0 << filterIndex;
	}
}

uint8_t GetEnabledFilters(){
 80010f8:	b480      	push	{r7}
 80010fa:	af00      	add	r7, sp, #0
	return filters->enabledFilters;
 80010fc:	4b03      	ldr	r3, [pc, #12]	; (800110c <GetEnabledFilters+0x14>)
 80010fe:	681b      	ldr	r3, [r3, #0]
 8001100:	781b      	ldrb	r3, [r3, #0]
}
 8001102:	4618      	mov	r0, r3
 8001104:	46bd      	mov	sp, r7
 8001106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800110a:	4770      	bx	lr
 800110c:	200002e0 	.word	0x200002e0

08001110 <HAL_I2S_RxHalfCpltCallback>:


void HAL_I2S_RxHalfCpltCallback(I2S_HandleTypeDef *hi2s){
 8001110:	b480      	push	{r7}
 8001112:	b083      	sub	sp, #12
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]

	inputBufPtr = &inputData[0];
 8001118:	4b07      	ldr	r3, [pc, #28]	; (8001138 <HAL_I2S_RxHalfCpltCallback+0x28>)
 800111a:	4a08      	ldr	r2, [pc, #32]	; (800113c <HAL_I2S_RxHalfCpltCallback+0x2c>)
 800111c:	601a      	str	r2, [r3, #0]
	outputBufPtr = &outputData[0];
 800111e:	4b08      	ldr	r3, [pc, #32]	; (8001140 <HAL_I2S_RxHalfCpltCallback+0x30>)
 8001120:	4a08      	ldr	r2, [pc, #32]	; (8001144 <HAL_I2S_RxHalfCpltCallback+0x34>)
 8001122:	601a      	str	r2, [r3, #0]

	dataReadyFlag = 1;
 8001124:	4b08      	ldr	r3, [pc, #32]	; (8001148 <HAL_I2S_RxHalfCpltCallback+0x38>)
 8001126:	2201      	movs	r2, #1
 8001128:	701a      	strb	r2, [r3, #0]

}
 800112a:	bf00      	nop
 800112c:	370c      	adds	r7, #12
 800112e:	46bd      	mov	sp, r7
 8001130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001134:	4770      	bx	lr
 8001136:	bf00      	nop
 8001138:	20000000 	.word	0x20000000
 800113c:	200000dc 	.word	0x200000dc
 8001140:	20000004 	.word	0x20000004
 8001144:	200001dc 	.word	0x200001dc
 8001148:	200002dc 	.word	0x200002dc

0800114c <HAL_I2S_RxCpltCallback>:

void HAL_I2S_RxCpltCallback(I2S_HandleTypeDef *hi2s){
 800114c:	b480      	push	{r7}
 800114e:	b083      	sub	sp, #12
 8001150:	af00      	add	r7, sp, #0
 8001152:	6078      	str	r0, [r7, #4]

	inputBufPtr = &inputData[BUFFER_SIZE/2];
 8001154:	4b07      	ldr	r3, [pc, #28]	; (8001174 <HAL_I2S_RxCpltCallback+0x28>)
 8001156:	4a08      	ldr	r2, [pc, #32]	; (8001178 <HAL_I2S_RxCpltCallback+0x2c>)
 8001158:	601a      	str	r2, [r3, #0]
	outputBufPtr = &outputData[BUFFER_SIZE/2];
 800115a:	4b08      	ldr	r3, [pc, #32]	; (800117c <HAL_I2S_RxCpltCallback+0x30>)
 800115c:	4a08      	ldr	r2, [pc, #32]	; (8001180 <HAL_I2S_RxCpltCallback+0x34>)
 800115e:	601a      	str	r2, [r3, #0]

	dataReadyFlag = 1;
 8001160:	4b08      	ldr	r3, [pc, #32]	; (8001184 <HAL_I2S_RxCpltCallback+0x38>)
 8001162:	2201      	movs	r2, #1
 8001164:	701a      	strb	r2, [r3, #0]

}
 8001166:	bf00      	nop
 8001168:	370c      	adds	r7, #12
 800116a:	46bd      	mov	sp, r7
 800116c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001170:	4770      	bx	lr
 8001172:	bf00      	nop
 8001174:	20000000 	.word	0x20000000
 8001178:	2000015c 	.word	0x2000015c
 800117c:	20000004 	.word	0x20000004
 8001180:	2000025c 	.word	0x2000025c
 8001184:	200002dc 	.word	0x200002dc

08001188 <initializeAllPass>:

#include "AllPass.h"

AllPass* initializeAllPass(uint32_t sampleRate, float delayS, float amplification, float attenuation){
 8001188:	b580      	push	{r7, lr}
 800118a:	b088      	sub	sp, #32
 800118c:	af00      	add	r7, sp, #0
 800118e:	60f8      	str	r0, [r7, #12]
 8001190:	ed87 0a02 	vstr	s0, [r7, #8]
 8001194:	edc7 0a01 	vstr	s1, [r7, #4]
 8001198:	ed87 1a00 	vstr	s2, [r7]

    AllPass* allPass = malloc(sizeof(AllPass));
 800119c:	2008      	movs	r0, #8
 800119e:	f004 fa39 	bl	8005614 <malloc>
 80011a2:	4603      	mov	r3, r0
 80011a4:	61fb      	str	r3, [r7, #28]

    CombFeedforward *combFeedforward = initializeCombFeedforward(sampleRate, delayS, amplification, attenuation);
 80011a6:	ed97 1a00 	vldr	s2, [r7]
 80011aa:	edd7 0a01 	vldr	s1, [r7, #4]
 80011ae:	ed97 0a02 	vldr	s0, [r7, #8]
 80011b2:	68f8      	ldr	r0, [r7, #12]
 80011b4:	f000 f8b4 	bl	8001320 <initializeCombFeedforward>
 80011b8:	61b8      	str	r0, [r7, #24]
    CombFeedback *combFeedback = initializeCombFeedback(sampleRate, delayS, amplification, attenuation);
 80011ba:	ed97 1a00 	vldr	s2, [r7]
 80011be:	edd7 0a01 	vldr	s1, [r7, #4]
 80011c2:	ed97 0a02 	vldr	s0, [r7, #8]
 80011c6:	68f8      	ldr	r0, [r7, #12]
 80011c8:	f000 f83f 	bl	800124a <initializeCombFeedback>
 80011cc:	6178      	str	r0, [r7, #20]

    allPass->combFeedforward = combFeedforward;
 80011ce:	69fb      	ldr	r3, [r7, #28]
 80011d0:	69ba      	ldr	r2, [r7, #24]
 80011d2:	601a      	str	r2, [r3, #0]
    allPass->combFeedback = combFeedback;
 80011d4:	69fb      	ldr	r3, [r7, #28]
 80011d6:	697a      	ldr	r2, [r7, #20]
 80011d8:	605a      	str	r2, [r3, #4]

    return allPass;
 80011da:	69fb      	ldr	r3, [r7, #28]

}
 80011dc:	4618      	mov	r0, r3
 80011de:	3720      	adds	r7, #32
 80011e0:	46bd      	mov	sp, r7
 80011e2:	bd80      	pop	{r7, pc}

080011e4 <allPassAppendSample>:

SampleType  allPassAppendSample(AllPass* filter, SampleType  newSample){
 80011e4:	b580      	push	{r7, lr}
 80011e6:	b084      	sub	sp, #16
 80011e8:	af00      	add	r7, sp, #0
 80011ea:	6078      	str	r0, [r7, #4]
 80011ec:	460b      	mov	r3, r1
 80011ee:	807b      	strh	r3, [r7, #2]

	SampleType feedForwardOutput = combFeedforwardAppendSample(filter->combFeedforward, newSample);
 80011f0:	687b      	ldr	r3, [r7, #4]
 80011f2:	681b      	ldr	r3, [r3, #0]
 80011f4:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80011f8:	4611      	mov	r1, r2
 80011fa:	4618      	mov	r0, r3
 80011fc:	f000 f8bf 	bl	800137e <combFeedforwardAppendSample>
 8001200:	4603      	mov	r3, r0
 8001202:	81fb      	strh	r3, [r7, #14]

	SampleType output = combFeedbackAppendSample(filter->combFeedback, feedForwardOutput);
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	685b      	ldr	r3, [r3, #4]
 8001208:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800120c:	4611      	mov	r1, r2
 800120e:	4618      	mov	r0, r3
 8001210:	f000 f84a 	bl	80012a8 <combFeedbackAppendSample>
 8001214:	4603      	mov	r3, r0
 8001216:	81bb      	strh	r3, [r7, #12]

    return output;
 8001218:	f9b7 300c 	ldrsh.w	r3, [r7, #12]

}
 800121c:	4618      	mov	r0, r3
 800121e:	3710      	adds	r7, #16
 8001220:	46bd      	mov	sp, r7
 8001222:	bd80      	pop	{r7, pc}

08001224 <setAllPassOffset>:

void setAllPassOffset(AllPass* allPass, uint32_t offset){
 8001224:	b480      	push	{r7}
 8001226:	b083      	sub	sp, #12
 8001228:	af00      	add	r7, sp, #0
 800122a:	6078      	str	r0, [r7, #4]
 800122c:	6039      	str	r1, [r7, #0]

	allPass->combFeedback->offset = offset;
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	685b      	ldr	r3, [r3, #4]
 8001232:	683a      	ldr	r2, [r7, #0]
 8001234:	601a      	str	r2, [r3, #0]
	allPass->combFeedforward->offset = offset;
 8001236:	687b      	ldr	r3, [r7, #4]
 8001238:	681b      	ldr	r3, [r3, #0]
 800123a:	683a      	ldr	r2, [r7, #0]
 800123c:	601a      	str	r2, [r3, #0]

}
 800123e:	bf00      	nop
 8001240:	370c      	adds	r7, #12
 8001242:	46bd      	mov	sp, r7
 8001244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001248:	4770      	bx	lr

0800124a <initializeCombFeedback>:

#include "CombFeedback.h"

CombFeedback* initializeCombFeedback(uint32_t sampleRate, float delayS, float amplification, float attenuation){
 800124a:	b580      	push	{r7, lr}
 800124c:	b086      	sub	sp, #24
 800124e:	af00      	add	r7, sp, #0
 8001250:	60f8      	str	r0, [r7, #12]
 8001252:	ed87 0a02 	vstr	s0, [r7, #8]
 8001256:	edc7 0a01 	vstr	s1, [r7, #4]
 800125a:	ed87 1a00 	vstr	s2, [r7]

    CombFeedback *filter = malloc(sizeof(CombFeedback));
 800125e:	2010      	movs	r0, #16
 8001260:	f004 f9d8 	bl	8005614 <malloc>
 8001264:	4603      	mov	r3, r0
 8001266:	617b      	str	r3, [r7, #20]

    filter->offset = 0;
 8001268:	697b      	ldr	r3, [r7, #20]
 800126a:	2200      	movs	r2, #0
 800126c:	601a      	str	r2, [r3, #0]
    filter->outputSamples = initializeCircularBuffer( delayS*sampleRate);
 800126e:	68fb      	ldr	r3, [r7, #12]
 8001270:	ee07 3a90 	vmov	s15, r3
 8001274:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001278:	edd7 7a02 	vldr	s15, [r7, #8]
 800127c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001280:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001284:	ee17 0a90 	vmov	r0, s15
 8001288:	f000 faf7 	bl	800187a <initializeCircularBuffer>
 800128c:	4602      	mov	r2, r0
 800128e:	697b      	ldr	r3, [r7, #20]
 8001290:	605a      	str	r2, [r3, #4]

    filter->K = amplification;
 8001292:	697b      	ldr	r3, [r7, #20]
 8001294:	687a      	ldr	r2, [r7, #4]
 8001296:	609a      	str	r2, [r3, #8]
    filter->a = attenuation;
 8001298:	697b      	ldr	r3, [r7, #20]
 800129a:	683a      	ldr	r2, [r7, #0]
 800129c:	60da      	str	r2, [r3, #12]

    return filter;
 800129e:	697b      	ldr	r3, [r7, #20]

}
 80012a0:	4618      	mov	r0, r3
 80012a2:	3718      	adds	r7, #24
 80012a4:	46bd      	mov	sp, r7
 80012a6:	bd80      	pop	{r7, pc}

080012a8 <combFeedbackAppendSample>:

SampleType combFeedbackAppendSample(CombFeedback *filter, SampleType newSample){
 80012a8:	b580      	push	{r7, lr}
 80012aa:	ed2d 8b04 	vpush	{d8-d9}
 80012ae:	b084      	sub	sp, #16
 80012b0:	af00      	add	r7, sp, #0
 80012b2:	6078      	str	r0, [r7, #4]
 80012b4:	460b      	mov	r3, r1
 80012b6:	807b      	strh	r3, [r7, #2]

	SampleType output = (filter->K)*(newSample - (filter->a)*getValueInCircularBuffer(filter->outputSamples, filter->offset)); // M - 1 see struct def for explanation
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	ed93 8a02 	vldr	s16, [r3, #8]
 80012be:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80012c2:	ee07 3a90 	vmov	s15, r3
 80012c6:	eef8 8ae7 	vcvt.f32.s32	s17, s15
 80012ca:	687b      	ldr	r3, [r7, #4]
 80012cc:	ed93 9a03 	vldr	s18, [r3, #12]
 80012d0:	687b      	ldr	r3, [r7, #4]
 80012d2:	685a      	ldr	r2, [r3, #4]
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	681b      	ldr	r3, [r3, #0]
 80012d8:	4619      	mov	r1, r3
 80012da:	4610      	mov	r0, r2
 80012dc:	f000 fb09 	bl	80018f2 <getValueInCircularBuffer>
 80012e0:	4603      	mov	r3, r0
 80012e2:	ee07 3a90 	vmov	s15, r3
 80012e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012ea:	ee69 7a27 	vmul.f32	s15, s18, s15
 80012ee:	ee78 7ae7 	vsub.f32	s15, s17, s15
 80012f2:	ee68 7a27 	vmul.f32	s15, s16, s15
 80012f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80012fa:	ee17 3a90 	vmov	r3, s15
 80012fe:	81fb      	strh	r3, [r7, #14]

	putValueInCircularBuffer(filter->outputSamples, output);
 8001300:	687b      	ldr	r3, [r7, #4]
 8001302:	685b      	ldr	r3, [r3, #4]
 8001304:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8001308:	4611      	mov	r1, r2
 800130a:	4618      	mov	r0, r3
 800130c:	f000 fad1 	bl	80018b2 <putValueInCircularBuffer>

    return output;
 8001310:	f9b7 300e 	ldrsh.w	r3, [r7, #14]

}
 8001314:	4618      	mov	r0, r3
 8001316:	3710      	adds	r7, #16
 8001318:	46bd      	mov	sp, r7
 800131a:	ecbd 8b04 	vpop	{d8-d9}
 800131e:	bd80      	pop	{r7, pc}

08001320 <initializeCombFeedforward>:

#include "CombFeedforward.h"

CombFeedforward* initializeCombFeedforward(uint32_t sampleRate, float delayS, float amplification, float attenuation){
 8001320:	b580      	push	{r7, lr}
 8001322:	b086      	sub	sp, #24
 8001324:	af00      	add	r7, sp, #0
 8001326:	60f8      	str	r0, [r7, #12]
 8001328:	ed87 0a02 	vstr	s0, [r7, #8]
 800132c:	edc7 0a01 	vstr	s1, [r7, #4]
 8001330:	ed87 1a00 	vstr	s2, [r7]

    CombFeedforward *filter = malloc(sizeof(CombFeedforward));
 8001334:	2010      	movs	r0, #16
 8001336:	f004 f96d 	bl	8005614 <malloc>
 800133a:	4603      	mov	r3, r0
 800133c:	617b      	str	r3, [r7, #20]

    filter->offset = 0;
 800133e:	697b      	ldr	r3, [r7, #20]
 8001340:	2200      	movs	r2, #0
 8001342:	601a      	str	r2, [r3, #0]
    
    filter->K = amplification;
 8001344:	697b      	ldr	r3, [r7, #20]
 8001346:	687a      	ldr	r2, [r7, #4]
 8001348:	609a      	str	r2, [r3, #8]
    filter->a = attenuation;
 800134a:	697b      	ldr	r3, [r7, #20]
 800134c:	683a      	ldr	r2, [r7, #0]
 800134e:	60da      	str	r2, [r3, #12]

    filter->inputSamples = initializeCircularBuffer(delayS*sampleRate);
 8001350:	68fb      	ldr	r3, [r7, #12]
 8001352:	ee07 3a90 	vmov	s15, r3
 8001356:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800135a:	edd7 7a02 	vldr	s15, [r7, #8]
 800135e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001362:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001366:	ee17 0a90 	vmov	r0, s15
 800136a:	f000 fa86 	bl	800187a <initializeCircularBuffer>
 800136e:	4602      	mov	r2, r0
 8001370:	697b      	ldr	r3, [r7, #20]
 8001372:	605a      	str	r2, [r3, #4]
    
    return filter;
 8001374:	697b      	ldr	r3, [r7, #20]

}
 8001376:	4618      	mov	r0, r3
 8001378:	3718      	adds	r7, #24
 800137a:	46bd      	mov	sp, r7
 800137c:	bd80      	pop	{r7, pc}

0800137e <combFeedforwardAppendSample>:

int16_t combFeedforwardAppendSample(CombFeedforward *filter, int16_t newSample){
 800137e:	b580      	push	{r7, lr}
 8001380:	ed2d 8b02 	vpush	{d8}
 8001384:	b084      	sub	sp, #16
 8001386:	af00      	add	r7, sp, #0
 8001388:	6078      	str	r0, [r7, #4]
 800138a:	460b      	mov	r3, r1
 800138c:	807b      	strh	r3, [r7, #2]

    int16_t output = filter->K*newSample + filter->a*getValueInCircularBuffer(filter->inputSamples, filter->offset);
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	ed93 7a02 	vldr	s14, [r3, #8]
 8001394:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001398:	ee07 3a90 	vmov	s15, r3
 800139c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80013a0:	ee27 8a27 	vmul.f32	s16, s14, s15
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	edd3 8a03 	vldr	s17, [r3, #12]
 80013aa:	687b      	ldr	r3, [r7, #4]
 80013ac:	685a      	ldr	r2, [r3, #4]
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	4619      	mov	r1, r3
 80013b4:	4610      	mov	r0, r2
 80013b6:	f000 fa9c 	bl	80018f2 <getValueInCircularBuffer>
 80013ba:	4603      	mov	r3, r0
 80013bc:	ee07 3a90 	vmov	s15, r3
 80013c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80013c4:	ee68 7aa7 	vmul.f32	s15, s17, s15
 80013c8:	ee78 7a27 	vadd.f32	s15, s16, s15
 80013cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80013d0:	ee17 3a90 	vmov	r3, s15
 80013d4:	81fb      	strh	r3, [r7, #14]

    putValueInCircularBuffer(filter->inputSamples, newSample);
 80013d6:	687b      	ldr	r3, [r7, #4]
 80013d8:	685b      	ldr	r3, [r3, #4]
 80013da:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80013de:	4611      	mov	r1, r2
 80013e0:	4618      	mov	r0, r3
 80013e2:	f000 fa66 	bl	80018b2 <putValueInCircularBuffer>

    return output;
 80013e6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]

}
 80013ea:	4618      	mov	r0, r3
 80013ec:	3710      	adds	r7, #16
 80013ee:	46bd      	mov	sp, r7
 80013f0:	ecbd 8b02 	vpop	{d8}
 80013f4:	bd80      	pop	{r7, pc}

080013f6 <initializeDistortion>:
#include "Distortion.h"

Distortion* initializeDistortion(uint32_t threshold){
 80013f6:	b580      	push	{r7, lr}
 80013f8:	b084      	sub	sp, #16
 80013fa:	af00      	add	r7, sp, #0
 80013fc:	6078      	str	r0, [r7, #4]
    Distortion *distortion= malloc(sizeof(Distortion));
 80013fe:	2004      	movs	r0, #4
 8001400:	f004 f908 	bl	8005614 <malloc>
 8001404:	4603      	mov	r3, r0
 8001406:	60fb      	str	r3, [r7, #12]
    distortion->threshold = threshold;
 8001408:	68fb      	ldr	r3, [r7, #12]
 800140a:	687a      	ldr	r2, [r7, #4]
 800140c:	601a      	str	r2, [r3, #0]
    return distortion;
 800140e:	68fb      	ldr	r3, [r7, #12]
}
 8001410:	4618      	mov	r0, r3
 8001412:	3710      	adds	r7, #16
 8001414:	46bd      	mov	sp, r7
 8001416:	bd80      	pop	{r7, pc}

08001418 <distortionAppendSample>:

SampleType distortionAppendSample(Distortion* distortion, SampleType newSample){
 8001418:	b580      	push	{r7, lr}
 800141a:	b084      	sub	sp, #16
 800141c:	af00      	add	r7, sp, #0
 800141e:	6078      	str	r0, [r7, #4]
 8001420:	460b      	mov	r3, r1
 8001422:	807b      	strh	r3, [r7, #2]

	float in, out;


    // Normalize input to threshold level = 1.0
    in = (float)newSample/distortion->threshold;
 8001424:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001428:	ee07 3a90 	vmov	s15, r3
 800142c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8001430:	687b      	ldr	r3, [r7, #4]
 8001432:	681b      	ldr	r3, [r3, #0]
 8001434:	ee07 3a90 	vmov	s15, r3
 8001438:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800143c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001440:	edc7 7a02 	vstr	s15, [r7, #8]
    if (in < 0) {
 8001444:	edd7 7a02 	vldr	s15, [r7, #8]
 8001448:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800144c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001450:	d51a      	bpl.n	8001488 <distortionAppendSample+0x70>
        out = -1.0 + pow(2, in);
 8001452:	68b8      	ldr	r0, [r7, #8]
 8001454:	f7ff f848 	bl	80004e8 <__aeabi_f2d>
 8001458:	4602      	mov	r2, r0
 800145a:	460b      	mov	r3, r1
 800145c:	ec43 2b11 	vmov	d1, r2, r3
 8001460:	ed9f 0b2d 	vldr	d0, [pc, #180]	; 8001518 <distortionAppendSample+0x100>
 8001464:	f004 f9ce 	bl	8005804 <pow>
 8001468:	ec51 0b10 	vmov	r0, r1, d0
 800146c:	f04f 0200 	mov.w	r2, #0
 8001470:	4b2b      	ldr	r3, [pc, #172]	; (8001520 <distortionAppendSample+0x108>)
 8001472:	f7fe fed9 	bl	8000228 <__aeabi_dsub>
 8001476:	4602      	mov	r2, r0
 8001478:	460b      	mov	r3, r1
 800147a:	4610      	mov	r0, r2
 800147c:	4619      	mov	r1, r3
 800147e:	f7ff fb3b 	bl	8000af8 <__aeabi_d2f>
 8001482:	4603      	mov	r3, r0
 8001484:	60fb      	str	r3, [r7, #12]
 8001486:	e02a      	b.n	80014de <distortionAppendSample+0xc6>
    } else if (in > 0) {
 8001488:	edd7 7a02 	vldr	s15, [r7, #8]
 800148c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001494:	dd20      	ble.n	80014d8 <distortionAppendSample+0xc0>
        out = 1.0 - pow(2, -in);
 8001496:	edd7 7a02 	vldr	s15, [r7, #8]
 800149a:	eef1 7a67 	vneg.f32	s15, s15
 800149e:	ee17 3a90 	vmov	r3, s15
 80014a2:	4618      	mov	r0, r3
 80014a4:	f7ff f820 	bl	80004e8 <__aeabi_f2d>
 80014a8:	4602      	mov	r2, r0
 80014aa:	460b      	mov	r3, r1
 80014ac:	ec43 2b11 	vmov	d1, r2, r3
 80014b0:	ed9f 0b19 	vldr	d0, [pc, #100]	; 8001518 <distortionAppendSample+0x100>
 80014b4:	f004 f9a6 	bl	8005804 <pow>
 80014b8:	ec53 2b10 	vmov	r2, r3, d0
 80014bc:	f04f 0000 	mov.w	r0, #0
 80014c0:	4917      	ldr	r1, [pc, #92]	; (8001520 <distortionAppendSample+0x108>)
 80014c2:	f7fe feb1 	bl	8000228 <__aeabi_dsub>
 80014c6:	4602      	mov	r2, r0
 80014c8:	460b      	mov	r3, r1
 80014ca:	4610      	mov	r0, r2
 80014cc:	4619      	mov	r1, r3
 80014ce:	f7ff fb13 	bl	8000af8 <__aeabi_d2f>
 80014d2:	4603      	mov	r3, r0
 80014d4:	60fb      	str	r3, [r7, #12]
 80014d6:	e002      	b.n	80014de <distortionAppendSample+0xc6>
    } else {
        out = 0;
 80014d8:	f04f 0300 	mov.w	r3, #0
 80014dc:	60fb      	str	r3, [r7, #12]
    }

	// Undo Normalization
	out = out * distortion->threshold*3;
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	ee07 3a90 	vmov	s15, r3
 80014e6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80014ea:	edd7 7a03 	vldr	s15, [r7, #12]
 80014ee:	ee67 7a27 	vmul.f32	s15, s14, s15
 80014f2:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
 80014f6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014fa:	edc7 7a03 	vstr	s15, [r7, #12]

	return out;
 80014fe:	edd7 7a03 	vldr	s15, [r7, #12]
 8001502:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001506:	ee17 3a90 	vmov	r3, s15
 800150a:	b21b      	sxth	r3, r3


	return (SampleType)round(clipOut*65356);
    */

}
 800150c:	4618      	mov	r0, r3
 800150e:	3710      	adds	r7, #16
 8001510:	46bd      	mov	sp, r7
 8001512:	bd80      	pop	{r7, pc}
 8001514:	f3af 8000 	nop.w
 8001518:	00000000 	.word	0x00000000
 800151c:	40000000 	.word	0x40000000
 8001520:	3ff00000 	.word	0x3ff00000

08001524 <initializeFilters>:
 *  Created on: May 13, 2024
 *      Author: Joran
 */
#include "Filters.h"

Filters* initializeFilters(uint32_t sampleRate){
 8001524:	b590      	push	{r4, r7, lr}
 8001526:	b091      	sub	sp, #68	; 0x44
 8001528:	af02      	add	r7, sp, #8
 800152a:	6078      	str	r0, [r7, #4]

	Filters* filters = malloc(sizeof(Filters));
 800152c:	2024      	movs	r0, #36	; 0x24
 800152e:	f004 f871 	bl	8005614 <malloc>
 8001532:	4603      	mov	r3, r0
 8001534:	637b      	str	r3, [r7, #52]	; 0x34

    filters->enabledFilters = 0b1000;
 8001536:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001538:	2208      	movs	r2, #8
 800153a:	701a      	strb	r2, [r3, #0]

	Distortion* dist = initializeDistortion(600);
 800153c:	f44f 7016 	mov.w	r0, #600	; 0x258
 8001540:	f7ff ff59 	bl	80013f6 <initializeDistortion>
 8001544:	6338      	str	r0, [r7, #48]	; 0x30

    CombFeedback* echo = initializeCombFeedback(sampleRate, 0.5, 1.0, 0.5);
 8001546:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
 800154a:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 800154e:	eeb6 0a00 	vmov.f32	s0, #96	; 0x3f000000  0.5
 8001552:	6878      	ldr	r0, [r7, #4]
 8001554:	f7ff fe79 	bl	800124a <initializeCombFeedback>
 8001558:	62f8      	str	r0, [r7, #44]	; 0x2c

    float delayCombS[4] = {0.0297, 0.0371, 0.0411, 0.0437};
 800155a:	4b1e      	ldr	r3, [pc, #120]	; (80015d4 <initializeFilters+0xb0>)
 800155c:	f107 0414 	add.w	r4, r7, #20
 8001560:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001562:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    float delayAllS[2] = {0.005, 0.0017};
 8001566:	4a1c      	ldr	r2, [pc, #112]	; (80015d8 <initializeFilters+0xb4>)
 8001568:	f107 030c 	add.w	r3, r7, #12
 800156c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8001570:	e883 0003 	stmia.w	r3, {r0, r1}
	Reverb* reverb = initializeReverb(sampleRate, 4, delayCombS, 2, delayAllS);
 8001574:	f107 0214 	add.w	r2, r7, #20
 8001578:	f107 030c 	add.w	r3, r7, #12
 800157c:	9300      	str	r3, [sp, #0]
 800157e:	2302      	movs	r3, #2
 8001580:	2104      	movs	r1, #4
 8001582:	6878      	ldr	r0, [r7, #4]
 8001584:	f000 f8bc 	bl	8001700 <initializeReverb>
 8001588:	62b8      	str	r0, [r7, #40]	; 0x28


	Flanger* flanger = initializeFlanger(sampleRate, 1.6f, 0.025f);
 800158a:	eddf 0a14 	vldr	s1, [pc, #80]	; 80015dc <initializeFilters+0xb8>
 800158e:	ed9f 0a14 	vldr	s0, [pc, #80]	; 80015e0 <initializeFilters+0xbc>
 8001592:	6878      	ldr	r0, [r7, #4]
 8001594:	f000 f868 	bl	8001668 <initializeFlanger>
 8001598:	6278      	str	r0, [r7, #36]	; 0x24


    filters->filterStructs[0] = dist;
 800159a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800159c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800159e:	605a      	str	r2, [r3, #4]
    filters->filterMethods[0] = distortionAppendSample;
 80015a0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80015a2:	4a10      	ldr	r2, [pc, #64]	; (80015e4 <initializeFilters+0xc0>)
 80015a4:	615a      	str	r2, [r3, #20]

    filters->filterStructs[1] = echo;
 80015a6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80015a8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80015aa:	609a      	str	r2, [r3, #8]
    filters->filterMethods[1] = combFeedbackAppendSample;
 80015ac:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80015ae:	4a0e      	ldr	r2, [pc, #56]	; (80015e8 <initializeFilters+0xc4>)
 80015b0:	619a      	str	r2, [r3, #24]

    filters->filterStructs[2] = reverb;
 80015b2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80015b4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80015b6:	60da      	str	r2, [r3, #12]
    filters->filterMethods[2] = reverbAppendSample;
 80015b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80015ba:	4a0c      	ldr	r2, [pc, #48]	; (80015ec <initializeFilters+0xc8>)
 80015bc:	61da      	str	r2, [r3, #28]

    filters->filterStructs[3] = flanger;
 80015be:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80015c0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80015c2:	611a      	str	r2, [r3, #16]
    filters->filterMethods[3] = flangerAppendSample;
 80015c4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80015c6:	4a0a      	ldr	r2, [pc, #40]	; (80015f0 <initializeFilters+0xcc>)
 80015c8:	621a      	str	r2, [r3, #32]


    return filters;
 80015ca:	6b7b      	ldr	r3, [r7, #52]	; 0x34

}
 80015cc:	4618      	mov	r0, r3
 80015ce:	373c      	adds	r7, #60	; 0x3c
 80015d0:	46bd      	mov	sp, r7
 80015d2:	bd90      	pop	{r4, r7, pc}
 80015d4:	08007138 	.word	0x08007138
 80015d8:	08007148 	.word	0x08007148
 80015dc:	3ccccccd 	.word	0x3ccccccd
 80015e0:	3fcccccd 	.word	0x3fcccccd
 80015e4:	08001419 	.word	0x08001419
 80015e8:	080012a9 	.word	0x080012a9
 80015ec:	080017e5 	.word	0x080017e5
 80015f0:	080016bd 	.word	0x080016bd

080015f4 <appendSample>:


SampleType appendSample(Filters* filters, SampleType newSample){
 80015f4:	b580      	push	{r7, lr}
 80015f6:	b086      	sub	sp, #24
 80015f8:	af00      	add	r7, sp, #0
 80015fa:	6078      	str	r0, [r7, #4]
 80015fc:	460b      	mov	r3, r1
 80015fe:	807b      	strh	r3, [r7, #2]

	SampleType previousOutput = newSample;
 8001600:	887b      	ldrh	r3, [r7, #2]
 8001602:	82fb      	strh	r3, [r7, #22]

	for(uint8_t i = 0; i < AMOUNT_OF_FILTERS; i++){
 8001604:	2300      	movs	r3, #0
 8001606:	757b      	strb	r3, [r7, #21]
 8001608:	e024      	b.n	8001654 <appendSample+0x60>

		uint8_t filterEnabled = (filters->enabledFilters >> i) & 1;
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	781b      	ldrb	r3, [r3, #0]
 800160e:	461a      	mov	r2, r3
 8001610:	7d7b      	ldrb	r3, [r7, #21]
 8001612:	fa42 f303 	asr.w	r3, r2, r3
 8001616:	b2db      	uxtb	r3, r3
 8001618:	f003 0301 	and.w	r3, r3, #1
 800161c:	753b      	strb	r3, [r7, #20]
		if(filterEnabled){
 800161e:	7d3b      	ldrb	r3, [r7, #20]
 8001620:	2b00      	cmp	r3, #0
 8001622:	d014      	beq.n	800164e <appendSample+0x5a>
			SampleType (*filterMethod)(void*, SampleType) = filters->filterMethods[i];
 8001624:	7d7b      	ldrb	r3, [r7, #21]
 8001626:	687a      	ldr	r2, [r7, #4]
 8001628:	3304      	adds	r3, #4
 800162a:	009b      	lsls	r3, r3, #2
 800162c:	4413      	add	r3, r2
 800162e:	685b      	ldr	r3, [r3, #4]
 8001630:	613b      	str	r3, [r7, #16]
			void* filterStruct = filters->filterStructs[i];
 8001632:	7d7b      	ldrb	r3, [r7, #21]
 8001634:	687a      	ldr	r2, [r7, #4]
 8001636:	009b      	lsls	r3, r3, #2
 8001638:	4413      	add	r3, r2
 800163a:	685b      	ldr	r3, [r3, #4]
 800163c:	60fb      	str	r3, [r7, #12]
			previousOutput = filterMethod(filterStruct, previousOutput);
 800163e:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8001642:	693b      	ldr	r3, [r7, #16]
 8001644:	4611      	mov	r1, r2
 8001646:	68f8      	ldr	r0, [r7, #12]
 8001648:	4798      	blx	r3
 800164a:	4603      	mov	r3, r0
 800164c:	82fb      	strh	r3, [r7, #22]
	for(uint8_t i = 0; i < AMOUNT_OF_FILTERS; i++){
 800164e:	7d7b      	ldrb	r3, [r7, #21]
 8001650:	3301      	adds	r3, #1
 8001652:	757b      	strb	r3, [r7, #21]
 8001654:	7d7b      	ldrb	r3, [r7, #21]
 8001656:	2b03      	cmp	r3, #3
 8001658:	d9d7      	bls.n	800160a <appendSample+0x16>
		}

	}

	return previousOutput;
 800165a:	f9b7 3016 	ldrsh.w	r3, [r7, #22]

}
 800165e:	4618      	mov	r0, r3
 8001660:	3718      	adds	r7, #24
 8001662:	46bd      	mov	sp, r7
 8001664:	bd80      	pop	{r7, pc}
	...

08001668 <initializeFlanger>:

#include "Flanger.h"

Flanger* initializeFlanger(uint32_t sampleRate, float fer, float amp){
 8001668:	b580      	push	{r7, lr}
 800166a:	b086      	sub	sp, #24
 800166c:	af00      	add	r7, sp, #0
 800166e:	60f8      	str	r0, [r7, #12]
 8001670:	ed87 0a02 	vstr	s0, [r7, #8]
 8001674:	edc7 0a01 	vstr	s1, [r7, #4]

    Flanger *flanger= malloc(sizeof(flanger));
 8001678:	2004      	movs	r0, #4
 800167a:	f003 ffcb 	bl	8005614 <malloc>
 800167e:	4603      	mov	r3, r0
 8001680:	617b      	str	r3, [r7, #20]

    flanger->oscillator = initializeOscillator(sampleRate, fer, amp);
 8001682:	edd7 0a01 	vldr	s1, [r7, #4]
 8001686:	ed97 0a02 	vldr	s0, [r7, #8]
 800168a:	68f8      	ldr	r0, [r7, #12]
 800168c:	f000 f9fa 	bl	8001a84 <initializeOscillator>
 8001690:	4602      	mov	r2, r0
 8001692:	697b      	ldr	r3, [r7, #20]
 8001694:	60da      	str	r2, [r3, #12]
    flanger->combFilter = initializeAllPass(sampleRate, amp, 1.0f, 0.9f);
 8001696:	ed9f 1a08 	vldr	s2, [pc, #32]	; 80016b8 <initializeFlanger+0x50>
 800169a:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 800169e:	ed97 0a01 	vldr	s0, [r7, #4]
 80016a2:	68f8      	ldr	r0, [r7, #12]
 80016a4:	f7ff fd70 	bl	8001188 <initializeAllPass>
 80016a8:	4602      	mov	r2, r0
 80016aa:	697b      	ldr	r3, [r7, #20]
 80016ac:	609a      	str	r2, [r3, #8]

    return flanger;
 80016ae:	697b      	ldr	r3, [r7, #20]
}
 80016b0:	4618      	mov	r0, r3
 80016b2:	3718      	adds	r7, #24
 80016b4:	46bd      	mov	sp, r7
 80016b6:	bd80      	pop	{r7, pc}
 80016b8:	3f666666 	.word	0x3f666666

080016bc <flangerAppendSample>:

SampleType flangerAppendSample(Flanger* flanger, SampleType newSample){
 80016bc:	b580      	push	{r7, lr}
 80016be:	b084      	sub	sp, #16
 80016c0:	af00      	add	r7, sp, #0
 80016c2:	6078      	str	r0, [r7, #4]
 80016c4:	460b      	mov	r3, r1
 80016c6:	807b      	strh	r3, [r7, #2]
    
    uint32_t delay = oscillateAppendSample(flanger->oscillator);
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	68db      	ldr	r3, [r3, #12]
 80016cc:	4618      	mov	r0, r3
 80016ce:	f000 fa0f 	bl	8001af0 <oscillateAppendSample>
 80016d2:	60f8      	str	r0, [r7, #12]
    setAllPassOffset(flanger->combFilter, delay);
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	689b      	ldr	r3, [r3, #8]
 80016d8:	68f9      	ldr	r1, [r7, #12]
 80016da:	4618      	mov	r0, r3
 80016dc:	f7ff fda2 	bl	8001224 <setAllPassOffset>

    SampleType result = allPassAppendSample(flanger->combFilter, newSample);
 80016e0:	687b      	ldr	r3, [r7, #4]
 80016e2:	689b      	ldr	r3, [r3, #8]
 80016e4:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80016e8:	4611      	mov	r1, r2
 80016ea:	4618      	mov	r0, r3
 80016ec:	f7ff fd7a 	bl	80011e4 <allPassAppendSample>
 80016f0:	4603      	mov	r3, r0
 80016f2:	817b      	strh	r3, [r7, #10]

    return result;
 80016f4:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
}
 80016f8:	4618      	mov	r0, r3
 80016fa:	3710      	adds	r7, #16
 80016fc:	46bd      	mov	sp, r7
 80016fe:	bd80      	pop	{r7, pc}

08001700 <initializeReverb>:

#include "Reverb.h"

//Order delayS smallest to largest
Reverb* initializeReverb(uint32_t sampleRate, uint8_t amountOfCombFilters, float *delayCombS, uint8_t amountOfAllPassFilters, float *delayAllS){
 8001700:	b590      	push	{r4, r7, lr}
 8001702:	b089      	sub	sp, #36	; 0x24
 8001704:	af00      	add	r7, sp, #0
 8001706:	60f8      	str	r0, [r7, #12]
 8001708:	607a      	str	r2, [r7, #4]
 800170a:	461a      	mov	r2, r3
 800170c:	460b      	mov	r3, r1
 800170e:	72fb      	strb	r3, [r7, #11]
 8001710:	4613      	mov	r3, r2
 8001712:	72bb      	strb	r3, [r7, #10]

    Reverb *reverb = malloc(sizeof(Reverb));
 8001714:	2010      	movs	r0, #16
 8001716:	f003 ff7d 	bl	8005614 <malloc>
 800171a:	4603      	mov	r3, r0
 800171c:	617b      	str	r3, [r7, #20]


    //Comb
    reverb->amountOfCombFilters = amountOfCombFilters;
 800171e:	7afa      	ldrb	r2, [r7, #11]
 8001720:	697b      	ldr	r3, [r7, #20]
 8001722:	601a      	str	r2, [r3, #0]

    reverb->combFilters = malloc(reverb->amountOfCombFilters*sizeof(CombFeedforward));
 8001724:	697b      	ldr	r3, [r7, #20]
 8001726:	681b      	ldr	r3, [r3, #0]
 8001728:	011b      	lsls	r3, r3, #4
 800172a:	4618      	mov	r0, r3
 800172c:	f003 ff72 	bl	8005614 <malloc>
 8001730:	4603      	mov	r3, r0
 8001732:	461a      	mov	r2, r3
 8001734:	697b      	ldr	r3, [r7, #20]
 8001736:	605a      	str	r2, [r3, #4]

    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 8001738:	2300      	movs	r3, #0
 800173a:	61fb      	str	r3, [r7, #28]
 800173c:	e018      	b.n	8001770 <initializeReverb+0x70>
        reverb->combFilters[i] = initializeCombFeedback(sampleRate, delayCombS[i], 1.0f, 0.7f);
 800173e:	69fb      	ldr	r3, [r7, #28]
 8001740:	009b      	lsls	r3, r3, #2
 8001742:	687a      	ldr	r2, [r7, #4]
 8001744:	4413      	add	r3, r2
 8001746:	edd3 7a00 	vldr	s15, [r3]
 800174a:	697b      	ldr	r3, [r7, #20]
 800174c:	685a      	ldr	r2, [r3, #4]
 800174e:	69fb      	ldr	r3, [r7, #28]
 8001750:	009b      	lsls	r3, r3, #2
 8001752:	18d4      	adds	r4, r2, r3
 8001754:	ed9f 1a22 	vldr	s2, [pc, #136]	; 80017e0 <initializeReverb+0xe0>
 8001758:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 800175c:	eeb0 0a67 	vmov.f32	s0, s15
 8001760:	68f8      	ldr	r0, [r7, #12]
 8001762:	f7ff fd72 	bl	800124a <initializeCombFeedback>
 8001766:	4603      	mov	r3, r0
 8001768:	6023      	str	r3, [r4, #0]
    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 800176a:	69fb      	ldr	r3, [r7, #28]
 800176c:	3301      	adds	r3, #1
 800176e:	61fb      	str	r3, [r7, #28]
 8001770:	697b      	ldr	r3, [r7, #20]
 8001772:	681b      	ldr	r3, [r3, #0]
 8001774:	69fa      	ldr	r2, [r7, #28]
 8001776:	429a      	cmp	r2, r3
 8001778:	dbe1      	blt.n	800173e <initializeReverb+0x3e>
    }
    
    
    //AllPass
    reverb->amountOfAllPassFilters = amountOfAllPassFilters;
 800177a:	7aba      	ldrb	r2, [r7, #10]
 800177c:	697b      	ldr	r3, [r7, #20]
 800177e:	609a      	str	r2, [r3, #8]
    reverb->allPassFilters = malloc(reverb->amountOfAllPassFilters*sizeof(AllPass));
 8001780:	697b      	ldr	r3, [r7, #20]
 8001782:	689b      	ldr	r3, [r3, #8]
 8001784:	00db      	lsls	r3, r3, #3
 8001786:	4618      	mov	r0, r3
 8001788:	f003 ff44 	bl	8005614 <malloc>
 800178c:	4603      	mov	r3, r0
 800178e:	461a      	mov	r2, r3
 8001790:	697b      	ldr	r3, [r7, #20]
 8001792:	60da      	str	r2, [r3, #12]

    for(int i = 0; i < reverb->amountOfAllPassFilters; i++){
 8001794:	2300      	movs	r3, #0
 8001796:	61bb      	str	r3, [r7, #24]
 8001798:	e018      	b.n	80017cc <initializeReverb+0xcc>
        reverb->allPassFilters[i] = initializeAllPass(sampleRate, delayAllS[i], 1, 0.7f);
 800179a:	69bb      	ldr	r3, [r7, #24]
 800179c:	009b      	lsls	r3, r3, #2
 800179e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80017a0:	4413      	add	r3, r2
 80017a2:	edd3 7a00 	vldr	s15, [r3]
 80017a6:	697b      	ldr	r3, [r7, #20]
 80017a8:	68da      	ldr	r2, [r3, #12]
 80017aa:	69bb      	ldr	r3, [r7, #24]
 80017ac:	009b      	lsls	r3, r3, #2
 80017ae:	18d4      	adds	r4, r2, r3
 80017b0:	ed9f 1a0b 	vldr	s2, [pc, #44]	; 80017e0 <initializeReverb+0xe0>
 80017b4:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 80017b8:	eeb0 0a67 	vmov.f32	s0, s15
 80017bc:	68f8      	ldr	r0, [r7, #12]
 80017be:	f7ff fce3 	bl	8001188 <initializeAllPass>
 80017c2:	4603      	mov	r3, r0
 80017c4:	6023      	str	r3, [r4, #0]
    for(int i = 0; i < reverb->amountOfAllPassFilters; i++){
 80017c6:	69bb      	ldr	r3, [r7, #24]
 80017c8:	3301      	adds	r3, #1
 80017ca:	61bb      	str	r3, [r7, #24]
 80017cc:	697b      	ldr	r3, [r7, #20]
 80017ce:	689b      	ldr	r3, [r3, #8]
 80017d0:	69ba      	ldr	r2, [r7, #24]
 80017d2:	429a      	cmp	r2, r3
 80017d4:	dbe1      	blt.n	800179a <initializeReverb+0x9a>
    }

    return reverb;
 80017d6:	697b      	ldr	r3, [r7, #20]

}
 80017d8:	4618      	mov	r0, r3
 80017da:	3724      	adds	r7, #36	; 0x24
 80017dc:	46bd      	mov	sp, r7
 80017de:	bd90      	pop	{r4, r7, pc}
 80017e0:	3f333333 	.word	0x3f333333

080017e4 <reverbAppendSample>:

SampleType reverbAppendSample(Reverb* reverb, SampleType newSample){
 80017e4:	b580      	push	{r7, lr}
 80017e6:	b086      	sub	sp, #24
 80017e8:	af00      	add	r7, sp, #0
 80017ea:	6078      	str	r0, [r7, #4]
 80017ec:	460b      	mov	r3, r1
 80017ee:	807b      	strh	r3, [r7, #2]

	SampleType combSumOutput = 0;
 80017f0:	2300      	movs	r3, #0
 80017f2:	82fb      	strh	r3, [r7, #22]

    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 80017f4:	2300      	movs	r3, #0
 80017f6:	613b      	str	r3, [r7, #16]
 80017f8:	e019      	b.n	800182e <reverbAppendSample+0x4a>
        combSumOutput += combFeedbackAppendSample(reverb->combFilters[i], newSample)/reverb->amountOfCombFilters;
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	685a      	ldr	r2, [r3, #4]
 80017fe:	693b      	ldr	r3, [r7, #16]
 8001800:	009b      	lsls	r3, r3, #2
 8001802:	4413      	add	r3, r2
 8001804:	681b      	ldr	r3, [r3, #0]
 8001806:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800180a:	4611      	mov	r1, r2
 800180c:	4618      	mov	r0, r3
 800180e:	f7ff fd4b 	bl	80012a8 <combFeedbackAppendSample>
 8001812:	4603      	mov	r3, r0
 8001814:	461a      	mov	r2, r3
 8001816:	687b      	ldr	r3, [r7, #4]
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	fb92 f3f3 	sdiv	r3, r2, r3
 800181e:	b29a      	uxth	r2, r3
 8001820:	8afb      	ldrh	r3, [r7, #22]
 8001822:	4413      	add	r3, r2
 8001824:	b29b      	uxth	r3, r3
 8001826:	82fb      	strh	r3, [r7, #22]
    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 8001828:	693b      	ldr	r3, [r7, #16]
 800182a:	3301      	adds	r3, #1
 800182c:	613b      	str	r3, [r7, #16]
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	693a      	ldr	r2, [r7, #16]
 8001834:	429a      	cmp	r2, r3
 8001836:	dbe0      	blt.n	80017fa <reverbAppendSample+0x16>
    }


    SampleType  previousAllPassOutput = combSumOutput;
 8001838:	8afb      	ldrh	r3, [r7, #22]
 800183a:	81fb      	strh	r3, [r7, #14]

    for (int i = 0; i < reverb->amountOfAllPassFilters; i++){
 800183c:	2300      	movs	r3, #0
 800183e:	60bb      	str	r3, [r7, #8]
 8001840:	e010      	b.n	8001864 <reverbAppendSample+0x80>
        previousAllPassOutput = allPassAppendSample(reverb->allPassFilters[i], previousAllPassOutput);
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	68da      	ldr	r2, [r3, #12]
 8001846:	68bb      	ldr	r3, [r7, #8]
 8001848:	009b      	lsls	r3, r3, #2
 800184a:	4413      	add	r3, r2
 800184c:	681b      	ldr	r3, [r3, #0]
 800184e:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8001852:	4611      	mov	r1, r2
 8001854:	4618      	mov	r0, r3
 8001856:	f7ff fcc5 	bl	80011e4 <allPassAppendSample>
 800185a:	4603      	mov	r3, r0
 800185c:	81fb      	strh	r3, [r7, #14]
    for (int i = 0; i < reverb->amountOfAllPassFilters; i++){
 800185e:	68bb      	ldr	r3, [r7, #8]
 8001860:	3301      	adds	r3, #1
 8001862:	60bb      	str	r3, [r7, #8]
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	689b      	ldr	r3, [r3, #8]
 8001868:	68ba      	ldr	r2, [r7, #8]
 800186a:	429a      	cmp	r2, r3
 800186c:	dbe9      	blt.n	8001842 <reverbAppendSample+0x5e>
    }
    
    return previousAllPassOutput;
 800186e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]

}
 8001872:	4618      	mov	r0, r3
 8001874:	3718      	adds	r7, #24
 8001876:	46bd      	mov	sp, r7
 8001878:	bd80      	pop	{r7, pc}

0800187a <initializeCircularBuffer>:

#include "CircularBuffer.h"

CircularBuffer* initializeCircularBuffer(uint32_t bufferSize){
 800187a:	b580      	push	{r7, lr}
 800187c:	b084      	sub	sp, #16
 800187e:	af00      	add	r7, sp, #0
 8001880:	6078      	str	r0, [r7, #4]

    CircularBuffer *buffer = malloc(sizeof(CircularBuffer));
 8001882:	200c      	movs	r0, #12
 8001884:	f003 fec6 	bl	8005614 <malloc>
 8001888:	4603      	mov	r3, r0
 800188a:	60fb      	str	r3, [r7, #12]

    buffer->bufferSize = bufferSize;
 800188c:	68fb      	ldr	r3, [r7, #12]
 800188e:	687a      	ldr	r2, [r7, #4]
 8001890:	609a      	str	r2, [r3, #8]
    buffer->buffer = calloc(bufferSize, sizeof(int16_t));
 8001892:	2102      	movs	r1, #2
 8001894:	6878      	ldr	r0, [r7, #4]
 8001896:	f003 fe9f 	bl	80055d8 <calloc>
 800189a:	4603      	mov	r3, r0
 800189c:	461a      	mov	r2, r3
 800189e:	68fb      	ldr	r3, [r7, #12]
 80018a0:	601a      	str	r2, [r3, #0]
    buffer->writeIndex = 0;
 80018a2:	68fb      	ldr	r3, [r7, #12]
 80018a4:	2200      	movs	r2, #0
 80018a6:	605a      	str	r2, [r3, #4]

    return buffer;
 80018a8:	68fb      	ldr	r3, [r7, #12]

}
 80018aa:	4618      	mov	r0, r3
 80018ac:	3710      	adds	r7, #16
 80018ae:	46bd      	mov	sp, r7
 80018b0:	bd80      	pop	{r7, pc}

080018b2 <putValueInCircularBuffer>:

void putValueInCircularBuffer(CircularBuffer* buffer, int16_t value){
 80018b2:	b480      	push	{r7}
 80018b4:	b083      	sub	sp, #12
 80018b6:	af00      	add	r7, sp, #0
 80018b8:	6078      	str	r0, [r7, #4]
 80018ba:	460b      	mov	r3, r1
 80018bc:	807b      	strh	r3, [r7, #2]

    buffer->buffer[buffer->writeIndex] = value;
 80018be:	687b      	ldr	r3, [r7, #4]
 80018c0:	681a      	ldr	r2, [r3, #0]
 80018c2:	687b      	ldr	r3, [r7, #4]
 80018c4:	685b      	ldr	r3, [r3, #4]
 80018c6:	005b      	lsls	r3, r3, #1
 80018c8:	4413      	add	r3, r2
 80018ca:	887a      	ldrh	r2, [r7, #2]
 80018cc:	801a      	strh	r2, [r3, #0]
    buffer->writeIndex = (buffer->writeIndex+1) % buffer->bufferSize;
 80018ce:	687b      	ldr	r3, [r7, #4]
 80018d0:	685b      	ldr	r3, [r3, #4]
 80018d2:	3301      	adds	r3, #1
 80018d4:	687a      	ldr	r2, [r7, #4]
 80018d6:	6892      	ldr	r2, [r2, #8]
 80018d8:	fbb3 f1f2 	udiv	r1, r3, r2
 80018dc:	fb01 f202 	mul.w	r2, r1, r2
 80018e0:	1a9a      	subs	r2, r3, r2
 80018e2:	687b      	ldr	r3, [r7, #4]
 80018e4:	605a      	str	r2, [r3, #4]

}
 80018e6:	bf00      	nop
 80018e8:	370c      	adds	r7, #12
 80018ea:	46bd      	mov	sp, r7
 80018ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018f0:	4770      	bx	lr

080018f2 <getValueInCircularBuffer>:

SampleType getValueInCircularBuffer(CircularBuffer* buffer, uint32_t offset){
 80018f2:	b480      	push	{r7}
 80018f4:	b085      	sub	sp, #20
 80018f6:	af00      	add	r7, sp, #0
 80018f8:	6078      	str	r0, [r7, #4]
 80018fa:	6039      	str	r1, [r7, #0]

    SampleType output = buffer->buffer[ (buffer->writeIndex + offset ) % buffer->bufferSize ];
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	6819      	ldr	r1, [r3, #0]
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	685a      	ldr	r2, [r3, #4]
 8001904:	683b      	ldr	r3, [r7, #0]
 8001906:	4413      	add	r3, r2
 8001908:	687a      	ldr	r2, [r7, #4]
 800190a:	6892      	ldr	r2, [r2, #8]
 800190c:	fbb3 f0f2 	udiv	r0, r3, r2
 8001910:	fb00 f202 	mul.w	r2, r0, r2
 8001914:	1a9b      	subs	r3, r3, r2
 8001916:	005b      	lsls	r3, r3, #1
 8001918:	440b      	add	r3, r1
 800191a:	881b      	ldrh	r3, [r3, #0]
 800191c:	81fb      	strh	r3, [r7, #14]
    return output;
 800191e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]

}
 8001922:	4618      	mov	r0, r3
 8001924:	3714      	adds	r7, #20
 8001926:	46bd      	mov	sp, r7
 8001928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800192c:	4770      	bx	lr
	...

08001930 <initSin>:

#define SIN_LUT_SIZE 128

static float sin_lut[SIN_LUT_SIZE];

void initSin(){
 8001930:	b590      	push	{r4, r7, lr}
 8001932:	b083      	sub	sp, #12
 8001934:	af00      	add	r7, sp, #0

    for(uint16_t i = 0; i < SIN_LUT_SIZE; i++){
 8001936:	2300      	movs	r3, #0
 8001938:	80fb      	strh	r3, [r7, #6]
 800193a:	e02c      	b.n	8001996 <initSin+0x66>
        sin_lut[i] = sinf(2*M_PI*(float)i/SIN_LUT_SIZE);
 800193c:	88fb      	ldrh	r3, [r7, #6]
 800193e:	ee07 3a90 	vmov	s15, r3
 8001942:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001946:	ee17 0a90 	vmov	r0, s15
 800194a:	f7fe fdcd 	bl	80004e8 <__aeabi_f2d>
 800194e:	a318      	add	r3, pc, #96	; (adr r3, 80019b0 <initSin+0x80>)
 8001950:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001954:	f7fe fe20 	bl	8000598 <__aeabi_dmul>
 8001958:	4602      	mov	r2, r0
 800195a:	460b      	mov	r3, r1
 800195c:	4610      	mov	r0, r2
 800195e:	4619      	mov	r1, r3
 8001960:	f04f 0200 	mov.w	r2, #0
 8001964:	4b10      	ldr	r3, [pc, #64]	; (80019a8 <initSin+0x78>)
 8001966:	f7fe ff41 	bl	80007ec <__aeabi_ddiv>
 800196a:	4602      	mov	r2, r0
 800196c:	460b      	mov	r3, r1
 800196e:	4610      	mov	r0, r2
 8001970:	4619      	mov	r1, r3
 8001972:	f7ff f8c1 	bl	8000af8 <__aeabi_d2f>
 8001976:	4603      	mov	r3, r0
 8001978:	88fc      	ldrh	r4, [r7, #6]
 800197a:	ee00 3a10 	vmov	s0, r3
 800197e:	f003 ffb1 	bl	80058e4 <sinf>
 8001982:	eef0 7a40 	vmov.f32	s15, s0
 8001986:	4a09      	ldr	r2, [pc, #36]	; (80019ac <initSin+0x7c>)
 8001988:	00a3      	lsls	r3, r4, #2
 800198a:	4413      	add	r3, r2
 800198c:	edc3 7a00 	vstr	s15, [r3]
    for(uint16_t i = 0; i < SIN_LUT_SIZE; i++){
 8001990:	88fb      	ldrh	r3, [r7, #6]
 8001992:	3301      	adds	r3, #1
 8001994:	80fb      	strh	r3, [r7, #6]
 8001996:	88fb      	ldrh	r3, [r7, #6]
 8001998:	2b7f      	cmp	r3, #127	; 0x7f
 800199a:	d9cf      	bls.n	800193c <initSin+0xc>
    }

}
 800199c:	bf00      	nop
 800199e:	bf00      	nop
 80019a0:	370c      	adds	r7, #12
 80019a2:	46bd      	mov	sp, r7
 80019a4:	bd90      	pop	{r4, r7, pc}
 80019a6:	bf00      	nop
 80019a8:	40600000 	.word	0x40600000
 80019ac:	200002e8 	.word	0x200002e8
 80019b0:	54442d18 	.word	0x54442d18
 80019b4:	401921fb 	.word	0x401921fb

080019b8 <sinApproxLut>:

//x should be between 0 and 2 pi
//Output is between -32767 and 32767
float sinApproxLut(float x){
 80019b8:	b5b0      	push	{r4, r5, r7, lr}
 80019ba:	b084      	sub	sp, #16
 80019bc:	af00      	add	r7, sp, #0
 80019be:	ed87 0a01 	vstr	s0, [r7, #4]

    x -= truncf(x/(2*M_PI))*2*M_PI;
 80019c2:	6878      	ldr	r0, [r7, #4]
 80019c4:	f7fe fd90 	bl	80004e8 <__aeabi_f2d>
 80019c8:	4604      	mov	r4, r0
 80019ca:	460d      	mov	r5, r1
 80019cc:	6878      	ldr	r0, [r7, #4]
 80019ce:	f7fe fd8b 	bl	80004e8 <__aeabi_f2d>
 80019d2:	a328      	add	r3, pc, #160	; (adr r3, 8001a74 <sinApproxLut+0xbc>)
 80019d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019d8:	f7fe ff08 	bl	80007ec <__aeabi_ddiv>
 80019dc:	4602      	mov	r2, r0
 80019de:	460b      	mov	r3, r1
 80019e0:	4610      	mov	r0, r2
 80019e2:	4619      	mov	r1, r3
 80019e4:	f7ff f888 	bl	8000af8 <__aeabi_d2f>
 80019e8:	4603      	mov	r3, r0
 80019ea:	ee00 3a10 	vmov	s0, r3
 80019ee:	f004 f8a5 	bl	8005b3c <truncf>
 80019f2:	eef0 7a40 	vmov.f32	s15, s0
 80019f6:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80019fa:	ee17 0a90 	vmov	r0, s15
 80019fe:	f7fe fd73 	bl	80004e8 <__aeabi_f2d>
 8001a02:	a31e      	add	r3, pc, #120	; (adr r3, 8001a7c <sinApproxLut+0xc4>)
 8001a04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a08:	f7fe fdc6 	bl	8000598 <__aeabi_dmul>
 8001a0c:	4602      	mov	r2, r0
 8001a0e:	460b      	mov	r3, r1
 8001a10:	4620      	mov	r0, r4
 8001a12:	4629      	mov	r1, r5
 8001a14:	f7fe fc08 	bl	8000228 <__aeabi_dsub>
 8001a18:	4602      	mov	r2, r0
 8001a1a:	460b      	mov	r3, r1
 8001a1c:	4610      	mov	r0, r2
 8001a1e:	4619      	mov	r1, r3
 8001a20:	f7ff f86a 	bl	8000af8 <__aeabi_d2f>
 8001a24:	4603      	mov	r3, r0
 8001a26:	607b      	str	r3, [r7, #4]

    float _x = x * 0.159154943092f; //[0..2*pi] to [0..1]
 8001a28:	edd7 7a01 	vldr	s15, [r7, #4]
 8001a2c:	ed9f 7a0e 	vldr	s14, [pc, #56]	; 8001a68 <sinApproxLut+0xb0>
 8001a30:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a34:	edc7 7a03 	vstr	s15, [r7, #12]
    uint16_t index = (_x * SIN_LUT_SIZE);
 8001a38:	edd7 7a03 	vldr	s15, [r7, #12]
 8001a3c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8001a6c <sinApproxLut+0xb4>
 8001a40:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a44:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001a48:	ee17 3a90 	vmov	r3, s15
 8001a4c:	817b      	strh	r3, [r7, #10]
    //printf("x: %f, _x: %f, index: %d\n", x, _x, index);

    return sin_lut[index];
 8001a4e:	897b      	ldrh	r3, [r7, #10]
 8001a50:	4a07      	ldr	r2, [pc, #28]	; (8001a70 <sinApproxLut+0xb8>)
 8001a52:	009b      	lsls	r3, r3, #2
 8001a54:	4413      	add	r3, r2
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	ee07 3a90 	vmov	s15, r3
    
}
 8001a5c:	eeb0 0a67 	vmov.f32	s0, s15
 8001a60:	3710      	adds	r7, #16
 8001a62:	46bd      	mov	sp, r7
 8001a64:	bdb0      	pop	{r4, r5, r7, pc}
 8001a66:	bf00      	nop
 8001a68:	3e22f983 	.word	0x3e22f983
 8001a6c:	43000000 	.word	0x43000000
 8001a70:	200002e8 	.word	0x200002e8
 8001a74:	54442d18 	.word	0x54442d18
 8001a78:	401921fb 	.word	0x401921fb
 8001a7c:	54442d18 	.word	0x54442d18
 8001a80:	400921fb 	.word	0x400921fb

08001a84 <initializeOscillator>:

#include "Oscillator.h"

Oscillator* initializeOscillator(uint32_t sampleRate, float frequency, float amplitude){
 8001a84:	b580      	push	{r7, lr}
 8001a86:	b086      	sub	sp, #24
 8001a88:	af00      	add	r7, sp, #0
 8001a8a:	60f8      	str	r0, [r7, #12]
 8001a8c:	ed87 0a02 	vstr	s0, [r7, #8]
 8001a90:	edc7 0a01 	vstr	s1, [r7, #4]

    Oscillator* oscillator = malloc(sizeof(Oscillator));
 8001a94:	200c      	movs	r0, #12
 8001a96:	f003 fdbd 	bl	8005614 <malloc>
 8001a9a:	4603      	mov	r3, r0
 8001a9c:	617b      	str	r3, [r7, #20]

    oscillator->freq = sampleRate/frequency; // [(1/s)/(1/s)]
 8001a9e:	68fb      	ldr	r3, [r7, #12]
 8001aa0:	ee07 3a90 	vmov	s15, r3
 8001aa4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8001aa8:	ed97 7a02 	vldr	s14, [r7, #8]
 8001aac:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001ab0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001ab4:	ee17 2a90 	vmov	r2, s15
 8001ab8:	697b      	ldr	r3, [r7, #20]
 8001aba:	601a      	str	r2, [r3, #0]
    oscillator->amp = amplitude*sampleRate;  // [s*1/s]
 8001abc:	68fb      	ldr	r3, [r7, #12]
 8001abe:	ee07 3a90 	vmov	s15, r3
 8001ac2:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001ac6:	edd7 7a01 	vldr	s15, [r7, #4]
 8001aca:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ace:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001ad2:	ee17 2a90 	vmov	r2, s15
 8001ad6:	697b      	ldr	r3, [r7, #20]
 8001ad8:	605a      	str	r2, [r3, #4]

    oscillator->i =0;
 8001ada:	697b      	ldr	r3, [r7, #20]
 8001adc:	2200      	movs	r2, #0
 8001ade:	609a      	str	r2, [r3, #8]

    return oscillator;
 8001ae0:	697b      	ldr	r3, [r7, #20]
}
 8001ae2:	4618      	mov	r0, r3
 8001ae4:	3718      	adds	r7, #24
 8001ae6:	46bd      	mov	sp, r7
 8001ae8:	bd80      	pop	{r7, pc}
 8001aea:	0000      	movs	r0, r0
 8001aec:	0000      	movs	r0, r0
	...

08001af0 <oscillateAppendSample>:

uint32_t oscillateAppendSample(Oscillator* osc){
 8001af0:	b5b0      	push	{r4, r5, r7, lr}
 8001af2:	ed2d 8b02 	vpush	{d8}
 8001af6:	b084      	sub	sp, #16
 8001af8:	af00      	add	r7, sp, #0
 8001afa:	6078      	str	r0, [r7, #4]

    float sinuscall = 2*M_PI*osc->i/osc->freq;
 8001afc:	687b      	ldr	r3, [r7, #4]
 8001afe:	689b      	ldr	r3, [r3, #8]
 8001b00:	4618      	mov	r0, r3
 8001b02:	f7fe fccf 	bl	80004a4 <__aeabi_ui2d>
 8001b06:	a326      	add	r3, pc, #152	; (adr r3, 8001ba0 <oscillateAppendSample+0xb0>)
 8001b08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b0c:	f7fe fd44 	bl	8000598 <__aeabi_dmul>
 8001b10:	4602      	mov	r2, r0
 8001b12:	460b      	mov	r3, r1
 8001b14:	4614      	mov	r4, r2
 8001b16:	461d      	mov	r5, r3
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	681b      	ldr	r3, [r3, #0]
 8001b1c:	4618      	mov	r0, r3
 8001b1e:	f7fe fcc1 	bl	80004a4 <__aeabi_ui2d>
 8001b22:	4602      	mov	r2, r0
 8001b24:	460b      	mov	r3, r1
 8001b26:	4620      	mov	r0, r4
 8001b28:	4629      	mov	r1, r5
 8001b2a:	f7fe fe5f 	bl	80007ec <__aeabi_ddiv>
 8001b2e:	4602      	mov	r2, r0
 8001b30:	460b      	mov	r3, r1
 8001b32:	4610      	mov	r0, r2
 8001b34:	4619      	mov	r1, r3
 8001b36:	f7fe ffdf 	bl	8000af8 <__aeabi_d2f>
 8001b3a:	4603      	mov	r3, r0
 8001b3c:	60fb      	str	r3, [r7, #12]
    float output = osc->amp/2*(1.0f-(float)sinApproxLut(sinuscall)); //delen omdat het tussen de max waarden komt te zitte
 8001b3e:	687b      	ldr	r3, [r7, #4]
 8001b40:	685b      	ldr	r3, [r3, #4]
 8001b42:	085b      	lsrs	r3, r3, #1
 8001b44:	ee07 3a90 	vmov	s15, r3
 8001b48:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8001b4c:	ed97 0a03 	vldr	s0, [r7, #12]
 8001b50:	f7ff ff32 	bl	80019b8 <sinApproxLut>
 8001b54:	eef0 7a40 	vmov.f32	s15, s0
 8001b58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001b5c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001b60:	ee68 7a27 	vmul.f32	s15, s16, s15
 8001b64:	edc7 7a02 	vstr	s15, [r7, #8]
    osc->i++;
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	689b      	ldr	r3, [r3, #8]
 8001b6c:	1c5a      	adds	r2, r3, #1
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	609a      	str	r2, [r3, #8]
    // = (osc->i+1) % osc->freq;
    if(osc->i >= osc->freq){
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	689a      	ldr	r2, [r3, #8]
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	681b      	ldr	r3, [r3, #0]
 8001b7a:	429a      	cmp	r2, r3
 8001b7c:	d302      	bcc.n	8001b84 <oscillateAppendSample+0x94>
    	osc->i = 0;
 8001b7e:	687b      	ldr	r3, [r7, #4]
 8001b80:	2200      	movs	r2, #0
 8001b82:	609a      	str	r2, [r3, #8]
    }

    return output;
 8001b84:	edd7 7a02 	vldr	s15, [r7, #8]
 8001b88:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001b8c:	ee17 3a90 	vmov	r3, s15
}
 8001b90:	4618      	mov	r0, r3
 8001b92:	3710      	adds	r7, #16
 8001b94:	46bd      	mov	sp, r7
 8001b96:	ecbd 8b02 	vpop	{d8}
 8001b9a:	bdb0      	pop	{r4, r5, r7, pc}
 8001b9c:	f3af 8000 	nop.w
 8001ba0:	54442d18 	.word	0x54442d18
 8001ba4:	401921fb 	.word	0x401921fb

08001ba8 <InitIO>:
// 1, SelectingValue -> Disabled
// 2, Disabled -> SelectingFilter
// 3, SelectingFilter -> SelectingValue
uint8_t switchedStateFlag;

void InitIO(){
 8001ba8:	b580      	push	{r7, lr}
 8001baa:	af00      	add	r7, sp, #0
	LoadValueIntoShiftRegister(&shiftRegFilterSelect, GetEnabledFilters());
 8001bac:	f7ff faa4 	bl	80010f8 <GetEnabledFilters>
 8001bb0:	4603      	mov	r3, r0
 8001bb2:	4619      	mov	r1, r3
 8001bb4:	4803      	ldr	r0, [pc, #12]	; (8001bc4 <InitIO+0x1c>)
 8001bb6:	f000 f971 	bl	8001e9c <LoadValueIntoShiftRegister>
	ResetShiftRegister(&shiftRegLedbar);
 8001bba:	4803      	ldr	r0, [pc, #12]	; (8001bc8 <InitIO+0x20>)
 8001bbc:	f000 f962 	bl	8001e84 <ResetShiftRegister>
}
 8001bc0:	bf00      	nop
 8001bc2:	bd80      	pop	{r7, pc}
 8001bc4:	20000008 	.word	0x20000008
 8001bc8:	20000020 	.word	0x20000020

08001bcc <HandleSelectingFilter>:

void HandleSelectingFilter(){
 8001bcc:	b580      	push	{r7, lr}
 8001bce:	af00      	add	r7, sp, #0

	selectedFilter = (uint16_t)(rotaryEncoder.currentPos/4) % AMOUNT_OF_FILTERS;
 8001bd0:	4b0a      	ldr	r3, [pc, #40]	; (8001bfc <HandleSelectingFilter+0x30>)
 8001bd2:	781b      	ldrb	r3, [r3, #0]
 8001bd4:	089b      	lsrs	r3, r3, #2
 8001bd6:	b2db      	uxtb	r3, r3
 8001bd8:	f003 0303 	and.w	r3, r3, #3
 8001bdc:	b2da      	uxtb	r2, r3
 8001bde:	4b08      	ldr	r3, [pc, #32]	; (8001c00 <HandleSelectingFilter+0x34>)
 8001be0:	701a      	strb	r2, [r3, #0]
	LoadValueIntoShiftRegister(&shiftRegFilterSelect, 1 << selectedFilter);
 8001be2:	4b07      	ldr	r3, [pc, #28]	; (8001c00 <HandleSelectingFilter+0x34>)
 8001be4:	781b      	ldrb	r3, [r3, #0]
 8001be6:	461a      	mov	r2, r3
 8001be8:	2301      	movs	r3, #1
 8001bea:	4093      	lsls	r3, r2
 8001bec:	b2db      	uxtb	r3, r3
 8001bee:	4619      	mov	r1, r3
 8001bf0:	4804      	ldr	r0, [pc, #16]	; (8001c04 <HandleSelectingFilter+0x38>)
 8001bf2:	f000 f953 	bl	8001e9c <LoadValueIntoShiftRegister>

}
 8001bf6:	bf00      	nop
 8001bf8:	bd80      	pop	{r7, pc}
 8001bfa:	bf00      	nop
 8001bfc:	20000038 	.word	0x20000038
 8001c00:	200004e9 	.word	0x200004e9
 8001c04:	20000008 	.word	0x20000008

08001c08 <HandleSelectingValue>:

void HandleSelectingValue(){
 8001c08:	b580      	push	{r7, lr}
 8001c0a:	b082      	sub	sp, #8
 8001c0c:	af00      	add	r7, sp, #0

	uint8_t led_bar = (rotaryEncoder.currentPos/4);
 8001c0e:	4b0a      	ldr	r3, [pc, #40]	; (8001c38 <HandleSelectingValue+0x30>)
 8001c10:	781b      	ldrb	r3, [r3, #0]
 8001c12:	089b      	lsrs	r3, r3, #2
 8001c14:	71fb      	strb	r3, [r7, #7]
	uint8_t ledbar_array = (1 << led_bar) - 1;
 8001c16:	79fb      	ldrb	r3, [r7, #7]
 8001c18:	2201      	movs	r2, #1
 8001c1a:	fa02 f303 	lsl.w	r3, r2, r3
 8001c1e:	b2db      	uxtb	r3, r3
 8001c20:	3b01      	subs	r3, #1
 8001c22:	71bb      	strb	r3, [r7, #6]

	LoadValueIntoShiftRegister(&shiftRegLedbar, ledbar_array);
 8001c24:	79bb      	ldrb	r3, [r7, #6]
 8001c26:	4619      	mov	r1, r3
 8001c28:	4804      	ldr	r0, [pc, #16]	; (8001c3c <HandleSelectingValue+0x34>)
 8001c2a:	f000 f937 	bl	8001e9c <LoadValueIntoShiftRegister>

}
 8001c2e:	bf00      	nop
 8001c30:	3708      	adds	r7, #8
 8001c32:	46bd      	mov	sp, r7
 8001c34:	bd80      	pop	{r7, pc}
 8001c36:	bf00      	nop
 8001c38:	20000038 	.word	0x20000038
 8001c3c:	20000020 	.word	0x20000020

08001c40 <ButtonInterrupt>:

void ButtonInterrupt(uint32_t time){
 8001c40:	b480      	push	{r7}
 8001c42:	b083      	sub	sp, #12
 8001c44:	af00      	add	r7, sp, #0
 8001c46:	6078      	str	r0, [r7, #4]

	IOState = (IOState + 1)%3;
 8001c48:	4b0e      	ldr	r3, [pc, #56]	; (8001c84 <ButtonInterrupt+0x44>)
 8001c4a:	781b      	ldrb	r3, [r3, #0]
 8001c4c:	1c5a      	adds	r2, r3, #1
 8001c4e:	4b0e      	ldr	r3, [pc, #56]	; (8001c88 <ButtonInterrupt+0x48>)
 8001c50:	fb83 3102 	smull	r3, r1, r3, r2
 8001c54:	17d3      	asrs	r3, r2, #31
 8001c56:	1ac9      	subs	r1, r1, r3
 8001c58:	460b      	mov	r3, r1
 8001c5a:	005b      	lsls	r3, r3, #1
 8001c5c:	440b      	add	r3, r1
 8001c5e:	1ad1      	subs	r1, r2, r3
 8001c60:	b2ca      	uxtb	r2, r1
 8001c62:	4b08      	ldr	r3, [pc, #32]	; (8001c84 <ButtonInterrupt+0x44>)
 8001c64:	701a      	strb	r2, [r3, #0]

	rotaryEncoder.currentPos = 0;
 8001c66:	4b09      	ldr	r3, [pc, #36]	; (8001c8c <ButtonInterrupt+0x4c>)
 8001c68:	2200      	movs	r2, #0
 8001c6a:	701a      	strb	r2, [r3, #0]

	switchedStateFlag = IOState + 1;
 8001c6c:	4b05      	ldr	r3, [pc, #20]	; (8001c84 <ButtonInterrupt+0x44>)
 8001c6e:	781b      	ldrb	r3, [r3, #0]
 8001c70:	3301      	adds	r3, #1
 8001c72:	b2da      	uxtb	r2, r3
 8001c74:	4b06      	ldr	r3, [pc, #24]	; (8001c90 <ButtonInterrupt+0x50>)
 8001c76:	701a      	strb	r2, [r3, #0]


}
 8001c78:	bf00      	nop
 8001c7a:	370c      	adds	r7, #12
 8001c7c:	46bd      	mov	sp, r7
 8001c7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c82:	4770      	bx	lr
 8001c84:	200004e8 	.word	0x200004e8
 8001c88:	55555556 	.word	0x55555556
 8001c8c:	20000038 	.word	0x20000038
 8001c90:	200004ea 	.word	0x200004ea

08001c94 <RotaryEncoderInterrupt>:

void RotaryEncoderInterrupt(){
 8001c94:	b580      	push	{r7, lr}
 8001c96:	af00      	add	r7, sp, #0
	rot_intrupt(&rotaryEncoder);
 8001c98:	4802      	ldr	r0, [pc, #8]	; (8001ca4 <RotaryEncoderInterrupt+0x10>)
 8001c9a:	f000 f865 	bl	8001d68 <rot_intrupt>
}
 8001c9e:	bf00      	nop
 8001ca0:	bd80      	pop	{r7, pc}
 8001ca2:	bf00      	nop
 8001ca4:	20000038 	.word	0x20000038

08001ca8 <IOUpdate>:


void IOUpdate(){
 8001ca8:	b580      	push	{r7, lr}
 8001caa:	af00      	add	r7, sp, #0
	//uint8_t buttonPressed = HAL_GPIO_ReadPin(ToggleInput1_GPIO_Port, ToggleInput1_Pin);
	//SetFilterState(0, buttonPressed);


	//Handling Transistions
	if(switchedStateFlag > 0){
 8001cac:	4b19      	ldr	r3, [pc, #100]	; (8001d14 <IOUpdate+0x6c>)
 8001cae:	781b      	ldrb	r3, [r3, #0]
 8001cb0:	2b00      	cmp	r3, #0
 8001cb2:	d01b      	beq.n	8001cec <IOUpdate+0x44>

		switch(switchedStateFlag){
 8001cb4:	4b17      	ldr	r3, [pc, #92]	; (8001d14 <IOUpdate+0x6c>)
 8001cb6:	781b      	ldrb	r3, [r3, #0]
 8001cb8:	2b03      	cmp	r3, #3
 8001cba:	d010      	beq.n	8001cde <IOUpdate+0x36>
 8001cbc:	2b03      	cmp	r3, #3
 8001cbe:	dc12      	bgt.n	8001ce6 <IOUpdate+0x3e>
 8001cc0:	2b01      	cmp	r3, #1
 8001cc2:	d001      	beq.n	8001cc8 <IOUpdate+0x20>
 8001cc4:	2b02      	cmp	r3, #2
				LoadValueIntoShiftRegister(&shiftRegFilterSelect, GetEnabledFilters());
				ResetShiftRegister(&shiftRegLedbar);
				break;
			case 2:
				// Nothing needs to be reset
				break;
 8001cc6:	e00e      	b.n	8001ce6 <IOUpdate+0x3e>
				LoadValueIntoShiftRegister(&shiftRegFilterSelect, GetEnabledFilters());
 8001cc8:	f7ff fa16 	bl	80010f8 <GetEnabledFilters>
 8001ccc:	4603      	mov	r3, r0
 8001cce:	4619      	mov	r1, r3
 8001cd0:	4811      	ldr	r0, [pc, #68]	; (8001d18 <IOUpdate+0x70>)
 8001cd2:	f000 f8e3 	bl	8001e9c <LoadValueIntoShiftRegister>
				ResetShiftRegister(&shiftRegLedbar);
 8001cd6:	4811      	ldr	r0, [pc, #68]	; (8001d1c <IOUpdate+0x74>)
 8001cd8:	f000 f8d4 	bl	8001e84 <ResetShiftRegister>
				break;
 8001cdc:	e003      	b.n	8001ce6 <IOUpdate+0x3e>
			case 3:
				// Nothing needs to be reset
				rotaryEncoder.currentPos = 4; // At least one led on, at start
 8001cde:	4b10      	ldr	r3, [pc, #64]	; (8001d20 <IOUpdate+0x78>)
 8001ce0:	2204      	movs	r2, #4
 8001ce2:	701a      	strb	r2, [r3, #0]
				break;
 8001ce4:	bf00      	nop
		}

		switchedStateFlag = 0;
 8001ce6:	4b0b      	ldr	r3, [pc, #44]	; (8001d14 <IOUpdate+0x6c>)
 8001ce8:	2200      	movs	r2, #0
 8001cea:	701a      	strb	r2, [r3, #0]

	}

	//Handling states
	switch (IOState) {
 8001cec:	4b0d      	ldr	r3, [pc, #52]	; (8001d24 <IOUpdate+0x7c>)
 8001cee:	781b      	ldrb	r3, [r3, #0]
 8001cf0:	2b02      	cmp	r3, #2
 8001cf2:	d009      	beq.n	8001d08 <IOUpdate+0x60>
 8001cf4:	2b02      	cmp	r3, #2
 8001cf6:	dc0b      	bgt.n	8001d10 <IOUpdate+0x68>
 8001cf8:	2b00      	cmp	r3, #0
 8001cfa:	d008      	beq.n	8001d0e <IOUpdate+0x66>
 8001cfc:	2b01      	cmp	r3, #1
 8001cfe:	d000      	beq.n	8001d02 <IOUpdate+0x5a>
	    	break;
	  }



}
 8001d00:	e006      	b.n	8001d10 <IOUpdate+0x68>
	    	HandleSelectingFilter();
 8001d02:	f7ff ff63 	bl	8001bcc <HandleSelectingFilter>
	    	break;
 8001d06:	e003      	b.n	8001d10 <IOUpdate+0x68>
	    	HandleSelectingValue();
 8001d08:	f7ff ff7e 	bl	8001c08 <HandleSelectingValue>
	    	break;
 8001d0c:	e000      	b.n	8001d10 <IOUpdate+0x68>
	    	break;
 8001d0e:	bf00      	nop
}
 8001d10:	bf00      	nop
 8001d12:	bd80      	pop	{r7, pc}
 8001d14:	200004ea 	.word	0x200004ea
 8001d18:	20000008 	.word	0x20000008
 8001d1c:	20000020 	.word	0x20000020
 8001d20:	20000038 	.word	0x20000038
 8001d24:	200004e8 	.word	0x200004e8

08001d28 <rot_get_state>:

uint8_t rot_old_state =0;
uint8_t rot_new_state=0;


uint8_t rot_get_state(RotaryEncoder_t* rotEncoder) {
 8001d28:	b590      	push	{r4, r7, lr}
 8001d2a:	b083      	sub	sp, #12
 8001d2c:	af00      	add	r7, sp, #0
 8001d2e:	6078      	str	r0, [r7, #4]
	return (uint8_t)( (HAL_GPIO_ReadPin(rotEncoder->portB, rotEncoder->pinB) << 1)
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	68da      	ldr	r2, [r3, #12]
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	8a1b      	ldrh	r3, [r3, #16]
 8001d38:	4619      	mov	r1, r3
 8001d3a:	4610      	mov	r0, r2
 8001d3c:	f001 fc58 	bl	80035f0 <HAL_GPIO_ReadPin>
 8001d40:	4603      	mov	r3, r0
 8001d42:	005b      	lsls	r3, r3, #1
                	| (HAL_GPIO_ReadPin(rotEncoder->portA, rotEncoder->pinA)) );
 8001d44:	b25c      	sxtb	r4, r3
 8001d46:	687b      	ldr	r3, [r7, #4]
 8001d48:	685a      	ldr	r2, [r3, #4]
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	891b      	ldrh	r3, [r3, #8]
 8001d4e:	4619      	mov	r1, r3
 8001d50:	4610      	mov	r0, r2
 8001d52:	f001 fc4d 	bl	80035f0 <HAL_GPIO_ReadPin>
 8001d56:	4603      	mov	r3, r0
 8001d58:	b25b      	sxtb	r3, r3
 8001d5a:	4323      	orrs	r3, r4
 8001d5c:	b25b      	sxtb	r3, r3
	return (uint8_t)( (HAL_GPIO_ReadPin(rotEncoder->portB, rotEncoder->pinB) << 1)
 8001d5e:	b2db      	uxtb	r3, r3
}
 8001d60:	4618      	mov	r0, r3
 8001d62:	370c      	adds	r7, #12
 8001d64:	46bd      	mov	sp, r7
 8001d66:	bd90      	pop	{r4, r7, pc}

08001d68 <rot_intrupt>:

void rot_intrupt(RotaryEncoder_t* rotEncoder){
 8001d68:	b580      	push	{r7, lr}
 8001d6a:	b082      	sub	sp, #8
 8001d6c:	af00      	add	r7, sp, #0
 8001d6e:	6078      	str	r0, [r7, #4]

	  rot_new_state = rot_get_state(rotEncoder);
 8001d70:	6878      	ldr	r0, [r7, #4]
 8001d72:	f7ff ffd9 	bl	8001d28 <rot_get_state>
 8001d76:	4603      	mov	r3, r0
 8001d78:	461a      	mov	r2, r3
 8001d7a:	4b40      	ldr	r3, [pc, #256]	; (8001e7c <rot_intrupt+0x114>)
 8001d7c:	701a      	strb	r2, [r3, #0]
	  		// Check transition
	  if (rot_old_state == 3 && rot_new_state == 2) {        // 3 -> 2 transition
 8001d7e:	4b40      	ldr	r3, [pc, #256]	; (8001e80 <rot_intrupt+0x118>)
 8001d80:	781b      	ldrb	r3, [r3, #0]
 8001d82:	2b03      	cmp	r3, #3
 8001d84:	d10a      	bne.n	8001d9c <rot_intrupt+0x34>
 8001d86:	4b3d      	ldr	r3, [pc, #244]	; (8001e7c <rot_intrupt+0x114>)
 8001d88:	781b      	ldrb	r3, [r3, #0]
 8001d8a:	2b02      	cmp	r3, #2
 8001d8c:	d106      	bne.n	8001d9c <rot_intrupt+0x34>
		  rotEncoder->currentPos++;
 8001d8e:	687b      	ldr	r3, [r7, #4]
 8001d90:	781b      	ldrb	r3, [r3, #0]
 8001d92:	3301      	adds	r3, #1
 8001d94:	b2da      	uxtb	r2, r3
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	701a      	strb	r2, [r3, #0]
 8001d9a:	e067      	b.n	8001e6c <rot_intrupt+0x104>
	  } else if (rot_old_state == 2 && rot_new_state == 0) { // 2 -> 0 transition
 8001d9c:	4b38      	ldr	r3, [pc, #224]	; (8001e80 <rot_intrupt+0x118>)
 8001d9e:	781b      	ldrb	r3, [r3, #0]
 8001da0:	2b02      	cmp	r3, #2
 8001da2:	d10a      	bne.n	8001dba <rot_intrupt+0x52>
 8001da4:	4b35      	ldr	r3, [pc, #212]	; (8001e7c <rot_intrupt+0x114>)
 8001da6:	781b      	ldrb	r3, [r3, #0]
 8001da8:	2b00      	cmp	r3, #0
 8001daa:	d106      	bne.n	8001dba <rot_intrupt+0x52>
		  rotEncoder->currentPos++;
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	781b      	ldrb	r3, [r3, #0]
 8001db0:	3301      	adds	r3, #1
 8001db2:	b2da      	uxtb	r2, r3
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	701a      	strb	r2, [r3, #0]
 8001db8:	e058      	b.n	8001e6c <rot_intrupt+0x104>
	  } else if (rot_old_state == 0 && rot_new_state == 1) { // 0 -> 1 transition
 8001dba:	4b31      	ldr	r3, [pc, #196]	; (8001e80 <rot_intrupt+0x118>)
 8001dbc:	781b      	ldrb	r3, [r3, #0]
 8001dbe:	2b00      	cmp	r3, #0
 8001dc0:	d10a      	bne.n	8001dd8 <rot_intrupt+0x70>
 8001dc2:	4b2e      	ldr	r3, [pc, #184]	; (8001e7c <rot_intrupt+0x114>)
 8001dc4:	781b      	ldrb	r3, [r3, #0]
 8001dc6:	2b01      	cmp	r3, #1
 8001dc8:	d106      	bne.n	8001dd8 <rot_intrupt+0x70>
		  rotEncoder->currentPos++;
 8001dca:	687b      	ldr	r3, [r7, #4]
 8001dcc:	781b      	ldrb	r3, [r3, #0]
 8001dce:	3301      	adds	r3, #1
 8001dd0:	b2da      	uxtb	r2, r3
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	701a      	strb	r2, [r3, #0]
 8001dd6:	e049      	b.n	8001e6c <rot_intrupt+0x104>
	  } else if (rot_old_state == 1 && rot_new_state == 3) { // 1 -> 3 transition
 8001dd8:	4b29      	ldr	r3, [pc, #164]	; (8001e80 <rot_intrupt+0x118>)
 8001dda:	781b      	ldrb	r3, [r3, #0]
 8001ddc:	2b01      	cmp	r3, #1
 8001dde:	d10a      	bne.n	8001df6 <rot_intrupt+0x8e>
 8001de0:	4b26      	ldr	r3, [pc, #152]	; (8001e7c <rot_intrupt+0x114>)
 8001de2:	781b      	ldrb	r3, [r3, #0]
 8001de4:	2b03      	cmp	r3, #3
 8001de6:	d106      	bne.n	8001df6 <rot_intrupt+0x8e>
		  rotEncoder->currentPos++;
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	781b      	ldrb	r3, [r3, #0]
 8001dec:	3301      	adds	r3, #1
 8001dee:	b2da      	uxtb	r2, r3
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	701a      	strb	r2, [r3, #0]
 8001df4:	e03a      	b.n	8001e6c <rot_intrupt+0x104>
	  } else if (rot_old_state == 3 && rot_new_state == 1) { // 3 -> 1 transition
 8001df6:	4b22      	ldr	r3, [pc, #136]	; (8001e80 <rot_intrupt+0x118>)
 8001df8:	781b      	ldrb	r3, [r3, #0]
 8001dfa:	2b03      	cmp	r3, #3
 8001dfc:	d10a      	bne.n	8001e14 <rot_intrupt+0xac>
 8001dfe:	4b1f      	ldr	r3, [pc, #124]	; (8001e7c <rot_intrupt+0x114>)
 8001e00:	781b      	ldrb	r3, [r3, #0]
 8001e02:	2b01      	cmp	r3, #1
 8001e04:	d106      	bne.n	8001e14 <rot_intrupt+0xac>
		  rotEncoder->currentPos--;
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	781b      	ldrb	r3, [r3, #0]
 8001e0a:	3b01      	subs	r3, #1
 8001e0c:	b2da      	uxtb	r2, r3
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	701a      	strb	r2, [r3, #0]
 8001e12:	e02b      	b.n	8001e6c <rot_intrupt+0x104>
	  } else if (rot_old_state == 1 && rot_new_state == 0) { // 1 -> 0 transition
 8001e14:	4b1a      	ldr	r3, [pc, #104]	; (8001e80 <rot_intrupt+0x118>)
 8001e16:	781b      	ldrb	r3, [r3, #0]
 8001e18:	2b01      	cmp	r3, #1
 8001e1a:	d10a      	bne.n	8001e32 <rot_intrupt+0xca>
 8001e1c:	4b17      	ldr	r3, [pc, #92]	; (8001e7c <rot_intrupt+0x114>)
 8001e1e:	781b      	ldrb	r3, [r3, #0]
 8001e20:	2b00      	cmp	r3, #0
 8001e22:	d106      	bne.n	8001e32 <rot_intrupt+0xca>
		  rotEncoder->currentPos--;
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	781b      	ldrb	r3, [r3, #0]
 8001e28:	3b01      	subs	r3, #1
 8001e2a:	b2da      	uxtb	r2, r3
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	701a      	strb	r2, [r3, #0]
 8001e30:	e01c      	b.n	8001e6c <rot_intrupt+0x104>
	  } else if (rot_old_state == 0 && rot_new_state == 2) { // 0 -> 2 transition
 8001e32:	4b13      	ldr	r3, [pc, #76]	; (8001e80 <rot_intrupt+0x118>)
 8001e34:	781b      	ldrb	r3, [r3, #0]
 8001e36:	2b00      	cmp	r3, #0
 8001e38:	d10a      	bne.n	8001e50 <rot_intrupt+0xe8>
 8001e3a:	4b10      	ldr	r3, [pc, #64]	; (8001e7c <rot_intrupt+0x114>)
 8001e3c:	781b      	ldrb	r3, [r3, #0]
 8001e3e:	2b02      	cmp	r3, #2
 8001e40:	d106      	bne.n	8001e50 <rot_intrupt+0xe8>
		  rotEncoder->currentPos--;
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	781b      	ldrb	r3, [r3, #0]
 8001e46:	3b01      	subs	r3, #1
 8001e48:	b2da      	uxtb	r2, r3
 8001e4a:	687b      	ldr	r3, [r7, #4]
 8001e4c:	701a      	strb	r2, [r3, #0]
 8001e4e:	e00d      	b.n	8001e6c <rot_intrupt+0x104>
	  } else if (rot_old_state == 2 && rot_new_state == 3) { // 2 -> 3 transition
 8001e50:	4b0b      	ldr	r3, [pc, #44]	; (8001e80 <rot_intrupt+0x118>)
 8001e52:	781b      	ldrb	r3, [r3, #0]
 8001e54:	2b02      	cmp	r3, #2
 8001e56:	d109      	bne.n	8001e6c <rot_intrupt+0x104>
 8001e58:	4b08      	ldr	r3, [pc, #32]	; (8001e7c <rot_intrupt+0x114>)
 8001e5a:	781b      	ldrb	r3, [r3, #0]
 8001e5c:	2b03      	cmp	r3, #3
 8001e5e:	d105      	bne.n	8001e6c <rot_intrupt+0x104>
		  rotEncoder->currentPos--;
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	781b      	ldrb	r3, [r3, #0]
 8001e64:	3b01      	subs	r3, #1
 8001e66:	b2da      	uxtb	r2, r3
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	701a      	strb	r2, [r3, #0]
	  }
	  rot_old_state = rot_new_state;
 8001e6c:	4b03      	ldr	r3, [pc, #12]	; (8001e7c <rot_intrupt+0x114>)
 8001e6e:	781a      	ldrb	r2, [r3, #0]
 8001e70:	4b03      	ldr	r3, [pc, #12]	; (8001e80 <rot_intrupt+0x118>)
 8001e72:	701a      	strb	r2, [r3, #0]
}
 8001e74:	bf00      	nop
 8001e76:	3708      	adds	r7, #8
 8001e78:	46bd      	mov	sp, r7
 8001e7a:	bd80      	pop	{r7, pc}
 8001e7c:	200004ec 	.word	0x200004ec
 8001e80:	200004eb 	.word	0x200004eb

08001e84 <ResetShiftRegister>:
 */


#include "ShiftRegister.h"

void ResetShiftRegister(ShiftRegister_t *reg){
 8001e84:	b580      	push	{r7, lr}
 8001e86:	b082      	sub	sp, #8
 8001e88:	af00      	add	r7, sp, #0
 8001e8a:	6078      	str	r0, [r7, #4]
	LoadValueIntoShiftRegister(reg, 0x00);
 8001e8c:	2100      	movs	r1, #0
 8001e8e:	6878      	ldr	r0, [r7, #4]
 8001e90:	f000 f804 	bl	8001e9c <LoadValueIntoShiftRegister>
}
 8001e94:	bf00      	nop
 8001e96:	3708      	adds	r7, #8
 8001e98:	46bd      	mov	sp, r7
 8001e9a:	bd80      	pop	{r7, pc}

08001e9c <LoadValueIntoShiftRegister>:

void LoadValueIntoShiftRegister(ShiftRegister_t *reg, uint8_t num){
 8001e9c:	b580      	push	{r7, lr}
 8001e9e:	b084      	sub	sp, #16
 8001ea0:	af00      	add	r7, sp, #0
 8001ea2:	6078      	str	r0, [r7, #4]
 8001ea4:	460b      	mov	r3, r1
 8001ea6:	70fb      	strb	r3, [r7, #3]

	for (int8_t i = 7; i >= 0; i--) {
 8001ea8:	2307      	movs	r3, #7
 8001eaa:	73fb      	strb	r3, [r7, #15]
 8001eac:	e02c      	b.n	8001f08 <LoadValueIntoShiftRegister+0x6c>
		GPIO_PinState bit_value = ((num >> i) & 1)  ? GPIO_PIN_SET : GPIO_PIN_RESET;
 8001eae:	78fa      	ldrb	r2, [r7, #3]
 8001eb0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001eb4:	fa42 f303 	asr.w	r3, r2, r3
 8001eb8:	b2db      	uxtb	r3, r3
 8001eba:	f003 0301 	and.w	r3, r3, #1
 8001ebe:	73bb      	strb	r3, [r7, #14]
		HAL_GPIO_WritePin(reg->dataPort, reg->dataPin, bit_value);
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	6898      	ldr	r0, [r3, #8]
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	899b      	ldrh	r3, [r3, #12]
 8001ec8:	7bba      	ldrb	r2, [r7, #14]
 8001eca:	4619      	mov	r1, r3
 8001ecc:	f001 fba8 	bl	8003620 <HAL_GPIO_WritePin>
		HAL_Delay(1);
 8001ed0:	2001      	movs	r0, #1
 8001ed2:	f000 fd43 	bl	800295c <HAL_Delay>
		HAL_GPIO_WritePin(reg->clkPort, reg->clkPin, GPIO_PIN_SET);
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	6818      	ldr	r0, [r3, #0]
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	889b      	ldrh	r3, [r3, #4]
 8001ede:	2201      	movs	r2, #1
 8001ee0:	4619      	mov	r1, r3
 8001ee2:	f001 fb9d 	bl	8003620 <HAL_GPIO_WritePin>
		HAL_Delay(1);
 8001ee6:	2001      	movs	r0, #1
 8001ee8:	f000 fd38 	bl	800295c <HAL_Delay>
		HAL_GPIO_WritePin(reg->clkPort, reg->clkPin, GPIO_PIN_RESET);
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	6818      	ldr	r0, [r3, #0]
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	889b      	ldrh	r3, [r3, #4]
 8001ef4:	2200      	movs	r2, #0
 8001ef6:	4619      	mov	r1, r3
 8001ef8:	f001 fb92 	bl	8003620 <HAL_GPIO_WritePin>
	for (int8_t i = 7; i >= 0; i--) {
 8001efc:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001f00:	b2db      	uxtb	r3, r3
 8001f02:	3b01      	subs	r3, #1
 8001f04:	b2db      	uxtb	r3, r3
 8001f06:	73fb      	strb	r3, [r7, #15]
 8001f08:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001f0c:	2b00      	cmp	r3, #0
 8001f0e:	dace      	bge.n	8001eae <LoadValueIntoShiftRegister+0x12>
	  }

	HAL_GPIO_WritePin(reg->enabledPort, reg->enabledPin, GPIO_PIN_SET);
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	6918      	ldr	r0, [r3, #16]
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	8a9b      	ldrh	r3, [r3, #20]
 8001f18:	2201      	movs	r2, #1
 8001f1a:	4619      	mov	r1, r3
 8001f1c:	f001 fb80 	bl	8003620 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8001f20:	2001      	movs	r0, #1
 8001f22:	f000 fd1b 	bl	800295c <HAL_Delay>
	HAL_GPIO_WritePin(reg->enabledPort, reg->enabledPin, GPIO_PIN_RESET);
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	6918      	ldr	r0, [r3, #16]
 8001f2a:	687b      	ldr	r3, [r7, #4]
 8001f2c:	8a9b      	ldrh	r3, [r3, #20]
 8001f2e:	2200      	movs	r2, #0
 8001f30:	4619      	mov	r1, r3
 8001f32:	f001 fb75 	bl	8003620 <HAL_GPIO_WritePin>
}
 8001f36:	bf00      	nop
 8001f38:	3710      	adds	r7, #16
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	bd80      	pop	{r7, pc}
	...

08001f40 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001f40:	b580      	push	{r7, lr}
 8001f42:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001f44:	f000 fcad 	bl	80028a2 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001f48:	f000 f826 	bl	8001f98 <SystemClock_Config>

/* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 8001f4c:	f000 f892 	bl	8002074 <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001f50:	f000 f97a 	bl	8002248 <MX_GPIO_Init>
  MX_DMA_Init();
 8001f54:	f000 f946 	bl	80021e4 <MX_DMA_Init>
  MX_I2C1_Init();
 8001f58:	f000 f8ae 	bl	80020b8 <MX_I2C1_Init>
  MX_I2S1_Init();
 8001f5c:	f000 f8ec 	bl	8002138 <MX_I2S1_Init>
  MX_I2S2_Init();
 8001f60:	f000 f916 	bl	8002190 <MX_I2S2_Init>
  /* USER CODE BEGIN 2 */

  initSin();
 8001f64:	f7ff fce4 	bl	8001930 <initSin>

  InitIO();
 8001f68:	f7ff fe1e 	bl	8001ba8 <InitIO>
  CodecInit(&hi2c1);
 8001f6c:	4807      	ldr	r0, [pc, #28]	; (8001f8c <main+0x4c>)
 8001f6e:	f7fe ff91 	bl	8000e94 <CodecInit>

  InitDSP(44000, &hi2s1, &hi2s2); //44117 is in IOC file
 8001f72:	4a07      	ldr	r2, [pc, #28]	; (8001f90 <main+0x50>)
 8001f74:	4907      	ldr	r1, [pc, #28]	; (8001f94 <main+0x54>)
 8001f76:	f64a 30e0 	movw	r0, #44000	; 0xabe0
 8001f7a:	f7ff f853 	bl	8001024 <InitDSP>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {

	IOUpdate();
 8001f7e:	f7ff fe93 	bl	8001ca8 <IOUpdate>
	DSPUpdate(&hi2s1);
 8001f82:	4804      	ldr	r0, [pc, #16]	; (8001f94 <main+0x54>)
 8001f84:	f7ff f874 	bl	8001070 <DSPUpdate>
	IOUpdate();
 8001f88:	e7f9      	b.n	8001f7e <main+0x3e>
 8001f8a:	bf00      	nop
 8001f8c:	200004f0 	.word	0x200004f0
 8001f90:	20000584 	.word	0x20000584
 8001f94:	20000544 	.word	0x20000544

08001f98 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001f98:	b580      	push	{r7, lr}
 8001f9a:	b094      	sub	sp, #80	; 0x50
 8001f9c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001f9e:	f107 0320 	add.w	r3, r7, #32
 8001fa2:	2230      	movs	r2, #48	; 0x30
 8001fa4:	2100      	movs	r1, #0
 8001fa6:	4618      	mov	r0, r3
 8001fa8:	f003 fbe8 	bl	800577c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001fac:	f107 030c 	add.w	r3, r7, #12
 8001fb0:	2200      	movs	r2, #0
 8001fb2:	601a      	str	r2, [r3, #0]
 8001fb4:	605a      	str	r2, [r3, #4]
 8001fb6:	609a      	str	r2, [r3, #8]
 8001fb8:	60da      	str	r2, [r3, #12]
 8001fba:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001fbc:	4b2b      	ldr	r3, [pc, #172]	; (800206c <SystemClock_Config+0xd4>)
 8001fbe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fc0:	4a2a      	ldr	r2, [pc, #168]	; (800206c <SystemClock_Config+0xd4>)
 8001fc2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001fc6:	6413      	str	r3, [r2, #64]	; 0x40
 8001fc8:	4b28      	ldr	r3, [pc, #160]	; (800206c <SystemClock_Config+0xd4>)
 8001fca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fcc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001fd0:	60bb      	str	r3, [r7, #8]
 8001fd2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001fd4:	4b26      	ldr	r3, [pc, #152]	; (8002070 <SystemClock_Config+0xd8>)
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	4a25      	ldr	r2, [pc, #148]	; (8002070 <SystemClock_Config+0xd8>)
 8001fda:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001fde:	6013      	str	r3, [r2, #0]
 8001fe0:	4b23      	ldr	r3, [pc, #140]	; (8002070 <SystemClock_Config+0xd8>)
 8001fe2:	681b      	ldr	r3, [r3, #0]
 8001fe4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001fe8:	607b      	str	r3, [r7, #4]
 8001fea:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001fec:	2301      	movs	r3, #1
 8001fee:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001ff0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001ff4:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001ff6:	2302      	movs	r3, #2
 8001ff8:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001ffa:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001ffe:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 8002000:	2319      	movs	r3, #25
 8002002:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 432;
 8002004:	f44f 73d8 	mov.w	r3, #432	; 0x1b0
 8002008:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800200a:	2302      	movs	r3, #2
 800200c:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800200e:	2302      	movs	r3, #2
 8002010:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002012:	f107 0320 	add.w	r3, r7, #32
 8002016:	4618      	mov	r0, r3
 8002018:	f002 fb3e 	bl	8004698 <HAL_RCC_OscConfig>
 800201c:	4603      	mov	r3, r0
 800201e:	2b00      	cmp	r3, #0
 8002020:	d001      	beq.n	8002026 <SystemClock_Config+0x8e>
  {
    Error_Handler();
 8002022:	f000 f9dd 	bl	80023e0 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8002026:	f002 fae7 	bl	80045f8 <HAL_PWREx_EnableOverDrive>
 800202a:	4603      	mov	r3, r0
 800202c:	2b00      	cmp	r3, #0
 800202e:	d001      	beq.n	8002034 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8002030:	f000 f9d6 	bl	80023e0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002034:	230f      	movs	r3, #15
 8002036:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002038:	2302      	movs	r3, #2
 800203a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800203c:	2300      	movs	r3, #0
 800203e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8002040:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002044:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002046:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800204a:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 800204c:	f107 030c 	add.w	r3, r7, #12
 8002050:	2107      	movs	r1, #7
 8002052:	4618      	mov	r0, r3
 8002054:	f002 fdc4 	bl	8004be0 <HAL_RCC_ClockConfig>
 8002058:	4603      	mov	r3, r0
 800205a:	2b00      	cmp	r3, #0
 800205c:	d001      	beq.n	8002062 <SystemClock_Config+0xca>
  {
    Error_Handler();
 800205e:	f000 f9bf 	bl	80023e0 <Error_Handler>
  }
}
 8002062:	bf00      	nop
 8002064:	3750      	adds	r7, #80	; 0x50
 8002066:	46bd      	mov	sp, r7
 8002068:	bd80      	pop	{r7, pc}
 800206a:	bf00      	nop
 800206c:	40023800 	.word	0x40023800
 8002070:	40007000 	.word	0x40007000

08002074 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 8002074:	b580      	push	{r7, lr}
 8002076:	b0a0      	sub	sp, #128	; 0x80
 8002078:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800207a:	463b      	mov	r3, r7
 800207c:	2280      	movs	r2, #128	; 0x80
 800207e:	2100      	movs	r1, #0
 8002080:	4618      	mov	r0, r3
 8002082:	f003 fb7b 	bl	800577c <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 8002086:	2301      	movs	r3, #1
 8002088:	603b      	str	r3, [r7, #0]
  PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 800208a:	23c0      	movs	r3, #192	; 0xc0
 800208c:	607b      	str	r3, [r7, #4]
  PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 800208e:	2302      	movs	r3, #2
 8002090:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 8002092:	2302      	movs	r3, #2
 8002094:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLI2SDivQ = 1;
 8002096:	2301      	movs	r3, #1
 8002098:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.I2sClockSelection = RCC_I2SCLKSOURCE_PLLI2S;
 800209a:	2300      	movs	r3, #0
 800209c:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800209e:	463b      	mov	r3, r7
 80020a0:	4618      	mov	r0, r3
 80020a2:	f002 ff4f 	bl	8004f44 <HAL_RCCEx_PeriphCLKConfig>
 80020a6:	4603      	mov	r3, r0
 80020a8:	2b00      	cmp	r3, #0
 80020aa:	d001      	beq.n	80020b0 <PeriphCommonClock_Config+0x3c>
  {
    Error_Handler();
 80020ac:	f000 f998 	bl	80023e0 <Error_Handler>
  }
}
 80020b0:	bf00      	nop
 80020b2:	3780      	adds	r7, #128	; 0x80
 80020b4:	46bd      	mov	sp, r7
 80020b6:	bd80      	pop	{r7, pc}

080020b8 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80020b8:	b580      	push	{r7, lr}
 80020ba:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80020bc:	4b1b      	ldr	r3, [pc, #108]	; (800212c <MX_I2C1_Init+0x74>)
 80020be:	4a1c      	ldr	r2, [pc, #112]	; (8002130 <MX_I2C1_Init+0x78>)
 80020c0:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x20404768;
 80020c2:	4b1a      	ldr	r3, [pc, #104]	; (800212c <MX_I2C1_Init+0x74>)
 80020c4:	4a1b      	ldr	r2, [pc, #108]	; (8002134 <MX_I2C1_Init+0x7c>)
 80020c6:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 80020c8:	4b18      	ldr	r3, [pc, #96]	; (800212c <MX_I2C1_Init+0x74>)
 80020ca:	2200      	movs	r2, #0
 80020cc:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80020ce:	4b17      	ldr	r3, [pc, #92]	; (800212c <MX_I2C1_Init+0x74>)
 80020d0:	2201      	movs	r2, #1
 80020d2:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80020d4:	4b15      	ldr	r3, [pc, #84]	; (800212c <MX_I2C1_Init+0x74>)
 80020d6:	2200      	movs	r2, #0
 80020d8:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 80020da:	4b14      	ldr	r3, [pc, #80]	; (800212c <MX_I2C1_Init+0x74>)
 80020dc:	2200      	movs	r2, #0
 80020de:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80020e0:	4b12      	ldr	r3, [pc, #72]	; (800212c <MX_I2C1_Init+0x74>)
 80020e2:	2200      	movs	r2, #0
 80020e4:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80020e6:	4b11      	ldr	r3, [pc, #68]	; (800212c <MX_I2C1_Init+0x74>)
 80020e8:	2200      	movs	r2, #0
 80020ea:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80020ec:	4b0f      	ldr	r3, [pc, #60]	; (800212c <MX_I2C1_Init+0x74>)
 80020ee:	2200      	movs	r2, #0
 80020f0:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80020f2:	480e      	ldr	r0, [pc, #56]	; (800212c <MX_I2C1_Init+0x74>)
 80020f4:	f001 fac6 	bl	8003684 <HAL_I2C_Init>
 80020f8:	4603      	mov	r3, r0
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d001      	beq.n	8002102 <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 80020fe:	f000 f96f 	bl	80023e0 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8002102:	2100      	movs	r1, #0
 8002104:	4809      	ldr	r0, [pc, #36]	; (800212c <MX_I2C1_Init+0x74>)
 8002106:	f001 fea7 	bl	8003e58 <HAL_I2CEx_ConfigAnalogFilter>
 800210a:	4603      	mov	r3, r0
 800210c:	2b00      	cmp	r3, #0
 800210e:	d001      	beq.n	8002114 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8002110:	f000 f966 	bl	80023e0 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8002114:	2100      	movs	r1, #0
 8002116:	4805      	ldr	r0, [pc, #20]	; (800212c <MX_I2C1_Init+0x74>)
 8002118:	f001 fee9 	bl	8003eee <HAL_I2CEx_ConfigDigitalFilter>
 800211c:	4603      	mov	r3, r0
 800211e:	2b00      	cmp	r3, #0
 8002120:	d001      	beq.n	8002126 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8002122:	f000 f95d 	bl	80023e0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8002126:	bf00      	nop
 8002128:	bd80      	pop	{r7, pc}
 800212a:	bf00      	nop
 800212c:	200004f0 	.word	0x200004f0
 8002130:	40005400 	.word	0x40005400
 8002134:	20404768 	.word	0x20404768

08002138 <MX_I2S1_Init>:
  * @brief I2S1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2S1_Init(void)
{
 8002138:	b580      	push	{r7, lr}
 800213a:	af00      	add	r7, sp, #0
  /* USER CODE END I2S1_Init 0 */

  /* USER CODE BEGIN I2S1_Init 1 */

  /* USER CODE END I2S1_Init 1 */
  hi2s1.Instance = SPI1;
 800213c:	4b12      	ldr	r3, [pc, #72]	; (8002188 <MX_I2S1_Init+0x50>)
 800213e:	4a13      	ldr	r2, [pc, #76]	; (800218c <MX_I2S1_Init+0x54>)
 8002140:	601a      	str	r2, [r3, #0]
  hi2s1.Init.Mode = I2S_MODE_MASTER_TX;
 8002142:	4b11      	ldr	r3, [pc, #68]	; (8002188 <MX_I2S1_Init+0x50>)
 8002144:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002148:	605a      	str	r2, [r3, #4]
  hi2s1.Init.Standard = I2S_STANDARD_PHILIPS;
 800214a:	4b0f      	ldr	r3, [pc, #60]	; (8002188 <MX_I2S1_Init+0x50>)
 800214c:	2200      	movs	r2, #0
 800214e:	609a      	str	r2, [r3, #8]
  hi2s1.Init.DataFormat = I2S_DATAFORMAT_16B;
 8002150:	4b0d      	ldr	r3, [pc, #52]	; (8002188 <MX_I2S1_Init+0x50>)
 8002152:	2200      	movs	r2, #0
 8002154:	60da      	str	r2, [r3, #12]
  hi2s1.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 8002156:	4b0c      	ldr	r3, [pc, #48]	; (8002188 <MX_I2S1_Init+0x50>)
 8002158:	f44f 7200 	mov.w	r2, #512	; 0x200
 800215c:	611a      	str	r2, [r3, #16]
  hi2s1.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 800215e:	4b0a      	ldr	r3, [pc, #40]	; (8002188 <MX_I2S1_Init+0x50>)
 8002160:	f64a 4244 	movw	r2, #44100	; 0xac44
 8002164:	615a      	str	r2, [r3, #20]
  hi2s1.Init.CPOL = I2S_CPOL_LOW;
 8002166:	4b08      	ldr	r3, [pc, #32]	; (8002188 <MX_I2S1_Init+0x50>)
 8002168:	2200      	movs	r2, #0
 800216a:	619a      	str	r2, [r3, #24]
  hi2s1.Init.ClockSource = I2S_CLOCK_PLL;
 800216c:	4b06      	ldr	r3, [pc, #24]	; (8002188 <MX_I2S1_Init+0x50>)
 800216e:	2202      	movs	r2, #2
 8002170:	61da      	str	r2, [r3, #28]
  if (HAL_I2S_Init(&hi2s1) != HAL_OK)
 8002172:	4805      	ldr	r0, [pc, #20]	; (8002188 <MX_I2S1_Init+0x50>)
 8002174:	f001 ff08 	bl	8003f88 <HAL_I2S_Init>
 8002178:	4603      	mov	r3, r0
 800217a:	2b00      	cmp	r3, #0
 800217c:	d001      	beq.n	8002182 <MX_I2S1_Init+0x4a>
  {
    Error_Handler();
 800217e:	f000 f92f 	bl	80023e0 <Error_Handler>
  }
  /* USER CODE BEGIN I2S1_Init 2 */

  /* USER CODE END I2S1_Init 2 */

}
 8002182:	bf00      	nop
 8002184:	bd80      	pop	{r7, pc}
 8002186:	bf00      	nop
 8002188:	20000544 	.word	0x20000544
 800218c:	40013000 	.word	0x40013000

08002190 <MX_I2S2_Init>:
  * @brief I2S2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2S2_Init(void)
{
 8002190:	b580      	push	{r7, lr}
 8002192:	af00      	add	r7, sp, #0
  /* USER CODE END I2S2_Init 0 */

  /* USER CODE BEGIN I2S2_Init 1 */

  /* USER CODE END I2S2_Init 1 */
  hi2s2.Instance = SPI2;
 8002194:	4b11      	ldr	r3, [pc, #68]	; (80021dc <MX_I2S2_Init+0x4c>)
 8002196:	4a12      	ldr	r2, [pc, #72]	; (80021e0 <MX_I2S2_Init+0x50>)
 8002198:	601a      	str	r2, [r3, #0]
  hi2s2.Init.Mode = I2S_MODE_SLAVE_RX;
 800219a:	4b10      	ldr	r3, [pc, #64]	; (80021dc <MX_I2S2_Init+0x4c>)
 800219c:	f44f 7280 	mov.w	r2, #256	; 0x100
 80021a0:	605a      	str	r2, [r3, #4]
  hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 80021a2:	4b0e      	ldr	r3, [pc, #56]	; (80021dc <MX_I2S2_Init+0x4c>)
 80021a4:	2200      	movs	r2, #0
 80021a6:	609a      	str	r2, [r3, #8]
  hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 80021a8:	4b0c      	ldr	r3, [pc, #48]	; (80021dc <MX_I2S2_Init+0x4c>)
 80021aa:	2200      	movs	r2, #0
 80021ac:	60da      	str	r2, [r3, #12]
  hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 80021ae:	4b0b      	ldr	r3, [pc, #44]	; (80021dc <MX_I2S2_Init+0x4c>)
 80021b0:	2200      	movs	r2, #0
 80021b2:	611a      	str	r2, [r3, #16]
  hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_44K;
 80021b4:	4b09      	ldr	r3, [pc, #36]	; (80021dc <MX_I2S2_Init+0x4c>)
 80021b6:	f64a 4244 	movw	r2, #44100	; 0xac44
 80021ba:	615a      	str	r2, [r3, #20]
  hi2s2.Init.CPOL = I2S_CPOL_LOW;
 80021bc:	4b07      	ldr	r3, [pc, #28]	; (80021dc <MX_I2S2_Init+0x4c>)
 80021be:	2200      	movs	r2, #0
 80021c0:	619a      	str	r2, [r3, #24]
  hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 80021c2:	4b06      	ldr	r3, [pc, #24]	; (80021dc <MX_I2S2_Init+0x4c>)
 80021c4:	2202      	movs	r2, #2
 80021c6:	61da      	str	r2, [r3, #28]
  if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 80021c8:	4804      	ldr	r0, [pc, #16]	; (80021dc <MX_I2S2_Init+0x4c>)
 80021ca:	f001 fedd 	bl	8003f88 <HAL_I2S_Init>
 80021ce:	4603      	mov	r3, r0
 80021d0:	2b00      	cmp	r3, #0
 80021d2:	d001      	beq.n	80021d8 <MX_I2S2_Init+0x48>
  {
    Error_Handler();
 80021d4:	f000 f904 	bl	80023e0 <Error_Handler>
  }
  /* USER CODE BEGIN I2S2_Init 2 */

  /* USER CODE END I2S2_Init 2 */

}
 80021d8:	bf00      	nop
 80021da:	bd80      	pop	{r7, pc}
 80021dc:	20000584 	.word	0x20000584
 80021e0:	40003800 	.word	0x40003800

080021e4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80021e4:	b580      	push	{r7, lr}
 80021e6:	b082      	sub	sp, #8
 80021e8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80021ea:	4b16      	ldr	r3, [pc, #88]	; (8002244 <MX_DMA_Init+0x60>)
 80021ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021ee:	4a15      	ldr	r2, [pc, #84]	; (8002244 <MX_DMA_Init+0x60>)
 80021f0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80021f4:	6313      	str	r3, [r2, #48]	; 0x30
 80021f6:	4b13      	ldr	r3, [pc, #76]	; (8002244 <MX_DMA_Init+0x60>)
 80021f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021fa:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80021fe:	607b      	str	r3, [r7, #4]
 8002200:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8002202:	4b10      	ldr	r3, [pc, #64]	; (8002244 <MX_DMA_Init+0x60>)
 8002204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002206:	4a0f      	ldr	r2, [pc, #60]	; (8002244 <MX_DMA_Init+0x60>)
 8002208:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800220c:	6313      	str	r3, [r2, #48]	; 0x30
 800220e:	4b0d      	ldr	r3, [pc, #52]	; (8002244 <MX_DMA_Init+0x60>)
 8002210:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002212:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002216:	603b      	str	r3, [r7, #0]
 8002218:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 0, 0);
 800221a:	2200      	movs	r2, #0
 800221c:	2100      	movs	r1, #0
 800221e:	200e      	movs	r0, #14
 8002220:	f000 fc9b 	bl	8002b5a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 8002224:	200e      	movs	r0, #14
 8002226:	f000 fcb4 	bl	8002b92 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
 800222a:	2200      	movs	r2, #0
 800222c:	2100      	movs	r1, #0
 800222e:	203b      	movs	r0, #59	; 0x3b
 8002230:	f000 fc93 	bl	8002b5a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 8002234:	203b      	movs	r0, #59	; 0x3b
 8002236:	f000 fcac 	bl	8002b92 <HAL_NVIC_EnableIRQ>

}
 800223a:	bf00      	nop
 800223c:	3708      	adds	r7, #8
 800223e:	46bd      	mov	sp, r7
 8002240:	bd80      	pop	{r7, pc}
 8002242:	bf00      	nop
 8002244:	40023800 	.word	0x40023800

08002248 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002248:	b580      	push	{r7, lr}
 800224a:	b08a      	sub	sp, #40	; 0x28
 800224c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800224e:	f107 0314 	add.w	r3, r7, #20
 8002252:	2200      	movs	r2, #0
 8002254:	601a      	str	r2, [r3, #0]
 8002256:	605a      	str	r2, [r3, #4]
 8002258:	609a      	str	r2, [r3, #8]
 800225a:	60da      	str	r2, [r3, #12]
 800225c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800225e:	4b4a      	ldr	r3, [pc, #296]	; (8002388 <MX_GPIO_Init+0x140>)
 8002260:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002262:	4a49      	ldr	r2, [pc, #292]	; (8002388 <MX_GPIO_Init+0x140>)
 8002264:	f043 0304 	orr.w	r3, r3, #4
 8002268:	6313      	str	r3, [r2, #48]	; 0x30
 800226a:	4b47      	ldr	r3, [pc, #284]	; (8002388 <MX_GPIO_Init+0x140>)
 800226c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800226e:	f003 0304 	and.w	r3, r3, #4
 8002272:	613b      	str	r3, [r7, #16]
 8002274:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8002276:	4b44      	ldr	r3, [pc, #272]	; (8002388 <MX_GPIO_Init+0x140>)
 8002278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800227a:	4a43      	ldr	r2, [pc, #268]	; (8002388 <MX_GPIO_Init+0x140>)
 800227c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002280:	6313      	str	r3, [r2, #48]	; 0x30
 8002282:	4b41      	ldr	r3, [pc, #260]	; (8002388 <MX_GPIO_Init+0x140>)
 8002284:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002286:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800228a:	60fb      	str	r3, [r7, #12]
 800228c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800228e:	4b3e      	ldr	r3, [pc, #248]	; (8002388 <MX_GPIO_Init+0x140>)
 8002290:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002292:	4a3d      	ldr	r2, [pc, #244]	; (8002388 <MX_GPIO_Init+0x140>)
 8002294:	f043 0301 	orr.w	r3, r3, #1
 8002298:	6313      	str	r3, [r2, #48]	; 0x30
 800229a:	4b3b      	ldr	r3, [pc, #236]	; (8002388 <MX_GPIO_Init+0x140>)
 800229c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800229e:	f003 0301 	and.w	r3, r3, #1
 80022a2:	60bb      	str	r3, [r7, #8]
 80022a4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80022a6:	4b38      	ldr	r3, [pc, #224]	; (8002388 <MX_GPIO_Init+0x140>)
 80022a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022aa:	4a37      	ldr	r2, [pc, #220]	; (8002388 <MX_GPIO_Init+0x140>)
 80022ac:	f043 0302 	orr.w	r3, r3, #2
 80022b0:	6313      	str	r3, [r2, #48]	; 0x30
 80022b2:	4b35      	ldr	r3, [pc, #212]	; (8002388 <MX_GPIO_Init+0x140>)
 80022b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022b6:	f003 0302 	and.w	r3, r3, #2
 80022ba:	607b      	str	r3, [r7, #4]
 80022bc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, ShiftRegFDat_Pin|ShiftRegFStoClk_Pin|ShiftRegFClk_Pin|ShiftRegLBarDat_Pin
 80022be:	2200      	movs	r2, #0
 80022c0:	f24e 010d 	movw	r1, #57357	; 0xe00d
 80022c4:	4831      	ldr	r0, [pc, #196]	; (800238c <MX_GPIO_Init+0x144>)
 80022c6:	f001 f9ab 	bl	8003620 <HAL_GPIO_WritePin>
                          |ShiftRegLBarStoClk_Pin|ShiftRegLBarClk_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : ShiftRegFDat_Pin ShiftRegFStoClk_Pin ShiftRegFClk_Pin ShiftRegLBarDat_Pin
                           ShiftRegLBarStoClk_Pin ShiftRegLBarClk_Pin */
  GPIO_InitStruct.Pin = ShiftRegFDat_Pin|ShiftRegFStoClk_Pin|ShiftRegFClk_Pin|ShiftRegLBarDat_Pin
 80022ca:	f24e 030d 	movw	r3, #57357	; 0xe00d
 80022ce:	617b      	str	r3, [r7, #20]
                          |ShiftRegLBarStoClk_Pin|ShiftRegLBarClk_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80022d0:	2301      	movs	r3, #1
 80022d2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022d4:	2300      	movs	r3, #0
 80022d6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80022d8:	2300      	movs	r3, #0
 80022da:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022dc:	f107 0314 	add.w	r3, r7, #20
 80022e0:	4619      	mov	r1, r3
 80022e2:	482a      	ldr	r0, [pc, #168]	; (800238c <MX_GPIO_Init+0x144>)
 80022e4:	f000 ffe8 	bl	80032b8 <HAL_GPIO_Init>

  /*Configure GPIO pins : RotEncoderInA_Pin RotEncoderButton_Pin */
  GPIO_InitStruct.Pin = RotEncoderInA_Pin|RotEncoderButton_Pin;
 80022e8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80022ec:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80022ee:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80022f2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022f4:	2300      	movs	r3, #0
 80022f6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022f8:	f107 0314 	add.w	r3, r7, #20
 80022fc:	4619      	mov	r1, r3
 80022fe:	4823      	ldr	r0, [pc, #140]	; (800238c <MX_GPIO_Init+0x144>)
 8002300:	f000 ffda 	bl	80032b8 <HAL_GPIO_Init>

  /*Configure GPIO pin : RotEncoderInB_Pin */
  GPIO_InitStruct.Pin = RotEncoderInB_Pin;
 8002304:	2380      	movs	r3, #128	; 0x80
 8002306:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8002308:	f44f 1344 	mov.w	r3, #3211264	; 0x310000
 800230c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800230e:	2300      	movs	r3, #0
 8002310:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(RotEncoderInB_GPIO_Port, &GPIO_InitStruct);
 8002312:	f107 0314 	add.w	r3, r7, #20
 8002316:	4619      	mov	r1, r3
 8002318:	481c      	ldr	r0, [pc, #112]	; (800238c <MX_GPIO_Init+0x144>)
 800231a:	f000 ffcd 	bl	80032b8 <HAL_GPIO_Init>

  /*Configure GPIO pins : ToggleInput4_Pin ToggleInput2_Pin ToggleInput1_Pin ToggleInput8_Pin */
  GPIO_InitStruct.Pin = ToggleInput4_Pin|ToggleInput2_Pin|ToggleInput1_Pin|ToggleInput8_Pin;
 800231e:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
 8002322:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002324:	2300      	movs	r3, #0
 8002326:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002328:	2300      	movs	r3, #0
 800232a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800232c:	f107 0314 	add.w	r3, r7, #20
 8002330:	4619      	mov	r1, r3
 8002332:	4817      	ldr	r0, [pc, #92]	; (8002390 <MX_GPIO_Init+0x148>)
 8002334:	f000 ffc0 	bl	80032b8 <HAL_GPIO_Init>

  /*Configure GPIO pin : ToggleInput3_Pin */
  GPIO_InitStruct.Pin = ToggleInput3_Pin;
 8002338:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800233c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800233e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002342:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002344:	2300      	movs	r3, #0
 8002346:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(ToggleInput3_GPIO_Port, &GPIO_InitStruct);
 8002348:	f107 0314 	add.w	r3, r7, #20
 800234c:	4619      	mov	r1, r3
 800234e:	4810      	ldr	r0, [pc, #64]	; (8002390 <MX_GPIO_Init+0x148>)
 8002350:	f000 ffb2 	bl	80032b8 <HAL_GPIO_Init>

  /*Configure GPIO pins : ToggleInput7_Pin ToggleInput6_Pin ToggleInput5_Pin */
  GPIO_InitStruct.Pin = ToggleInput7_Pin|ToggleInput6_Pin|ToggleInput5_Pin;
 8002354:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 8002358:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800235a:	2300      	movs	r3, #0
 800235c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800235e:	2300      	movs	r3, #0
 8002360:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002362:	f107 0314 	add.w	r3, r7, #20
 8002366:	4619      	mov	r1, r3
 8002368:	4808      	ldr	r0, [pc, #32]	; (800238c <MX_GPIO_Init+0x144>)
 800236a:	f000 ffa5 	bl	80032b8 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 800236e:	2200      	movs	r2, #0
 8002370:	2100      	movs	r1, #0
 8002372:	2017      	movs	r0, #23
 8002374:	f000 fbf1 	bl	8002b5a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8002378:	2017      	movs	r0, #23
 800237a:	f000 fc0a 	bl	8002b92 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800237e:	bf00      	nop
 8002380:	3728      	adds	r7, #40	; 0x28
 8002382:	46bd      	mov	sp, r7
 8002384:	bd80      	pop	{r7, pc}
 8002386:	bf00      	nop
 8002388:	40023800 	.word	0x40023800
 800238c:	40020800 	.word	0x40020800
 8002390:	40020000 	.word	0x40020000

08002394 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 8002394:	b580      	push	{r7, lr}
 8002396:	b084      	sub	sp, #16
 8002398:	af00      	add	r7, sp, #0
 800239a:	4603      	mov	r3, r0
 800239c:	80fb      	strh	r3, [r7, #6]

  /* Prevent unused argument(s) compilation warning */
  uint32_t currentMillis = HAL_GetTick();
 800239e:	f000 fad1 	bl	8002944 <HAL_GetTick>
 80023a2:	60f8      	str	r0, [r7, #12]
  UNUSED(GPIO_Pin);


  if(GPIO_Pin == RotEncoderButton_Pin && (currentMillis - previousMillis > 100)){
 80023a4:	88fb      	ldrh	r3, [r7, #6]
 80023a6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80023aa:	d108      	bne.n	80023be <HAL_GPIO_EXTI_Callback+0x2a>
 80023ac:	4b0b      	ldr	r3, [pc, #44]	; (80023dc <HAL_GPIO_EXTI_Callback+0x48>)
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	68fa      	ldr	r2, [r7, #12]
 80023b2:	1ad3      	subs	r3, r2, r3
 80023b4:	2b64      	cmp	r3, #100	; 0x64
 80023b6:	d902      	bls.n	80023be <HAL_GPIO_EXTI_Callback+0x2a>
	  ButtonInterrupt(currentMillis);
 80023b8:	68f8      	ldr	r0, [r7, #12]
 80023ba:	f7ff fc41 	bl	8001c40 <ButtonInterrupt>
  }

  if(GPIO_Pin == RotEncoderInA_Pin || GPIO_Pin == RotEncoderInB_Pin){
 80023be:	88fb      	ldrh	r3, [r7, #6]
 80023c0:	2b40      	cmp	r3, #64	; 0x40
 80023c2:	d002      	beq.n	80023ca <HAL_GPIO_EXTI_Callback+0x36>
 80023c4:	88fb      	ldrh	r3, [r7, #6]
 80023c6:	2b80      	cmp	r3, #128	; 0x80
 80023c8:	d101      	bne.n	80023ce <HAL_GPIO_EXTI_Callback+0x3a>
	  RotaryEncoderInterrupt();
 80023ca:	f7ff fc63 	bl	8001c94 <RotaryEncoderInterrupt>
  }

  previousMillis = currentMillis;
 80023ce:	4a03      	ldr	r2, [pc, #12]	; (80023dc <HAL_GPIO_EXTI_Callback+0x48>)
 80023d0:	68fb      	ldr	r3, [r7, #12]
 80023d2:	6013      	str	r3, [r2, #0]

}
 80023d4:	bf00      	nop
 80023d6:	3710      	adds	r7, #16
 80023d8:	46bd      	mov	sp, r7
 80023da:	bd80      	pop	{r7, pc}
 80023dc:	20000684 	.word	0x20000684

080023e0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80023e0:	b480      	push	{r7}
 80023e2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80023e4:	b672      	cpsid	i
}
 80023e6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80023e8:	e7fe      	b.n	80023e8 <Error_Handler+0x8>
	...

080023ec <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80023ec:	b480      	push	{r7}
 80023ee:	b083      	sub	sp, #12
 80023f0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80023f2:	4b0f      	ldr	r3, [pc, #60]	; (8002430 <HAL_MspInit+0x44>)
 80023f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023f6:	4a0e      	ldr	r2, [pc, #56]	; (8002430 <HAL_MspInit+0x44>)
 80023f8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80023fc:	6413      	str	r3, [r2, #64]	; 0x40
 80023fe:	4b0c      	ldr	r3, [pc, #48]	; (8002430 <HAL_MspInit+0x44>)
 8002400:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002402:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002406:	607b      	str	r3, [r7, #4]
 8002408:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800240a:	4b09      	ldr	r3, [pc, #36]	; (8002430 <HAL_MspInit+0x44>)
 800240c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800240e:	4a08      	ldr	r2, [pc, #32]	; (8002430 <HAL_MspInit+0x44>)
 8002410:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002414:	6453      	str	r3, [r2, #68]	; 0x44
 8002416:	4b06      	ldr	r3, [pc, #24]	; (8002430 <HAL_MspInit+0x44>)
 8002418:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800241a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800241e:	603b      	str	r3, [r7, #0]
 8002420:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002422:	bf00      	nop
 8002424:	370c      	adds	r7, #12
 8002426:	46bd      	mov	sp, r7
 8002428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800242c:	4770      	bx	lr
 800242e:	bf00      	nop
 8002430:	40023800 	.word	0x40023800

08002434 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002434:	b580      	push	{r7, lr}
 8002436:	b0aa      	sub	sp, #168	; 0xa8
 8002438:	af00      	add	r7, sp, #0
 800243a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800243c:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8002440:	2200      	movs	r2, #0
 8002442:	601a      	str	r2, [r3, #0]
 8002444:	605a      	str	r2, [r3, #4]
 8002446:	609a      	str	r2, [r3, #8]
 8002448:	60da      	str	r2, [r3, #12]
 800244a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800244c:	f107 0314 	add.w	r3, r7, #20
 8002450:	2280      	movs	r2, #128	; 0x80
 8002452:	2100      	movs	r1, #0
 8002454:	4618      	mov	r0, r3
 8002456:	f003 f991 	bl	800577c <memset>
  if(hi2c->Instance==I2C1)
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	681b      	ldr	r3, [r3, #0]
 800245e:	4a21      	ldr	r2, [pc, #132]	; (80024e4 <HAL_I2C_MspInit+0xb0>)
 8002460:	4293      	cmp	r3, r2
 8002462:	d13b      	bne.n	80024dc <HAL_I2C_MspInit+0xa8>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8002464:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002468:	617b      	str	r3, [r7, #20]
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 800246a:	2300      	movs	r3, #0
 800246c:	673b      	str	r3, [r7, #112]	; 0x70
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800246e:	f107 0314 	add.w	r3, r7, #20
 8002472:	4618      	mov	r0, r3
 8002474:	f002 fd66 	bl	8004f44 <HAL_RCCEx_PeriphCLKConfig>
 8002478:	4603      	mov	r3, r0
 800247a:	2b00      	cmp	r3, #0
 800247c:	d001      	beq.n	8002482 <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 800247e:	f7ff ffaf 	bl	80023e0 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002482:	4b19      	ldr	r3, [pc, #100]	; (80024e8 <HAL_I2C_MspInit+0xb4>)
 8002484:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002486:	4a18      	ldr	r2, [pc, #96]	; (80024e8 <HAL_I2C_MspInit+0xb4>)
 8002488:	f043 0302 	orr.w	r3, r3, #2
 800248c:	6313      	str	r3, [r2, #48]	; 0x30
 800248e:	4b16      	ldr	r3, [pc, #88]	; (80024e8 <HAL_I2C_MspInit+0xb4>)
 8002490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002492:	f003 0302 	and.w	r3, r3, #2
 8002496:	613b      	str	r3, [r7, #16]
 8002498:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800249a:	23c0      	movs	r3, #192	; 0xc0
 800249c:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80024a0:	2312      	movs	r3, #18
 80024a2:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024a6:	2300      	movs	r3, #0
 80024a8:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024ac:	2303      	movs	r3, #3
 80024ae:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80024b2:	2304      	movs	r3, #4
 80024b4:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024b8:	f107 0394 	add.w	r3, r7, #148	; 0x94
 80024bc:	4619      	mov	r1, r3
 80024be:	480b      	ldr	r0, [pc, #44]	; (80024ec <HAL_I2C_MspInit+0xb8>)
 80024c0:	f000 fefa 	bl	80032b8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80024c4:	4b08      	ldr	r3, [pc, #32]	; (80024e8 <HAL_I2C_MspInit+0xb4>)
 80024c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80024c8:	4a07      	ldr	r2, [pc, #28]	; (80024e8 <HAL_I2C_MspInit+0xb4>)
 80024ca:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80024ce:	6413      	str	r3, [r2, #64]	; 0x40
 80024d0:	4b05      	ldr	r3, [pc, #20]	; (80024e8 <HAL_I2C_MspInit+0xb4>)
 80024d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80024d4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80024d8:	60fb      	str	r3, [r7, #12]
 80024da:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 80024dc:	bf00      	nop
 80024de:	37a8      	adds	r7, #168	; 0xa8
 80024e0:	46bd      	mov	sp, r7
 80024e2:	bd80      	pop	{r7, pc}
 80024e4:	40005400 	.word	0x40005400
 80024e8:	40023800 	.word	0x40023800
 80024ec:	40020400 	.word	0x40020400

080024f0 <HAL_I2S_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2s: I2S handle pointer
* @retval None
*/
void HAL_I2S_MspInit(I2S_HandleTypeDef* hi2s)
{
 80024f0:	b580      	push	{r7, lr}
 80024f2:	b08e      	sub	sp, #56	; 0x38
 80024f4:	af00      	add	r7, sp, #0
 80024f6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024f8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80024fc:	2200      	movs	r2, #0
 80024fe:	601a      	str	r2, [r3, #0]
 8002500:	605a      	str	r2, [r3, #4]
 8002502:	609a      	str	r2, [r3, #8]
 8002504:	60da      	str	r2, [r3, #12]
 8002506:	611a      	str	r2, [r3, #16]
  if(hi2s->Instance==SPI1)
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	4a7c      	ldr	r2, [pc, #496]	; (8002700 <HAL_I2S_MspInit+0x210>)
 800250e:	4293      	cmp	r3, r2
 8002510:	d176      	bne.n	8002600 <HAL_I2S_MspInit+0x110>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002512:	4b7c      	ldr	r3, [pc, #496]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002516:	4a7b      	ldr	r2, [pc, #492]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002518:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800251c:	6453      	str	r3, [r2, #68]	; 0x44
 800251e:	4b79      	ldr	r3, [pc, #484]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002520:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002522:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002526:	623b      	str	r3, [r7, #32]
 8002528:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800252a:	4b76      	ldr	r3, [pc, #472]	; (8002704 <HAL_I2S_MspInit+0x214>)
 800252c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800252e:	4a75      	ldr	r2, [pc, #468]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002530:	f043 0301 	orr.w	r3, r3, #1
 8002534:	6313      	str	r3, [r2, #48]	; 0x30
 8002536:	4b73      	ldr	r3, [pc, #460]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002538:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800253a:	f003 0301 	and.w	r3, r3, #1
 800253e:	61fb      	str	r3, [r7, #28]
 8002540:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002542:	4b70      	ldr	r3, [pc, #448]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002544:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002546:	4a6f      	ldr	r2, [pc, #444]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002548:	f043 0304 	orr.w	r3, r3, #4
 800254c:	6313      	str	r3, [r2, #48]	; 0x30
 800254e:	4b6d      	ldr	r3, [pc, #436]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002550:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002552:	f003 0304 	and.w	r3, r3, #4
 8002556:	61bb      	str	r3, [r7, #24]
 8002558:	69bb      	ldr	r3, [r7, #24]
    PA4     ------> I2S1_WS
    PA5     ------> I2S1_CK
    PA7     ------> I2S1_SD
    PC4     ------> I2S1_MCK
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7;
 800255a:	23b0      	movs	r3, #176	; 0xb0
 800255c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800255e:	2302      	movs	r3, #2
 8002560:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002562:	2300      	movs	r3, #0
 8002564:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002566:	2300      	movs	r3, #0
 8002568:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800256a:	2305      	movs	r3, #5
 800256c:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800256e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002572:	4619      	mov	r1, r3
 8002574:	4864      	ldr	r0, [pc, #400]	; (8002708 <HAL_I2S_MspInit+0x218>)
 8002576:	f000 fe9f 	bl	80032b8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_4;
 800257a:	2310      	movs	r3, #16
 800257c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800257e:	2302      	movs	r3, #2
 8002580:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002582:	2300      	movs	r3, #0
 8002584:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002586:	2300      	movs	r3, #0
 8002588:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800258a:	2305      	movs	r3, #5
 800258c:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800258e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002592:	4619      	mov	r1, r3
 8002594:	485d      	ldr	r0, [pc, #372]	; (800270c <HAL_I2S_MspInit+0x21c>)
 8002596:	f000 fe8f 	bl	80032b8 <HAL_GPIO_Init>

    /* I2S1 DMA Init */
    /* SPI1_TX Init */
    hdma_spi1_tx.Instance = DMA2_Stream3;
 800259a:	4b5d      	ldr	r3, [pc, #372]	; (8002710 <HAL_I2S_MspInit+0x220>)
 800259c:	4a5d      	ldr	r2, [pc, #372]	; (8002714 <HAL_I2S_MspInit+0x224>)
 800259e:	601a      	str	r2, [r3, #0]
    hdma_spi1_tx.Init.Channel = DMA_CHANNEL_3;
 80025a0:	4b5b      	ldr	r3, [pc, #364]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025a2:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 80025a6:	605a      	str	r2, [r3, #4]
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80025a8:	4b59      	ldr	r3, [pc, #356]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025aa:	2240      	movs	r2, #64	; 0x40
 80025ac:	609a      	str	r2, [r3, #8]
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80025ae:	4b58      	ldr	r3, [pc, #352]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025b0:	2200      	movs	r2, #0
 80025b2:	60da      	str	r2, [r3, #12]
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 80025b4:	4b56      	ldr	r3, [pc, #344]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025b6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80025ba:	611a      	str	r2, [r3, #16]
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80025bc:	4b54      	ldr	r3, [pc, #336]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025be:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80025c2:	615a      	str	r2, [r3, #20]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80025c4:	4b52      	ldr	r3, [pc, #328]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025c6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80025ca:	619a      	str	r2, [r3, #24]
    hdma_spi1_tx.Init.Mode = DMA_CIRCULAR;
 80025cc:	4b50      	ldr	r3, [pc, #320]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025ce:	f44f 7280 	mov.w	r2, #256	; 0x100
 80025d2:	61da      	str	r2, [r3, #28]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 80025d4:	4b4e      	ldr	r3, [pc, #312]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025d6:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80025da:	621a      	str	r2, [r3, #32]
    hdma_spi1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80025dc:	4b4c      	ldr	r3, [pc, #304]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025de:	2200      	movs	r2, #0
 80025e0:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 80025e2:	484b      	ldr	r0, [pc, #300]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025e4:	f000 faf0 	bl	8002bc8 <HAL_DMA_Init>
 80025e8:	4603      	mov	r3, r0
 80025ea:	2b00      	cmp	r3, #0
 80025ec:	d001      	beq.n	80025f2 <HAL_I2S_MspInit+0x102>
    {
      Error_Handler();
 80025ee:	f7ff fef7 	bl	80023e0 <Error_Handler>
    }

    __HAL_LINKDMA(hi2s,hdmatx,hdma_spi1_tx);
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	4a46      	ldr	r2, [pc, #280]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025f6:	631a      	str	r2, [r3, #48]	; 0x30
 80025f8:	4a45      	ldr	r2, [pc, #276]	; (8002710 <HAL_I2S_MspInit+0x220>)
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	6393      	str	r3, [r2, #56]	; 0x38
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 80025fe:	e07a      	b.n	80026f6 <HAL_I2S_MspInit+0x206>
  else if(hi2s->Instance==SPI2)
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	4a44      	ldr	r2, [pc, #272]	; (8002718 <HAL_I2S_MspInit+0x228>)
 8002606:	4293      	cmp	r3, r2
 8002608:	d175      	bne.n	80026f6 <HAL_I2S_MspInit+0x206>
    __HAL_RCC_SPI2_CLK_ENABLE();
 800260a:	4b3e      	ldr	r3, [pc, #248]	; (8002704 <HAL_I2S_MspInit+0x214>)
 800260c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800260e:	4a3d      	ldr	r2, [pc, #244]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002610:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002614:	6413      	str	r3, [r2, #64]	; 0x40
 8002616:	4b3b      	ldr	r3, [pc, #236]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002618:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800261a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800261e:	617b      	str	r3, [r7, #20]
 8002620:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002622:	4b38      	ldr	r3, [pc, #224]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002624:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002626:	4a37      	ldr	r2, [pc, #220]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002628:	f043 0304 	orr.w	r3, r3, #4
 800262c:	6313      	str	r3, [r2, #48]	; 0x30
 800262e:	4b35      	ldr	r3, [pc, #212]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002630:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002632:	f003 0304 	and.w	r3, r3, #4
 8002636:	613b      	str	r3, [r7, #16]
 8002638:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800263a:	4b32      	ldr	r3, [pc, #200]	; (8002704 <HAL_I2S_MspInit+0x214>)
 800263c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800263e:	4a31      	ldr	r2, [pc, #196]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002640:	f043 0302 	orr.w	r3, r3, #2
 8002644:	6313      	str	r3, [r2, #48]	; 0x30
 8002646:	4b2f      	ldr	r3, [pc, #188]	; (8002704 <HAL_I2S_MspInit+0x214>)
 8002648:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800264a:	f003 0302 	and.w	r3, r3, #2
 800264e:	60fb      	str	r3, [r7, #12]
 8002650:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8002652:	2302      	movs	r3, #2
 8002654:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002656:	2302      	movs	r3, #2
 8002658:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800265a:	2300      	movs	r3, #0
 800265c:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800265e:	2300      	movs	r3, #0
 8002660:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002662:	2305      	movs	r3, #5
 8002664:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002666:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800266a:	4619      	mov	r1, r3
 800266c:	4827      	ldr	r0, [pc, #156]	; (800270c <HAL_I2S_MspInit+0x21c>)
 800266e:	f000 fe23 	bl	80032b8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8002672:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8002676:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002678:	2302      	movs	r3, #2
 800267a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800267c:	2300      	movs	r3, #0
 800267e:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002680:	2300      	movs	r3, #0
 8002682:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002684:	2305      	movs	r3, #5
 8002686:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002688:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800268c:	4619      	mov	r1, r3
 800268e:	4823      	ldr	r0, [pc, #140]	; (800271c <HAL_I2S_MspInit+0x22c>)
 8002690:	f000 fe12 	bl	80032b8 <HAL_GPIO_Init>
    hdma_spi2_rx.Instance = DMA1_Stream3;
 8002694:	4b22      	ldr	r3, [pc, #136]	; (8002720 <HAL_I2S_MspInit+0x230>)
 8002696:	4a23      	ldr	r2, [pc, #140]	; (8002724 <HAL_I2S_MspInit+0x234>)
 8002698:	601a      	str	r2, [r3, #0]
    hdma_spi2_rx.Init.Channel = DMA_CHANNEL_0;
 800269a:	4b21      	ldr	r3, [pc, #132]	; (8002720 <HAL_I2S_MspInit+0x230>)
 800269c:	2200      	movs	r2, #0
 800269e:	605a      	str	r2, [r3, #4]
    hdma_spi2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80026a0:	4b1f      	ldr	r3, [pc, #124]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026a2:	2200      	movs	r2, #0
 80026a4:	609a      	str	r2, [r3, #8]
    hdma_spi2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80026a6:	4b1e      	ldr	r3, [pc, #120]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026a8:	2200      	movs	r2, #0
 80026aa:	60da      	str	r2, [r3, #12]
    hdma_spi2_rx.Init.MemInc = DMA_MINC_ENABLE;
 80026ac:	4b1c      	ldr	r3, [pc, #112]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026ae:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80026b2:	611a      	str	r2, [r3, #16]
    hdma_spi2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80026b4:	4b1a      	ldr	r3, [pc, #104]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026b6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80026ba:	615a      	str	r2, [r3, #20]
    hdma_spi2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80026bc:	4b18      	ldr	r3, [pc, #96]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026be:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80026c2:	619a      	str	r2, [r3, #24]
    hdma_spi2_rx.Init.Mode = DMA_CIRCULAR;
 80026c4:	4b16      	ldr	r3, [pc, #88]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026c6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80026ca:	61da      	str	r2, [r3, #28]
    hdma_spi2_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 80026cc:	4b14      	ldr	r3, [pc, #80]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026ce:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80026d2:	621a      	str	r2, [r3, #32]
    hdma_spi2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80026d4:	4b12      	ldr	r3, [pc, #72]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026d6:	2200      	movs	r2, #0
 80026d8:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi2_rx) != HAL_OK)
 80026da:	4811      	ldr	r0, [pc, #68]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026dc:	f000 fa74 	bl	8002bc8 <HAL_DMA_Init>
 80026e0:	4603      	mov	r3, r0
 80026e2:	2b00      	cmp	r3, #0
 80026e4:	d001      	beq.n	80026ea <HAL_I2S_MspInit+0x1fa>
      Error_Handler();
 80026e6:	f7ff fe7b 	bl	80023e0 <Error_Handler>
    __HAL_LINKDMA(hi2s,hdmarx,hdma_spi2_rx);
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	4a0c      	ldr	r2, [pc, #48]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026ee:	635a      	str	r2, [r3, #52]	; 0x34
 80026f0:	4a0b      	ldr	r2, [pc, #44]	; (8002720 <HAL_I2S_MspInit+0x230>)
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	6393      	str	r3, [r2, #56]	; 0x38
}
 80026f6:	bf00      	nop
 80026f8:	3738      	adds	r7, #56	; 0x38
 80026fa:	46bd      	mov	sp, r7
 80026fc:	bd80      	pop	{r7, pc}
 80026fe:	bf00      	nop
 8002700:	40013000 	.word	0x40013000
 8002704:	40023800 	.word	0x40023800
 8002708:	40020000 	.word	0x40020000
 800270c:	40020800 	.word	0x40020800
 8002710:	200005c4 	.word	0x200005c4
 8002714:	40026458 	.word	0x40026458
 8002718:	40003800 	.word	0x40003800
 800271c:	40020400 	.word	0x40020400
 8002720:	20000624 	.word	0x20000624
 8002724:	40026058 	.word	0x40026058

08002728 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002728:	b480      	push	{r7}
 800272a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800272c:	e7fe      	b.n	800272c <NMI_Handler+0x4>

0800272e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800272e:	b480      	push	{r7}
 8002730:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002732:	e7fe      	b.n	8002732 <HardFault_Handler+0x4>

08002734 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002734:	b480      	push	{r7}
 8002736:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002738:	e7fe      	b.n	8002738 <MemManage_Handler+0x4>

0800273a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800273a:	b480      	push	{r7}
 800273c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800273e:	e7fe      	b.n	800273e <BusFault_Handler+0x4>

08002740 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002740:	b480      	push	{r7}
 8002742:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002744:	e7fe      	b.n	8002744 <UsageFault_Handler+0x4>

08002746 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002746:	b480      	push	{r7}
 8002748:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800274a:	bf00      	nop
 800274c:	46bd      	mov	sp, r7
 800274e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002752:	4770      	bx	lr

08002754 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002754:	b480      	push	{r7}
 8002756:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002758:	bf00      	nop
 800275a:	46bd      	mov	sp, r7
 800275c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002760:	4770      	bx	lr

08002762 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002762:	b480      	push	{r7}
 8002764:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002766:	bf00      	nop
 8002768:	46bd      	mov	sp, r7
 800276a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800276e:	4770      	bx	lr

08002770 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002770:	b580      	push	{r7, lr}
 8002772:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002774:	f000 f8d2 	bl	800291c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002778:	bf00      	nop
 800277a:	bd80      	pop	{r7, pc}

0800277c <DMA1_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA1 stream3 global interrupt.
  */
void DMA1_Stream3_IRQHandler(void)
{
 800277c:	b580      	push	{r7, lr}
 800277e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */

  /* USER CODE END DMA1_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_rx);
 8002780:	4802      	ldr	r0, [pc, #8]	; (800278c <DMA1_Stream3_IRQHandler+0x10>)
 8002782:	f000 fb2f 	bl	8002de4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */

  /* USER CODE END DMA1_Stream3_IRQn 1 */
}
 8002786:	bf00      	nop
 8002788:	bd80      	pop	{r7, pc}
 800278a:	bf00      	nop
 800278c:	20000624 	.word	0x20000624

08002790 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8002790:	b580      	push	{r7, lr}
 8002792:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(RotEncoderInA_Pin);
 8002794:	2040      	movs	r0, #64	; 0x40
 8002796:	f000 ff5d 	bl	8003654 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(RotEncoderInB_Pin);
 800279a:	2080      	movs	r0, #128	; 0x80
 800279c:	f000 ff5a 	bl	8003654 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(RotEncoderButton_Pin);
 80027a0:	f44f 7080 	mov.w	r0, #256	; 0x100
 80027a4:	f000 ff56 	bl	8003654 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 80027a8:	bf00      	nop
 80027aa:	bd80      	pop	{r7, pc}

080027ac <DMA2_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA2 stream3 global interrupt.
  */
void DMA2_Stream3_IRQHandler(void)
{
 80027ac:	b580      	push	{r7, lr}
 80027ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */

  /* USER CODE END DMA2_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_tx);
 80027b0:	4802      	ldr	r0, [pc, #8]	; (80027bc <DMA2_Stream3_IRQHandler+0x10>)
 80027b2:	f000 fb17 	bl	8002de4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */

  /* USER CODE END DMA2_Stream3_IRQn 1 */
}
 80027b6:	bf00      	nop
 80027b8:	bd80      	pop	{r7, pc}
 80027ba:	bf00      	nop
 80027bc:	200005c4 	.word	0x200005c4

080027c0 <_sbrk>:
 80027c0:	b580      	push	{r7, lr}
 80027c2:	b086      	sub	sp, #24
 80027c4:	af00      	add	r7, sp, #0
 80027c6:	6078      	str	r0, [r7, #4]
 80027c8:	4a14      	ldr	r2, [pc, #80]	; (800281c <_sbrk+0x5c>)
 80027ca:	4b15      	ldr	r3, [pc, #84]	; (8002820 <_sbrk+0x60>)
 80027cc:	1ad3      	subs	r3, r2, r3
 80027ce:	617b      	str	r3, [r7, #20]
 80027d0:	697b      	ldr	r3, [r7, #20]
 80027d2:	613b      	str	r3, [r7, #16]
 80027d4:	4b13      	ldr	r3, [pc, #76]	; (8002824 <_sbrk+0x64>)
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	2b00      	cmp	r3, #0
 80027da:	d102      	bne.n	80027e2 <_sbrk+0x22>
 80027dc:	4b11      	ldr	r3, [pc, #68]	; (8002824 <_sbrk+0x64>)
 80027de:	4a12      	ldr	r2, [pc, #72]	; (8002828 <_sbrk+0x68>)
 80027e0:	601a      	str	r2, [r3, #0]
 80027e2:	4b10      	ldr	r3, [pc, #64]	; (8002824 <_sbrk+0x64>)
 80027e4:	681a      	ldr	r2, [r3, #0]
 80027e6:	687b      	ldr	r3, [r7, #4]
 80027e8:	4413      	add	r3, r2
 80027ea:	693a      	ldr	r2, [r7, #16]
 80027ec:	429a      	cmp	r2, r3
 80027ee:	d207      	bcs.n	8002800 <_sbrk+0x40>
 80027f0:	f002 ffdc 	bl	80057ac <__errno>
 80027f4:	4603      	mov	r3, r0
 80027f6:	220c      	movs	r2, #12
 80027f8:	601a      	str	r2, [r3, #0]
 80027fa:	f04f 33ff 	mov.w	r3, #4294967295
 80027fe:	e009      	b.n	8002814 <_sbrk+0x54>
 8002800:	4b08      	ldr	r3, [pc, #32]	; (8002824 <_sbrk+0x64>)
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	60fb      	str	r3, [r7, #12]
 8002806:	4b07      	ldr	r3, [pc, #28]	; (8002824 <_sbrk+0x64>)
 8002808:	681a      	ldr	r2, [r3, #0]
 800280a:	687b      	ldr	r3, [r7, #4]
 800280c:	4413      	add	r3, r2
 800280e:	4a05      	ldr	r2, [pc, #20]	; (8002824 <_sbrk+0x64>)
 8002810:	6013      	str	r3, [r2, #0]
 8002812:	68fb      	ldr	r3, [r7, #12]
 8002814:	4618      	mov	r0, r3
 8002816:	3718      	adds	r7, #24
 8002818:	46bd      	mov	sp, r7
 800281a:	bd80      	pop	{r7, pc}
 800281c:	20040000 	.word	0x20040000
 8002820:	00000400 	.word	0x00000400
 8002824:	20000688 	.word	0x20000688
 8002828:	200007d8 	.word	0x200007d8

0800282c <SystemInit>:
 800282c:	b480      	push	{r7}
 800282e:	af00      	add	r7, sp, #0
 8002830:	4b06      	ldr	r3, [pc, #24]	; (800284c <SystemInit+0x20>)
 8002832:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002836:	4a05      	ldr	r2, [pc, #20]	; (800284c <SystemInit+0x20>)
 8002838:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800283c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002840:	bf00      	nop
 8002842:	46bd      	mov	sp, r7
 8002844:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002848:	4770      	bx	lr
 800284a:	bf00      	nop
 800284c:	e000ed00 	.word	0xe000ed00

08002850 <Reset_Handler>:
 8002850:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002888 <LoopFillZerobss+0x12>
 8002854:	480d      	ldr	r0, [pc, #52]	; (800288c <LoopFillZerobss+0x16>)
 8002856:	490e      	ldr	r1, [pc, #56]	; (8002890 <LoopFillZerobss+0x1a>)
 8002858:	4a0e      	ldr	r2, [pc, #56]	; (8002894 <LoopFillZerobss+0x1e>)
 800285a:	2300      	movs	r3, #0
 800285c:	e002      	b.n	8002864 <LoopCopyDataInit>

0800285e <CopyDataInit>:
 800285e:	58d4      	ldr	r4, [r2, r3]
 8002860:	50c4      	str	r4, [r0, r3]
 8002862:	3304      	adds	r3, #4

08002864 <LoopCopyDataInit>:
 8002864:	18c4      	adds	r4, r0, r3
 8002866:	428c      	cmp	r4, r1
 8002868:	d3f9      	bcc.n	800285e <CopyDataInit>
 800286a:	4a0b      	ldr	r2, [pc, #44]	; (8002898 <LoopFillZerobss+0x22>)
 800286c:	4c0b      	ldr	r4, [pc, #44]	; (800289c <LoopFillZerobss+0x26>)
 800286e:	2300      	movs	r3, #0
 8002870:	e001      	b.n	8002876 <LoopFillZerobss>

08002872 <FillZerobss>:
 8002872:	6013      	str	r3, [r2, #0]
 8002874:	3204      	adds	r2, #4

08002876 <LoopFillZerobss>:
 8002876:	42a2      	cmp	r2, r4
 8002878:	d3fb      	bcc.n	8002872 <FillZerobss>
 800287a:	f7ff ffd7 	bl	800282c <SystemInit>
 800287e:	f002 ff9b 	bl	80057b8 <__libc_init_array>
 8002882:	f7ff fb5d 	bl	8001f40 <main>
 8002886:	4770      	bx	lr
 8002888:	20040000 	.word	0x20040000
 800288c:	20000000 	.word	0x20000000
 8002890:	200000c0 	.word	0x200000c0
 8002894:	08007578 	.word	0x08007578
 8002898:	200000c0 	.word	0x200000c0
 800289c:	200007d8 	.word	0x200007d8

080028a0 <ADC_IRQHandler>:
 80028a0:	e7fe      	b.n	80028a0 <ADC_IRQHandler>

080028a2 <HAL_Init>:
 80028a2:	b580      	push	{r7, lr}
 80028a4:	af00      	add	r7, sp, #0
 80028a6:	2003      	movs	r0, #3
 80028a8:	f000 f94c 	bl	8002b44 <HAL_NVIC_SetPriorityGrouping>
 80028ac:	200f      	movs	r0, #15
 80028ae:	f000 f805 	bl	80028bc <HAL_InitTick>
 80028b2:	f7ff fd9b 	bl	80023ec <HAL_MspInit>
 80028b6:	2300      	movs	r3, #0
 80028b8:	4618      	mov	r0, r3
 80028ba:	bd80      	pop	{r7, pc}

080028bc <HAL_InitTick>:
 80028bc:	b580      	push	{r7, lr}
 80028be:	b082      	sub	sp, #8
 80028c0:	af00      	add	r7, sp, #0
 80028c2:	6078      	str	r0, [r7, #4]
 80028c4:	4b12      	ldr	r3, [pc, #72]	; (8002910 <HAL_InitTick+0x54>)
 80028c6:	681a      	ldr	r2, [r3, #0]
 80028c8:	4b12      	ldr	r3, [pc, #72]	; (8002914 <HAL_InitTick+0x58>)
 80028ca:	781b      	ldrb	r3, [r3, #0]
 80028cc:	4619      	mov	r1, r3
 80028ce:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80028d2:	fbb3 f3f1 	udiv	r3, r3, r1
 80028d6:	fbb2 f3f3 	udiv	r3, r2, r3
 80028da:	4618      	mov	r0, r3
 80028dc:	f000 f967 	bl	8002bae <HAL_SYSTICK_Config>
 80028e0:	4603      	mov	r3, r0
 80028e2:	2b00      	cmp	r3, #0
 80028e4:	d001      	beq.n	80028ea <HAL_InitTick+0x2e>
 80028e6:	2301      	movs	r3, #1
 80028e8:	e00e      	b.n	8002908 <HAL_InitTick+0x4c>
 80028ea:	687b      	ldr	r3, [r7, #4]
 80028ec:	2b0f      	cmp	r3, #15
 80028ee:	d80a      	bhi.n	8002906 <HAL_InitTick+0x4a>
 80028f0:	2200      	movs	r2, #0
 80028f2:	6879      	ldr	r1, [r7, #4]
 80028f4:	f04f 30ff 	mov.w	r0, #4294967295
 80028f8:	f000 f92f 	bl	8002b5a <HAL_NVIC_SetPriority>
 80028fc:	4a06      	ldr	r2, [pc, #24]	; (8002918 <HAL_InitTick+0x5c>)
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	6013      	str	r3, [r2, #0]
 8002902:	2300      	movs	r3, #0
 8002904:	e000      	b.n	8002908 <HAL_InitTick+0x4c>
 8002906:	2301      	movs	r3, #1
 8002908:	4618      	mov	r0, r3
 800290a:	3708      	adds	r7, #8
 800290c:	46bd      	mov	sp, r7
 800290e:	bd80      	pop	{r7, pc}
 8002910:	20000054 	.word	0x20000054
 8002914:	2000005c 	.word	0x2000005c
 8002918:	20000058 	.word	0x20000058

0800291c <HAL_IncTick>:
 800291c:	b480      	push	{r7}
 800291e:	af00      	add	r7, sp, #0
 8002920:	4b06      	ldr	r3, [pc, #24]	; (800293c <HAL_IncTick+0x20>)
 8002922:	781b      	ldrb	r3, [r3, #0]
 8002924:	461a      	mov	r2, r3
 8002926:	4b06      	ldr	r3, [pc, #24]	; (8002940 <HAL_IncTick+0x24>)
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	4413      	add	r3, r2
 800292c:	4a04      	ldr	r2, [pc, #16]	; (8002940 <HAL_IncTick+0x24>)
 800292e:	6013      	str	r3, [r2, #0]
 8002930:	bf00      	nop
 8002932:	46bd      	mov	sp, r7
 8002934:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002938:	4770      	bx	lr
 800293a:	bf00      	nop
 800293c:	2000005c 	.word	0x2000005c
 8002940:	2000068c 	.word	0x2000068c

08002944 <HAL_GetTick>:
 8002944:	b480      	push	{r7}
 8002946:	af00      	add	r7, sp, #0
 8002948:	4b03      	ldr	r3, [pc, #12]	; (8002958 <HAL_GetTick+0x14>)
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	4618      	mov	r0, r3
 800294e:	46bd      	mov	sp, r7
 8002950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002954:	4770      	bx	lr
 8002956:	bf00      	nop
 8002958:	2000068c 	.word	0x2000068c

0800295c <HAL_Delay>:
 800295c:	b580      	push	{r7, lr}
 800295e:	b084      	sub	sp, #16
 8002960:	af00      	add	r7, sp, #0
 8002962:	6078      	str	r0, [r7, #4]
 8002964:	f7ff ffee 	bl	8002944 <HAL_GetTick>
 8002968:	60b8      	str	r0, [r7, #8]
 800296a:	687b      	ldr	r3, [r7, #4]
 800296c:	60fb      	str	r3, [r7, #12]
 800296e:	68fb      	ldr	r3, [r7, #12]
 8002970:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002974:	d005      	beq.n	8002982 <HAL_Delay+0x26>
 8002976:	4b0a      	ldr	r3, [pc, #40]	; (80029a0 <HAL_Delay+0x44>)
 8002978:	781b      	ldrb	r3, [r3, #0]
 800297a:	461a      	mov	r2, r3
 800297c:	68fb      	ldr	r3, [r7, #12]
 800297e:	4413      	add	r3, r2
 8002980:	60fb      	str	r3, [r7, #12]
 8002982:	bf00      	nop
 8002984:	f7ff ffde 	bl	8002944 <HAL_GetTick>
 8002988:	4602      	mov	r2, r0
 800298a:	68bb      	ldr	r3, [r7, #8]
 800298c:	1ad3      	subs	r3, r2, r3
 800298e:	68fa      	ldr	r2, [r7, #12]
 8002990:	429a      	cmp	r2, r3
 8002992:	d8f7      	bhi.n	8002984 <HAL_Delay+0x28>
 8002994:	bf00      	nop
 8002996:	bf00      	nop
 8002998:	3710      	adds	r7, #16
 800299a:	46bd      	mov	sp, r7
 800299c:	bd80      	pop	{r7, pc}
 800299e:	bf00      	nop
 80029a0:	2000005c 	.word	0x2000005c

080029a4 <__NVIC_SetPriorityGrouping>:
 80029a4:	b480      	push	{r7}
 80029a6:	b085      	sub	sp, #20
 80029a8:	af00      	add	r7, sp, #0
 80029aa:	6078      	str	r0, [r7, #4]
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	f003 0307 	and.w	r3, r3, #7
 80029b2:	60fb      	str	r3, [r7, #12]
 80029b4:	4b0b      	ldr	r3, [pc, #44]	; (80029e4 <__NVIC_SetPriorityGrouping+0x40>)
 80029b6:	68db      	ldr	r3, [r3, #12]
 80029b8:	60bb      	str	r3, [r7, #8]
 80029ba:	68ba      	ldr	r2, [r7, #8]
 80029bc:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80029c0:	4013      	ands	r3, r2
 80029c2:	60bb      	str	r3, [r7, #8]
 80029c4:	68fb      	ldr	r3, [r7, #12]
 80029c6:	021a      	lsls	r2, r3, #8
 80029c8:	68bb      	ldr	r3, [r7, #8]
 80029ca:	431a      	orrs	r2, r3
 80029cc:	4b06      	ldr	r3, [pc, #24]	; (80029e8 <__NVIC_SetPriorityGrouping+0x44>)
 80029ce:	4313      	orrs	r3, r2
 80029d0:	60bb      	str	r3, [r7, #8]
 80029d2:	4a04      	ldr	r2, [pc, #16]	; (80029e4 <__NVIC_SetPriorityGrouping+0x40>)
 80029d4:	68bb      	ldr	r3, [r7, #8]
 80029d6:	60d3      	str	r3, [r2, #12]
 80029d8:	bf00      	nop
 80029da:	3714      	adds	r7, #20
 80029dc:	46bd      	mov	sp, r7
 80029de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029e2:	4770      	bx	lr
 80029e4:	e000ed00 	.word	0xe000ed00
 80029e8:	05fa0000 	.word	0x05fa0000

080029ec <__NVIC_GetPriorityGrouping>:
 80029ec:	b480      	push	{r7}
 80029ee:	af00      	add	r7, sp, #0
 80029f0:	4b04      	ldr	r3, [pc, #16]	; (8002a04 <__NVIC_GetPriorityGrouping+0x18>)
 80029f2:	68db      	ldr	r3, [r3, #12]
 80029f4:	0a1b      	lsrs	r3, r3, #8
 80029f6:	f003 0307 	and.w	r3, r3, #7
 80029fa:	4618      	mov	r0, r3
 80029fc:	46bd      	mov	sp, r7
 80029fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a02:	4770      	bx	lr
 8002a04:	e000ed00 	.word	0xe000ed00

08002a08 <__NVIC_EnableIRQ>:
 8002a08:	b480      	push	{r7}
 8002a0a:	b083      	sub	sp, #12
 8002a0c:	af00      	add	r7, sp, #0
 8002a0e:	4603      	mov	r3, r0
 8002a10:	71fb      	strb	r3, [r7, #7]
 8002a12:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a16:	2b00      	cmp	r3, #0
 8002a18:	db0b      	blt.n	8002a32 <__NVIC_EnableIRQ+0x2a>
 8002a1a:	79fb      	ldrb	r3, [r7, #7]
 8002a1c:	f003 021f 	and.w	r2, r3, #31
 8002a20:	4907      	ldr	r1, [pc, #28]	; (8002a40 <__NVIC_EnableIRQ+0x38>)
 8002a22:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a26:	095b      	lsrs	r3, r3, #5
 8002a28:	2001      	movs	r0, #1
 8002a2a:	fa00 f202 	lsl.w	r2, r0, r2
 8002a2e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002a32:	bf00      	nop
 8002a34:	370c      	adds	r7, #12
 8002a36:	46bd      	mov	sp, r7
 8002a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a3c:	4770      	bx	lr
 8002a3e:	bf00      	nop
 8002a40:	e000e100 	.word	0xe000e100

08002a44 <__NVIC_SetPriority>:
 8002a44:	b480      	push	{r7}
 8002a46:	b083      	sub	sp, #12
 8002a48:	af00      	add	r7, sp, #0
 8002a4a:	4603      	mov	r3, r0
 8002a4c:	6039      	str	r1, [r7, #0]
 8002a4e:	71fb      	strb	r3, [r7, #7]
 8002a50:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a54:	2b00      	cmp	r3, #0
 8002a56:	db0a      	blt.n	8002a6e <__NVIC_SetPriority+0x2a>
 8002a58:	683b      	ldr	r3, [r7, #0]
 8002a5a:	b2da      	uxtb	r2, r3
 8002a5c:	490c      	ldr	r1, [pc, #48]	; (8002a90 <__NVIC_SetPriority+0x4c>)
 8002a5e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a62:	0112      	lsls	r2, r2, #4
 8002a64:	b2d2      	uxtb	r2, r2
 8002a66:	440b      	add	r3, r1
 8002a68:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002a6c:	e00a      	b.n	8002a84 <__NVIC_SetPriority+0x40>
 8002a6e:	683b      	ldr	r3, [r7, #0]
 8002a70:	b2da      	uxtb	r2, r3
 8002a72:	4908      	ldr	r1, [pc, #32]	; (8002a94 <__NVIC_SetPriority+0x50>)
 8002a74:	79fb      	ldrb	r3, [r7, #7]
 8002a76:	f003 030f 	and.w	r3, r3, #15
 8002a7a:	3b04      	subs	r3, #4
 8002a7c:	0112      	lsls	r2, r2, #4
 8002a7e:	b2d2      	uxtb	r2, r2
 8002a80:	440b      	add	r3, r1
 8002a82:	761a      	strb	r2, [r3, #24]
 8002a84:	bf00      	nop
 8002a86:	370c      	adds	r7, #12
 8002a88:	46bd      	mov	sp, r7
 8002a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a8e:	4770      	bx	lr
 8002a90:	e000e100 	.word	0xe000e100
 8002a94:	e000ed00 	.word	0xe000ed00

08002a98 <NVIC_EncodePriority>:
 8002a98:	b480      	push	{r7}
 8002a9a:	b089      	sub	sp, #36	; 0x24
 8002a9c:	af00      	add	r7, sp, #0
 8002a9e:	60f8      	str	r0, [r7, #12]
 8002aa0:	60b9      	str	r1, [r7, #8]
 8002aa2:	607a      	str	r2, [r7, #4]
 8002aa4:	68fb      	ldr	r3, [r7, #12]
 8002aa6:	f003 0307 	and.w	r3, r3, #7
 8002aaa:	61fb      	str	r3, [r7, #28]
 8002aac:	69fb      	ldr	r3, [r7, #28]
 8002aae:	f1c3 0307 	rsb	r3, r3, #7
 8002ab2:	2b04      	cmp	r3, #4
 8002ab4:	bf28      	it	cs
 8002ab6:	2304      	movcs	r3, #4
 8002ab8:	61bb      	str	r3, [r7, #24]
 8002aba:	69fb      	ldr	r3, [r7, #28]
 8002abc:	3304      	adds	r3, #4
 8002abe:	2b06      	cmp	r3, #6
 8002ac0:	d902      	bls.n	8002ac8 <NVIC_EncodePriority+0x30>
 8002ac2:	69fb      	ldr	r3, [r7, #28]
 8002ac4:	3b03      	subs	r3, #3
 8002ac6:	e000      	b.n	8002aca <NVIC_EncodePriority+0x32>
 8002ac8:	2300      	movs	r3, #0
 8002aca:	617b      	str	r3, [r7, #20]
 8002acc:	f04f 32ff 	mov.w	r2, #4294967295
 8002ad0:	69bb      	ldr	r3, [r7, #24]
 8002ad2:	fa02 f303 	lsl.w	r3, r2, r3
 8002ad6:	43da      	mvns	r2, r3
 8002ad8:	68bb      	ldr	r3, [r7, #8]
 8002ada:	401a      	ands	r2, r3
 8002adc:	697b      	ldr	r3, [r7, #20]
 8002ade:	409a      	lsls	r2, r3
 8002ae0:	f04f 31ff 	mov.w	r1, #4294967295
 8002ae4:	697b      	ldr	r3, [r7, #20]
 8002ae6:	fa01 f303 	lsl.w	r3, r1, r3
 8002aea:	43d9      	mvns	r1, r3
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	400b      	ands	r3, r1
 8002af0:	4313      	orrs	r3, r2
 8002af2:	4618      	mov	r0, r3
 8002af4:	3724      	adds	r7, #36	; 0x24
 8002af6:	46bd      	mov	sp, r7
 8002af8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002afc:	4770      	bx	lr
	...

08002b00 <SysTick_Config>:
 8002b00:	b580      	push	{r7, lr}
 8002b02:	b082      	sub	sp, #8
 8002b04:	af00      	add	r7, sp, #0
 8002b06:	6078      	str	r0, [r7, #4]
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	3b01      	subs	r3, #1
 8002b0c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002b10:	d301      	bcc.n	8002b16 <SysTick_Config+0x16>
 8002b12:	2301      	movs	r3, #1
 8002b14:	e00f      	b.n	8002b36 <SysTick_Config+0x36>
 8002b16:	4a0a      	ldr	r2, [pc, #40]	; (8002b40 <SysTick_Config+0x40>)
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	3b01      	subs	r3, #1
 8002b1c:	6053      	str	r3, [r2, #4]
 8002b1e:	210f      	movs	r1, #15
 8002b20:	f04f 30ff 	mov.w	r0, #4294967295
 8002b24:	f7ff ff8e 	bl	8002a44 <__NVIC_SetPriority>
 8002b28:	4b05      	ldr	r3, [pc, #20]	; (8002b40 <SysTick_Config+0x40>)
 8002b2a:	2200      	movs	r2, #0
 8002b2c:	609a      	str	r2, [r3, #8]
 8002b2e:	4b04      	ldr	r3, [pc, #16]	; (8002b40 <SysTick_Config+0x40>)
 8002b30:	2207      	movs	r2, #7
 8002b32:	601a      	str	r2, [r3, #0]
 8002b34:	2300      	movs	r3, #0
 8002b36:	4618      	mov	r0, r3
 8002b38:	3708      	adds	r7, #8
 8002b3a:	46bd      	mov	sp, r7
 8002b3c:	bd80      	pop	{r7, pc}
 8002b3e:	bf00      	nop
 8002b40:	e000e010 	.word	0xe000e010

08002b44 <HAL_NVIC_SetPriorityGrouping>:
 8002b44:	b580      	push	{r7, lr}
 8002b46:	b082      	sub	sp, #8
 8002b48:	af00      	add	r7, sp, #0
 8002b4a:	6078      	str	r0, [r7, #4]
 8002b4c:	6878      	ldr	r0, [r7, #4]
 8002b4e:	f7ff ff29 	bl	80029a4 <__NVIC_SetPriorityGrouping>
 8002b52:	bf00      	nop
 8002b54:	3708      	adds	r7, #8
 8002b56:	46bd      	mov	sp, r7
 8002b58:	bd80      	pop	{r7, pc}

08002b5a <HAL_NVIC_SetPriority>:
 8002b5a:	b580      	push	{r7, lr}
 8002b5c:	b086      	sub	sp, #24
 8002b5e:	af00      	add	r7, sp, #0
 8002b60:	4603      	mov	r3, r0
 8002b62:	60b9      	str	r1, [r7, #8]
 8002b64:	607a      	str	r2, [r7, #4]
 8002b66:	73fb      	strb	r3, [r7, #15]
 8002b68:	2300      	movs	r3, #0
 8002b6a:	617b      	str	r3, [r7, #20]
 8002b6c:	f7ff ff3e 	bl	80029ec <__NVIC_GetPriorityGrouping>
 8002b70:	6178      	str	r0, [r7, #20]
 8002b72:	687a      	ldr	r2, [r7, #4]
 8002b74:	68b9      	ldr	r1, [r7, #8]
 8002b76:	6978      	ldr	r0, [r7, #20]
 8002b78:	f7ff ff8e 	bl	8002a98 <NVIC_EncodePriority>
 8002b7c:	4602      	mov	r2, r0
 8002b7e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002b82:	4611      	mov	r1, r2
 8002b84:	4618      	mov	r0, r3
 8002b86:	f7ff ff5d 	bl	8002a44 <__NVIC_SetPriority>
 8002b8a:	bf00      	nop
 8002b8c:	3718      	adds	r7, #24
 8002b8e:	46bd      	mov	sp, r7
 8002b90:	bd80      	pop	{r7, pc}

08002b92 <HAL_NVIC_EnableIRQ>:
 8002b92:	b580      	push	{r7, lr}
 8002b94:	b082      	sub	sp, #8
 8002b96:	af00      	add	r7, sp, #0
 8002b98:	4603      	mov	r3, r0
 8002b9a:	71fb      	strb	r3, [r7, #7]
 8002b9c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ba0:	4618      	mov	r0, r3
 8002ba2:	f7ff ff31 	bl	8002a08 <__NVIC_EnableIRQ>
 8002ba6:	bf00      	nop
 8002ba8:	3708      	adds	r7, #8
 8002baa:	46bd      	mov	sp, r7
 8002bac:	bd80      	pop	{r7, pc}

08002bae <HAL_SYSTICK_Config>:
 8002bae:	b580      	push	{r7, lr}
 8002bb0:	b082      	sub	sp, #8
 8002bb2:	af00      	add	r7, sp, #0
 8002bb4:	6078      	str	r0, [r7, #4]
 8002bb6:	6878      	ldr	r0, [r7, #4]
 8002bb8:	f7ff ffa2 	bl	8002b00 <SysTick_Config>
 8002bbc:	4603      	mov	r3, r0
 8002bbe:	4618      	mov	r0, r3
 8002bc0:	3708      	adds	r7, #8
 8002bc2:	46bd      	mov	sp, r7
 8002bc4:	bd80      	pop	{r7, pc}
	...

08002bc8 <HAL_DMA_Init>:
 8002bc8:	b580      	push	{r7, lr}
 8002bca:	b086      	sub	sp, #24
 8002bcc:	af00      	add	r7, sp, #0
 8002bce:	6078      	str	r0, [r7, #4]
 8002bd0:	2300      	movs	r3, #0
 8002bd2:	617b      	str	r3, [r7, #20]
 8002bd4:	f7ff feb6 	bl	8002944 <HAL_GetTick>
 8002bd8:	6138      	str	r0, [r7, #16]
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	2b00      	cmp	r3, #0
 8002bde:	d101      	bne.n	8002be4 <HAL_DMA_Init+0x1c>
 8002be0:	2301      	movs	r3, #1
 8002be2:	e099      	b.n	8002d18 <HAL_DMA_Init+0x150>
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	2202      	movs	r2, #2
 8002be8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	2200      	movs	r2, #0
 8002bf0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	681a      	ldr	r2, [r3, #0]
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	f022 0201 	bic.w	r2, r2, #1
 8002c02:	601a      	str	r2, [r3, #0]
 8002c04:	e00f      	b.n	8002c26 <HAL_DMA_Init+0x5e>
 8002c06:	f7ff fe9d 	bl	8002944 <HAL_GetTick>
 8002c0a:	4602      	mov	r2, r0
 8002c0c:	693b      	ldr	r3, [r7, #16]
 8002c0e:	1ad3      	subs	r3, r2, r3
 8002c10:	2b05      	cmp	r3, #5
 8002c12:	d908      	bls.n	8002c26 <HAL_DMA_Init+0x5e>
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	2220      	movs	r2, #32
 8002c18:	655a      	str	r2, [r3, #84]	; 0x54
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	2203      	movs	r2, #3
 8002c1e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002c22:	2303      	movs	r3, #3
 8002c24:	e078      	b.n	8002d18 <HAL_DMA_Init+0x150>
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	681b      	ldr	r3, [r3, #0]
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	f003 0301 	and.w	r3, r3, #1
 8002c30:	2b00      	cmp	r3, #0
 8002c32:	d1e8      	bne.n	8002c06 <HAL_DMA_Init+0x3e>
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	681b      	ldr	r3, [r3, #0]
 8002c3a:	617b      	str	r3, [r7, #20]
 8002c3c:	697a      	ldr	r2, [r7, #20]
 8002c3e:	4b38      	ldr	r3, [pc, #224]	; (8002d20 <HAL_DMA_Init+0x158>)
 8002c40:	4013      	ands	r3, r2
 8002c42:	617b      	str	r3, [r7, #20]
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	685a      	ldr	r2, [r3, #4]
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	689b      	ldr	r3, [r3, #8]
 8002c4c:	431a      	orrs	r2, r3
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	68db      	ldr	r3, [r3, #12]
 8002c52:	431a      	orrs	r2, r3
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	691b      	ldr	r3, [r3, #16]
 8002c58:	431a      	orrs	r2, r3
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	695b      	ldr	r3, [r3, #20]
 8002c5e:	431a      	orrs	r2, r3
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	699b      	ldr	r3, [r3, #24]
 8002c64:	431a      	orrs	r2, r3
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	69db      	ldr	r3, [r3, #28]
 8002c6a:	431a      	orrs	r2, r3
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	6a1b      	ldr	r3, [r3, #32]
 8002c70:	4313      	orrs	r3, r2
 8002c72:	697a      	ldr	r2, [r7, #20]
 8002c74:	4313      	orrs	r3, r2
 8002c76:	617b      	str	r3, [r7, #20]
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c7c:	2b04      	cmp	r3, #4
 8002c7e:	d107      	bne.n	8002c90 <HAL_DMA_Init+0xc8>
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c88:	4313      	orrs	r3, r2
 8002c8a:	697a      	ldr	r2, [r7, #20]
 8002c8c:	4313      	orrs	r3, r2
 8002c8e:	617b      	str	r3, [r7, #20]
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	697a      	ldr	r2, [r7, #20]
 8002c96:	601a      	str	r2, [r3, #0]
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	695b      	ldr	r3, [r3, #20]
 8002c9e:	617b      	str	r3, [r7, #20]
 8002ca0:	697b      	ldr	r3, [r7, #20]
 8002ca2:	f023 0307 	bic.w	r3, r3, #7
 8002ca6:	617b      	str	r3, [r7, #20]
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cac:	697a      	ldr	r2, [r7, #20]
 8002cae:	4313      	orrs	r3, r2
 8002cb0:	617b      	str	r3, [r7, #20]
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cb6:	2b04      	cmp	r3, #4
 8002cb8:	d117      	bne.n	8002cea <HAL_DMA_Init+0x122>
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002cbe:	697a      	ldr	r2, [r7, #20]
 8002cc0:	4313      	orrs	r3, r2
 8002cc2:	617b      	str	r3, [r7, #20]
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cc8:	2b00      	cmp	r3, #0
 8002cca:	d00e      	beq.n	8002cea <HAL_DMA_Init+0x122>
 8002ccc:	6878      	ldr	r0, [r7, #4]
 8002cce:	f000 fa77 	bl	80031c0 <DMA_CheckFifoParam>
 8002cd2:	4603      	mov	r3, r0
 8002cd4:	2b00      	cmp	r3, #0
 8002cd6:	d008      	beq.n	8002cea <HAL_DMA_Init+0x122>
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	2240      	movs	r2, #64	; 0x40
 8002cdc:	655a      	str	r2, [r3, #84]	; 0x54
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	2201      	movs	r2, #1
 8002ce2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002ce6:	2301      	movs	r3, #1
 8002ce8:	e016      	b.n	8002d18 <HAL_DMA_Init+0x150>
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	697a      	ldr	r2, [r7, #20]
 8002cf0:	615a      	str	r2, [r3, #20]
 8002cf2:	6878      	ldr	r0, [r7, #4]
 8002cf4:	f000 fa2e 	bl	8003154 <DMA_CalcBaseAndBitshift>
 8002cf8:	4603      	mov	r3, r0
 8002cfa:	60fb      	str	r3, [r7, #12]
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002d00:	223f      	movs	r2, #63	; 0x3f
 8002d02:	409a      	lsls	r2, r3
 8002d04:	68fb      	ldr	r3, [r7, #12]
 8002d06:	609a      	str	r2, [r3, #8]
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	2200      	movs	r2, #0
 8002d0c:	655a      	str	r2, [r3, #84]	; 0x54
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	2201      	movs	r2, #1
 8002d12:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002d16:	2300      	movs	r3, #0
 8002d18:	4618      	mov	r0, r3
 8002d1a:	3718      	adds	r7, #24
 8002d1c:	46bd      	mov	sp, r7
 8002d1e:	bd80      	pop	{r7, pc}
 8002d20:	e010803f 	.word	0xe010803f

08002d24 <HAL_DMA_Start_IT>:
 8002d24:	b580      	push	{r7, lr}
 8002d26:	b086      	sub	sp, #24
 8002d28:	af00      	add	r7, sp, #0
 8002d2a:	60f8      	str	r0, [r7, #12]
 8002d2c:	60b9      	str	r1, [r7, #8]
 8002d2e:	607a      	str	r2, [r7, #4]
 8002d30:	603b      	str	r3, [r7, #0]
 8002d32:	2300      	movs	r3, #0
 8002d34:	75fb      	strb	r3, [r7, #23]
 8002d36:	68fb      	ldr	r3, [r7, #12]
 8002d38:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002d3a:	613b      	str	r3, [r7, #16]
 8002d3c:	68fb      	ldr	r3, [r7, #12]
 8002d3e:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8002d42:	2b01      	cmp	r3, #1
 8002d44:	d101      	bne.n	8002d4a <HAL_DMA_Start_IT+0x26>
 8002d46:	2302      	movs	r3, #2
 8002d48:	e048      	b.n	8002ddc <HAL_DMA_Start_IT+0xb8>
 8002d4a:	68fb      	ldr	r3, [r7, #12]
 8002d4c:	2201      	movs	r2, #1
 8002d4e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002d52:	68fb      	ldr	r3, [r7, #12]
 8002d54:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002d58:	b2db      	uxtb	r3, r3
 8002d5a:	2b01      	cmp	r3, #1
 8002d5c:	d137      	bne.n	8002dce <HAL_DMA_Start_IT+0xaa>
 8002d5e:	68fb      	ldr	r3, [r7, #12]
 8002d60:	2202      	movs	r2, #2
 8002d62:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002d66:	68fb      	ldr	r3, [r7, #12]
 8002d68:	2200      	movs	r2, #0
 8002d6a:	655a      	str	r2, [r3, #84]	; 0x54
 8002d6c:	683b      	ldr	r3, [r7, #0]
 8002d6e:	687a      	ldr	r2, [r7, #4]
 8002d70:	68b9      	ldr	r1, [r7, #8]
 8002d72:	68f8      	ldr	r0, [r7, #12]
 8002d74:	f000 f9c0 	bl	80030f8 <DMA_SetConfig>
 8002d78:	68fb      	ldr	r3, [r7, #12]
 8002d7a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002d7c:	223f      	movs	r2, #63	; 0x3f
 8002d7e:	409a      	lsls	r2, r3
 8002d80:	693b      	ldr	r3, [r7, #16]
 8002d82:	609a      	str	r2, [r3, #8]
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	681a      	ldr	r2, [r3, #0]
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	f042 0216 	orr.w	r2, r2, #22
 8002d92:	601a      	str	r2, [r3, #0]
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	695a      	ldr	r2, [r3, #20]
 8002d9a:	68fb      	ldr	r3, [r7, #12]
 8002d9c:	681b      	ldr	r3, [r3, #0]
 8002d9e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002da2:	615a      	str	r2, [r3, #20]
 8002da4:	68fb      	ldr	r3, [r7, #12]
 8002da6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002da8:	2b00      	cmp	r3, #0
 8002daa:	d007      	beq.n	8002dbc <HAL_DMA_Start_IT+0x98>
 8002dac:	68fb      	ldr	r3, [r7, #12]
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	681a      	ldr	r2, [r3, #0]
 8002db2:	68fb      	ldr	r3, [r7, #12]
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	f042 0208 	orr.w	r2, r2, #8
 8002dba:	601a      	str	r2, [r3, #0]
 8002dbc:	68fb      	ldr	r3, [r7, #12]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	681a      	ldr	r2, [r3, #0]
 8002dc2:	68fb      	ldr	r3, [r7, #12]
 8002dc4:	681b      	ldr	r3, [r3, #0]
 8002dc6:	f042 0201 	orr.w	r2, r2, #1
 8002dca:	601a      	str	r2, [r3, #0]
 8002dcc:	e005      	b.n	8002dda <HAL_DMA_Start_IT+0xb6>
 8002dce:	68fb      	ldr	r3, [r7, #12]
 8002dd0:	2200      	movs	r2, #0
 8002dd2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002dd6:	2302      	movs	r3, #2
 8002dd8:	75fb      	strb	r3, [r7, #23]
 8002dda:	7dfb      	ldrb	r3, [r7, #23]
 8002ddc:	4618      	mov	r0, r3
 8002dde:	3718      	adds	r7, #24
 8002de0:	46bd      	mov	sp, r7
 8002de2:	bd80      	pop	{r7, pc}

08002de4 <HAL_DMA_IRQHandler>:
 8002de4:	b580      	push	{r7, lr}
 8002de6:	b086      	sub	sp, #24
 8002de8:	af00      	add	r7, sp, #0
 8002dea:	6078      	str	r0, [r7, #4]
 8002dec:	2300      	movs	r3, #0
 8002dee:	60bb      	str	r3, [r7, #8]
 8002df0:	4b8e      	ldr	r3, [pc, #568]	; (800302c <HAL_DMA_IRQHandler+0x248>)
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	4a8e      	ldr	r2, [pc, #568]	; (8003030 <HAL_DMA_IRQHandler+0x24c>)
 8002df6:	fba2 2303 	umull	r2, r3, r2, r3
 8002dfa:	0a9b      	lsrs	r3, r3, #10
 8002dfc:	617b      	str	r3, [r7, #20]
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002e02:	613b      	str	r3, [r7, #16]
 8002e04:	693b      	ldr	r3, [r7, #16]
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	60fb      	str	r3, [r7, #12]
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002e0e:	2208      	movs	r2, #8
 8002e10:	409a      	lsls	r2, r3
 8002e12:	68fb      	ldr	r3, [r7, #12]
 8002e14:	4013      	ands	r3, r2
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	d01a      	beq.n	8002e50 <HAL_DMA_IRQHandler+0x6c>
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	f003 0304 	and.w	r3, r3, #4
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	d013      	beq.n	8002e50 <HAL_DMA_IRQHandler+0x6c>
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	681a      	ldr	r2, [r3, #0]
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	f022 0204 	bic.w	r2, r2, #4
 8002e36:	601a      	str	r2, [r3, #0]
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002e3c:	2208      	movs	r2, #8
 8002e3e:	409a      	lsls	r2, r3
 8002e40:	693b      	ldr	r3, [r7, #16]
 8002e42:	609a      	str	r2, [r3, #8]
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002e48:	f043 0201 	orr.w	r2, r3, #1
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	655a      	str	r2, [r3, #84]	; 0x54
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002e54:	2201      	movs	r2, #1
 8002e56:	409a      	lsls	r2, r3
 8002e58:	68fb      	ldr	r3, [r7, #12]
 8002e5a:	4013      	ands	r3, r2
 8002e5c:	2b00      	cmp	r3, #0
 8002e5e:	d012      	beq.n	8002e86 <HAL_DMA_IRQHandler+0xa2>
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	695b      	ldr	r3, [r3, #20]
 8002e66:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	d00b      	beq.n	8002e86 <HAL_DMA_IRQHandler+0xa2>
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002e72:	2201      	movs	r2, #1
 8002e74:	409a      	lsls	r2, r3
 8002e76:	693b      	ldr	r3, [r7, #16]
 8002e78:	609a      	str	r2, [r3, #8]
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002e7e:	f043 0202 	orr.w	r2, r3, #2
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	655a      	str	r2, [r3, #84]	; 0x54
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002e8a:	2204      	movs	r2, #4
 8002e8c:	409a      	lsls	r2, r3
 8002e8e:	68fb      	ldr	r3, [r7, #12]
 8002e90:	4013      	ands	r3, r2
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	d012      	beq.n	8002ebc <HAL_DMA_IRQHandler+0xd8>
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	f003 0302 	and.w	r3, r3, #2
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	d00b      	beq.n	8002ebc <HAL_DMA_IRQHandler+0xd8>
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002ea8:	2204      	movs	r2, #4
 8002eaa:	409a      	lsls	r2, r3
 8002eac:	693b      	ldr	r3, [r7, #16]
 8002eae:	609a      	str	r2, [r3, #8]
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002eb4:	f043 0204 	orr.w	r2, r3, #4
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	655a      	str	r2, [r3, #84]	; 0x54
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002ec0:	2210      	movs	r2, #16
 8002ec2:	409a      	lsls	r2, r3
 8002ec4:	68fb      	ldr	r3, [r7, #12]
 8002ec6:	4013      	ands	r3, r2
 8002ec8:	2b00      	cmp	r3, #0
 8002eca:	d043      	beq.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	f003 0308 	and.w	r3, r3, #8
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d03c      	beq.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002ede:	2210      	movs	r2, #16
 8002ee0:	409a      	lsls	r2, r3
 8002ee2:	693b      	ldr	r3, [r7, #16]
 8002ee4:	609a      	str	r2, [r3, #8]
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	681b      	ldr	r3, [r3, #0]
 8002eec:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002ef0:	2b00      	cmp	r3, #0
 8002ef2:	d018      	beq.n	8002f26 <HAL_DMA_IRQHandler+0x142>
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002efe:	2b00      	cmp	r3, #0
 8002f00:	d108      	bne.n	8002f14 <HAL_DMA_IRQHandler+0x130>
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	d024      	beq.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f0e:	6878      	ldr	r0, [r7, #4]
 8002f10:	4798      	blx	r3
 8002f12:	e01f      	b.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002f18:	2b00      	cmp	r3, #0
 8002f1a:	d01b      	beq.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002f20:	6878      	ldr	r0, [r7, #4]
 8002f22:	4798      	blx	r3
 8002f24:	e016      	b.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002f30:	2b00      	cmp	r3, #0
 8002f32:	d107      	bne.n	8002f44 <HAL_DMA_IRQHandler+0x160>
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	681b      	ldr	r3, [r3, #0]
 8002f38:	681a      	ldr	r2, [r3, #0]
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	f022 0208 	bic.w	r2, r2, #8
 8002f42:	601a      	str	r2, [r3, #0]
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f48:	2b00      	cmp	r3, #0
 8002f4a:	d003      	beq.n	8002f54 <HAL_DMA_IRQHandler+0x170>
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f50:	6878      	ldr	r0, [r7, #4]
 8002f52:	4798      	blx	r3
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002f58:	2220      	movs	r2, #32
 8002f5a:	409a      	lsls	r2, r3
 8002f5c:	68fb      	ldr	r3, [r7, #12]
 8002f5e:	4013      	ands	r3, r2
 8002f60:	2b00      	cmp	r3, #0
 8002f62:	f000 808f 	beq.w	8003084 <HAL_DMA_IRQHandler+0x2a0>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	f003 0310 	and.w	r3, r3, #16
 8002f70:	2b00      	cmp	r3, #0
 8002f72:	f000 8087 	beq.w	8003084 <HAL_DMA_IRQHandler+0x2a0>
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002f7a:	2220      	movs	r2, #32
 8002f7c:	409a      	lsls	r2, r3
 8002f7e:	693b      	ldr	r3, [r7, #16]
 8002f80:	609a      	str	r2, [r3, #8]
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002f88:	b2db      	uxtb	r3, r3
 8002f8a:	2b05      	cmp	r3, #5
 8002f8c:	d136      	bne.n	8002ffc <HAL_DMA_IRQHandler+0x218>
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	681a      	ldr	r2, [r3, #0]
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	681b      	ldr	r3, [r3, #0]
 8002f98:	f022 0216 	bic.w	r2, r2, #22
 8002f9c:	601a      	str	r2, [r3, #0]
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	681b      	ldr	r3, [r3, #0]
 8002fa2:	695a      	ldr	r2, [r3, #20]
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002fac:	615a      	str	r2, [r3, #20]
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d103      	bne.n	8002fbe <HAL_DMA_IRQHandler+0x1da>
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d007      	beq.n	8002fce <HAL_DMA_IRQHandler+0x1ea>
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	681b      	ldr	r3, [r3, #0]
 8002fc2:	681a      	ldr	r2, [r3, #0]
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	f022 0208 	bic.w	r2, r2, #8
 8002fcc:	601a      	str	r2, [r3, #0]
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002fd2:	223f      	movs	r2, #63	; 0x3f
 8002fd4:	409a      	lsls	r2, r3
 8002fd6:	693b      	ldr	r3, [r7, #16]
 8002fd8:	609a      	str	r2, [r3, #8]
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	2201      	movs	r2, #1
 8002fde:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	2200      	movs	r2, #0
 8002fe6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002fee:	2b00      	cmp	r3, #0
 8002ff0:	d07e      	beq.n	80030f0 <HAL_DMA_IRQHandler+0x30c>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002ff6:	6878      	ldr	r0, [r7, #4]
 8002ff8:	4798      	blx	r3
 8002ffa:	e079      	b.n	80030f0 <HAL_DMA_IRQHandler+0x30c>
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	681b      	ldr	r3, [r3, #0]
 8003002:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003006:	2b00      	cmp	r3, #0
 8003008:	d01d      	beq.n	8003046 <HAL_DMA_IRQHandler+0x262>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	681b      	ldr	r3, [r3, #0]
 8003010:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003014:	2b00      	cmp	r3, #0
 8003016:	d10d      	bne.n	8003034 <HAL_DMA_IRQHandler+0x250>
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800301c:	2b00      	cmp	r3, #0
 800301e:	d031      	beq.n	8003084 <HAL_DMA_IRQHandler+0x2a0>
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003024:	6878      	ldr	r0, [r7, #4]
 8003026:	4798      	blx	r3
 8003028:	e02c      	b.n	8003084 <HAL_DMA_IRQHandler+0x2a0>
 800302a:	bf00      	nop
 800302c:	20000054 	.word	0x20000054
 8003030:	1b4e81b5 	.word	0x1b4e81b5
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003038:	2b00      	cmp	r3, #0
 800303a:	d023      	beq.n	8003084 <HAL_DMA_IRQHandler+0x2a0>
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003040:	6878      	ldr	r0, [r7, #4]
 8003042:	4798      	blx	r3
 8003044:	e01e      	b.n	8003084 <HAL_DMA_IRQHandler+0x2a0>
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003050:	2b00      	cmp	r3, #0
 8003052:	d10f      	bne.n	8003074 <HAL_DMA_IRQHandler+0x290>
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	681a      	ldr	r2, [r3, #0]
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	f022 0210 	bic.w	r2, r2, #16
 8003062:	601a      	str	r2, [r3, #0]
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	2201      	movs	r2, #1
 8003068:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	2200      	movs	r2, #0
 8003070:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003078:	2b00      	cmp	r3, #0
 800307a:	d003      	beq.n	8003084 <HAL_DMA_IRQHandler+0x2a0>
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003080:	6878      	ldr	r0, [r7, #4]
 8003082:	4798      	blx	r3
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003088:	2b00      	cmp	r3, #0
 800308a:	d032      	beq.n	80030f2 <HAL_DMA_IRQHandler+0x30e>
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003090:	f003 0301 	and.w	r3, r3, #1
 8003094:	2b00      	cmp	r3, #0
 8003096:	d022      	beq.n	80030de <HAL_DMA_IRQHandler+0x2fa>
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	2205      	movs	r2, #5
 800309c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	681b      	ldr	r3, [r3, #0]
 80030a4:	681a      	ldr	r2, [r3, #0]
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	f022 0201 	bic.w	r2, r2, #1
 80030ae:	601a      	str	r2, [r3, #0]
 80030b0:	68bb      	ldr	r3, [r7, #8]
 80030b2:	3301      	adds	r3, #1
 80030b4:	60bb      	str	r3, [r7, #8]
 80030b6:	697a      	ldr	r2, [r7, #20]
 80030b8:	429a      	cmp	r2, r3
 80030ba:	d307      	bcc.n	80030cc <HAL_DMA_IRQHandler+0x2e8>
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	681b      	ldr	r3, [r3, #0]
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	f003 0301 	and.w	r3, r3, #1
 80030c6:	2b00      	cmp	r3, #0
 80030c8:	d1f2      	bne.n	80030b0 <HAL_DMA_IRQHandler+0x2cc>
 80030ca:	e000      	b.n	80030ce <HAL_DMA_IRQHandler+0x2ea>
 80030cc:	bf00      	nop
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	2201      	movs	r2, #1
 80030d2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	2200      	movs	r2, #0
 80030da:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80030e2:	2b00      	cmp	r3, #0
 80030e4:	d005      	beq.n	80030f2 <HAL_DMA_IRQHandler+0x30e>
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80030ea:	6878      	ldr	r0, [r7, #4]
 80030ec:	4798      	blx	r3
 80030ee:	e000      	b.n	80030f2 <HAL_DMA_IRQHandler+0x30e>
 80030f0:	bf00      	nop
 80030f2:	3718      	adds	r7, #24
 80030f4:	46bd      	mov	sp, r7
 80030f6:	bd80      	pop	{r7, pc}

080030f8 <DMA_SetConfig>:
 80030f8:	b480      	push	{r7}
 80030fa:	b085      	sub	sp, #20
 80030fc:	af00      	add	r7, sp, #0
 80030fe:	60f8      	str	r0, [r7, #12]
 8003100:	60b9      	str	r1, [r7, #8]
 8003102:	607a      	str	r2, [r7, #4]
 8003104:	603b      	str	r3, [r7, #0]
 8003106:	68fb      	ldr	r3, [r7, #12]
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	681a      	ldr	r2, [r3, #0]
 800310c:	68fb      	ldr	r3, [r7, #12]
 800310e:	681b      	ldr	r3, [r3, #0]
 8003110:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003114:	601a      	str	r2, [r3, #0]
 8003116:	68fb      	ldr	r3, [r7, #12]
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	683a      	ldr	r2, [r7, #0]
 800311c:	605a      	str	r2, [r3, #4]
 800311e:	68fb      	ldr	r3, [r7, #12]
 8003120:	689b      	ldr	r3, [r3, #8]
 8003122:	2b40      	cmp	r3, #64	; 0x40
 8003124:	d108      	bne.n	8003138 <DMA_SetConfig+0x40>
 8003126:	68fb      	ldr	r3, [r7, #12]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	687a      	ldr	r2, [r7, #4]
 800312c:	609a      	str	r2, [r3, #8]
 800312e:	68fb      	ldr	r3, [r7, #12]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	68ba      	ldr	r2, [r7, #8]
 8003134:	60da      	str	r2, [r3, #12]
 8003136:	e007      	b.n	8003148 <DMA_SetConfig+0x50>
 8003138:	68fb      	ldr	r3, [r7, #12]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	68ba      	ldr	r2, [r7, #8]
 800313e:	609a      	str	r2, [r3, #8]
 8003140:	68fb      	ldr	r3, [r7, #12]
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	687a      	ldr	r2, [r7, #4]
 8003146:	60da      	str	r2, [r3, #12]
 8003148:	bf00      	nop
 800314a:	3714      	adds	r7, #20
 800314c:	46bd      	mov	sp, r7
 800314e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003152:	4770      	bx	lr

08003154 <DMA_CalcBaseAndBitshift>:
 8003154:	b480      	push	{r7}
 8003156:	b085      	sub	sp, #20
 8003158:	af00      	add	r7, sp, #0
 800315a:	6078      	str	r0, [r7, #4]
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	b2db      	uxtb	r3, r3
 8003162:	3b10      	subs	r3, #16
 8003164:	4a13      	ldr	r2, [pc, #76]	; (80031b4 <DMA_CalcBaseAndBitshift+0x60>)
 8003166:	fba2 2303 	umull	r2, r3, r2, r3
 800316a:	091b      	lsrs	r3, r3, #4
 800316c:	60fb      	str	r3, [r7, #12]
 800316e:	4a12      	ldr	r2, [pc, #72]	; (80031b8 <DMA_CalcBaseAndBitshift+0x64>)
 8003170:	68fb      	ldr	r3, [r7, #12]
 8003172:	4413      	add	r3, r2
 8003174:	781b      	ldrb	r3, [r3, #0]
 8003176:	461a      	mov	r2, r3
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	65da      	str	r2, [r3, #92]	; 0x5c
 800317c:	68fb      	ldr	r3, [r7, #12]
 800317e:	2b03      	cmp	r3, #3
 8003180:	d908      	bls.n	8003194 <DMA_CalcBaseAndBitshift+0x40>
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	681b      	ldr	r3, [r3, #0]
 8003186:	461a      	mov	r2, r3
 8003188:	4b0c      	ldr	r3, [pc, #48]	; (80031bc <DMA_CalcBaseAndBitshift+0x68>)
 800318a:	4013      	ands	r3, r2
 800318c:	1d1a      	adds	r2, r3, #4
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	659a      	str	r2, [r3, #88]	; 0x58
 8003192:	e006      	b.n	80031a2 <DMA_CalcBaseAndBitshift+0x4e>
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	461a      	mov	r2, r3
 800319a:	4b08      	ldr	r3, [pc, #32]	; (80031bc <DMA_CalcBaseAndBitshift+0x68>)
 800319c:	4013      	ands	r3, r2
 800319e:	687a      	ldr	r2, [r7, #4]
 80031a0:	6593      	str	r3, [r2, #88]	; 0x58
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80031a6:	4618      	mov	r0, r3
 80031a8:	3714      	adds	r7, #20
 80031aa:	46bd      	mov	sp, r7
 80031ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031b0:	4770      	bx	lr
 80031b2:	bf00      	nop
 80031b4:	aaaaaaab 	.word	0xaaaaaaab
 80031b8:	08007160 	.word	0x08007160
 80031bc:	fffffc00 	.word	0xfffffc00

080031c0 <DMA_CheckFifoParam>:
 80031c0:	b480      	push	{r7}
 80031c2:	b085      	sub	sp, #20
 80031c4:	af00      	add	r7, sp, #0
 80031c6:	6078      	str	r0, [r7, #4]
 80031c8:	2300      	movs	r3, #0
 80031ca:	73fb      	strb	r3, [r7, #15]
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80031d0:	60bb      	str	r3, [r7, #8]
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	699b      	ldr	r3, [r3, #24]
 80031d6:	2b00      	cmp	r3, #0
 80031d8:	d11f      	bne.n	800321a <DMA_CheckFifoParam+0x5a>
 80031da:	68bb      	ldr	r3, [r7, #8]
 80031dc:	2b03      	cmp	r3, #3
 80031de:	d856      	bhi.n	800328e <DMA_CheckFifoParam+0xce>
 80031e0:	a201      	add	r2, pc, #4	; (adr r2, 80031e8 <DMA_CheckFifoParam+0x28>)
 80031e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031e6:	bf00      	nop
 80031e8:	080031f9 	.word	0x080031f9
 80031ec:	0800320b 	.word	0x0800320b
 80031f0:	080031f9 	.word	0x080031f9
 80031f4:	0800328f 	.word	0x0800328f
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80031fc:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003200:	2b00      	cmp	r3, #0
 8003202:	d046      	beq.n	8003292 <DMA_CheckFifoParam+0xd2>
 8003204:	2301      	movs	r3, #1
 8003206:	73fb      	strb	r3, [r7, #15]
 8003208:	e043      	b.n	8003292 <DMA_CheckFifoParam+0xd2>
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800320e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003212:	d140      	bne.n	8003296 <DMA_CheckFifoParam+0xd6>
 8003214:	2301      	movs	r3, #1
 8003216:	73fb      	strb	r3, [r7, #15]
 8003218:	e03d      	b.n	8003296 <DMA_CheckFifoParam+0xd6>
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	699b      	ldr	r3, [r3, #24]
 800321e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003222:	d121      	bne.n	8003268 <DMA_CheckFifoParam+0xa8>
 8003224:	68bb      	ldr	r3, [r7, #8]
 8003226:	2b03      	cmp	r3, #3
 8003228:	d837      	bhi.n	800329a <DMA_CheckFifoParam+0xda>
 800322a:	a201      	add	r2, pc, #4	; (adr r2, 8003230 <DMA_CheckFifoParam+0x70>)
 800322c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003230:	08003241 	.word	0x08003241
 8003234:	08003247 	.word	0x08003247
 8003238:	08003241 	.word	0x08003241
 800323c:	08003259 	.word	0x08003259
 8003240:	2301      	movs	r3, #1
 8003242:	73fb      	strb	r3, [r7, #15]
 8003244:	e030      	b.n	80032a8 <DMA_CheckFifoParam+0xe8>
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800324a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800324e:	2b00      	cmp	r3, #0
 8003250:	d025      	beq.n	800329e <DMA_CheckFifoParam+0xde>
 8003252:	2301      	movs	r3, #1
 8003254:	73fb      	strb	r3, [r7, #15]
 8003256:	e022      	b.n	800329e <DMA_CheckFifoParam+0xde>
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800325c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8003260:	d11f      	bne.n	80032a2 <DMA_CheckFifoParam+0xe2>
 8003262:	2301      	movs	r3, #1
 8003264:	73fb      	strb	r3, [r7, #15]
 8003266:	e01c      	b.n	80032a2 <DMA_CheckFifoParam+0xe2>
 8003268:	68bb      	ldr	r3, [r7, #8]
 800326a:	2b02      	cmp	r3, #2
 800326c:	d903      	bls.n	8003276 <DMA_CheckFifoParam+0xb6>
 800326e:	68bb      	ldr	r3, [r7, #8]
 8003270:	2b03      	cmp	r3, #3
 8003272:	d003      	beq.n	800327c <DMA_CheckFifoParam+0xbc>
 8003274:	e018      	b.n	80032a8 <DMA_CheckFifoParam+0xe8>
 8003276:	2301      	movs	r3, #1
 8003278:	73fb      	strb	r3, [r7, #15]
 800327a:	e015      	b.n	80032a8 <DMA_CheckFifoParam+0xe8>
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003280:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003284:	2b00      	cmp	r3, #0
 8003286:	d00e      	beq.n	80032a6 <DMA_CheckFifoParam+0xe6>
 8003288:	2301      	movs	r3, #1
 800328a:	73fb      	strb	r3, [r7, #15]
 800328c:	e00b      	b.n	80032a6 <DMA_CheckFifoParam+0xe6>
 800328e:	bf00      	nop
 8003290:	e00a      	b.n	80032a8 <DMA_CheckFifoParam+0xe8>
 8003292:	bf00      	nop
 8003294:	e008      	b.n	80032a8 <DMA_CheckFifoParam+0xe8>
 8003296:	bf00      	nop
 8003298:	e006      	b.n	80032a8 <DMA_CheckFifoParam+0xe8>
 800329a:	bf00      	nop
 800329c:	e004      	b.n	80032a8 <DMA_CheckFifoParam+0xe8>
 800329e:	bf00      	nop
 80032a0:	e002      	b.n	80032a8 <DMA_CheckFifoParam+0xe8>
 80032a2:	bf00      	nop
 80032a4:	e000      	b.n	80032a8 <DMA_CheckFifoParam+0xe8>
 80032a6:	bf00      	nop
 80032a8:	7bfb      	ldrb	r3, [r7, #15]
 80032aa:	4618      	mov	r0, r3
 80032ac:	3714      	adds	r7, #20
 80032ae:	46bd      	mov	sp, r7
 80032b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032b4:	4770      	bx	lr
 80032b6:	bf00      	nop

080032b8 <HAL_GPIO_Init>:
 80032b8:	b480      	push	{r7}
 80032ba:	b089      	sub	sp, #36	; 0x24
 80032bc:	af00      	add	r7, sp, #0
 80032be:	6078      	str	r0, [r7, #4]
 80032c0:	6039      	str	r1, [r7, #0]
 80032c2:	2300      	movs	r3, #0
 80032c4:	61fb      	str	r3, [r7, #28]
 80032c6:	2300      	movs	r3, #0
 80032c8:	617b      	str	r3, [r7, #20]
 80032ca:	2300      	movs	r3, #0
 80032cc:	613b      	str	r3, [r7, #16]
 80032ce:	2300      	movs	r3, #0
 80032d0:	61bb      	str	r3, [r7, #24]
 80032d2:	2300      	movs	r3, #0
 80032d4:	61fb      	str	r3, [r7, #28]
 80032d6:	e169      	b.n	80035ac <HAL_GPIO_Init+0x2f4>
 80032d8:	2201      	movs	r2, #1
 80032da:	69fb      	ldr	r3, [r7, #28]
 80032dc:	fa02 f303 	lsl.w	r3, r2, r3
 80032e0:	617b      	str	r3, [r7, #20]
 80032e2:	683b      	ldr	r3, [r7, #0]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	697a      	ldr	r2, [r7, #20]
 80032e8:	4013      	ands	r3, r2
 80032ea:	613b      	str	r3, [r7, #16]
 80032ec:	693a      	ldr	r2, [r7, #16]
 80032ee:	697b      	ldr	r3, [r7, #20]
 80032f0:	429a      	cmp	r2, r3
 80032f2:	f040 8158 	bne.w	80035a6 <HAL_GPIO_Init+0x2ee>
 80032f6:	683b      	ldr	r3, [r7, #0]
 80032f8:	685b      	ldr	r3, [r3, #4]
 80032fa:	f003 0303 	and.w	r3, r3, #3
 80032fe:	2b01      	cmp	r3, #1
 8003300:	d005      	beq.n	800330e <HAL_GPIO_Init+0x56>
 8003302:	683b      	ldr	r3, [r7, #0]
 8003304:	685b      	ldr	r3, [r3, #4]
 8003306:	f003 0303 	and.w	r3, r3, #3
 800330a:	2b02      	cmp	r3, #2
 800330c:	d130      	bne.n	8003370 <HAL_GPIO_Init+0xb8>
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	689b      	ldr	r3, [r3, #8]
 8003312:	61bb      	str	r3, [r7, #24]
 8003314:	69fb      	ldr	r3, [r7, #28]
 8003316:	005b      	lsls	r3, r3, #1
 8003318:	2203      	movs	r2, #3
 800331a:	fa02 f303 	lsl.w	r3, r2, r3
 800331e:	43db      	mvns	r3, r3
 8003320:	69ba      	ldr	r2, [r7, #24]
 8003322:	4013      	ands	r3, r2
 8003324:	61bb      	str	r3, [r7, #24]
 8003326:	683b      	ldr	r3, [r7, #0]
 8003328:	68da      	ldr	r2, [r3, #12]
 800332a:	69fb      	ldr	r3, [r7, #28]
 800332c:	005b      	lsls	r3, r3, #1
 800332e:	fa02 f303 	lsl.w	r3, r2, r3
 8003332:	69ba      	ldr	r2, [r7, #24]
 8003334:	4313      	orrs	r3, r2
 8003336:	61bb      	str	r3, [r7, #24]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	69ba      	ldr	r2, [r7, #24]
 800333c:	609a      	str	r2, [r3, #8]
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	685b      	ldr	r3, [r3, #4]
 8003342:	61bb      	str	r3, [r7, #24]
 8003344:	2201      	movs	r2, #1
 8003346:	69fb      	ldr	r3, [r7, #28]
 8003348:	fa02 f303 	lsl.w	r3, r2, r3
 800334c:	43db      	mvns	r3, r3
 800334e:	69ba      	ldr	r2, [r7, #24]
 8003350:	4013      	ands	r3, r2
 8003352:	61bb      	str	r3, [r7, #24]
 8003354:	683b      	ldr	r3, [r7, #0]
 8003356:	685b      	ldr	r3, [r3, #4]
 8003358:	091b      	lsrs	r3, r3, #4
 800335a:	f003 0201 	and.w	r2, r3, #1
 800335e:	69fb      	ldr	r3, [r7, #28]
 8003360:	fa02 f303 	lsl.w	r3, r2, r3
 8003364:	69ba      	ldr	r2, [r7, #24]
 8003366:	4313      	orrs	r3, r2
 8003368:	61bb      	str	r3, [r7, #24]
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	69ba      	ldr	r2, [r7, #24]
 800336e:	605a      	str	r2, [r3, #4]
 8003370:	683b      	ldr	r3, [r7, #0]
 8003372:	685b      	ldr	r3, [r3, #4]
 8003374:	f003 0303 	and.w	r3, r3, #3
 8003378:	2b03      	cmp	r3, #3
 800337a:	d017      	beq.n	80033ac <HAL_GPIO_Init+0xf4>
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	68db      	ldr	r3, [r3, #12]
 8003380:	61bb      	str	r3, [r7, #24]
 8003382:	69fb      	ldr	r3, [r7, #28]
 8003384:	005b      	lsls	r3, r3, #1
 8003386:	2203      	movs	r2, #3
 8003388:	fa02 f303 	lsl.w	r3, r2, r3
 800338c:	43db      	mvns	r3, r3
 800338e:	69ba      	ldr	r2, [r7, #24]
 8003390:	4013      	ands	r3, r2
 8003392:	61bb      	str	r3, [r7, #24]
 8003394:	683b      	ldr	r3, [r7, #0]
 8003396:	689a      	ldr	r2, [r3, #8]
 8003398:	69fb      	ldr	r3, [r7, #28]
 800339a:	005b      	lsls	r3, r3, #1
 800339c:	fa02 f303 	lsl.w	r3, r2, r3
 80033a0:	69ba      	ldr	r2, [r7, #24]
 80033a2:	4313      	orrs	r3, r2
 80033a4:	61bb      	str	r3, [r7, #24]
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	69ba      	ldr	r2, [r7, #24]
 80033aa:	60da      	str	r2, [r3, #12]
 80033ac:	683b      	ldr	r3, [r7, #0]
 80033ae:	685b      	ldr	r3, [r3, #4]
 80033b0:	f003 0303 	and.w	r3, r3, #3
 80033b4:	2b02      	cmp	r3, #2
 80033b6:	d123      	bne.n	8003400 <HAL_GPIO_Init+0x148>
 80033b8:	69fb      	ldr	r3, [r7, #28]
 80033ba:	08da      	lsrs	r2, r3, #3
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	3208      	adds	r2, #8
 80033c0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80033c4:	61bb      	str	r3, [r7, #24]
 80033c6:	69fb      	ldr	r3, [r7, #28]
 80033c8:	f003 0307 	and.w	r3, r3, #7
 80033cc:	009b      	lsls	r3, r3, #2
 80033ce:	220f      	movs	r2, #15
 80033d0:	fa02 f303 	lsl.w	r3, r2, r3
 80033d4:	43db      	mvns	r3, r3
 80033d6:	69ba      	ldr	r2, [r7, #24]
 80033d8:	4013      	ands	r3, r2
 80033da:	61bb      	str	r3, [r7, #24]
 80033dc:	683b      	ldr	r3, [r7, #0]
 80033de:	691a      	ldr	r2, [r3, #16]
 80033e0:	69fb      	ldr	r3, [r7, #28]
 80033e2:	f003 0307 	and.w	r3, r3, #7
 80033e6:	009b      	lsls	r3, r3, #2
 80033e8:	fa02 f303 	lsl.w	r3, r2, r3
 80033ec:	69ba      	ldr	r2, [r7, #24]
 80033ee:	4313      	orrs	r3, r2
 80033f0:	61bb      	str	r3, [r7, #24]
 80033f2:	69fb      	ldr	r3, [r7, #28]
 80033f4:	08da      	lsrs	r2, r3, #3
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	3208      	adds	r2, #8
 80033fa:	69b9      	ldr	r1, [r7, #24]
 80033fc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	61bb      	str	r3, [r7, #24]
 8003406:	69fb      	ldr	r3, [r7, #28]
 8003408:	005b      	lsls	r3, r3, #1
 800340a:	2203      	movs	r2, #3
 800340c:	fa02 f303 	lsl.w	r3, r2, r3
 8003410:	43db      	mvns	r3, r3
 8003412:	69ba      	ldr	r2, [r7, #24]
 8003414:	4013      	ands	r3, r2
 8003416:	61bb      	str	r3, [r7, #24]
 8003418:	683b      	ldr	r3, [r7, #0]
 800341a:	685b      	ldr	r3, [r3, #4]
 800341c:	f003 0203 	and.w	r2, r3, #3
 8003420:	69fb      	ldr	r3, [r7, #28]
 8003422:	005b      	lsls	r3, r3, #1
 8003424:	fa02 f303 	lsl.w	r3, r2, r3
 8003428:	69ba      	ldr	r2, [r7, #24]
 800342a:	4313      	orrs	r3, r2
 800342c:	61bb      	str	r3, [r7, #24]
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	69ba      	ldr	r2, [r7, #24]
 8003432:	601a      	str	r2, [r3, #0]
 8003434:	683b      	ldr	r3, [r7, #0]
 8003436:	685b      	ldr	r3, [r3, #4]
 8003438:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800343c:	2b00      	cmp	r3, #0
 800343e:	f000 80b2 	beq.w	80035a6 <HAL_GPIO_Init+0x2ee>
 8003442:	4b60      	ldr	r3, [pc, #384]	; (80035c4 <HAL_GPIO_Init+0x30c>)
 8003444:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003446:	4a5f      	ldr	r2, [pc, #380]	; (80035c4 <HAL_GPIO_Init+0x30c>)
 8003448:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800344c:	6453      	str	r3, [r2, #68]	; 0x44
 800344e:	4b5d      	ldr	r3, [pc, #372]	; (80035c4 <HAL_GPIO_Init+0x30c>)
 8003450:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003452:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003456:	60fb      	str	r3, [r7, #12]
 8003458:	68fb      	ldr	r3, [r7, #12]
 800345a:	4a5b      	ldr	r2, [pc, #364]	; (80035c8 <HAL_GPIO_Init+0x310>)
 800345c:	69fb      	ldr	r3, [r7, #28]
 800345e:	089b      	lsrs	r3, r3, #2
 8003460:	3302      	adds	r3, #2
 8003462:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003466:	61bb      	str	r3, [r7, #24]
 8003468:	69fb      	ldr	r3, [r7, #28]
 800346a:	f003 0303 	and.w	r3, r3, #3
 800346e:	009b      	lsls	r3, r3, #2
 8003470:	220f      	movs	r2, #15
 8003472:	fa02 f303 	lsl.w	r3, r2, r3
 8003476:	43db      	mvns	r3, r3
 8003478:	69ba      	ldr	r2, [r7, #24]
 800347a:	4013      	ands	r3, r2
 800347c:	61bb      	str	r3, [r7, #24]
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	4a52      	ldr	r2, [pc, #328]	; (80035cc <HAL_GPIO_Init+0x314>)
 8003482:	4293      	cmp	r3, r2
 8003484:	d02b      	beq.n	80034de <HAL_GPIO_Init+0x226>
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	4a51      	ldr	r2, [pc, #324]	; (80035d0 <HAL_GPIO_Init+0x318>)
 800348a:	4293      	cmp	r3, r2
 800348c:	d025      	beq.n	80034da <HAL_GPIO_Init+0x222>
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	4a50      	ldr	r2, [pc, #320]	; (80035d4 <HAL_GPIO_Init+0x31c>)
 8003492:	4293      	cmp	r3, r2
 8003494:	d01f      	beq.n	80034d6 <HAL_GPIO_Init+0x21e>
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	4a4f      	ldr	r2, [pc, #316]	; (80035d8 <HAL_GPIO_Init+0x320>)
 800349a:	4293      	cmp	r3, r2
 800349c:	d019      	beq.n	80034d2 <HAL_GPIO_Init+0x21a>
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	4a4e      	ldr	r2, [pc, #312]	; (80035dc <HAL_GPIO_Init+0x324>)
 80034a2:	4293      	cmp	r3, r2
 80034a4:	d013      	beq.n	80034ce <HAL_GPIO_Init+0x216>
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	4a4d      	ldr	r2, [pc, #308]	; (80035e0 <HAL_GPIO_Init+0x328>)
 80034aa:	4293      	cmp	r3, r2
 80034ac:	d00d      	beq.n	80034ca <HAL_GPIO_Init+0x212>
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	4a4c      	ldr	r2, [pc, #304]	; (80035e4 <HAL_GPIO_Init+0x32c>)
 80034b2:	4293      	cmp	r3, r2
 80034b4:	d007      	beq.n	80034c6 <HAL_GPIO_Init+0x20e>
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	4a4b      	ldr	r2, [pc, #300]	; (80035e8 <HAL_GPIO_Init+0x330>)
 80034ba:	4293      	cmp	r3, r2
 80034bc:	d101      	bne.n	80034c2 <HAL_GPIO_Init+0x20a>
 80034be:	2307      	movs	r3, #7
 80034c0:	e00e      	b.n	80034e0 <HAL_GPIO_Init+0x228>
 80034c2:	2308      	movs	r3, #8
 80034c4:	e00c      	b.n	80034e0 <HAL_GPIO_Init+0x228>
 80034c6:	2306      	movs	r3, #6
 80034c8:	e00a      	b.n	80034e0 <HAL_GPIO_Init+0x228>
 80034ca:	2305      	movs	r3, #5
 80034cc:	e008      	b.n	80034e0 <HAL_GPIO_Init+0x228>
 80034ce:	2304      	movs	r3, #4
 80034d0:	e006      	b.n	80034e0 <HAL_GPIO_Init+0x228>
 80034d2:	2303      	movs	r3, #3
 80034d4:	e004      	b.n	80034e0 <HAL_GPIO_Init+0x228>
 80034d6:	2302      	movs	r3, #2
 80034d8:	e002      	b.n	80034e0 <HAL_GPIO_Init+0x228>
 80034da:	2301      	movs	r3, #1
 80034dc:	e000      	b.n	80034e0 <HAL_GPIO_Init+0x228>
 80034de:	2300      	movs	r3, #0
 80034e0:	69fa      	ldr	r2, [r7, #28]
 80034e2:	f002 0203 	and.w	r2, r2, #3
 80034e6:	0092      	lsls	r2, r2, #2
 80034e8:	4093      	lsls	r3, r2
 80034ea:	69ba      	ldr	r2, [r7, #24]
 80034ec:	4313      	orrs	r3, r2
 80034ee:	61bb      	str	r3, [r7, #24]
 80034f0:	4935      	ldr	r1, [pc, #212]	; (80035c8 <HAL_GPIO_Init+0x310>)
 80034f2:	69fb      	ldr	r3, [r7, #28]
 80034f4:	089b      	lsrs	r3, r3, #2
 80034f6:	3302      	adds	r3, #2
 80034f8:	69ba      	ldr	r2, [r7, #24]
 80034fa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80034fe:	4b3b      	ldr	r3, [pc, #236]	; (80035ec <HAL_GPIO_Init+0x334>)
 8003500:	689b      	ldr	r3, [r3, #8]
 8003502:	61bb      	str	r3, [r7, #24]
 8003504:	693b      	ldr	r3, [r7, #16]
 8003506:	43db      	mvns	r3, r3
 8003508:	69ba      	ldr	r2, [r7, #24]
 800350a:	4013      	ands	r3, r2
 800350c:	61bb      	str	r3, [r7, #24]
 800350e:	683b      	ldr	r3, [r7, #0]
 8003510:	685b      	ldr	r3, [r3, #4]
 8003512:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003516:	2b00      	cmp	r3, #0
 8003518:	d003      	beq.n	8003522 <HAL_GPIO_Init+0x26a>
 800351a:	69ba      	ldr	r2, [r7, #24]
 800351c:	693b      	ldr	r3, [r7, #16]
 800351e:	4313      	orrs	r3, r2
 8003520:	61bb      	str	r3, [r7, #24]
 8003522:	4a32      	ldr	r2, [pc, #200]	; (80035ec <HAL_GPIO_Init+0x334>)
 8003524:	69bb      	ldr	r3, [r7, #24]
 8003526:	6093      	str	r3, [r2, #8]
 8003528:	4b30      	ldr	r3, [pc, #192]	; (80035ec <HAL_GPIO_Init+0x334>)
 800352a:	68db      	ldr	r3, [r3, #12]
 800352c:	61bb      	str	r3, [r7, #24]
 800352e:	693b      	ldr	r3, [r7, #16]
 8003530:	43db      	mvns	r3, r3
 8003532:	69ba      	ldr	r2, [r7, #24]
 8003534:	4013      	ands	r3, r2
 8003536:	61bb      	str	r3, [r7, #24]
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	685b      	ldr	r3, [r3, #4]
 800353c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003540:	2b00      	cmp	r3, #0
 8003542:	d003      	beq.n	800354c <HAL_GPIO_Init+0x294>
 8003544:	69ba      	ldr	r2, [r7, #24]
 8003546:	693b      	ldr	r3, [r7, #16]
 8003548:	4313      	orrs	r3, r2
 800354a:	61bb      	str	r3, [r7, #24]
 800354c:	4a27      	ldr	r2, [pc, #156]	; (80035ec <HAL_GPIO_Init+0x334>)
 800354e:	69bb      	ldr	r3, [r7, #24]
 8003550:	60d3      	str	r3, [r2, #12]
 8003552:	4b26      	ldr	r3, [pc, #152]	; (80035ec <HAL_GPIO_Init+0x334>)
 8003554:	685b      	ldr	r3, [r3, #4]
 8003556:	61bb      	str	r3, [r7, #24]
 8003558:	693b      	ldr	r3, [r7, #16]
 800355a:	43db      	mvns	r3, r3
 800355c:	69ba      	ldr	r2, [r7, #24]
 800355e:	4013      	ands	r3, r2
 8003560:	61bb      	str	r3, [r7, #24]
 8003562:	683b      	ldr	r3, [r7, #0]
 8003564:	685b      	ldr	r3, [r3, #4]
 8003566:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800356a:	2b00      	cmp	r3, #0
 800356c:	d003      	beq.n	8003576 <HAL_GPIO_Init+0x2be>
 800356e:	69ba      	ldr	r2, [r7, #24]
 8003570:	693b      	ldr	r3, [r7, #16]
 8003572:	4313      	orrs	r3, r2
 8003574:	61bb      	str	r3, [r7, #24]
 8003576:	4a1d      	ldr	r2, [pc, #116]	; (80035ec <HAL_GPIO_Init+0x334>)
 8003578:	69bb      	ldr	r3, [r7, #24]
 800357a:	6053      	str	r3, [r2, #4]
 800357c:	4b1b      	ldr	r3, [pc, #108]	; (80035ec <HAL_GPIO_Init+0x334>)
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	61bb      	str	r3, [r7, #24]
 8003582:	693b      	ldr	r3, [r7, #16]
 8003584:	43db      	mvns	r3, r3
 8003586:	69ba      	ldr	r2, [r7, #24]
 8003588:	4013      	ands	r3, r2
 800358a:	61bb      	str	r3, [r7, #24]
 800358c:	683b      	ldr	r3, [r7, #0]
 800358e:	685b      	ldr	r3, [r3, #4]
 8003590:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003594:	2b00      	cmp	r3, #0
 8003596:	d003      	beq.n	80035a0 <HAL_GPIO_Init+0x2e8>
 8003598:	69ba      	ldr	r2, [r7, #24]
 800359a:	693b      	ldr	r3, [r7, #16]
 800359c:	4313      	orrs	r3, r2
 800359e:	61bb      	str	r3, [r7, #24]
 80035a0:	4a12      	ldr	r2, [pc, #72]	; (80035ec <HAL_GPIO_Init+0x334>)
 80035a2:	69bb      	ldr	r3, [r7, #24]
 80035a4:	6013      	str	r3, [r2, #0]
 80035a6:	69fb      	ldr	r3, [r7, #28]
 80035a8:	3301      	adds	r3, #1
 80035aa:	61fb      	str	r3, [r7, #28]
 80035ac:	69fb      	ldr	r3, [r7, #28]
 80035ae:	2b0f      	cmp	r3, #15
 80035b0:	f67f ae92 	bls.w	80032d8 <HAL_GPIO_Init+0x20>
 80035b4:	bf00      	nop
 80035b6:	bf00      	nop
 80035b8:	3724      	adds	r7, #36	; 0x24
 80035ba:	46bd      	mov	sp, r7
 80035bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035c0:	4770      	bx	lr
 80035c2:	bf00      	nop
 80035c4:	40023800 	.word	0x40023800
 80035c8:	40013800 	.word	0x40013800
 80035cc:	40020000 	.word	0x40020000
 80035d0:	40020400 	.word	0x40020400
 80035d4:	40020800 	.word	0x40020800
 80035d8:	40020c00 	.word	0x40020c00
 80035dc:	40021000 	.word	0x40021000
 80035e0:	40021400 	.word	0x40021400
 80035e4:	40021800 	.word	0x40021800
 80035e8:	40021c00 	.word	0x40021c00
 80035ec:	40013c00 	.word	0x40013c00

080035f0 <HAL_GPIO_ReadPin>:
 80035f0:	b480      	push	{r7}
 80035f2:	b085      	sub	sp, #20
 80035f4:	af00      	add	r7, sp, #0
 80035f6:	6078      	str	r0, [r7, #4]
 80035f8:	460b      	mov	r3, r1
 80035fa:	807b      	strh	r3, [r7, #2]
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	691a      	ldr	r2, [r3, #16]
 8003600:	887b      	ldrh	r3, [r7, #2]
 8003602:	4013      	ands	r3, r2
 8003604:	2b00      	cmp	r3, #0
 8003606:	d002      	beq.n	800360e <HAL_GPIO_ReadPin+0x1e>
 8003608:	2301      	movs	r3, #1
 800360a:	73fb      	strb	r3, [r7, #15]
 800360c:	e001      	b.n	8003612 <HAL_GPIO_ReadPin+0x22>
 800360e:	2300      	movs	r3, #0
 8003610:	73fb      	strb	r3, [r7, #15]
 8003612:	7bfb      	ldrb	r3, [r7, #15]
 8003614:	4618      	mov	r0, r3
 8003616:	3714      	adds	r7, #20
 8003618:	46bd      	mov	sp, r7
 800361a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800361e:	4770      	bx	lr

08003620 <HAL_GPIO_WritePin>:
 8003620:	b480      	push	{r7}
 8003622:	b083      	sub	sp, #12
 8003624:	af00      	add	r7, sp, #0
 8003626:	6078      	str	r0, [r7, #4]
 8003628:	460b      	mov	r3, r1
 800362a:	807b      	strh	r3, [r7, #2]
 800362c:	4613      	mov	r3, r2
 800362e:	707b      	strb	r3, [r7, #1]
 8003630:	787b      	ldrb	r3, [r7, #1]
 8003632:	2b00      	cmp	r3, #0
 8003634:	d003      	beq.n	800363e <HAL_GPIO_WritePin+0x1e>
 8003636:	887a      	ldrh	r2, [r7, #2]
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	619a      	str	r2, [r3, #24]
 800363c:	e003      	b.n	8003646 <HAL_GPIO_WritePin+0x26>
 800363e:	887b      	ldrh	r3, [r7, #2]
 8003640:	041a      	lsls	r2, r3, #16
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	619a      	str	r2, [r3, #24]
 8003646:	bf00      	nop
 8003648:	370c      	adds	r7, #12
 800364a:	46bd      	mov	sp, r7
 800364c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003650:	4770      	bx	lr
	...

08003654 <HAL_GPIO_EXTI_IRQHandler>:
 8003654:	b580      	push	{r7, lr}
 8003656:	b082      	sub	sp, #8
 8003658:	af00      	add	r7, sp, #0
 800365a:	4603      	mov	r3, r0
 800365c:	80fb      	strh	r3, [r7, #6]
 800365e:	4b08      	ldr	r3, [pc, #32]	; (8003680 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003660:	695a      	ldr	r2, [r3, #20]
 8003662:	88fb      	ldrh	r3, [r7, #6]
 8003664:	4013      	ands	r3, r2
 8003666:	2b00      	cmp	r3, #0
 8003668:	d006      	beq.n	8003678 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800366a:	4a05      	ldr	r2, [pc, #20]	; (8003680 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800366c:	88fb      	ldrh	r3, [r7, #6]
 800366e:	6153      	str	r3, [r2, #20]
 8003670:	88fb      	ldrh	r3, [r7, #6]
 8003672:	4618      	mov	r0, r3
 8003674:	f7fe fe8e 	bl	8002394 <HAL_GPIO_EXTI_Callback>
 8003678:	bf00      	nop
 800367a:	3708      	adds	r7, #8
 800367c:	46bd      	mov	sp, r7
 800367e:	bd80      	pop	{r7, pc}
 8003680:	40013c00 	.word	0x40013c00

08003684 <HAL_I2C_Init>:
 8003684:	b580      	push	{r7, lr}
 8003686:	b082      	sub	sp, #8
 8003688:	af00      	add	r7, sp, #0
 800368a:	6078      	str	r0, [r7, #4]
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	2b00      	cmp	r3, #0
 8003690:	d101      	bne.n	8003696 <HAL_I2C_Init+0x12>
 8003692:	2301      	movs	r3, #1
 8003694:	e07f      	b.n	8003796 <HAL_I2C_Init+0x112>
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800369c:	b2db      	uxtb	r3, r3
 800369e:	2b00      	cmp	r3, #0
 80036a0:	d106      	bne.n	80036b0 <HAL_I2C_Init+0x2c>
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	2200      	movs	r2, #0
 80036a6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80036aa:	6878      	ldr	r0, [r7, #4]
 80036ac:	f7fe fec2 	bl	8002434 <HAL_I2C_MspInit>
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	2224      	movs	r2, #36	; 0x24
 80036b4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	681b      	ldr	r3, [r3, #0]
 80036bc:	681a      	ldr	r2, [r3, #0]
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	f022 0201 	bic.w	r2, r2, #1
 80036c6:	601a      	str	r2, [r3, #0]
 80036c8:	687b      	ldr	r3, [r7, #4]
 80036ca:	685a      	ldr	r2, [r3, #4]
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80036d4:	611a      	str	r2, [r3, #16]
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	681b      	ldr	r3, [r3, #0]
 80036da:	689a      	ldr	r2, [r3, #8]
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80036e4:	609a      	str	r2, [r3, #8]
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	68db      	ldr	r3, [r3, #12]
 80036ea:	2b01      	cmp	r3, #1
 80036ec:	d107      	bne.n	80036fe <HAL_I2C_Init+0x7a>
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	689a      	ldr	r2, [r3, #8]
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	681b      	ldr	r3, [r3, #0]
 80036f6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80036fa:	609a      	str	r2, [r3, #8]
 80036fc:	e006      	b.n	800370c <HAL_I2C_Init+0x88>
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	689a      	ldr	r2, [r3, #8]
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 800370a:	609a      	str	r2, [r3, #8]
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	68db      	ldr	r3, [r3, #12]
 8003710:	2b02      	cmp	r3, #2
 8003712:	d104      	bne.n	800371e <HAL_I2C_Init+0x9a>
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800371c:	605a      	str	r2, [r3, #4]
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	681b      	ldr	r3, [r3, #0]
 8003722:	6859      	ldr	r1, [r3, #4]
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	681a      	ldr	r2, [r3, #0]
 8003728:	4b1d      	ldr	r3, [pc, #116]	; (80037a0 <HAL_I2C_Init+0x11c>)
 800372a:	430b      	orrs	r3, r1
 800372c:	6053      	str	r3, [r2, #4]
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	68da      	ldr	r2, [r3, #12]
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800373c:	60da      	str	r2, [r3, #12]
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	691a      	ldr	r2, [r3, #16]
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	695b      	ldr	r3, [r3, #20]
 8003746:	ea42 0103 	orr.w	r1, r2, r3
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	699b      	ldr	r3, [r3, #24]
 800374e:	021a      	lsls	r2, r3, #8
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	430a      	orrs	r2, r1
 8003756:	60da      	str	r2, [r3, #12]
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	69d9      	ldr	r1, [r3, #28]
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	6a1a      	ldr	r2, [r3, #32]
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	681b      	ldr	r3, [r3, #0]
 8003764:	430a      	orrs	r2, r1
 8003766:	601a      	str	r2, [r3, #0]
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	681a      	ldr	r2, [r3, #0]
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	f042 0201 	orr.w	r2, r2, #1
 8003776:	601a      	str	r2, [r3, #0]
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	2200      	movs	r2, #0
 800377c:	645a      	str	r2, [r3, #68]	; 0x44
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	2220      	movs	r2, #32
 8003782:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	2200      	movs	r2, #0
 800378a:	631a      	str	r2, [r3, #48]	; 0x30
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	2200      	movs	r2, #0
 8003790:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003794:	2300      	movs	r3, #0
 8003796:	4618      	mov	r0, r3
 8003798:	3708      	adds	r7, #8
 800379a:	46bd      	mov	sp, r7
 800379c:	bd80      	pop	{r7, pc}
 800379e:	bf00      	nop
 80037a0:	02008000 	.word	0x02008000

080037a4 <HAL_I2C_Mem_Write>:
 80037a4:	b580      	push	{r7, lr}
 80037a6:	b088      	sub	sp, #32
 80037a8:	af02      	add	r7, sp, #8
 80037aa:	60f8      	str	r0, [r7, #12]
 80037ac:	4608      	mov	r0, r1
 80037ae:	4611      	mov	r1, r2
 80037b0:	461a      	mov	r2, r3
 80037b2:	4603      	mov	r3, r0
 80037b4:	817b      	strh	r3, [r7, #10]
 80037b6:	460b      	mov	r3, r1
 80037b8:	813b      	strh	r3, [r7, #8]
 80037ba:	4613      	mov	r3, r2
 80037bc:	80fb      	strh	r3, [r7, #6]
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80037c4:	b2db      	uxtb	r3, r3
 80037c6:	2b20      	cmp	r3, #32
 80037c8:	f040 80f9 	bne.w	80039be <HAL_I2C_Mem_Write+0x21a>
 80037cc:	6a3b      	ldr	r3, [r7, #32]
 80037ce:	2b00      	cmp	r3, #0
 80037d0:	d002      	beq.n	80037d8 <HAL_I2C_Mem_Write+0x34>
 80037d2:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	d105      	bne.n	80037e4 <HAL_I2C_Mem_Write+0x40>
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	f44f 7200 	mov.w	r2, #512	; 0x200
 80037de:	645a      	str	r2, [r3, #68]	; 0x44
 80037e0:	2301      	movs	r3, #1
 80037e2:	e0ed      	b.n	80039c0 <HAL_I2C_Mem_Write+0x21c>
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80037ea:	2b01      	cmp	r3, #1
 80037ec:	d101      	bne.n	80037f2 <HAL_I2C_Mem_Write+0x4e>
 80037ee:	2302      	movs	r3, #2
 80037f0:	e0e6      	b.n	80039c0 <HAL_I2C_Mem_Write+0x21c>
 80037f2:	68fb      	ldr	r3, [r7, #12]
 80037f4:	2201      	movs	r2, #1
 80037f6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80037fa:	f7ff f8a3 	bl	8002944 <HAL_GetTick>
 80037fe:	6178      	str	r0, [r7, #20]
 8003800:	697b      	ldr	r3, [r7, #20]
 8003802:	9300      	str	r3, [sp, #0]
 8003804:	2319      	movs	r3, #25
 8003806:	2201      	movs	r2, #1
 8003808:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800380c:	68f8      	ldr	r0, [r7, #12]
 800380e:	f000 f955 	bl	8003abc <I2C_WaitOnFlagUntilTimeout>
 8003812:	4603      	mov	r3, r0
 8003814:	2b00      	cmp	r3, #0
 8003816:	d001      	beq.n	800381c <HAL_I2C_Mem_Write+0x78>
 8003818:	2301      	movs	r3, #1
 800381a:	e0d1      	b.n	80039c0 <HAL_I2C_Mem_Write+0x21c>
 800381c:	68fb      	ldr	r3, [r7, #12]
 800381e:	2221      	movs	r2, #33	; 0x21
 8003820:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003824:	68fb      	ldr	r3, [r7, #12]
 8003826:	2240      	movs	r2, #64	; 0x40
 8003828:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	2200      	movs	r2, #0
 8003830:	645a      	str	r2, [r3, #68]	; 0x44
 8003832:	68fb      	ldr	r3, [r7, #12]
 8003834:	6a3a      	ldr	r2, [r7, #32]
 8003836:	625a      	str	r2, [r3, #36]	; 0x24
 8003838:	68fb      	ldr	r3, [r7, #12]
 800383a:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 800383c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800383e:	68fb      	ldr	r3, [r7, #12]
 8003840:	2200      	movs	r2, #0
 8003842:	635a      	str	r2, [r3, #52]	; 0x34
 8003844:	88f8      	ldrh	r0, [r7, #6]
 8003846:	893a      	ldrh	r2, [r7, #8]
 8003848:	8979      	ldrh	r1, [r7, #10]
 800384a:	697b      	ldr	r3, [r7, #20]
 800384c:	9301      	str	r3, [sp, #4]
 800384e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003850:	9300      	str	r3, [sp, #0]
 8003852:	4603      	mov	r3, r0
 8003854:	68f8      	ldr	r0, [r7, #12]
 8003856:	f000 f8b9 	bl	80039cc <I2C_RequestMemoryWrite>
 800385a:	4603      	mov	r3, r0
 800385c:	2b00      	cmp	r3, #0
 800385e:	d005      	beq.n	800386c <HAL_I2C_Mem_Write+0xc8>
 8003860:	68fb      	ldr	r3, [r7, #12]
 8003862:	2200      	movs	r2, #0
 8003864:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003868:	2301      	movs	r3, #1
 800386a:	e0a9      	b.n	80039c0 <HAL_I2C_Mem_Write+0x21c>
 800386c:	68fb      	ldr	r3, [r7, #12]
 800386e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003870:	b29b      	uxth	r3, r3
 8003872:	2bff      	cmp	r3, #255	; 0xff
 8003874:	d90e      	bls.n	8003894 <HAL_I2C_Mem_Write+0xf0>
 8003876:	68fb      	ldr	r3, [r7, #12]
 8003878:	22ff      	movs	r2, #255	; 0xff
 800387a:	851a      	strh	r2, [r3, #40]	; 0x28
 800387c:	68fb      	ldr	r3, [r7, #12]
 800387e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003880:	b2da      	uxtb	r2, r3
 8003882:	8979      	ldrh	r1, [r7, #10]
 8003884:	2300      	movs	r3, #0
 8003886:	9300      	str	r3, [sp, #0]
 8003888:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800388c:	68f8      	ldr	r0, [r7, #12]
 800388e:	f000 fab1 	bl	8003df4 <I2C_TransferConfig>
 8003892:	e00f      	b.n	80038b4 <HAL_I2C_Mem_Write+0x110>
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003898:	b29a      	uxth	r2, r3
 800389a:	68fb      	ldr	r3, [r7, #12]
 800389c:	851a      	strh	r2, [r3, #40]	; 0x28
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80038a2:	b2da      	uxtb	r2, r3
 80038a4:	8979      	ldrh	r1, [r7, #10]
 80038a6:	2300      	movs	r3, #0
 80038a8:	9300      	str	r3, [sp, #0]
 80038aa:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80038ae:	68f8      	ldr	r0, [r7, #12]
 80038b0:	f000 faa0 	bl	8003df4 <I2C_TransferConfig>
 80038b4:	697a      	ldr	r2, [r7, #20]
 80038b6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80038b8:	68f8      	ldr	r0, [r7, #12]
 80038ba:	f000 f93f 	bl	8003b3c <I2C_WaitOnTXISFlagUntilTimeout>
 80038be:	4603      	mov	r3, r0
 80038c0:	2b00      	cmp	r3, #0
 80038c2:	d001      	beq.n	80038c8 <HAL_I2C_Mem_Write+0x124>
 80038c4:	2301      	movs	r3, #1
 80038c6:	e07b      	b.n	80039c0 <HAL_I2C_Mem_Write+0x21c>
 80038c8:	68fb      	ldr	r3, [r7, #12]
 80038ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038cc:	781a      	ldrb	r2, [r3, #0]
 80038ce:	68fb      	ldr	r3, [r7, #12]
 80038d0:	681b      	ldr	r3, [r3, #0]
 80038d2:	629a      	str	r2, [r3, #40]	; 0x28
 80038d4:	68fb      	ldr	r3, [r7, #12]
 80038d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038d8:	1c5a      	adds	r2, r3, #1
 80038da:	68fb      	ldr	r3, [r7, #12]
 80038dc:	625a      	str	r2, [r3, #36]	; 0x24
 80038de:	68fb      	ldr	r3, [r7, #12]
 80038e0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80038e2:	b29b      	uxth	r3, r3
 80038e4:	3b01      	subs	r3, #1
 80038e6:	b29a      	uxth	r2, r3
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	855a      	strh	r2, [r3, #42]	; 0x2a
 80038ec:	68fb      	ldr	r3, [r7, #12]
 80038ee:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80038f0:	3b01      	subs	r3, #1
 80038f2:	b29a      	uxth	r2, r3
 80038f4:	68fb      	ldr	r3, [r7, #12]
 80038f6:	851a      	strh	r2, [r3, #40]	; 0x28
 80038f8:	68fb      	ldr	r3, [r7, #12]
 80038fa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80038fc:	b29b      	uxth	r3, r3
 80038fe:	2b00      	cmp	r3, #0
 8003900:	d034      	beq.n	800396c <HAL_I2C_Mem_Write+0x1c8>
 8003902:	68fb      	ldr	r3, [r7, #12]
 8003904:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003906:	2b00      	cmp	r3, #0
 8003908:	d130      	bne.n	800396c <HAL_I2C_Mem_Write+0x1c8>
 800390a:	697b      	ldr	r3, [r7, #20]
 800390c:	9300      	str	r3, [sp, #0]
 800390e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003910:	2200      	movs	r2, #0
 8003912:	2180      	movs	r1, #128	; 0x80
 8003914:	68f8      	ldr	r0, [r7, #12]
 8003916:	f000 f8d1 	bl	8003abc <I2C_WaitOnFlagUntilTimeout>
 800391a:	4603      	mov	r3, r0
 800391c:	2b00      	cmp	r3, #0
 800391e:	d001      	beq.n	8003924 <HAL_I2C_Mem_Write+0x180>
 8003920:	2301      	movs	r3, #1
 8003922:	e04d      	b.n	80039c0 <HAL_I2C_Mem_Write+0x21c>
 8003924:	68fb      	ldr	r3, [r7, #12]
 8003926:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003928:	b29b      	uxth	r3, r3
 800392a:	2bff      	cmp	r3, #255	; 0xff
 800392c:	d90e      	bls.n	800394c <HAL_I2C_Mem_Write+0x1a8>
 800392e:	68fb      	ldr	r3, [r7, #12]
 8003930:	22ff      	movs	r2, #255	; 0xff
 8003932:	851a      	strh	r2, [r3, #40]	; 0x28
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003938:	b2da      	uxtb	r2, r3
 800393a:	8979      	ldrh	r1, [r7, #10]
 800393c:	2300      	movs	r3, #0
 800393e:	9300      	str	r3, [sp, #0]
 8003940:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003944:	68f8      	ldr	r0, [r7, #12]
 8003946:	f000 fa55 	bl	8003df4 <I2C_TransferConfig>
 800394a:	e00f      	b.n	800396c <HAL_I2C_Mem_Write+0x1c8>
 800394c:	68fb      	ldr	r3, [r7, #12]
 800394e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003950:	b29a      	uxth	r2, r3
 8003952:	68fb      	ldr	r3, [r7, #12]
 8003954:	851a      	strh	r2, [r3, #40]	; 0x28
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800395a:	b2da      	uxtb	r2, r3
 800395c:	8979      	ldrh	r1, [r7, #10]
 800395e:	2300      	movs	r3, #0
 8003960:	9300      	str	r3, [sp, #0]
 8003962:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003966:	68f8      	ldr	r0, [r7, #12]
 8003968:	f000 fa44 	bl	8003df4 <I2C_TransferConfig>
 800396c:	68fb      	ldr	r3, [r7, #12]
 800396e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003970:	b29b      	uxth	r3, r3
 8003972:	2b00      	cmp	r3, #0
 8003974:	d19e      	bne.n	80038b4 <HAL_I2C_Mem_Write+0x110>
 8003976:	697a      	ldr	r2, [r7, #20]
 8003978:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800397a:	68f8      	ldr	r0, [r7, #12]
 800397c:	f000 f91e 	bl	8003bbc <I2C_WaitOnSTOPFlagUntilTimeout>
 8003980:	4603      	mov	r3, r0
 8003982:	2b00      	cmp	r3, #0
 8003984:	d001      	beq.n	800398a <HAL_I2C_Mem_Write+0x1e6>
 8003986:	2301      	movs	r3, #1
 8003988:	e01a      	b.n	80039c0 <HAL_I2C_Mem_Write+0x21c>
 800398a:	68fb      	ldr	r3, [r7, #12]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	2220      	movs	r2, #32
 8003990:	61da      	str	r2, [r3, #28]
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	6859      	ldr	r1, [r3, #4]
 8003998:	68fb      	ldr	r3, [r7, #12]
 800399a:	681a      	ldr	r2, [r3, #0]
 800399c:	4b0a      	ldr	r3, [pc, #40]	; (80039c8 <HAL_I2C_Mem_Write+0x224>)
 800399e:	400b      	ands	r3, r1
 80039a0:	6053      	str	r3, [r2, #4]
 80039a2:	68fb      	ldr	r3, [r7, #12]
 80039a4:	2220      	movs	r2, #32
 80039a6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80039aa:	68fb      	ldr	r3, [r7, #12]
 80039ac:	2200      	movs	r2, #0
 80039ae:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	2200      	movs	r2, #0
 80039b6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80039ba:	2300      	movs	r3, #0
 80039bc:	e000      	b.n	80039c0 <HAL_I2C_Mem_Write+0x21c>
 80039be:	2302      	movs	r3, #2
 80039c0:	4618      	mov	r0, r3
 80039c2:	3718      	adds	r7, #24
 80039c4:	46bd      	mov	sp, r7
 80039c6:	bd80      	pop	{r7, pc}
 80039c8:	fe00e800 	.word	0xfe00e800

080039cc <I2C_RequestMemoryWrite>:
 80039cc:	b580      	push	{r7, lr}
 80039ce:	b086      	sub	sp, #24
 80039d0:	af02      	add	r7, sp, #8
 80039d2:	60f8      	str	r0, [r7, #12]
 80039d4:	4608      	mov	r0, r1
 80039d6:	4611      	mov	r1, r2
 80039d8:	461a      	mov	r2, r3
 80039da:	4603      	mov	r3, r0
 80039dc:	817b      	strh	r3, [r7, #10]
 80039de:	460b      	mov	r3, r1
 80039e0:	813b      	strh	r3, [r7, #8]
 80039e2:	4613      	mov	r3, r2
 80039e4:	80fb      	strh	r3, [r7, #6]
 80039e6:	88fb      	ldrh	r3, [r7, #6]
 80039e8:	b2da      	uxtb	r2, r3
 80039ea:	8979      	ldrh	r1, [r7, #10]
 80039ec:	4b20      	ldr	r3, [pc, #128]	; (8003a70 <I2C_RequestMemoryWrite+0xa4>)
 80039ee:	9300      	str	r3, [sp, #0]
 80039f0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80039f4:	68f8      	ldr	r0, [r7, #12]
 80039f6:	f000 f9fd 	bl	8003df4 <I2C_TransferConfig>
 80039fa:	69fa      	ldr	r2, [r7, #28]
 80039fc:	69b9      	ldr	r1, [r7, #24]
 80039fe:	68f8      	ldr	r0, [r7, #12]
 8003a00:	f000 f89c 	bl	8003b3c <I2C_WaitOnTXISFlagUntilTimeout>
 8003a04:	4603      	mov	r3, r0
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d001      	beq.n	8003a0e <I2C_RequestMemoryWrite+0x42>
 8003a0a:	2301      	movs	r3, #1
 8003a0c:	e02c      	b.n	8003a68 <I2C_RequestMemoryWrite+0x9c>
 8003a0e:	88fb      	ldrh	r3, [r7, #6]
 8003a10:	2b01      	cmp	r3, #1
 8003a12:	d105      	bne.n	8003a20 <I2C_RequestMemoryWrite+0x54>
 8003a14:	893b      	ldrh	r3, [r7, #8]
 8003a16:	b2da      	uxtb	r2, r3
 8003a18:	68fb      	ldr	r3, [r7, #12]
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	629a      	str	r2, [r3, #40]	; 0x28
 8003a1e:	e015      	b.n	8003a4c <I2C_RequestMemoryWrite+0x80>
 8003a20:	893b      	ldrh	r3, [r7, #8]
 8003a22:	0a1b      	lsrs	r3, r3, #8
 8003a24:	b29b      	uxth	r3, r3
 8003a26:	b2da      	uxtb	r2, r3
 8003a28:	68fb      	ldr	r3, [r7, #12]
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	629a      	str	r2, [r3, #40]	; 0x28
 8003a2e:	69fa      	ldr	r2, [r7, #28]
 8003a30:	69b9      	ldr	r1, [r7, #24]
 8003a32:	68f8      	ldr	r0, [r7, #12]
 8003a34:	f000 f882 	bl	8003b3c <I2C_WaitOnTXISFlagUntilTimeout>
 8003a38:	4603      	mov	r3, r0
 8003a3a:	2b00      	cmp	r3, #0
 8003a3c:	d001      	beq.n	8003a42 <I2C_RequestMemoryWrite+0x76>
 8003a3e:	2301      	movs	r3, #1
 8003a40:	e012      	b.n	8003a68 <I2C_RequestMemoryWrite+0x9c>
 8003a42:	893b      	ldrh	r3, [r7, #8]
 8003a44:	b2da      	uxtb	r2, r3
 8003a46:	68fb      	ldr	r3, [r7, #12]
 8003a48:	681b      	ldr	r3, [r3, #0]
 8003a4a:	629a      	str	r2, [r3, #40]	; 0x28
 8003a4c:	69fb      	ldr	r3, [r7, #28]
 8003a4e:	9300      	str	r3, [sp, #0]
 8003a50:	69bb      	ldr	r3, [r7, #24]
 8003a52:	2200      	movs	r2, #0
 8003a54:	2180      	movs	r1, #128	; 0x80
 8003a56:	68f8      	ldr	r0, [r7, #12]
 8003a58:	f000 f830 	bl	8003abc <I2C_WaitOnFlagUntilTimeout>
 8003a5c:	4603      	mov	r3, r0
 8003a5e:	2b00      	cmp	r3, #0
 8003a60:	d001      	beq.n	8003a66 <I2C_RequestMemoryWrite+0x9a>
 8003a62:	2301      	movs	r3, #1
 8003a64:	e000      	b.n	8003a68 <I2C_RequestMemoryWrite+0x9c>
 8003a66:	2300      	movs	r3, #0
 8003a68:	4618      	mov	r0, r3
 8003a6a:	3710      	adds	r7, #16
 8003a6c:	46bd      	mov	sp, r7
 8003a6e:	bd80      	pop	{r7, pc}
 8003a70:	80002000 	.word	0x80002000

08003a74 <I2C_Flush_TXDR>:
 8003a74:	b480      	push	{r7}
 8003a76:	b083      	sub	sp, #12
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	6078      	str	r0, [r7, #4]
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	681b      	ldr	r3, [r3, #0]
 8003a80:	699b      	ldr	r3, [r3, #24]
 8003a82:	f003 0302 	and.w	r3, r3, #2
 8003a86:	2b02      	cmp	r3, #2
 8003a88:	d103      	bne.n	8003a92 <I2C_Flush_TXDR+0x1e>
 8003a8a:	687b      	ldr	r3, [r7, #4]
 8003a8c:	681b      	ldr	r3, [r3, #0]
 8003a8e:	2200      	movs	r2, #0
 8003a90:	629a      	str	r2, [r3, #40]	; 0x28
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	699b      	ldr	r3, [r3, #24]
 8003a98:	f003 0301 	and.w	r3, r3, #1
 8003a9c:	2b01      	cmp	r3, #1
 8003a9e:	d007      	beq.n	8003ab0 <I2C_Flush_TXDR+0x3c>
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	699a      	ldr	r2, [r3, #24]
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	681b      	ldr	r3, [r3, #0]
 8003aaa:	f042 0201 	orr.w	r2, r2, #1
 8003aae:	619a      	str	r2, [r3, #24]
 8003ab0:	bf00      	nop
 8003ab2:	370c      	adds	r7, #12
 8003ab4:	46bd      	mov	sp, r7
 8003ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aba:	4770      	bx	lr

08003abc <I2C_WaitOnFlagUntilTimeout>:
 8003abc:	b580      	push	{r7, lr}
 8003abe:	b084      	sub	sp, #16
 8003ac0:	af00      	add	r7, sp, #0
 8003ac2:	60f8      	str	r0, [r7, #12]
 8003ac4:	60b9      	str	r1, [r7, #8]
 8003ac6:	603b      	str	r3, [r7, #0]
 8003ac8:	4613      	mov	r3, r2
 8003aca:	71fb      	strb	r3, [r7, #7]
 8003acc:	e022      	b.n	8003b14 <I2C_WaitOnFlagUntilTimeout+0x58>
 8003ace:	683b      	ldr	r3, [r7, #0]
 8003ad0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ad4:	d01e      	beq.n	8003b14 <I2C_WaitOnFlagUntilTimeout+0x58>
 8003ad6:	f7fe ff35 	bl	8002944 <HAL_GetTick>
 8003ada:	4602      	mov	r2, r0
 8003adc:	69bb      	ldr	r3, [r7, #24]
 8003ade:	1ad3      	subs	r3, r2, r3
 8003ae0:	683a      	ldr	r2, [r7, #0]
 8003ae2:	429a      	cmp	r2, r3
 8003ae4:	d302      	bcc.n	8003aec <I2C_WaitOnFlagUntilTimeout+0x30>
 8003ae6:	683b      	ldr	r3, [r7, #0]
 8003ae8:	2b00      	cmp	r3, #0
 8003aea:	d113      	bne.n	8003b14 <I2C_WaitOnFlagUntilTimeout+0x58>
 8003aec:	68fb      	ldr	r3, [r7, #12]
 8003aee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003af0:	f043 0220 	orr.w	r2, r3, #32
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	645a      	str	r2, [r3, #68]	; 0x44
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	2220      	movs	r2, #32
 8003afc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	2200      	movs	r2, #0
 8003b04:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	2200      	movs	r2, #0
 8003b0c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003b10:	2301      	movs	r3, #1
 8003b12:	e00f      	b.n	8003b34 <I2C_WaitOnFlagUntilTimeout+0x78>
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	699a      	ldr	r2, [r3, #24]
 8003b1a:	68bb      	ldr	r3, [r7, #8]
 8003b1c:	4013      	ands	r3, r2
 8003b1e:	68ba      	ldr	r2, [r7, #8]
 8003b20:	429a      	cmp	r2, r3
 8003b22:	bf0c      	ite	eq
 8003b24:	2301      	moveq	r3, #1
 8003b26:	2300      	movne	r3, #0
 8003b28:	b2db      	uxtb	r3, r3
 8003b2a:	461a      	mov	r2, r3
 8003b2c:	79fb      	ldrb	r3, [r7, #7]
 8003b2e:	429a      	cmp	r2, r3
 8003b30:	d0cd      	beq.n	8003ace <I2C_WaitOnFlagUntilTimeout+0x12>
 8003b32:	2300      	movs	r3, #0
 8003b34:	4618      	mov	r0, r3
 8003b36:	3710      	adds	r7, #16
 8003b38:	46bd      	mov	sp, r7
 8003b3a:	bd80      	pop	{r7, pc}

08003b3c <I2C_WaitOnTXISFlagUntilTimeout>:
 8003b3c:	b580      	push	{r7, lr}
 8003b3e:	b084      	sub	sp, #16
 8003b40:	af00      	add	r7, sp, #0
 8003b42:	60f8      	str	r0, [r7, #12]
 8003b44:	60b9      	str	r1, [r7, #8]
 8003b46:	607a      	str	r2, [r7, #4]
 8003b48:	e02c      	b.n	8003ba4 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8003b4a:	687a      	ldr	r2, [r7, #4]
 8003b4c:	68b9      	ldr	r1, [r7, #8]
 8003b4e:	68f8      	ldr	r0, [r7, #12]
 8003b50:	f000 f870 	bl	8003c34 <I2C_IsErrorOccurred>
 8003b54:	4603      	mov	r3, r0
 8003b56:	2b00      	cmp	r3, #0
 8003b58:	d001      	beq.n	8003b5e <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8003b5a:	2301      	movs	r3, #1
 8003b5c:	e02a      	b.n	8003bb4 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8003b5e:	68bb      	ldr	r3, [r7, #8]
 8003b60:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003b64:	d01e      	beq.n	8003ba4 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8003b66:	f7fe feed 	bl	8002944 <HAL_GetTick>
 8003b6a:	4602      	mov	r2, r0
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	1ad3      	subs	r3, r2, r3
 8003b70:	68ba      	ldr	r2, [r7, #8]
 8003b72:	429a      	cmp	r2, r3
 8003b74:	d302      	bcc.n	8003b7c <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8003b76:	68bb      	ldr	r3, [r7, #8]
 8003b78:	2b00      	cmp	r3, #0
 8003b7a:	d113      	bne.n	8003ba4 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8003b7c:	68fb      	ldr	r3, [r7, #12]
 8003b7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003b80:	f043 0220 	orr.w	r2, r3, #32
 8003b84:	68fb      	ldr	r3, [r7, #12]
 8003b86:	645a      	str	r2, [r3, #68]	; 0x44
 8003b88:	68fb      	ldr	r3, [r7, #12]
 8003b8a:	2220      	movs	r2, #32
 8003b8c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003b90:	68fb      	ldr	r3, [r7, #12]
 8003b92:	2200      	movs	r2, #0
 8003b94:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003b98:	68fb      	ldr	r3, [r7, #12]
 8003b9a:	2200      	movs	r2, #0
 8003b9c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003ba0:	2301      	movs	r3, #1
 8003ba2:	e007      	b.n	8003bb4 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	699b      	ldr	r3, [r3, #24]
 8003baa:	f003 0302 	and.w	r3, r3, #2
 8003bae:	2b02      	cmp	r3, #2
 8003bb0:	d1cb      	bne.n	8003b4a <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8003bb2:	2300      	movs	r3, #0
 8003bb4:	4618      	mov	r0, r3
 8003bb6:	3710      	adds	r7, #16
 8003bb8:	46bd      	mov	sp, r7
 8003bba:	bd80      	pop	{r7, pc}

08003bbc <I2C_WaitOnSTOPFlagUntilTimeout>:
 8003bbc:	b580      	push	{r7, lr}
 8003bbe:	b084      	sub	sp, #16
 8003bc0:	af00      	add	r7, sp, #0
 8003bc2:	60f8      	str	r0, [r7, #12]
 8003bc4:	60b9      	str	r1, [r7, #8]
 8003bc6:	607a      	str	r2, [r7, #4]
 8003bc8:	e028      	b.n	8003c1c <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8003bca:	687a      	ldr	r2, [r7, #4]
 8003bcc:	68b9      	ldr	r1, [r7, #8]
 8003bce:	68f8      	ldr	r0, [r7, #12]
 8003bd0:	f000 f830 	bl	8003c34 <I2C_IsErrorOccurred>
 8003bd4:	4603      	mov	r3, r0
 8003bd6:	2b00      	cmp	r3, #0
 8003bd8:	d001      	beq.n	8003bde <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8003bda:	2301      	movs	r3, #1
 8003bdc:	e026      	b.n	8003c2c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8003bde:	f7fe feb1 	bl	8002944 <HAL_GetTick>
 8003be2:	4602      	mov	r2, r0
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	1ad3      	subs	r3, r2, r3
 8003be8:	68ba      	ldr	r2, [r7, #8]
 8003bea:	429a      	cmp	r2, r3
 8003bec:	d302      	bcc.n	8003bf4 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8003bee:	68bb      	ldr	r3, [r7, #8]
 8003bf0:	2b00      	cmp	r3, #0
 8003bf2:	d113      	bne.n	8003c1c <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003bf8:	f043 0220 	orr.w	r2, r3, #32
 8003bfc:	68fb      	ldr	r3, [r7, #12]
 8003bfe:	645a      	str	r2, [r3, #68]	; 0x44
 8003c00:	68fb      	ldr	r3, [r7, #12]
 8003c02:	2220      	movs	r2, #32
 8003c04:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	2200      	movs	r2, #0
 8003c0c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	2200      	movs	r2, #0
 8003c14:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003c18:	2301      	movs	r3, #1
 8003c1a:	e007      	b.n	8003c2c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8003c1c:	68fb      	ldr	r3, [r7, #12]
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	699b      	ldr	r3, [r3, #24]
 8003c22:	f003 0320 	and.w	r3, r3, #32
 8003c26:	2b20      	cmp	r3, #32
 8003c28:	d1cf      	bne.n	8003bca <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 8003c2a:	2300      	movs	r3, #0
 8003c2c:	4618      	mov	r0, r3
 8003c2e:	3710      	adds	r7, #16
 8003c30:	46bd      	mov	sp, r7
 8003c32:	bd80      	pop	{r7, pc}

08003c34 <I2C_IsErrorOccurred>:
 8003c34:	b580      	push	{r7, lr}
 8003c36:	b08a      	sub	sp, #40	; 0x28
 8003c38:	af00      	add	r7, sp, #0
 8003c3a:	60f8      	str	r0, [r7, #12]
 8003c3c:	60b9      	str	r1, [r7, #8]
 8003c3e:	607a      	str	r2, [r7, #4]
 8003c40:	2300      	movs	r3, #0
 8003c42:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003c46:	68fb      	ldr	r3, [r7, #12]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	699b      	ldr	r3, [r3, #24]
 8003c4c:	61bb      	str	r3, [r7, #24]
 8003c4e:	2300      	movs	r3, #0
 8003c50:	623b      	str	r3, [r7, #32]
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	61fb      	str	r3, [r7, #28]
 8003c56:	69bb      	ldr	r3, [r7, #24]
 8003c58:	f003 0310 	and.w	r3, r3, #16
 8003c5c:	2b00      	cmp	r3, #0
 8003c5e:	d068      	beq.n	8003d32 <I2C_IsErrorOccurred+0xfe>
 8003c60:	68fb      	ldr	r3, [r7, #12]
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	2210      	movs	r2, #16
 8003c66:	61da      	str	r2, [r3, #28]
 8003c68:	e049      	b.n	8003cfe <I2C_IsErrorOccurred+0xca>
 8003c6a:	68bb      	ldr	r3, [r7, #8]
 8003c6c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c70:	d045      	beq.n	8003cfe <I2C_IsErrorOccurred+0xca>
 8003c72:	f7fe fe67 	bl	8002944 <HAL_GetTick>
 8003c76:	4602      	mov	r2, r0
 8003c78:	69fb      	ldr	r3, [r7, #28]
 8003c7a:	1ad3      	subs	r3, r2, r3
 8003c7c:	68ba      	ldr	r2, [r7, #8]
 8003c7e:	429a      	cmp	r2, r3
 8003c80:	d302      	bcc.n	8003c88 <I2C_IsErrorOccurred+0x54>
 8003c82:	68bb      	ldr	r3, [r7, #8]
 8003c84:	2b00      	cmp	r3, #0
 8003c86:	d13a      	bne.n	8003cfe <I2C_IsErrorOccurred+0xca>
 8003c88:	68fb      	ldr	r3, [r7, #12]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	685b      	ldr	r3, [r3, #4]
 8003c8e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003c92:	617b      	str	r3, [r7, #20]
 8003c94:	68fb      	ldr	r3, [r7, #12]
 8003c96:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8003c9a:	74fb      	strb	r3, [r7, #19]
 8003c9c:	68fb      	ldr	r3, [r7, #12]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	699b      	ldr	r3, [r3, #24]
 8003ca2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8003ca6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003caa:	d121      	bne.n	8003cf0 <I2C_IsErrorOccurred+0xbc>
 8003cac:	697b      	ldr	r3, [r7, #20]
 8003cae:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8003cb2:	d01d      	beq.n	8003cf0 <I2C_IsErrorOccurred+0xbc>
 8003cb4:	7cfb      	ldrb	r3, [r7, #19]
 8003cb6:	2b20      	cmp	r3, #32
 8003cb8:	d01a      	beq.n	8003cf0 <I2C_IsErrorOccurred+0xbc>
 8003cba:	68fb      	ldr	r3, [r7, #12]
 8003cbc:	681b      	ldr	r3, [r3, #0]
 8003cbe:	685a      	ldr	r2, [r3, #4]
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003cc8:	605a      	str	r2, [r3, #4]
 8003cca:	f7fe fe3b 	bl	8002944 <HAL_GetTick>
 8003cce:	61f8      	str	r0, [r7, #28]
 8003cd0:	e00e      	b.n	8003cf0 <I2C_IsErrorOccurred+0xbc>
 8003cd2:	f7fe fe37 	bl	8002944 <HAL_GetTick>
 8003cd6:	4602      	mov	r2, r0
 8003cd8:	69fb      	ldr	r3, [r7, #28]
 8003cda:	1ad3      	subs	r3, r2, r3
 8003cdc:	2b19      	cmp	r3, #25
 8003cde:	d907      	bls.n	8003cf0 <I2C_IsErrorOccurred+0xbc>
 8003ce0:	6a3b      	ldr	r3, [r7, #32]
 8003ce2:	f043 0320 	orr.w	r3, r3, #32
 8003ce6:	623b      	str	r3, [r7, #32]
 8003ce8:	2301      	movs	r3, #1
 8003cea:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003cee:	e006      	b.n	8003cfe <I2C_IsErrorOccurred+0xca>
 8003cf0:	68fb      	ldr	r3, [r7, #12]
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	699b      	ldr	r3, [r3, #24]
 8003cf6:	f003 0320 	and.w	r3, r3, #32
 8003cfa:	2b20      	cmp	r3, #32
 8003cfc:	d1e9      	bne.n	8003cd2 <I2C_IsErrorOccurred+0x9e>
 8003cfe:	68fb      	ldr	r3, [r7, #12]
 8003d00:	681b      	ldr	r3, [r3, #0]
 8003d02:	699b      	ldr	r3, [r3, #24]
 8003d04:	f003 0320 	and.w	r3, r3, #32
 8003d08:	2b20      	cmp	r3, #32
 8003d0a:	d003      	beq.n	8003d14 <I2C_IsErrorOccurred+0xe0>
 8003d0c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003d10:	2b00      	cmp	r3, #0
 8003d12:	d0aa      	beq.n	8003c6a <I2C_IsErrorOccurred+0x36>
 8003d14:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003d18:	2b00      	cmp	r3, #0
 8003d1a:	d103      	bne.n	8003d24 <I2C_IsErrorOccurred+0xf0>
 8003d1c:	68fb      	ldr	r3, [r7, #12]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	2220      	movs	r2, #32
 8003d22:	61da      	str	r2, [r3, #28]
 8003d24:	6a3b      	ldr	r3, [r7, #32]
 8003d26:	f043 0304 	orr.w	r3, r3, #4
 8003d2a:	623b      	str	r3, [r7, #32]
 8003d2c:	2301      	movs	r3, #1
 8003d2e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003d32:	68fb      	ldr	r3, [r7, #12]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	699b      	ldr	r3, [r3, #24]
 8003d38:	61bb      	str	r3, [r7, #24]
 8003d3a:	69bb      	ldr	r3, [r7, #24]
 8003d3c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d00b      	beq.n	8003d5c <I2C_IsErrorOccurred+0x128>
 8003d44:	6a3b      	ldr	r3, [r7, #32]
 8003d46:	f043 0301 	orr.w	r3, r3, #1
 8003d4a:	623b      	str	r3, [r7, #32]
 8003d4c:	68fb      	ldr	r3, [r7, #12]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003d54:	61da      	str	r2, [r3, #28]
 8003d56:	2301      	movs	r3, #1
 8003d58:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003d5c:	69bb      	ldr	r3, [r7, #24]
 8003d5e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003d62:	2b00      	cmp	r3, #0
 8003d64:	d00b      	beq.n	8003d7e <I2C_IsErrorOccurred+0x14a>
 8003d66:	6a3b      	ldr	r3, [r7, #32]
 8003d68:	f043 0308 	orr.w	r3, r3, #8
 8003d6c:	623b      	str	r3, [r7, #32]
 8003d6e:	68fb      	ldr	r3, [r7, #12]
 8003d70:	681b      	ldr	r3, [r3, #0]
 8003d72:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003d76:	61da      	str	r2, [r3, #28]
 8003d78:	2301      	movs	r3, #1
 8003d7a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003d7e:	69bb      	ldr	r3, [r7, #24]
 8003d80:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003d84:	2b00      	cmp	r3, #0
 8003d86:	d00b      	beq.n	8003da0 <I2C_IsErrorOccurred+0x16c>
 8003d88:	6a3b      	ldr	r3, [r7, #32]
 8003d8a:	f043 0302 	orr.w	r3, r3, #2
 8003d8e:	623b      	str	r3, [r7, #32]
 8003d90:	68fb      	ldr	r3, [r7, #12]
 8003d92:	681b      	ldr	r3, [r3, #0]
 8003d94:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003d98:	61da      	str	r2, [r3, #28]
 8003d9a:	2301      	movs	r3, #1
 8003d9c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003da0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003da4:	2b00      	cmp	r3, #0
 8003da6:	d01c      	beq.n	8003de2 <I2C_IsErrorOccurred+0x1ae>
 8003da8:	68f8      	ldr	r0, [r7, #12]
 8003daa:	f7ff fe63 	bl	8003a74 <I2C_Flush_TXDR>
 8003dae:	68fb      	ldr	r3, [r7, #12]
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	6859      	ldr	r1, [r3, #4]
 8003db4:	68fb      	ldr	r3, [r7, #12]
 8003db6:	681a      	ldr	r2, [r3, #0]
 8003db8:	4b0d      	ldr	r3, [pc, #52]	; (8003df0 <I2C_IsErrorOccurred+0x1bc>)
 8003dba:	400b      	ands	r3, r1
 8003dbc:	6053      	str	r3, [r2, #4]
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003dc2:	6a3b      	ldr	r3, [r7, #32]
 8003dc4:	431a      	orrs	r2, r3
 8003dc6:	68fb      	ldr	r3, [r7, #12]
 8003dc8:	645a      	str	r2, [r3, #68]	; 0x44
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	2220      	movs	r2, #32
 8003dce:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	2200      	movs	r2, #0
 8003dd6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003dda:	68fb      	ldr	r3, [r7, #12]
 8003ddc:	2200      	movs	r2, #0
 8003dde:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003de2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003de6:	4618      	mov	r0, r3
 8003de8:	3728      	adds	r7, #40	; 0x28
 8003dea:	46bd      	mov	sp, r7
 8003dec:	bd80      	pop	{r7, pc}
 8003dee:	bf00      	nop
 8003df0:	fe00e800 	.word	0xfe00e800

08003df4 <I2C_TransferConfig>:
 8003df4:	b480      	push	{r7}
 8003df6:	b087      	sub	sp, #28
 8003df8:	af00      	add	r7, sp, #0
 8003dfa:	60f8      	str	r0, [r7, #12]
 8003dfc:	607b      	str	r3, [r7, #4]
 8003dfe:	460b      	mov	r3, r1
 8003e00:	817b      	strh	r3, [r7, #10]
 8003e02:	4613      	mov	r3, r2
 8003e04:	727b      	strb	r3, [r7, #9]
 8003e06:	897b      	ldrh	r3, [r7, #10]
 8003e08:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8003e0c:	7a7b      	ldrb	r3, [r7, #9]
 8003e0e:	041b      	lsls	r3, r3, #16
 8003e10:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8003e14:	431a      	orrs	r2, r3
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	431a      	orrs	r2, r3
 8003e1a:	6a3b      	ldr	r3, [r7, #32]
 8003e1c:	4313      	orrs	r3, r2
 8003e1e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003e22:	617b      	str	r3, [r7, #20]
 8003e24:	68fb      	ldr	r3, [r7, #12]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	685a      	ldr	r2, [r3, #4]
 8003e2a:	6a3b      	ldr	r3, [r7, #32]
 8003e2c:	0d5b      	lsrs	r3, r3, #21
 8003e2e:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8003e32:	4b08      	ldr	r3, [pc, #32]	; (8003e54 <I2C_TransferConfig+0x60>)
 8003e34:	430b      	orrs	r3, r1
 8003e36:	43db      	mvns	r3, r3
 8003e38:	ea02 0103 	and.w	r1, r2, r3
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	697a      	ldr	r2, [r7, #20]
 8003e42:	430a      	orrs	r2, r1
 8003e44:	605a      	str	r2, [r3, #4]
 8003e46:	bf00      	nop
 8003e48:	371c      	adds	r7, #28
 8003e4a:	46bd      	mov	sp, r7
 8003e4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e50:	4770      	bx	lr
 8003e52:	bf00      	nop
 8003e54:	03ff63ff 	.word	0x03ff63ff

08003e58 <HAL_I2CEx_ConfigAnalogFilter>:
 8003e58:	b480      	push	{r7}
 8003e5a:	b083      	sub	sp, #12
 8003e5c:	af00      	add	r7, sp, #0
 8003e5e:	6078      	str	r0, [r7, #4]
 8003e60:	6039      	str	r1, [r7, #0]
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003e68:	b2db      	uxtb	r3, r3
 8003e6a:	2b20      	cmp	r3, #32
 8003e6c:	d138      	bne.n	8003ee0 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003e74:	2b01      	cmp	r3, #1
 8003e76:	d101      	bne.n	8003e7c <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8003e78:	2302      	movs	r3, #2
 8003e7a:	e032      	b.n	8003ee2 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	2201      	movs	r2, #1
 8003e80:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	2224      	movs	r2, #36	; 0x24
 8003e88:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	681b      	ldr	r3, [r3, #0]
 8003e90:	681a      	ldr	r2, [r3, #0]
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	681b      	ldr	r3, [r3, #0]
 8003e96:	f022 0201 	bic.w	r2, r2, #1
 8003e9a:	601a      	str	r2, [r3, #0]
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	681a      	ldr	r2, [r3, #0]
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003eaa:	601a      	str	r2, [r3, #0]
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	6819      	ldr	r1, [r3, #0]
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	681b      	ldr	r3, [r3, #0]
 8003eb6:	683a      	ldr	r2, [r7, #0]
 8003eb8:	430a      	orrs	r2, r1
 8003eba:	601a      	str	r2, [r3, #0]
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	681a      	ldr	r2, [r3, #0]
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f042 0201 	orr.w	r2, r2, #1
 8003eca:	601a      	str	r2, [r3, #0]
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	2220      	movs	r2, #32
 8003ed0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	2200      	movs	r2, #0
 8003ed8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003edc:	2300      	movs	r3, #0
 8003ede:	e000      	b.n	8003ee2 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003ee0:	2302      	movs	r3, #2
 8003ee2:	4618      	mov	r0, r3
 8003ee4:	370c      	adds	r7, #12
 8003ee6:	46bd      	mov	sp, r7
 8003ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eec:	4770      	bx	lr

08003eee <HAL_I2CEx_ConfigDigitalFilter>:
 8003eee:	b480      	push	{r7}
 8003ef0:	b085      	sub	sp, #20
 8003ef2:	af00      	add	r7, sp, #0
 8003ef4:	6078      	str	r0, [r7, #4]
 8003ef6:	6039      	str	r1, [r7, #0]
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003efe:	b2db      	uxtb	r3, r3
 8003f00:	2b20      	cmp	r3, #32
 8003f02:	d139      	bne.n	8003f78 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003f0a:	2b01      	cmp	r3, #1
 8003f0c:	d101      	bne.n	8003f12 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8003f0e:	2302      	movs	r3, #2
 8003f10:	e033      	b.n	8003f7a <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	2201      	movs	r2, #1
 8003f16:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	2224      	movs	r2, #36	; 0x24
 8003f1e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	681b      	ldr	r3, [r3, #0]
 8003f26:	681a      	ldr	r2, [r3, #0]
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	f022 0201 	bic.w	r2, r2, #1
 8003f30:	601a      	str	r2, [r3, #0]
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	60fb      	str	r3, [r7, #12]
 8003f3a:	68fb      	ldr	r3, [r7, #12]
 8003f3c:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8003f40:	60fb      	str	r3, [r7, #12]
 8003f42:	683b      	ldr	r3, [r7, #0]
 8003f44:	021b      	lsls	r3, r3, #8
 8003f46:	68fa      	ldr	r2, [r7, #12]
 8003f48:	4313      	orrs	r3, r2
 8003f4a:	60fb      	str	r3, [r7, #12]
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	681b      	ldr	r3, [r3, #0]
 8003f50:	68fa      	ldr	r2, [r7, #12]
 8003f52:	601a      	str	r2, [r3, #0]
 8003f54:	687b      	ldr	r3, [r7, #4]
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	681a      	ldr	r2, [r3, #0]
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	681b      	ldr	r3, [r3, #0]
 8003f5e:	f042 0201 	orr.w	r2, r2, #1
 8003f62:	601a      	str	r2, [r3, #0]
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	2220      	movs	r2, #32
 8003f68:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003f6c:	687b      	ldr	r3, [r7, #4]
 8003f6e:	2200      	movs	r2, #0
 8003f70:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003f74:	2300      	movs	r3, #0
 8003f76:	e000      	b.n	8003f7a <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003f78:	2302      	movs	r3, #2
 8003f7a:	4618      	mov	r0, r3
 8003f7c:	3714      	adds	r7, #20
 8003f7e:	46bd      	mov	sp, r7
 8003f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f84:	4770      	bx	lr
	...

08003f88 <HAL_I2S_Init>:
 8003f88:	b580      	push	{r7, lr}
 8003f8a:	b088      	sub	sp, #32
 8003f8c:	af00      	add	r7, sp, #0
 8003f8e:	6078      	str	r0, [r7, #4]
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	2b00      	cmp	r3, #0
 8003f94:	d101      	bne.n	8003f9a <HAL_I2S_Init+0x12>
 8003f96:	2301      	movs	r3, #1
 8003f98:	e0d2      	b.n	8004140 <HAL_I2S_Init+0x1b8>
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8003fa0:	b2db      	uxtb	r3, r3
 8003fa2:	2b00      	cmp	r3, #0
 8003fa4:	d106      	bne.n	8003fb4 <HAL_I2S_Init+0x2c>
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	2200      	movs	r2, #0
 8003faa:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003fae:	6878      	ldr	r0, [r7, #4]
 8003fb0:	f7fe fa9e 	bl	80024f0 <HAL_I2S_MspInit>
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	2202      	movs	r2, #2
 8003fb8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	69d9      	ldr	r1, [r3, #28]
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	681a      	ldr	r2, [r3, #0]
 8003fc6:	4b60      	ldr	r3, [pc, #384]	; (8004148 <HAL_I2S_Init+0x1c0>)
 8003fc8:	400b      	ands	r3, r1
 8003fca:	61d3      	str	r3, [r2, #28]
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	2202      	movs	r2, #2
 8003fd2:	621a      	str	r2, [r3, #32]
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	695b      	ldr	r3, [r3, #20]
 8003fd8:	2b02      	cmp	r3, #2
 8003fda:	d067      	beq.n	80040ac <HAL_I2S_Init+0x124>
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	68db      	ldr	r3, [r3, #12]
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	d102      	bne.n	8003fea <HAL_I2S_Init+0x62>
 8003fe4:	2310      	movs	r3, #16
 8003fe6:	617b      	str	r3, [r7, #20]
 8003fe8:	e001      	b.n	8003fee <HAL_I2S_Init+0x66>
 8003fea:	2320      	movs	r3, #32
 8003fec:	617b      	str	r3, [r7, #20]
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	689b      	ldr	r3, [r3, #8]
 8003ff2:	2b20      	cmp	r3, #32
 8003ff4:	d802      	bhi.n	8003ffc <HAL_I2S_Init+0x74>
 8003ff6:	697b      	ldr	r3, [r7, #20]
 8003ff8:	005b      	lsls	r3, r3, #1
 8003ffa:	617b      	str	r3, [r7, #20]
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	69db      	ldr	r3, [r3, #28]
 8004000:	2b01      	cmp	r3, #1
 8004002:	d102      	bne.n	800400a <HAL_I2S_Init+0x82>
 8004004:	4b51      	ldr	r3, [pc, #324]	; (800414c <HAL_I2S_Init+0x1c4>)
 8004006:	60fb      	str	r3, [r7, #12]
 8004008:	e003      	b.n	8004012 <HAL_I2S_Init+0x8a>
 800400a:	6878      	ldr	r0, [r7, #4]
 800400c:	f000 fa24 	bl	8004458 <I2S_GetClockFreq>
 8004010:	60f8      	str	r0, [r7, #12]
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	691b      	ldr	r3, [r3, #16]
 8004016:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800401a:	d125      	bne.n	8004068 <HAL_I2S_Init+0xe0>
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	68db      	ldr	r3, [r3, #12]
 8004020:	2b00      	cmp	r3, #0
 8004022:	d010      	beq.n	8004046 <HAL_I2S_Init+0xbe>
 8004024:	697b      	ldr	r3, [r7, #20]
 8004026:	009b      	lsls	r3, r3, #2
 8004028:	68fa      	ldr	r2, [r7, #12]
 800402a:	fbb2 f2f3 	udiv	r2, r2, r3
 800402e:	4613      	mov	r3, r2
 8004030:	009b      	lsls	r3, r3, #2
 8004032:	4413      	add	r3, r2
 8004034:	005b      	lsls	r3, r3, #1
 8004036:	461a      	mov	r2, r3
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	695b      	ldr	r3, [r3, #20]
 800403c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004040:	3305      	adds	r3, #5
 8004042:	613b      	str	r3, [r7, #16]
 8004044:	e01f      	b.n	8004086 <HAL_I2S_Init+0xfe>
 8004046:	697b      	ldr	r3, [r7, #20]
 8004048:	00db      	lsls	r3, r3, #3
 800404a:	68fa      	ldr	r2, [r7, #12]
 800404c:	fbb2 f2f3 	udiv	r2, r2, r3
 8004050:	4613      	mov	r3, r2
 8004052:	009b      	lsls	r3, r3, #2
 8004054:	4413      	add	r3, r2
 8004056:	005b      	lsls	r3, r3, #1
 8004058:	461a      	mov	r2, r3
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	695b      	ldr	r3, [r3, #20]
 800405e:	fbb2 f3f3 	udiv	r3, r2, r3
 8004062:	3305      	adds	r3, #5
 8004064:	613b      	str	r3, [r7, #16]
 8004066:	e00e      	b.n	8004086 <HAL_I2S_Init+0xfe>
 8004068:	68fa      	ldr	r2, [r7, #12]
 800406a:	697b      	ldr	r3, [r7, #20]
 800406c:	fbb2 f2f3 	udiv	r2, r2, r3
 8004070:	4613      	mov	r3, r2
 8004072:	009b      	lsls	r3, r3, #2
 8004074:	4413      	add	r3, r2
 8004076:	005b      	lsls	r3, r3, #1
 8004078:	461a      	mov	r2, r3
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	695b      	ldr	r3, [r3, #20]
 800407e:	fbb2 f3f3 	udiv	r3, r2, r3
 8004082:	3305      	adds	r3, #5
 8004084:	613b      	str	r3, [r7, #16]
 8004086:	693b      	ldr	r3, [r7, #16]
 8004088:	4a31      	ldr	r2, [pc, #196]	; (8004150 <HAL_I2S_Init+0x1c8>)
 800408a:	fba2 2303 	umull	r2, r3, r2, r3
 800408e:	08db      	lsrs	r3, r3, #3
 8004090:	613b      	str	r3, [r7, #16]
 8004092:	693b      	ldr	r3, [r7, #16]
 8004094:	f003 0301 	and.w	r3, r3, #1
 8004098:	61bb      	str	r3, [r7, #24]
 800409a:	693a      	ldr	r2, [r7, #16]
 800409c:	69bb      	ldr	r3, [r7, #24]
 800409e:	1ad3      	subs	r3, r2, r3
 80040a0:	085b      	lsrs	r3, r3, #1
 80040a2:	61fb      	str	r3, [r7, #28]
 80040a4:	69bb      	ldr	r3, [r7, #24]
 80040a6:	021b      	lsls	r3, r3, #8
 80040a8:	61bb      	str	r3, [r7, #24]
 80040aa:	e003      	b.n	80040b4 <HAL_I2S_Init+0x12c>
 80040ac:	2302      	movs	r3, #2
 80040ae:	61fb      	str	r3, [r7, #28]
 80040b0:	2300      	movs	r3, #0
 80040b2:	61bb      	str	r3, [r7, #24]
 80040b4:	69fb      	ldr	r3, [r7, #28]
 80040b6:	2b01      	cmp	r3, #1
 80040b8:	d902      	bls.n	80040c0 <HAL_I2S_Init+0x138>
 80040ba:	69fb      	ldr	r3, [r7, #28]
 80040bc:	2bff      	cmp	r3, #255	; 0xff
 80040be:	d907      	bls.n	80040d0 <HAL_I2S_Init+0x148>
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80040c4:	f043 0210 	orr.w	r2, r3, #16
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	63da      	str	r2, [r3, #60]	; 0x3c
 80040cc:	2301      	movs	r3, #1
 80040ce:	e037      	b.n	8004140 <HAL_I2S_Init+0x1b8>
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	691a      	ldr	r2, [r3, #16]
 80040d4:	69bb      	ldr	r3, [r7, #24]
 80040d6:	ea42 0103 	orr.w	r1, r2, r3
 80040da:	687b      	ldr	r3, [r7, #4]
 80040dc:	681b      	ldr	r3, [r3, #0]
 80040de:	69fa      	ldr	r2, [r7, #28]
 80040e0:	430a      	orrs	r2, r1
 80040e2:	621a      	str	r2, [r3, #32]
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	681b      	ldr	r3, [r3, #0]
 80040e8:	69da      	ldr	r2, [r3, #28]
 80040ea:	4b17      	ldr	r3, [pc, #92]	; (8004148 <HAL_I2S_Init+0x1c0>)
 80040ec:	4013      	ands	r3, r2
 80040ee:	687a      	ldr	r2, [r7, #4]
 80040f0:	6851      	ldr	r1, [r2, #4]
 80040f2:	687a      	ldr	r2, [r7, #4]
 80040f4:	6892      	ldr	r2, [r2, #8]
 80040f6:	4311      	orrs	r1, r2
 80040f8:	687a      	ldr	r2, [r7, #4]
 80040fa:	68d2      	ldr	r2, [r2, #12]
 80040fc:	4311      	orrs	r1, r2
 80040fe:	687a      	ldr	r2, [r7, #4]
 8004100:	6992      	ldr	r2, [r2, #24]
 8004102:	430a      	orrs	r2, r1
 8004104:	431a      	orrs	r2, r3
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	681b      	ldr	r3, [r3, #0]
 800410a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800410e:	61da      	str	r2, [r3, #28]
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	689b      	ldr	r3, [r3, #8]
 8004114:	2b30      	cmp	r3, #48	; 0x30
 8004116:	d003      	beq.n	8004120 <HAL_I2S_Init+0x198>
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	689b      	ldr	r3, [r3, #8]
 800411c:	2bb0      	cmp	r3, #176	; 0xb0
 800411e:	d107      	bne.n	8004130 <HAL_I2S_Init+0x1a8>
 8004120:	687b      	ldr	r3, [r7, #4]
 8004122:	681b      	ldr	r3, [r3, #0]
 8004124:	69da      	ldr	r2, [r3, #28]
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	681b      	ldr	r3, [r3, #0]
 800412a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800412e:	61da      	str	r2, [r3, #28]
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	2200      	movs	r2, #0
 8004134:	63da      	str	r2, [r3, #60]	; 0x3c
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	2201      	movs	r2, #1
 800413a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800413e:	2300      	movs	r3, #0
 8004140:	4618      	mov	r0, r3
 8004142:	3720      	adds	r7, #32
 8004144:	46bd      	mov	sp, r7
 8004146:	bd80      	pop	{r7, pc}
 8004148:	fffff040 	.word	0xfffff040
 800414c:	00bb8000 	.word	0x00bb8000
 8004150:	cccccccd 	.word	0xcccccccd

08004154 <HAL_I2S_Transmit_DMA>:
 8004154:	b580      	push	{r7, lr}
 8004156:	b086      	sub	sp, #24
 8004158:	af00      	add	r7, sp, #0
 800415a:	60f8      	str	r0, [r7, #12]
 800415c:	60b9      	str	r1, [r7, #8]
 800415e:	4613      	mov	r3, r2
 8004160:	80fb      	strh	r3, [r7, #6]
 8004162:	68bb      	ldr	r3, [r7, #8]
 8004164:	2b00      	cmp	r3, #0
 8004166:	d002      	beq.n	800416e <HAL_I2S_Transmit_DMA+0x1a>
 8004168:	88fb      	ldrh	r3, [r7, #6]
 800416a:	2b00      	cmp	r3, #0
 800416c:	d101      	bne.n	8004172 <HAL_I2S_Transmit_DMA+0x1e>
 800416e:	2301      	movs	r3, #1
 8004170:	e08e      	b.n	8004290 <HAL_I2S_Transmit_DMA+0x13c>
 8004172:	68fb      	ldr	r3, [r7, #12]
 8004174:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8004178:	b2db      	uxtb	r3, r3
 800417a:	2b01      	cmp	r3, #1
 800417c:	d101      	bne.n	8004182 <HAL_I2S_Transmit_DMA+0x2e>
 800417e:	2302      	movs	r3, #2
 8004180:	e086      	b.n	8004290 <HAL_I2S_Transmit_DMA+0x13c>
 8004182:	68fb      	ldr	r3, [r7, #12]
 8004184:	2201      	movs	r2, #1
 8004186:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800418a:	68fb      	ldr	r3, [r7, #12]
 800418c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8004190:	b2db      	uxtb	r3, r3
 8004192:	2b01      	cmp	r3, #1
 8004194:	d005      	beq.n	80041a2 <HAL_I2S_Transmit_DMA+0x4e>
 8004196:	68fb      	ldr	r3, [r7, #12]
 8004198:	2200      	movs	r2, #0
 800419a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800419e:	2302      	movs	r3, #2
 80041a0:	e076      	b.n	8004290 <HAL_I2S_Transmit_DMA+0x13c>
 80041a2:	68fb      	ldr	r3, [r7, #12]
 80041a4:	2203      	movs	r2, #3
 80041a6:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80041aa:	68fb      	ldr	r3, [r7, #12]
 80041ac:	2200      	movs	r2, #0
 80041ae:	63da      	str	r2, [r3, #60]	; 0x3c
 80041b0:	68fb      	ldr	r3, [r7, #12]
 80041b2:	68ba      	ldr	r2, [r7, #8]
 80041b4:	621a      	str	r2, [r3, #32]
 80041b6:	68fb      	ldr	r3, [r7, #12]
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	69db      	ldr	r3, [r3, #28]
 80041bc:	f003 0307 	and.w	r3, r3, #7
 80041c0:	617b      	str	r3, [r7, #20]
 80041c2:	697b      	ldr	r3, [r7, #20]
 80041c4:	2b03      	cmp	r3, #3
 80041c6:	d002      	beq.n	80041ce <HAL_I2S_Transmit_DMA+0x7a>
 80041c8:	697b      	ldr	r3, [r7, #20]
 80041ca:	2b05      	cmp	r3, #5
 80041cc:	d10a      	bne.n	80041e4 <HAL_I2S_Transmit_DMA+0x90>
 80041ce:	88fb      	ldrh	r3, [r7, #6]
 80041d0:	005b      	lsls	r3, r3, #1
 80041d2:	b29a      	uxth	r2, r3
 80041d4:	68fb      	ldr	r3, [r7, #12]
 80041d6:	849a      	strh	r2, [r3, #36]	; 0x24
 80041d8:	88fb      	ldrh	r3, [r7, #6]
 80041da:	005b      	lsls	r3, r3, #1
 80041dc:	b29a      	uxth	r2, r3
 80041de:	68fb      	ldr	r3, [r7, #12]
 80041e0:	84da      	strh	r2, [r3, #38]	; 0x26
 80041e2:	e005      	b.n	80041f0 <HAL_I2S_Transmit_DMA+0x9c>
 80041e4:	68fb      	ldr	r3, [r7, #12]
 80041e6:	88fa      	ldrh	r2, [r7, #6]
 80041e8:	849a      	strh	r2, [r3, #36]	; 0x24
 80041ea:	68fb      	ldr	r3, [r7, #12]
 80041ec:	88fa      	ldrh	r2, [r7, #6]
 80041ee:	84da      	strh	r2, [r3, #38]	; 0x26
 80041f0:	68fb      	ldr	r3, [r7, #12]
 80041f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80041f4:	4a28      	ldr	r2, [pc, #160]	; (8004298 <HAL_I2S_Transmit_DMA+0x144>)
 80041f6:	641a      	str	r2, [r3, #64]	; 0x40
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80041fc:	4a27      	ldr	r2, [pc, #156]	; (800429c <HAL_I2S_Transmit_DMA+0x148>)
 80041fe:	63da      	str	r2, [r3, #60]	; 0x3c
 8004200:	68fb      	ldr	r3, [r7, #12]
 8004202:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004204:	4a26      	ldr	r2, [pc, #152]	; (80042a0 <HAL_I2S_Transmit_DMA+0x14c>)
 8004206:	64da      	str	r2, [r3, #76]	; 0x4c
 8004208:	68fb      	ldr	r3, [r7, #12]
 800420a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800420c:	68fb      	ldr	r3, [r7, #12]
 800420e:	6a1b      	ldr	r3, [r3, #32]
 8004210:	4619      	mov	r1, r3
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	681b      	ldr	r3, [r3, #0]
 8004216:	330c      	adds	r3, #12
 8004218:	461a      	mov	r2, r3
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800421e:	b29b      	uxth	r3, r3
 8004220:	f7fe fd80 	bl	8002d24 <HAL_DMA_Start_IT>
 8004224:	4603      	mov	r3, r0
 8004226:	2b00      	cmp	r3, #0
 8004228:	d00f      	beq.n	800424a <HAL_I2S_Transmit_DMA+0xf6>
 800422a:	68fb      	ldr	r3, [r7, #12]
 800422c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800422e:	f043 0208 	orr.w	r2, r3, #8
 8004232:	68fb      	ldr	r3, [r7, #12]
 8004234:	63da      	str	r2, [r3, #60]	; 0x3c
 8004236:	68fb      	ldr	r3, [r7, #12]
 8004238:	2201      	movs	r2, #1
 800423a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800423e:	68fb      	ldr	r3, [r7, #12]
 8004240:	2200      	movs	r2, #0
 8004242:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004246:	2301      	movs	r3, #1
 8004248:	e022      	b.n	8004290 <HAL_I2S_Transmit_DMA+0x13c>
 800424a:	68fb      	ldr	r3, [r7, #12]
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	69db      	ldr	r3, [r3, #28]
 8004250:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004254:	2b00      	cmp	r3, #0
 8004256:	d107      	bne.n	8004268 <HAL_I2S_Transmit_DMA+0x114>
 8004258:	68fb      	ldr	r3, [r7, #12]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	69da      	ldr	r2, [r3, #28]
 800425e:	68fb      	ldr	r3, [r7, #12]
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004266:	61da      	str	r2, [r3, #28]
 8004268:	68fb      	ldr	r3, [r7, #12]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	685b      	ldr	r3, [r3, #4]
 800426e:	f003 0302 	and.w	r3, r3, #2
 8004272:	2b00      	cmp	r3, #0
 8004274:	d107      	bne.n	8004286 <HAL_I2S_Transmit_DMA+0x132>
 8004276:	68fb      	ldr	r3, [r7, #12]
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	685a      	ldr	r2, [r3, #4]
 800427c:	68fb      	ldr	r3, [r7, #12]
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	f042 0202 	orr.w	r2, r2, #2
 8004284:	605a      	str	r2, [r3, #4]
 8004286:	68fb      	ldr	r3, [r7, #12]
 8004288:	2200      	movs	r2, #0
 800428a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800428e:	2300      	movs	r3, #0
 8004290:	4618      	mov	r0, r3
 8004292:	3718      	adds	r7, #24
 8004294:	46bd      	mov	sp, r7
 8004296:	bd80      	pop	{r7, pc}
 8004298:	08004533 	.word	0x08004533
 800429c:	080044f1 	.word	0x080044f1
 80042a0:	080045ad 	.word	0x080045ad

080042a4 <HAL_I2S_Receive_DMA>:
 80042a4:	b580      	push	{r7, lr}
 80042a6:	b086      	sub	sp, #24
 80042a8:	af00      	add	r7, sp, #0
 80042aa:	60f8      	str	r0, [r7, #12]
 80042ac:	60b9      	str	r1, [r7, #8]
 80042ae:	4613      	mov	r3, r2
 80042b0:	80fb      	strh	r3, [r7, #6]
 80042b2:	68bb      	ldr	r3, [r7, #8]
 80042b4:	2b00      	cmp	r3, #0
 80042b6:	d002      	beq.n	80042be <HAL_I2S_Receive_DMA+0x1a>
 80042b8:	88fb      	ldrh	r3, [r7, #6]
 80042ba:	2b00      	cmp	r3, #0
 80042bc:	d101      	bne.n	80042c2 <HAL_I2S_Receive_DMA+0x1e>
 80042be:	2301      	movs	r3, #1
 80042c0:	e0a1      	b.n	8004406 <HAL_I2S_Receive_DMA+0x162>
 80042c2:	68fb      	ldr	r3, [r7, #12]
 80042c4:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80042c8:	b2db      	uxtb	r3, r3
 80042ca:	2b01      	cmp	r3, #1
 80042cc:	d101      	bne.n	80042d2 <HAL_I2S_Receive_DMA+0x2e>
 80042ce:	2302      	movs	r3, #2
 80042d0:	e099      	b.n	8004406 <HAL_I2S_Receive_DMA+0x162>
 80042d2:	68fb      	ldr	r3, [r7, #12]
 80042d4:	2201      	movs	r2, #1
 80042d6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80042da:	68fb      	ldr	r3, [r7, #12]
 80042dc:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80042e0:	b2db      	uxtb	r3, r3
 80042e2:	2b01      	cmp	r3, #1
 80042e4:	d005      	beq.n	80042f2 <HAL_I2S_Receive_DMA+0x4e>
 80042e6:	68fb      	ldr	r3, [r7, #12]
 80042e8:	2200      	movs	r2, #0
 80042ea:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80042ee:	2302      	movs	r3, #2
 80042f0:	e089      	b.n	8004406 <HAL_I2S_Receive_DMA+0x162>
 80042f2:	68fb      	ldr	r3, [r7, #12]
 80042f4:	2204      	movs	r2, #4
 80042f6:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80042fa:	68fb      	ldr	r3, [r7, #12]
 80042fc:	2200      	movs	r2, #0
 80042fe:	63da      	str	r2, [r3, #60]	; 0x3c
 8004300:	68fb      	ldr	r3, [r7, #12]
 8004302:	68ba      	ldr	r2, [r7, #8]
 8004304:	629a      	str	r2, [r3, #40]	; 0x28
 8004306:	68fb      	ldr	r3, [r7, #12]
 8004308:	681b      	ldr	r3, [r3, #0]
 800430a:	69db      	ldr	r3, [r3, #28]
 800430c:	f003 0307 	and.w	r3, r3, #7
 8004310:	617b      	str	r3, [r7, #20]
 8004312:	697b      	ldr	r3, [r7, #20]
 8004314:	2b03      	cmp	r3, #3
 8004316:	d002      	beq.n	800431e <HAL_I2S_Receive_DMA+0x7a>
 8004318:	697b      	ldr	r3, [r7, #20]
 800431a:	2b05      	cmp	r3, #5
 800431c:	d10a      	bne.n	8004334 <HAL_I2S_Receive_DMA+0x90>
 800431e:	88fb      	ldrh	r3, [r7, #6]
 8004320:	005b      	lsls	r3, r3, #1
 8004322:	b29a      	uxth	r2, r3
 8004324:	68fb      	ldr	r3, [r7, #12]
 8004326:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004328:	88fb      	ldrh	r3, [r7, #6]
 800432a:	005b      	lsls	r3, r3, #1
 800432c:	b29a      	uxth	r2, r3
 800432e:	68fb      	ldr	r3, [r7, #12]
 8004330:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004332:	e005      	b.n	8004340 <HAL_I2S_Receive_DMA+0x9c>
 8004334:	68fb      	ldr	r3, [r7, #12]
 8004336:	88fa      	ldrh	r2, [r7, #6]
 8004338:	859a      	strh	r2, [r3, #44]	; 0x2c
 800433a:	68fb      	ldr	r3, [r7, #12]
 800433c:	88fa      	ldrh	r2, [r7, #6]
 800433e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004340:	68fb      	ldr	r3, [r7, #12]
 8004342:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004344:	4a32      	ldr	r2, [pc, #200]	; (8004410 <HAL_I2S_Receive_DMA+0x16c>)
 8004346:	641a      	str	r2, [r3, #64]	; 0x40
 8004348:	68fb      	ldr	r3, [r7, #12]
 800434a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800434c:	4a31      	ldr	r2, [pc, #196]	; (8004414 <HAL_I2S_Receive_DMA+0x170>)
 800434e:	63da      	str	r2, [r3, #60]	; 0x3c
 8004350:	68fb      	ldr	r3, [r7, #12]
 8004352:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004354:	4a30      	ldr	r2, [pc, #192]	; (8004418 <HAL_I2S_Receive_DMA+0x174>)
 8004356:	64da      	str	r2, [r3, #76]	; 0x4c
 8004358:	68fb      	ldr	r3, [r7, #12]
 800435a:	681b      	ldr	r3, [r3, #0]
 800435c:	69db      	ldr	r3, [r3, #28]
 800435e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004362:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8004366:	d10a      	bne.n	800437e <HAL_I2S_Receive_DMA+0xda>
 8004368:	2300      	movs	r3, #0
 800436a:	613b      	str	r3, [r7, #16]
 800436c:	68fb      	ldr	r3, [r7, #12]
 800436e:	681b      	ldr	r3, [r3, #0]
 8004370:	68db      	ldr	r3, [r3, #12]
 8004372:	613b      	str	r3, [r7, #16]
 8004374:	68fb      	ldr	r3, [r7, #12]
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	689b      	ldr	r3, [r3, #8]
 800437a:	613b      	str	r3, [r7, #16]
 800437c:	693b      	ldr	r3, [r7, #16]
 800437e:	68fb      	ldr	r3, [r7, #12]
 8004380:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8004382:	68fb      	ldr	r3, [r7, #12]
 8004384:	681b      	ldr	r3, [r3, #0]
 8004386:	330c      	adds	r3, #12
 8004388:	4619      	mov	r1, r3
 800438a:	68fb      	ldr	r3, [r7, #12]
 800438c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800438e:	461a      	mov	r2, r3
 8004390:	68fb      	ldr	r3, [r7, #12]
 8004392:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004394:	b29b      	uxth	r3, r3
 8004396:	f7fe fcc5 	bl	8002d24 <HAL_DMA_Start_IT>
 800439a:	4603      	mov	r3, r0
 800439c:	2b00      	cmp	r3, #0
 800439e:	d00f      	beq.n	80043c0 <HAL_I2S_Receive_DMA+0x11c>
 80043a0:	68fb      	ldr	r3, [r7, #12]
 80043a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80043a4:	f043 0208 	orr.w	r2, r3, #8
 80043a8:	68fb      	ldr	r3, [r7, #12]
 80043aa:	63da      	str	r2, [r3, #60]	; 0x3c
 80043ac:	68fb      	ldr	r3, [r7, #12]
 80043ae:	2201      	movs	r2, #1
 80043b0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80043b4:	68fb      	ldr	r3, [r7, #12]
 80043b6:	2200      	movs	r2, #0
 80043b8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80043bc:	2301      	movs	r3, #1
 80043be:	e022      	b.n	8004406 <HAL_I2S_Receive_DMA+0x162>
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	681b      	ldr	r3, [r3, #0]
 80043c4:	69db      	ldr	r3, [r3, #28]
 80043c6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80043ca:	2b00      	cmp	r3, #0
 80043cc:	d107      	bne.n	80043de <HAL_I2S_Receive_DMA+0x13a>
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	681b      	ldr	r3, [r3, #0]
 80043d2:	69da      	ldr	r2, [r3, #28]
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80043dc:	61da      	str	r2, [r3, #28]
 80043de:	68fb      	ldr	r3, [r7, #12]
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	685b      	ldr	r3, [r3, #4]
 80043e4:	f003 0301 	and.w	r3, r3, #1
 80043e8:	2b00      	cmp	r3, #0
 80043ea:	d107      	bne.n	80043fc <HAL_I2S_Receive_DMA+0x158>
 80043ec:	68fb      	ldr	r3, [r7, #12]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	685a      	ldr	r2, [r3, #4]
 80043f2:	68fb      	ldr	r3, [r7, #12]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	f042 0201 	orr.w	r2, r2, #1
 80043fa:	605a      	str	r2, [r3, #4]
 80043fc:	68fb      	ldr	r3, [r7, #12]
 80043fe:	2200      	movs	r2, #0
 8004400:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004404:	2300      	movs	r3, #0
 8004406:	4618      	mov	r0, r3
 8004408:	3718      	adds	r7, #24
 800440a:	46bd      	mov	sp, r7
 800440c:	bd80      	pop	{r7, pc}
 800440e:	bf00      	nop
 8004410:	08004591 	.word	0x08004591
 8004414:	0800454f 	.word	0x0800454f
 8004418:	080045ad 	.word	0x080045ad

0800441c <HAL_I2S_TxHalfCpltCallback>:
 800441c:	b480      	push	{r7}
 800441e:	b083      	sub	sp, #12
 8004420:	af00      	add	r7, sp, #0
 8004422:	6078      	str	r0, [r7, #4]
 8004424:	bf00      	nop
 8004426:	370c      	adds	r7, #12
 8004428:	46bd      	mov	sp, r7
 800442a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800442e:	4770      	bx	lr

08004430 <HAL_I2S_TxCpltCallback>:
 8004430:	b480      	push	{r7}
 8004432:	b083      	sub	sp, #12
 8004434:	af00      	add	r7, sp, #0
 8004436:	6078      	str	r0, [r7, #4]
 8004438:	bf00      	nop
 800443a:	370c      	adds	r7, #12
 800443c:	46bd      	mov	sp, r7
 800443e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004442:	4770      	bx	lr

08004444 <HAL_I2S_ErrorCallback>:
 8004444:	b480      	push	{r7}
 8004446:	b083      	sub	sp, #12
 8004448:	af00      	add	r7, sp, #0
 800444a:	6078      	str	r0, [r7, #4]
 800444c:	bf00      	nop
 800444e:	370c      	adds	r7, #12
 8004450:	46bd      	mov	sp, r7
 8004452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004456:	4770      	bx	lr

08004458 <I2S_GetClockFreq>:
 8004458:	b480      	push	{r7}
 800445a:	b087      	sub	sp, #28
 800445c:	af00      	add	r7, sp, #0
 800445e:	6078      	str	r0, [r7, #4]
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	69db      	ldr	r3, [r3, #28]
 8004464:	2b01      	cmp	r3, #1
 8004466:	d02d      	beq.n	80044c4 <I2S_GetClockFreq+0x6c>
 8004468:	2b02      	cmp	r3, #2
 800446a:	d12e      	bne.n	80044ca <I2S_GetClockFreq+0x72>
 800446c:	4b1c      	ldr	r3, [pc, #112]	; (80044e0 <I2S_GetClockFreq+0x88>)
 800446e:	685b      	ldr	r3, [r3, #4]
 8004470:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004474:	2b00      	cmp	r3, #0
 8004476:	d108      	bne.n	800448a <I2S_GetClockFreq+0x32>
 8004478:	4b19      	ldr	r3, [pc, #100]	; (80044e0 <I2S_GetClockFreq+0x88>)
 800447a:	685b      	ldr	r3, [r3, #4]
 800447c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004480:	4a18      	ldr	r2, [pc, #96]	; (80044e4 <I2S_GetClockFreq+0x8c>)
 8004482:	fbb2 f3f3 	udiv	r3, r2, r3
 8004486:	617b      	str	r3, [r7, #20]
 8004488:	e007      	b.n	800449a <I2S_GetClockFreq+0x42>
 800448a:	4b15      	ldr	r3, [pc, #84]	; (80044e0 <I2S_GetClockFreq+0x88>)
 800448c:	685b      	ldr	r3, [r3, #4]
 800448e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004492:	4a15      	ldr	r2, [pc, #84]	; (80044e8 <I2S_GetClockFreq+0x90>)
 8004494:	fbb2 f3f3 	udiv	r3, r2, r3
 8004498:	617b      	str	r3, [r7, #20]
 800449a:	4b11      	ldr	r3, [pc, #68]	; (80044e0 <I2S_GetClockFreq+0x88>)
 800449c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80044a0:	0f1b      	lsrs	r3, r3, #28
 80044a2:	f003 0307 	and.w	r3, r3, #7
 80044a6:	60fb      	str	r3, [r7, #12]
 80044a8:	4b0d      	ldr	r3, [pc, #52]	; (80044e0 <I2S_GetClockFreq+0x88>)
 80044aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80044ae:	099b      	lsrs	r3, r3, #6
 80044b0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80044b4:	697a      	ldr	r2, [r7, #20]
 80044b6:	fb03 f202 	mul.w	r2, r3, r2
 80044ba:	68fb      	ldr	r3, [r7, #12]
 80044bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80044c0:	613b      	str	r3, [r7, #16]
 80044c2:	e005      	b.n	80044d0 <I2S_GetClockFreq+0x78>
 80044c4:	4b09      	ldr	r3, [pc, #36]	; (80044ec <I2S_GetClockFreq+0x94>)
 80044c6:	613b      	str	r3, [r7, #16]
 80044c8:	e002      	b.n	80044d0 <I2S_GetClockFreq+0x78>
 80044ca:	2300      	movs	r3, #0
 80044cc:	613b      	str	r3, [r7, #16]
 80044ce:	bf00      	nop
 80044d0:	693b      	ldr	r3, [r7, #16]
 80044d2:	4618      	mov	r0, r3
 80044d4:	371c      	adds	r7, #28
 80044d6:	46bd      	mov	sp, r7
 80044d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044dc:	4770      	bx	lr
 80044de:	bf00      	nop
 80044e0:	40023800 	.word	0x40023800
 80044e4:	00f42400 	.word	0x00f42400
 80044e8:	017d7840 	.word	0x017d7840
 80044ec:	00bb8000 	.word	0x00bb8000

080044f0 <I2S_DMATxCplt>:
 80044f0:	b580      	push	{r7, lr}
 80044f2:	b084      	sub	sp, #16
 80044f4:	af00      	add	r7, sp, #0
 80044f6:	6078      	str	r0, [r7, #4]
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80044fc:	60fb      	str	r3, [r7, #12]
 80044fe:	687b      	ldr	r3, [r7, #4]
 8004500:	69db      	ldr	r3, [r3, #28]
 8004502:	2b00      	cmp	r3, #0
 8004504:	d10e      	bne.n	8004524 <I2S_DMATxCplt+0x34>
 8004506:	68fb      	ldr	r3, [r7, #12]
 8004508:	681b      	ldr	r3, [r3, #0]
 800450a:	685a      	ldr	r2, [r3, #4]
 800450c:	68fb      	ldr	r3, [r7, #12]
 800450e:	681b      	ldr	r3, [r3, #0]
 8004510:	f022 0202 	bic.w	r2, r2, #2
 8004514:	605a      	str	r2, [r3, #4]
 8004516:	68fb      	ldr	r3, [r7, #12]
 8004518:	2200      	movs	r2, #0
 800451a:	84da      	strh	r2, [r3, #38]	; 0x26
 800451c:	68fb      	ldr	r3, [r7, #12]
 800451e:	2201      	movs	r2, #1
 8004520:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004524:	68f8      	ldr	r0, [r7, #12]
 8004526:	f7ff ff83 	bl	8004430 <HAL_I2S_TxCpltCallback>
 800452a:	bf00      	nop
 800452c:	3710      	adds	r7, #16
 800452e:	46bd      	mov	sp, r7
 8004530:	bd80      	pop	{r7, pc}

08004532 <I2S_DMATxHalfCplt>:
 8004532:	b580      	push	{r7, lr}
 8004534:	b084      	sub	sp, #16
 8004536:	af00      	add	r7, sp, #0
 8004538:	6078      	str	r0, [r7, #4]
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800453e:	60fb      	str	r3, [r7, #12]
 8004540:	68f8      	ldr	r0, [r7, #12]
 8004542:	f7ff ff6b 	bl	800441c <HAL_I2S_TxHalfCpltCallback>
 8004546:	bf00      	nop
 8004548:	3710      	adds	r7, #16
 800454a:	46bd      	mov	sp, r7
 800454c:	bd80      	pop	{r7, pc}

0800454e <I2S_DMARxCplt>:
 800454e:	b580      	push	{r7, lr}
 8004550:	b084      	sub	sp, #16
 8004552:	af00      	add	r7, sp, #0
 8004554:	6078      	str	r0, [r7, #4]
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800455a:	60fb      	str	r3, [r7, #12]
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	69db      	ldr	r3, [r3, #28]
 8004560:	2b00      	cmp	r3, #0
 8004562:	d10e      	bne.n	8004582 <I2S_DMARxCplt+0x34>
 8004564:	68fb      	ldr	r3, [r7, #12]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	685a      	ldr	r2, [r3, #4]
 800456a:	68fb      	ldr	r3, [r7, #12]
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	f022 0201 	bic.w	r2, r2, #1
 8004572:	605a      	str	r2, [r3, #4]
 8004574:	68fb      	ldr	r3, [r7, #12]
 8004576:	2200      	movs	r2, #0
 8004578:	85da      	strh	r2, [r3, #46]	; 0x2e
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	2201      	movs	r2, #1
 800457e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004582:	68f8      	ldr	r0, [r7, #12]
 8004584:	f7fc fde2 	bl	800114c <HAL_I2S_RxCpltCallback>
 8004588:	bf00      	nop
 800458a:	3710      	adds	r7, #16
 800458c:	46bd      	mov	sp, r7
 800458e:	bd80      	pop	{r7, pc}

08004590 <I2S_DMARxHalfCplt>:
 8004590:	b580      	push	{r7, lr}
 8004592:	b084      	sub	sp, #16
 8004594:	af00      	add	r7, sp, #0
 8004596:	6078      	str	r0, [r7, #4]
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800459c:	60fb      	str	r3, [r7, #12]
 800459e:	68f8      	ldr	r0, [r7, #12]
 80045a0:	f7fc fdb6 	bl	8001110 <HAL_I2S_RxHalfCpltCallback>
 80045a4:	bf00      	nop
 80045a6:	3710      	adds	r7, #16
 80045a8:	46bd      	mov	sp, r7
 80045aa:	bd80      	pop	{r7, pc}

080045ac <I2S_DMAError>:
 80045ac:	b580      	push	{r7, lr}
 80045ae:	b084      	sub	sp, #16
 80045b0:	af00      	add	r7, sp, #0
 80045b2:	6078      	str	r0, [r7, #4]
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80045b8:	60fb      	str	r3, [r7, #12]
 80045ba:	68fb      	ldr	r3, [r7, #12]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	685a      	ldr	r2, [r3, #4]
 80045c0:	68fb      	ldr	r3, [r7, #12]
 80045c2:	681b      	ldr	r3, [r3, #0]
 80045c4:	f022 0203 	bic.w	r2, r2, #3
 80045c8:	605a      	str	r2, [r3, #4]
 80045ca:	68fb      	ldr	r3, [r7, #12]
 80045cc:	2200      	movs	r2, #0
 80045ce:	84da      	strh	r2, [r3, #38]	; 0x26
 80045d0:	68fb      	ldr	r3, [r7, #12]
 80045d2:	2200      	movs	r2, #0
 80045d4:	85da      	strh	r2, [r3, #46]	; 0x2e
 80045d6:	68fb      	ldr	r3, [r7, #12]
 80045d8:	2201      	movs	r2, #1
 80045da:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80045de:	68fb      	ldr	r3, [r7, #12]
 80045e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80045e2:	f043 0208 	orr.w	r2, r3, #8
 80045e6:	68fb      	ldr	r3, [r7, #12]
 80045e8:	63da      	str	r2, [r3, #60]	; 0x3c
 80045ea:	68f8      	ldr	r0, [r7, #12]
 80045ec:	f7ff ff2a 	bl	8004444 <HAL_I2S_ErrorCallback>
 80045f0:	bf00      	nop
 80045f2:	3710      	adds	r7, #16
 80045f4:	46bd      	mov	sp, r7
 80045f6:	bd80      	pop	{r7, pc}

080045f8 <HAL_PWREx_EnableOverDrive>:
 80045f8:	b580      	push	{r7, lr}
 80045fa:	b082      	sub	sp, #8
 80045fc:	af00      	add	r7, sp, #0
 80045fe:	2300      	movs	r3, #0
 8004600:	607b      	str	r3, [r7, #4]
 8004602:	4b23      	ldr	r3, [pc, #140]	; (8004690 <HAL_PWREx_EnableOverDrive+0x98>)
 8004604:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004606:	4a22      	ldr	r2, [pc, #136]	; (8004690 <HAL_PWREx_EnableOverDrive+0x98>)
 8004608:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800460c:	6413      	str	r3, [r2, #64]	; 0x40
 800460e:	4b20      	ldr	r3, [pc, #128]	; (8004690 <HAL_PWREx_EnableOverDrive+0x98>)
 8004610:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004612:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004616:	603b      	str	r3, [r7, #0]
 8004618:	683b      	ldr	r3, [r7, #0]
 800461a:	4b1e      	ldr	r3, [pc, #120]	; (8004694 <HAL_PWREx_EnableOverDrive+0x9c>)
 800461c:	681b      	ldr	r3, [r3, #0]
 800461e:	4a1d      	ldr	r2, [pc, #116]	; (8004694 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004620:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004624:	6013      	str	r3, [r2, #0]
 8004626:	f7fe f98d 	bl	8002944 <HAL_GetTick>
 800462a:	6078      	str	r0, [r7, #4]
 800462c:	e009      	b.n	8004642 <HAL_PWREx_EnableOverDrive+0x4a>
 800462e:	f7fe f989 	bl	8002944 <HAL_GetTick>
 8004632:	4602      	mov	r2, r0
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	1ad3      	subs	r3, r2, r3
 8004638:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800463c:	d901      	bls.n	8004642 <HAL_PWREx_EnableOverDrive+0x4a>
 800463e:	2303      	movs	r3, #3
 8004640:	e022      	b.n	8004688 <HAL_PWREx_EnableOverDrive+0x90>
 8004642:	4b14      	ldr	r3, [pc, #80]	; (8004694 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004644:	685b      	ldr	r3, [r3, #4]
 8004646:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800464a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800464e:	d1ee      	bne.n	800462e <HAL_PWREx_EnableOverDrive+0x36>
 8004650:	4b10      	ldr	r3, [pc, #64]	; (8004694 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	4a0f      	ldr	r2, [pc, #60]	; (8004694 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004656:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800465a:	6013      	str	r3, [r2, #0]
 800465c:	f7fe f972 	bl	8002944 <HAL_GetTick>
 8004660:	6078      	str	r0, [r7, #4]
 8004662:	e009      	b.n	8004678 <HAL_PWREx_EnableOverDrive+0x80>
 8004664:	f7fe f96e 	bl	8002944 <HAL_GetTick>
 8004668:	4602      	mov	r2, r0
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	1ad3      	subs	r3, r2, r3
 800466e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004672:	d901      	bls.n	8004678 <HAL_PWREx_EnableOverDrive+0x80>
 8004674:	2303      	movs	r3, #3
 8004676:	e007      	b.n	8004688 <HAL_PWREx_EnableOverDrive+0x90>
 8004678:	4b06      	ldr	r3, [pc, #24]	; (8004694 <HAL_PWREx_EnableOverDrive+0x9c>)
 800467a:	685b      	ldr	r3, [r3, #4]
 800467c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004680:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8004684:	d1ee      	bne.n	8004664 <HAL_PWREx_EnableOverDrive+0x6c>
 8004686:	2300      	movs	r3, #0
 8004688:	4618      	mov	r0, r3
 800468a:	3708      	adds	r7, #8
 800468c:	46bd      	mov	sp, r7
 800468e:	bd80      	pop	{r7, pc}
 8004690:	40023800 	.word	0x40023800
 8004694:	40007000 	.word	0x40007000

08004698 <HAL_RCC_OscConfig>:
 8004698:	b580      	push	{r7, lr}
 800469a:	b086      	sub	sp, #24
 800469c:	af00      	add	r7, sp, #0
 800469e:	6078      	str	r0, [r7, #4]
 80046a0:	2300      	movs	r3, #0
 80046a2:	75fb      	strb	r3, [r7, #23]
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	2b00      	cmp	r3, #0
 80046a8:	d101      	bne.n	80046ae <HAL_RCC_OscConfig+0x16>
 80046aa:	2301      	movs	r3, #1
 80046ac:	e291      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	f003 0301 	and.w	r3, r3, #1
 80046b6:	2b00      	cmp	r3, #0
 80046b8:	f000 8087 	beq.w	80047ca <HAL_RCC_OscConfig+0x132>
 80046bc:	4b96      	ldr	r3, [pc, #600]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80046be:	689b      	ldr	r3, [r3, #8]
 80046c0:	f003 030c 	and.w	r3, r3, #12
 80046c4:	2b04      	cmp	r3, #4
 80046c6:	d00c      	beq.n	80046e2 <HAL_RCC_OscConfig+0x4a>
 80046c8:	4b93      	ldr	r3, [pc, #588]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80046ca:	689b      	ldr	r3, [r3, #8]
 80046cc:	f003 030c 	and.w	r3, r3, #12
 80046d0:	2b08      	cmp	r3, #8
 80046d2:	d112      	bne.n	80046fa <HAL_RCC_OscConfig+0x62>
 80046d4:	4b90      	ldr	r3, [pc, #576]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80046d6:	685b      	ldr	r3, [r3, #4]
 80046d8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80046dc:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80046e0:	d10b      	bne.n	80046fa <HAL_RCC_OscConfig+0x62>
 80046e2:	4b8d      	ldr	r3, [pc, #564]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80046e4:	681b      	ldr	r3, [r3, #0]
 80046e6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80046ea:	2b00      	cmp	r3, #0
 80046ec:	d06c      	beq.n	80047c8 <HAL_RCC_OscConfig+0x130>
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	685b      	ldr	r3, [r3, #4]
 80046f2:	2b00      	cmp	r3, #0
 80046f4:	d168      	bne.n	80047c8 <HAL_RCC_OscConfig+0x130>
 80046f6:	2301      	movs	r3, #1
 80046f8:	e26b      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	685b      	ldr	r3, [r3, #4]
 80046fe:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004702:	d106      	bne.n	8004712 <HAL_RCC_OscConfig+0x7a>
 8004704:	4b84      	ldr	r3, [pc, #528]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004706:	681b      	ldr	r3, [r3, #0]
 8004708:	4a83      	ldr	r2, [pc, #524]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 800470a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800470e:	6013      	str	r3, [r2, #0]
 8004710:	e02e      	b.n	8004770 <HAL_RCC_OscConfig+0xd8>
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	685b      	ldr	r3, [r3, #4]
 8004716:	2b00      	cmp	r3, #0
 8004718:	d10c      	bne.n	8004734 <HAL_RCC_OscConfig+0x9c>
 800471a:	4b7f      	ldr	r3, [pc, #508]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	4a7e      	ldr	r2, [pc, #504]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004720:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004724:	6013      	str	r3, [r2, #0]
 8004726:	4b7c      	ldr	r3, [pc, #496]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	4a7b      	ldr	r2, [pc, #492]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 800472c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004730:	6013      	str	r3, [r2, #0]
 8004732:	e01d      	b.n	8004770 <HAL_RCC_OscConfig+0xd8>
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	685b      	ldr	r3, [r3, #4]
 8004738:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800473c:	d10c      	bne.n	8004758 <HAL_RCC_OscConfig+0xc0>
 800473e:	4b76      	ldr	r3, [pc, #472]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	4a75      	ldr	r2, [pc, #468]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004744:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004748:	6013      	str	r3, [r2, #0]
 800474a:	4b73      	ldr	r3, [pc, #460]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 800474c:	681b      	ldr	r3, [r3, #0]
 800474e:	4a72      	ldr	r2, [pc, #456]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004750:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004754:	6013      	str	r3, [r2, #0]
 8004756:	e00b      	b.n	8004770 <HAL_RCC_OscConfig+0xd8>
 8004758:	4b6f      	ldr	r3, [pc, #444]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 800475a:	681b      	ldr	r3, [r3, #0]
 800475c:	4a6e      	ldr	r2, [pc, #440]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 800475e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004762:	6013      	str	r3, [r2, #0]
 8004764:	4b6c      	ldr	r3, [pc, #432]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	4a6b      	ldr	r2, [pc, #428]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 800476a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800476e:	6013      	str	r3, [r2, #0]
 8004770:	687b      	ldr	r3, [r7, #4]
 8004772:	685b      	ldr	r3, [r3, #4]
 8004774:	2b00      	cmp	r3, #0
 8004776:	d013      	beq.n	80047a0 <HAL_RCC_OscConfig+0x108>
 8004778:	f7fe f8e4 	bl	8002944 <HAL_GetTick>
 800477c:	6138      	str	r0, [r7, #16]
 800477e:	e008      	b.n	8004792 <HAL_RCC_OscConfig+0xfa>
 8004780:	f7fe f8e0 	bl	8002944 <HAL_GetTick>
 8004784:	4602      	mov	r2, r0
 8004786:	693b      	ldr	r3, [r7, #16]
 8004788:	1ad3      	subs	r3, r2, r3
 800478a:	2b64      	cmp	r3, #100	; 0x64
 800478c:	d901      	bls.n	8004792 <HAL_RCC_OscConfig+0xfa>
 800478e:	2303      	movs	r3, #3
 8004790:	e21f      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004792:	4b61      	ldr	r3, [pc, #388]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800479a:	2b00      	cmp	r3, #0
 800479c:	d0f0      	beq.n	8004780 <HAL_RCC_OscConfig+0xe8>
 800479e:	e014      	b.n	80047ca <HAL_RCC_OscConfig+0x132>
 80047a0:	f7fe f8d0 	bl	8002944 <HAL_GetTick>
 80047a4:	6138      	str	r0, [r7, #16]
 80047a6:	e008      	b.n	80047ba <HAL_RCC_OscConfig+0x122>
 80047a8:	f7fe f8cc 	bl	8002944 <HAL_GetTick>
 80047ac:	4602      	mov	r2, r0
 80047ae:	693b      	ldr	r3, [r7, #16]
 80047b0:	1ad3      	subs	r3, r2, r3
 80047b2:	2b64      	cmp	r3, #100	; 0x64
 80047b4:	d901      	bls.n	80047ba <HAL_RCC_OscConfig+0x122>
 80047b6:	2303      	movs	r3, #3
 80047b8:	e20b      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 80047ba:	4b57      	ldr	r3, [pc, #348]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80047bc:	681b      	ldr	r3, [r3, #0]
 80047be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80047c2:	2b00      	cmp	r3, #0
 80047c4:	d1f0      	bne.n	80047a8 <HAL_RCC_OscConfig+0x110>
 80047c6:	e000      	b.n	80047ca <HAL_RCC_OscConfig+0x132>
 80047c8:	bf00      	nop
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	f003 0302 	and.w	r3, r3, #2
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	d069      	beq.n	80048aa <HAL_RCC_OscConfig+0x212>
 80047d6:	4b50      	ldr	r3, [pc, #320]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80047d8:	689b      	ldr	r3, [r3, #8]
 80047da:	f003 030c 	and.w	r3, r3, #12
 80047de:	2b00      	cmp	r3, #0
 80047e0:	d00b      	beq.n	80047fa <HAL_RCC_OscConfig+0x162>
 80047e2:	4b4d      	ldr	r3, [pc, #308]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80047e4:	689b      	ldr	r3, [r3, #8]
 80047e6:	f003 030c 	and.w	r3, r3, #12
 80047ea:	2b08      	cmp	r3, #8
 80047ec:	d11c      	bne.n	8004828 <HAL_RCC_OscConfig+0x190>
 80047ee:	4b4a      	ldr	r3, [pc, #296]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80047f0:	685b      	ldr	r3, [r3, #4]
 80047f2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80047f6:	2b00      	cmp	r3, #0
 80047f8:	d116      	bne.n	8004828 <HAL_RCC_OscConfig+0x190>
 80047fa:	4b47      	ldr	r3, [pc, #284]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	f003 0302 	and.w	r3, r3, #2
 8004802:	2b00      	cmp	r3, #0
 8004804:	d005      	beq.n	8004812 <HAL_RCC_OscConfig+0x17a>
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	68db      	ldr	r3, [r3, #12]
 800480a:	2b01      	cmp	r3, #1
 800480c:	d001      	beq.n	8004812 <HAL_RCC_OscConfig+0x17a>
 800480e:	2301      	movs	r3, #1
 8004810:	e1df      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004812:	4b41      	ldr	r3, [pc, #260]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	691b      	ldr	r3, [r3, #16]
 800481e:	00db      	lsls	r3, r3, #3
 8004820:	493d      	ldr	r1, [pc, #244]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004822:	4313      	orrs	r3, r2
 8004824:	600b      	str	r3, [r1, #0]
 8004826:	e040      	b.n	80048aa <HAL_RCC_OscConfig+0x212>
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	68db      	ldr	r3, [r3, #12]
 800482c:	2b00      	cmp	r3, #0
 800482e:	d023      	beq.n	8004878 <HAL_RCC_OscConfig+0x1e0>
 8004830:	4b39      	ldr	r3, [pc, #228]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004832:	681b      	ldr	r3, [r3, #0]
 8004834:	4a38      	ldr	r2, [pc, #224]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004836:	f043 0301 	orr.w	r3, r3, #1
 800483a:	6013      	str	r3, [r2, #0]
 800483c:	f7fe f882 	bl	8002944 <HAL_GetTick>
 8004840:	6138      	str	r0, [r7, #16]
 8004842:	e008      	b.n	8004856 <HAL_RCC_OscConfig+0x1be>
 8004844:	f7fe f87e 	bl	8002944 <HAL_GetTick>
 8004848:	4602      	mov	r2, r0
 800484a:	693b      	ldr	r3, [r7, #16]
 800484c:	1ad3      	subs	r3, r2, r3
 800484e:	2b02      	cmp	r3, #2
 8004850:	d901      	bls.n	8004856 <HAL_RCC_OscConfig+0x1be>
 8004852:	2303      	movs	r3, #3
 8004854:	e1bd      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004856:	4b30      	ldr	r3, [pc, #192]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	f003 0302 	and.w	r3, r3, #2
 800485e:	2b00      	cmp	r3, #0
 8004860:	d0f0      	beq.n	8004844 <HAL_RCC_OscConfig+0x1ac>
 8004862:	4b2d      	ldr	r3, [pc, #180]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	691b      	ldr	r3, [r3, #16]
 800486e:	00db      	lsls	r3, r3, #3
 8004870:	4929      	ldr	r1, [pc, #164]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 8004872:	4313      	orrs	r3, r2
 8004874:	600b      	str	r3, [r1, #0]
 8004876:	e018      	b.n	80048aa <HAL_RCC_OscConfig+0x212>
 8004878:	4b27      	ldr	r3, [pc, #156]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 800487a:	681b      	ldr	r3, [r3, #0]
 800487c:	4a26      	ldr	r2, [pc, #152]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 800487e:	f023 0301 	bic.w	r3, r3, #1
 8004882:	6013      	str	r3, [r2, #0]
 8004884:	f7fe f85e 	bl	8002944 <HAL_GetTick>
 8004888:	6138      	str	r0, [r7, #16]
 800488a:	e008      	b.n	800489e <HAL_RCC_OscConfig+0x206>
 800488c:	f7fe f85a 	bl	8002944 <HAL_GetTick>
 8004890:	4602      	mov	r2, r0
 8004892:	693b      	ldr	r3, [r7, #16]
 8004894:	1ad3      	subs	r3, r2, r3
 8004896:	2b02      	cmp	r3, #2
 8004898:	d901      	bls.n	800489e <HAL_RCC_OscConfig+0x206>
 800489a:	2303      	movs	r3, #3
 800489c:	e199      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 800489e:	4b1e      	ldr	r3, [pc, #120]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	f003 0302 	and.w	r3, r3, #2
 80048a6:	2b00      	cmp	r3, #0
 80048a8:	d1f0      	bne.n	800488c <HAL_RCC_OscConfig+0x1f4>
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	f003 0308 	and.w	r3, r3, #8
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d038      	beq.n	8004928 <HAL_RCC_OscConfig+0x290>
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	695b      	ldr	r3, [r3, #20]
 80048ba:	2b00      	cmp	r3, #0
 80048bc:	d019      	beq.n	80048f2 <HAL_RCC_OscConfig+0x25a>
 80048be:	4b16      	ldr	r3, [pc, #88]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80048c0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80048c2:	4a15      	ldr	r2, [pc, #84]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80048c4:	f043 0301 	orr.w	r3, r3, #1
 80048c8:	6753      	str	r3, [r2, #116]	; 0x74
 80048ca:	f7fe f83b 	bl	8002944 <HAL_GetTick>
 80048ce:	6138      	str	r0, [r7, #16]
 80048d0:	e008      	b.n	80048e4 <HAL_RCC_OscConfig+0x24c>
 80048d2:	f7fe f837 	bl	8002944 <HAL_GetTick>
 80048d6:	4602      	mov	r2, r0
 80048d8:	693b      	ldr	r3, [r7, #16]
 80048da:	1ad3      	subs	r3, r2, r3
 80048dc:	2b02      	cmp	r3, #2
 80048de:	d901      	bls.n	80048e4 <HAL_RCC_OscConfig+0x24c>
 80048e0:	2303      	movs	r3, #3
 80048e2:	e176      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 80048e4:	4b0c      	ldr	r3, [pc, #48]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80048e6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80048e8:	f003 0302 	and.w	r3, r3, #2
 80048ec:	2b00      	cmp	r3, #0
 80048ee:	d0f0      	beq.n	80048d2 <HAL_RCC_OscConfig+0x23a>
 80048f0:	e01a      	b.n	8004928 <HAL_RCC_OscConfig+0x290>
 80048f2:	4b09      	ldr	r3, [pc, #36]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80048f4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80048f6:	4a08      	ldr	r2, [pc, #32]	; (8004918 <HAL_RCC_OscConfig+0x280>)
 80048f8:	f023 0301 	bic.w	r3, r3, #1
 80048fc:	6753      	str	r3, [r2, #116]	; 0x74
 80048fe:	f7fe f821 	bl	8002944 <HAL_GetTick>
 8004902:	6138      	str	r0, [r7, #16]
 8004904:	e00a      	b.n	800491c <HAL_RCC_OscConfig+0x284>
 8004906:	f7fe f81d 	bl	8002944 <HAL_GetTick>
 800490a:	4602      	mov	r2, r0
 800490c:	693b      	ldr	r3, [r7, #16]
 800490e:	1ad3      	subs	r3, r2, r3
 8004910:	2b02      	cmp	r3, #2
 8004912:	d903      	bls.n	800491c <HAL_RCC_OscConfig+0x284>
 8004914:	2303      	movs	r3, #3
 8004916:	e15c      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004918:	40023800 	.word	0x40023800
 800491c:	4b91      	ldr	r3, [pc, #580]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 800491e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004920:	f003 0302 	and.w	r3, r3, #2
 8004924:	2b00      	cmp	r3, #0
 8004926:	d1ee      	bne.n	8004906 <HAL_RCC_OscConfig+0x26e>
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	f003 0304 	and.w	r3, r3, #4
 8004930:	2b00      	cmp	r3, #0
 8004932:	f000 80a4 	beq.w	8004a7e <HAL_RCC_OscConfig+0x3e6>
 8004936:	4b8b      	ldr	r3, [pc, #556]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004938:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800493a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800493e:	2b00      	cmp	r3, #0
 8004940:	d10d      	bne.n	800495e <HAL_RCC_OscConfig+0x2c6>
 8004942:	4b88      	ldr	r3, [pc, #544]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004944:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004946:	4a87      	ldr	r2, [pc, #540]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004948:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800494c:	6413      	str	r3, [r2, #64]	; 0x40
 800494e:	4b85      	ldr	r3, [pc, #532]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004950:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004952:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004956:	60bb      	str	r3, [r7, #8]
 8004958:	68bb      	ldr	r3, [r7, #8]
 800495a:	2301      	movs	r3, #1
 800495c:	75fb      	strb	r3, [r7, #23]
 800495e:	4b82      	ldr	r3, [pc, #520]	; (8004b68 <HAL_RCC_OscConfig+0x4d0>)
 8004960:	681b      	ldr	r3, [r3, #0]
 8004962:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004966:	2b00      	cmp	r3, #0
 8004968:	d118      	bne.n	800499c <HAL_RCC_OscConfig+0x304>
 800496a:	4b7f      	ldr	r3, [pc, #508]	; (8004b68 <HAL_RCC_OscConfig+0x4d0>)
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	4a7e      	ldr	r2, [pc, #504]	; (8004b68 <HAL_RCC_OscConfig+0x4d0>)
 8004970:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004974:	6013      	str	r3, [r2, #0]
 8004976:	f7fd ffe5 	bl	8002944 <HAL_GetTick>
 800497a:	6138      	str	r0, [r7, #16]
 800497c:	e008      	b.n	8004990 <HAL_RCC_OscConfig+0x2f8>
 800497e:	f7fd ffe1 	bl	8002944 <HAL_GetTick>
 8004982:	4602      	mov	r2, r0
 8004984:	693b      	ldr	r3, [r7, #16]
 8004986:	1ad3      	subs	r3, r2, r3
 8004988:	2b64      	cmp	r3, #100	; 0x64
 800498a:	d901      	bls.n	8004990 <HAL_RCC_OscConfig+0x2f8>
 800498c:	2303      	movs	r3, #3
 800498e:	e120      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004990:	4b75      	ldr	r3, [pc, #468]	; (8004b68 <HAL_RCC_OscConfig+0x4d0>)
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004998:	2b00      	cmp	r3, #0
 800499a:	d0f0      	beq.n	800497e <HAL_RCC_OscConfig+0x2e6>
 800499c:	687b      	ldr	r3, [r7, #4]
 800499e:	689b      	ldr	r3, [r3, #8]
 80049a0:	2b01      	cmp	r3, #1
 80049a2:	d106      	bne.n	80049b2 <HAL_RCC_OscConfig+0x31a>
 80049a4:	4b6f      	ldr	r3, [pc, #444]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049a6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80049a8:	4a6e      	ldr	r2, [pc, #440]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049aa:	f043 0301 	orr.w	r3, r3, #1
 80049ae:	6713      	str	r3, [r2, #112]	; 0x70
 80049b0:	e02d      	b.n	8004a0e <HAL_RCC_OscConfig+0x376>
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	689b      	ldr	r3, [r3, #8]
 80049b6:	2b00      	cmp	r3, #0
 80049b8:	d10c      	bne.n	80049d4 <HAL_RCC_OscConfig+0x33c>
 80049ba:	4b6a      	ldr	r3, [pc, #424]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049bc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80049be:	4a69      	ldr	r2, [pc, #420]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049c0:	f023 0301 	bic.w	r3, r3, #1
 80049c4:	6713      	str	r3, [r2, #112]	; 0x70
 80049c6:	4b67      	ldr	r3, [pc, #412]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80049ca:	4a66      	ldr	r2, [pc, #408]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049cc:	f023 0304 	bic.w	r3, r3, #4
 80049d0:	6713      	str	r3, [r2, #112]	; 0x70
 80049d2:	e01c      	b.n	8004a0e <HAL_RCC_OscConfig+0x376>
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	689b      	ldr	r3, [r3, #8]
 80049d8:	2b05      	cmp	r3, #5
 80049da:	d10c      	bne.n	80049f6 <HAL_RCC_OscConfig+0x35e>
 80049dc:	4b61      	ldr	r3, [pc, #388]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80049e0:	4a60      	ldr	r2, [pc, #384]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049e2:	f043 0304 	orr.w	r3, r3, #4
 80049e6:	6713      	str	r3, [r2, #112]	; 0x70
 80049e8:	4b5e      	ldr	r3, [pc, #376]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80049ec:	4a5d      	ldr	r2, [pc, #372]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049ee:	f043 0301 	orr.w	r3, r3, #1
 80049f2:	6713      	str	r3, [r2, #112]	; 0x70
 80049f4:	e00b      	b.n	8004a0e <HAL_RCC_OscConfig+0x376>
 80049f6:	4b5b      	ldr	r3, [pc, #364]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049f8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80049fa:	4a5a      	ldr	r2, [pc, #360]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 80049fc:	f023 0301 	bic.w	r3, r3, #1
 8004a00:	6713      	str	r3, [r2, #112]	; 0x70
 8004a02:	4b58      	ldr	r3, [pc, #352]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004a04:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004a06:	4a57      	ldr	r2, [pc, #348]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004a08:	f023 0304 	bic.w	r3, r3, #4
 8004a0c:	6713      	str	r3, [r2, #112]	; 0x70
 8004a0e:	687b      	ldr	r3, [r7, #4]
 8004a10:	689b      	ldr	r3, [r3, #8]
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	d015      	beq.n	8004a42 <HAL_RCC_OscConfig+0x3aa>
 8004a16:	f7fd ff95 	bl	8002944 <HAL_GetTick>
 8004a1a:	6138      	str	r0, [r7, #16]
 8004a1c:	e00a      	b.n	8004a34 <HAL_RCC_OscConfig+0x39c>
 8004a1e:	f7fd ff91 	bl	8002944 <HAL_GetTick>
 8004a22:	4602      	mov	r2, r0
 8004a24:	693b      	ldr	r3, [r7, #16]
 8004a26:	1ad3      	subs	r3, r2, r3
 8004a28:	f241 3288 	movw	r2, #5000	; 0x1388
 8004a2c:	4293      	cmp	r3, r2
 8004a2e:	d901      	bls.n	8004a34 <HAL_RCC_OscConfig+0x39c>
 8004a30:	2303      	movs	r3, #3
 8004a32:	e0ce      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004a34:	4b4b      	ldr	r3, [pc, #300]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004a36:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004a38:	f003 0302 	and.w	r3, r3, #2
 8004a3c:	2b00      	cmp	r3, #0
 8004a3e:	d0ee      	beq.n	8004a1e <HAL_RCC_OscConfig+0x386>
 8004a40:	e014      	b.n	8004a6c <HAL_RCC_OscConfig+0x3d4>
 8004a42:	f7fd ff7f 	bl	8002944 <HAL_GetTick>
 8004a46:	6138      	str	r0, [r7, #16]
 8004a48:	e00a      	b.n	8004a60 <HAL_RCC_OscConfig+0x3c8>
 8004a4a:	f7fd ff7b 	bl	8002944 <HAL_GetTick>
 8004a4e:	4602      	mov	r2, r0
 8004a50:	693b      	ldr	r3, [r7, #16]
 8004a52:	1ad3      	subs	r3, r2, r3
 8004a54:	f241 3288 	movw	r2, #5000	; 0x1388
 8004a58:	4293      	cmp	r3, r2
 8004a5a:	d901      	bls.n	8004a60 <HAL_RCC_OscConfig+0x3c8>
 8004a5c:	2303      	movs	r3, #3
 8004a5e:	e0b8      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004a60:	4b40      	ldr	r3, [pc, #256]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004a62:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004a64:	f003 0302 	and.w	r3, r3, #2
 8004a68:	2b00      	cmp	r3, #0
 8004a6a:	d1ee      	bne.n	8004a4a <HAL_RCC_OscConfig+0x3b2>
 8004a6c:	7dfb      	ldrb	r3, [r7, #23]
 8004a6e:	2b01      	cmp	r3, #1
 8004a70:	d105      	bne.n	8004a7e <HAL_RCC_OscConfig+0x3e6>
 8004a72:	4b3c      	ldr	r3, [pc, #240]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004a74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a76:	4a3b      	ldr	r2, [pc, #236]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004a78:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004a7c:	6413      	str	r3, [r2, #64]	; 0x40
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	699b      	ldr	r3, [r3, #24]
 8004a82:	2b00      	cmp	r3, #0
 8004a84:	f000 80a4 	beq.w	8004bd0 <HAL_RCC_OscConfig+0x538>
 8004a88:	4b36      	ldr	r3, [pc, #216]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004a8a:	689b      	ldr	r3, [r3, #8]
 8004a8c:	f003 030c 	and.w	r3, r3, #12
 8004a90:	2b08      	cmp	r3, #8
 8004a92:	d06b      	beq.n	8004b6c <HAL_RCC_OscConfig+0x4d4>
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	699b      	ldr	r3, [r3, #24]
 8004a98:	2b02      	cmp	r3, #2
 8004a9a:	d149      	bne.n	8004b30 <HAL_RCC_OscConfig+0x498>
 8004a9c:	4b31      	ldr	r3, [pc, #196]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004a9e:	681b      	ldr	r3, [r3, #0]
 8004aa0:	4a30      	ldr	r2, [pc, #192]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004aa2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004aa6:	6013      	str	r3, [r2, #0]
 8004aa8:	f7fd ff4c 	bl	8002944 <HAL_GetTick>
 8004aac:	6138      	str	r0, [r7, #16]
 8004aae:	e008      	b.n	8004ac2 <HAL_RCC_OscConfig+0x42a>
 8004ab0:	f7fd ff48 	bl	8002944 <HAL_GetTick>
 8004ab4:	4602      	mov	r2, r0
 8004ab6:	693b      	ldr	r3, [r7, #16]
 8004ab8:	1ad3      	subs	r3, r2, r3
 8004aba:	2b02      	cmp	r3, #2
 8004abc:	d901      	bls.n	8004ac2 <HAL_RCC_OscConfig+0x42a>
 8004abe:	2303      	movs	r3, #3
 8004ac0:	e087      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004ac2:	4b28      	ldr	r3, [pc, #160]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004aca:	2b00      	cmp	r3, #0
 8004acc:	d1f0      	bne.n	8004ab0 <HAL_RCC_OscConfig+0x418>
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	69da      	ldr	r2, [r3, #28]
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	6a1b      	ldr	r3, [r3, #32]
 8004ad6:	431a      	orrs	r2, r3
 8004ad8:	687b      	ldr	r3, [r7, #4]
 8004ada:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004adc:	019b      	lsls	r3, r3, #6
 8004ade:	431a      	orrs	r2, r3
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ae4:	085b      	lsrs	r3, r3, #1
 8004ae6:	3b01      	subs	r3, #1
 8004ae8:	041b      	lsls	r3, r3, #16
 8004aea:	431a      	orrs	r2, r3
 8004aec:	687b      	ldr	r3, [r7, #4]
 8004aee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004af0:	061b      	lsls	r3, r3, #24
 8004af2:	4313      	orrs	r3, r2
 8004af4:	4a1b      	ldr	r2, [pc, #108]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004af6:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8004afa:	6053      	str	r3, [r2, #4]
 8004afc:	4b19      	ldr	r3, [pc, #100]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004afe:	681b      	ldr	r3, [r3, #0]
 8004b00:	4a18      	ldr	r2, [pc, #96]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004b02:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004b06:	6013      	str	r3, [r2, #0]
 8004b08:	f7fd ff1c 	bl	8002944 <HAL_GetTick>
 8004b0c:	6138      	str	r0, [r7, #16]
 8004b0e:	e008      	b.n	8004b22 <HAL_RCC_OscConfig+0x48a>
 8004b10:	f7fd ff18 	bl	8002944 <HAL_GetTick>
 8004b14:	4602      	mov	r2, r0
 8004b16:	693b      	ldr	r3, [r7, #16]
 8004b18:	1ad3      	subs	r3, r2, r3
 8004b1a:	2b02      	cmp	r3, #2
 8004b1c:	d901      	bls.n	8004b22 <HAL_RCC_OscConfig+0x48a>
 8004b1e:	2303      	movs	r3, #3
 8004b20:	e057      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004b22:	4b10      	ldr	r3, [pc, #64]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004b24:	681b      	ldr	r3, [r3, #0]
 8004b26:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004b2a:	2b00      	cmp	r3, #0
 8004b2c:	d0f0      	beq.n	8004b10 <HAL_RCC_OscConfig+0x478>
 8004b2e:	e04f      	b.n	8004bd0 <HAL_RCC_OscConfig+0x538>
 8004b30:	4b0c      	ldr	r3, [pc, #48]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004b32:	681b      	ldr	r3, [r3, #0]
 8004b34:	4a0b      	ldr	r2, [pc, #44]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004b36:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004b3a:	6013      	str	r3, [r2, #0]
 8004b3c:	f7fd ff02 	bl	8002944 <HAL_GetTick>
 8004b40:	6138      	str	r0, [r7, #16]
 8004b42:	e008      	b.n	8004b56 <HAL_RCC_OscConfig+0x4be>
 8004b44:	f7fd fefe 	bl	8002944 <HAL_GetTick>
 8004b48:	4602      	mov	r2, r0
 8004b4a:	693b      	ldr	r3, [r7, #16]
 8004b4c:	1ad3      	subs	r3, r2, r3
 8004b4e:	2b02      	cmp	r3, #2
 8004b50:	d901      	bls.n	8004b56 <HAL_RCC_OscConfig+0x4be>
 8004b52:	2303      	movs	r3, #3
 8004b54:	e03d      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004b56:	4b03      	ldr	r3, [pc, #12]	; (8004b64 <HAL_RCC_OscConfig+0x4cc>)
 8004b58:	681b      	ldr	r3, [r3, #0]
 8004b5a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004b5e:	2b00      	cmp	r3, #0
 8004b60:	d1f0      	bne.n	8004b44 <HAL_RCC_OscConfig+0x4ac>
 8004b62:	e035      	b.n	8004bd0 <HAL_RCC_OscConfig+0x538>
 8004b64:	40023800 	.word	0x40023800
 8004b68:	40007000 	.word	0x40007000
 8004b6c:	4b1b      	ldr	r3, [pc, #108]	; (8004bdc <HAL_RCC_OscConfig+0x544>)
 8004b6e:	685b      	ldr	r3, [r3, #4]
 8004b70:	60fb      	str	r3, [r7, #12]
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	699b      	ldr	r3, [r3, #24]
 8004b76:	2b01      	cmp	r3, #1
 8004b78:	d028      	beq.n	8004bcc <HAL_RCC_OscConfig+0x534>
 8004b7a:	68fb      	ldr	r3, [r7, #12]
 8004b7c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	69db      	ldr	r3, [r3, #28]
 8004b84:	429a      	cmp	r2, r3
 8004b86:	d121      	bne.n	8004bcc <HAL_RCC_OscConfig+0x534>
 8004b88:	68fb      	ldr	r3, [r7, #12]
 8004b8a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	6a1b      	ldr	r3, [r3, #32]
 8004b92:	429a      	cmp	r2, r3
 8004b94:	d11a      	bne.n	8004bcc <HAL_RCC_OscConfig+0x534>
 8004b96:	68fa      	ldr	r2, [r7, #12]
 8004b98:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004b9c:	4013      	ands	r3, r2
 8004b9e:	687a      	ldr	r2, [r7, #4]
 8004ba0:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8004ba2:	0192      	lsls	r2, r2, #6
 8004ba4:	4293      	cmp	r3, r2
 8004ba6:	d111      	bne.n	8004bcc <HAL_RCC_OscConfig+0x534>
 8004ba8:	68fb      	ldr	r3, [r7, #12]
 8004baa:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004bb2:	085b      	lsrs	r3, r3, #1
 8004bb4:	3b01      	subs	r3, #1
 8004bb6:	041b      	lsls	r3, r3, #16
 8004bb8:	429a      	cmp	r2, r3
 8004bba:	d107      	bne.n	8004bcc <HAL_RCC_OscConfig+0x534>
 8004bbc:	68fb      	ldr	r3, [r7, #12]
 8004bbe:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8004bc2:	687b      	ldr	r3, [r7, #4]
 8004bc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004bc6:	061b      	lsls	r3, r3, #24
 8004bc8:	429a      	cmp	r2, r3
 8004bca:	d001      	beq.n	8004bd0 <HAL_RCC_OscConfig+0x538>
 8004bcc:	2301      	movs	r3, #1
 8004bce:	e000      	b.n	8004bd2 <HAL_RCC_OscConfig+0x53a>
 8004bd0:	2300      	movs	r3, #0
 8004bd2:	4618      	mov	r0, r3
 8004bd4:	3718      	adds	r7, #24
 8004bd6:	46bd      	mov	sp, r7
 8004bd8:	bd80      	pop	{r7, pc}
 8004bda:	bf00      	nop
 8004bdc:	40023800 	.word	0x40023800

08004be0 <HAL_RCC_ClockConfig>:
 8004be0:	b580      	push	{r7, lr}
 8004be2:	b084      	sub	sp, #16
 8004be4:	af00      	add	r7, sp, #0
 8004be6:	6078      	str	r0, [r7, #4]
 8004be8:	6039      	str	r1, [r7, #0]
 8004bea:	2300      	movs	r3, #0
 8004bec:	60fb      	str	r3, [r7, #12]
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	2b00      	cmp	r3, #0
 8004bf2:	d101      	bne.n	8004bf8 <HAL_RCC_ClockConfig+0x18>
 8004bf4:	2301      	movs	r3, #1
 8004bf6:	e0d0      	b.n	8004d9a <HAL_RCC_ClockConfig+0x1ba>
 8004bf8:	4b6a      	ldr	r3, [pc, #424]	; (8004da4 <HAL_RCC_ClockConfig+0x1c4>)
 8004bfa:	681b      	ldr	r3, [r3, #0]
 8004bfc:	f003 030f 	and.w	r3, r3, #15
 8004c00:	683a      	ldr	r2, [r7, #0]
 8004c02:	429a      	cmp	r2, r3
 8004c04:	d910      	bls.n	8004c28 <HAL_RCC_ClockConfig+0x48>
 8004c06:	4b67      	ldr	r3, [pc, #412]	; (8004da4 <HAL_RCC_ClockConfig+0x1c4>)
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	f023 020f 	bic.w	r2, r3, #15
 8004c0e:	4965      	ldr	r1, [pc, #404]	; (8004da4 <HAL_RCC_ClockConfig+0x1c4>)
 8004c10:	683b      	ldr	r3, [r7, #0]
 8004c12:	4313      	orrs	r3, r2
 8004c14:	600b      	str	r3, [r1, #0]
 8004c16:	4b63      	ldr	r3, [pc, #396]	; (8004da4 <HAL_RCC_ClockConfig+0x1c4>)
 8004c18:	681b      	ldr	r3, [r3, #0]
 8004c1a:	f003 030f 	and.w	r3, r3, #15
 8004c1e:	683a      	ldr	r2, [r7, #0]
 8004c20:	429a      	cmp	r2, r3
 8004c22:	d001      	beq.n	8004c28 <HAL_RCC_ClockConfig+0x48>
 8004c24:	2301      	movs	r3, #1
 8004c26:	e0b8      	b.n	8004d9a <HAL_RCC_ClockConfig+0x1ba>
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	f003 0302 	and.w	r3, r3, #2
 8004c30:	2b00      	cmp	r3, #0
 8004c32:	d020      	beq.n	8004c76 <HAL_RCC_ClockConfig+0x96>
 8004c34:	687b      	ldr	r3, [r7, #4]
 8004c36:	681b      	ldr	r3, [r3, #0]
 8004c38:	f003 0304 	and.w	r3, r3, #4
 8004c3c:	2b00      	cmp	r3, #0
 8004c3e:	d005      	beq.n	8004c4c <HAL_RCC_ClockConfig+0x6c>
 8004c40:	4b59      	ldr	r3, [pc, #356]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004c42:	689b      	ldr	r3, [r3, #8]
 8004c44:	4a58      	ldr	r2, [pc, #352]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004c46:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8004c4a:	6093      	str	r3, [r2, #8]
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	f003 0308 	and.w	r3, r3, #8
 8004c54:	2b00      	cmp	r3, #0
 8004c56:	d005      	beq.n	8004c64 <HAL_RCC_ClockConfig+0x84>
 8004c58:	4b53      	ldr	r3, [pc, #332]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004c5a:	689b      	ldr	r3, [r3, #8]
 8004c5c:	4a52      	ldr	r2, [pc, #328]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004c5e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8004c62:	6093      	str	r3, [r2, #8]
 8004c64:	4b50      	ldr	r3, [pc, #320]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004c66:	689b      	ldr	r3, [r3, #8]
 8004c68:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	689b      	ldr	r3, [r3, #8]
 8004c70:	494d      	ldr	r1, [pc, #308]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004c72:	4313      	orrs	r3, r2
 8004c74:	608b      	str	r3, [r1, #8]
 8004c76:	687b      	ldr	r3, [r7, #4]
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	f003 0301 	and.w	r3, r3, #1
 8004c7e:	2b00      	cmp	r3, #0
 8004c80:	d040      	beq.n	8004d04 <HAL_RCC_ClockConfig+0x124>
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	685b      	ldr	r3, [r3, #4]
 8004c86:	2b01      	cmp	r3, #1
 8004c88:	d107      	bne.n	8004c9a <HAL_RCC_ClockConfig+0xba>
 8004c8a:	4b47      	ldr	r3, [pc, #284]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004c8c:	681b      	ldr	r3, [r3, #0]
 8004c8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004c92:	2b00      	cmp	r3, #0
 8004c94:	d115      	bne.n	8004cc2 <HAL_RCC_ClockConfig+0xe2>
 8004c96:	2301      	movs	r3, #1
 8004c98:	e07f      	b.n	8004d9a <HAL_RCC_ClockConfig+0x1ba>
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	685b      	ldr	r3, [r3, #4]
 8004c9e:	2b02      	cmp	r3, #2
 8004ca0:	d107      	bne.n	8004cb2 <HAL_RCC_ClockConfig+0xd2>
 8004ca2:	4b41      	ldr	r3, [pc, #260]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004ca4:	681b      	ldr	r3, [r3, #0]
 8004ca6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004caa:	2b00      	cmp	r3, #0
 8004cac:	d109      	bne.n	8004cc2 <HAL_RCC_ClockConfig+0xe2>
 8004cae:	2301      	movs	r3, #1
 8004cb0:	e073      	b.n	8004d9a <HAL_RCC_ClockConfig+0x1ba>
 8004cb2:	4b3d      	ldr	r3, [pc, #244]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004cb4:	681b      	ldr	r3, [r3, #0]
 8004cb6:	f003 0302 	and.w	r3, r3, #2
 8004cba:	2b00      	cmp	r3, #0
 8004cbc:	d101      	bne.n	8004cc2 <HAL_RCC_ClockConfig+0xe2>
 8004cbe:	2301      	movs	r3, #1
 8004cc0:	e06b      	b.n	8004d9a <HAL_RCC_ClockConfig+0x1ba>
 8004cc2:	4b39      	ldr	r3, [pc, #228]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004cc4:	689b      	ldr	r3, [r3, #8]
 8004cc6:	f023 0203 	bic.w	r2, r3, #3
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	685b      	ldr	r3, [r3, #4]
 8004cce:	4936      	ldr	r1, [pc, #216]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004cd0:	4313      	orrs	r3, r2
 8004cd2:	608b      	str	r3, [r1, #8]
 8004cd4:	f7fd fe36 	bl	8002944 <HAL_GetTick>
 8004cd8:	60f8      	str	r0, [r7, #12]
 8004cda:	e00a      	b.n	8004cf2 <HAL_RCC_ClockConfig+0x112>
 8004cdc:	f7fd fe32 	bl	8002944 <HAL_GetTick>
 8004ce0:	4602      	mov	r2, r0
 8004ce2:	68fb      	ldr	r3, [r7, #12]
 8004ce4:	1ad3      	subs	r3, r2, r3
 8004ce6:	f241 3288 	movw	r2, #5000	; 0x1388
 8004cea:	4293      	cmp	r3, r2
 8004cec:	d901      	bls.n	8004cf2 <HAL_RCC_ClockConfig+0x112>
 8004cee:	2303      	movs	r3, #3
 8004cf0:	e053      	b.n	8004d9a <HAL_RCC_ClockConfig+0x1ba>
 8004cf2:	4b2d      	ldr	r3, [pc, #180]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004cf4:	689b      	ldr	r3, [r3, #8]
 8004cf6:	f003 020c 	and.w	r2, r3, #12
 8004cfa:	687b      	ldr	r3, [r7, #4]
 8004cfc:	685b      	ldr	r3, [r3, #4]
 8004cfe:	009b      	lsls	r3, r3, #2
 8004d00:	429a      	cmp	r2, r3
 8004d02:	d1eb      	bne.n	8004cdc <HAL_RCC_ClockConfig+0xfc>
 8004d04:	4b27      	ldr	r3, [pc, #156]	; (8004da4 <HAL_RCC_ClockConfig+0x1c4>)
 8004d06:	681b      	ldr	r3, [r3, #0]
 8004d08:	f003 030f 	and.w	r3, r3, #15
 8004d0c:	683a      	ldr	r2, [r7, #0]
 8004d0e:	429a      	cmp	r2, r3
 8004d10:	d210      	bcs.n	8004d34 <HAL_RCC_ClockConfig+0x154>
 8004d12:	4b24      	ldr	r3, [pc, #144]	; (8004da4 <HAL_RCC_ClockConfig+0x1c4>)
 8004d14:	681b      	ldr	r3, [r3, #0]
 8004d16:	f023 020f 	bic.w	r2, r3, #15
 8004d1a:	4922      	ldr	r1, [pc, #136]	; (8004da4 <HAL_RCC_ClockConfig+0x1c4>)
 8004d1c:	683b      	ldr	r3, [r7, #0]
 8004d1e:	4313      	orrs	r3, r2
 8004d20:	600b      	str	r3, [r1, #0]
 8004d22:	4b20      	ldr	r3, [pc, #128]	; (8004da4 <HAL_RCC_ClockConfig+0x1c4>)
 8004d24:	681b      	ldr	r3, [r3, #0]
 8004d26:	f003 030f 	and.w	r3, r3, #15
 8004d2a:	683a      	ldr	r2, [r7, #0]
 8004d2c:	429a      	cmp	r2, r3
 8004d2e:	d001      	beq.n	8004d34 <HAL_RCC_ClockConfig+0x154>
 8004d30:	2301      	movs	r3, #1
 8004d32:	e032      	b.n	8004d9a <HAL_RCC_ClockConfig+0x1ba>
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	681b      	ldr	r3, [r3, #0]
 8004d38:	f003 0304 	and.w	r3, r3, #4
 8004d3c:	2b00      	cmp	r3, #0
 8004d3e:	d008      	beq.n	8004d52 <HAL_RCC_ClockConfig+0x172>
 8004d40:	4b19      	ldr	r3, [pc, #100]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004d42:	689b      	ldr	r3, [r3, #8]
 8004d44:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	68db      	ldr	r3, [r3, #12]
 8004d4c:	4916      	ldr	r1, [pc, #88]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004d4e:	4313      	orrs	r3, r2
 8004d50:	608b      	str	r3, [r1, #8]
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	681b      	ldr	r3, [r3, #0]
 8004d56:	f003 0308 	and.w	r3, r3, #8
 8004d5a:	2b00      	cmp	r3, #0
 8004d5c:	d009      	beq.n	8004d72 <HAL_RCC_ClockConfig+0x192>
 8004d5e:	4b12      	ldr	r3, [pc, #72]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004d60:	689b      	ldr	r3, [r3, #8]
 8004d62:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	691b      	ldr	r3, [r3, #16]
 8004d6a:	00db      	lsls	r3, r3, #3
 8004d6c:	490e      	ldr	r1, [pc, #56]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004d6e:	4313      	orrs	r3, r2
 8004d70:	608b      	str	r3, [r1, #8]
 8004d72:	f000 f821 	bl	8004db8 <HAL_RCC_GetSysClockFreq>
 8004d76:	4602      	mov	r2, r0
 8004d78:	4b0b      	ldr	r3, [pc, #44]	; (8004da8 <HAL_RCC_ClockConfig+0x1c8>)
 8004d7a:	689b      	ldr	r3, [r3, #8]
 8004d7c:	091b      	lsrs	r3, r3, #4
 8004d7e:	f003 030f 	and.w	r3, r3, #15
 8004d82:	490a      	ldr	r1, [pc, #40]	; (8004dac <HAL_RCC_ClockConfig+0x1cc>)
 8004d84:	5ccb      	ldrb	r3, [r1, r3]
 8004d86:	fa22 f303 	lsr.w	r3, r2, r3
 8004d8a:	4a09      	ldr	r2, [pc, #36]	; (8004db0 <HAL_RCC_ClockConfig+0x1d0>)
 8004d8c:	6013      	str	r3, [r2, #0]
 8004d8e:	4b09      	ldr	r3, [pc, #36]	; (8004db4 <HAL_RCC_ClockConfig+0x1d4>)
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	4618      	mov	r0, r3
 8004d94:	f7fd fd92 	bl	80028bc <HAL_InitTick>
 8004d98:	2300      	movs	r3, #0
 8004d9a:	4618      	mov	r0, r3
 8004d9c:	3710      	adds	r7, #16
 8004d9e:	46bd      	mov	sp, r7
 8004da0:	bd80      	pop	{r7, pc}
 8004da2:	bf00      	nop
 8004da4:	40023c00 	.word	0x40023c00
 8004da8:	40023800 	.word	0x40023800
 8004dac:	08007150 	.word	0x08007150
 8004db0:	20000054 	.word	0x20000054
 8004db4:	20000058 	.word	0x20000058

08004db8 <HAL_RCC_GetSysClockFreq>:
 8004db8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004dbc:	b090      	sub	sp, #64	; 0x40
 8004dbe:	af00      	add	r7, sp, #0
 8004dc0:	2300      	movs	r3, #0
 8004dc2:	637b      	str	r3, [r7, #52]	; 0x34
 8004dc4:	2300      	movs	r3, #0
 8004dc6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004dc8:	2300      	movs	r3, #0
 8004dca:	633b      	str	r3, [r7, #48]	; 0x30
 8004dcc:	2300      	movs	r3, #0
 8004dce:	63bb      	str	r3, [r7, #56]	; 0x38
 8004dd0:	4b59      	ldr	r3, [pc, #356]	; (8004f38 <HAL_RCC_GetSysClockFreq+0x180>)
 8004dd2:	689b      	ldr	r3, [r3, #8]
 8004dd4:	f003 030c 	and.w	r3, r3, #12
 8004dd8:	2b08      	cmp	r3, #8
 8004dda:	d00d      	beq.n	8004df8 <HAL_RCC_GetSysClockFreq+0x40>
 8004ddc:	2b08      	cmp	r3, #8
 8004dde:	f200 80a1 	bhi.w	8004f24 <HAL_RCC_GetSysClockFreq+0x16c>
 8004de2:	2b00      	cmp	r3, #0
 8004de4:	d002      	beq.n	8004dec <HAL_RCC_GetSysClockFreq+0x34>
 8004de6:	2b04      	cmp	r3, #4
 8004de8:	d003      	beq.n	8004df2 <HAL_RCC_GetSysClockFreq+0x3a>
 8004dea:	e09b      	b.n	8004f24 <HAL_RCC_GetSysClockFreq+0x16c>
 8004dec:	4b53      	ldr	r3, [pc, #332]	; (8004f3c <HAL_RCC_GetSysClockFreq+0x184>)
 8004dee:	63bb      	str	r3, [r7, #56]	; 0x38
 8004df0:	e09b      	b.n	8004f2a <HAL_RCC_GetSysClockFreq+0x172>
 8004df2:	4b53      	ldr	r3, [pc, #332]	; (8004f40 <HAL_RCC_GetSysClockFreq+0x188>)
 8004df4:	63bb      	str	r3, [r7, #56]	; 0x38
 8004df6:	e098      	b.n	8004f2a <HAL_RCC_GetSysClockFreq+0x172>
 8004df8:	4b4f      	ldr	r3, [pc, #316]	; (8004f38 <HAL_RCC_GetSysClockFreq+0x180>)
 8004dfa:	685b      	ldr	r3, [r3, #4]
 8004dfc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004e00:	637b      	str	r3, [r7, #52]	; 0x34
 8004e02:	4b4d      	ldr	r3, [pc, #308]	; (8004f38 <HAL_RCC_GetSysClockFreq+0x180>)
 8004e04:	685b      	ldr	r3, [r3, #4]
 8004e06:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	d028      	beq.n	8004e60 <HAL_RCC_GetSysClockFreq+0xa8>
 8004e0e:	4b4a      	ldr	r3, [pc, #296]	; (8004f38 <HAL_RCC_GetSysClockFreq+0x180>)
 8004e10:	685b      	ldr	r3, [r3, #4]
 8004e12:	099b      	lsrs	r3, r3, #6
 8004e14:	2200      	movs	r2, #0
 8004e16:	623b      	str	r3, [r7, #32]
 8004e18:	627a      	str	r2, [r7, #36]	; 0x24
 8004e1a:	6a3b      	ldr	r3, [r7, #32]
 8004e1c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8004e20:	2100      	movs	r1, #0
 8004e22:	4b47      	ldr	r3, [pc, #284]	; (8004f40 <HAL_RCC_GetSysClockFreq+0x188>)
 8004e24:	fb03 f201 	mul.w	r2, r3, r1
 8004e28:	2300      	movs	r3, #0
 8004e2a:	fb00 f303 	mul.w	r3, r0, r3
 8004e2e:	4413      	add	r3, r2
 8004e30:	4a43      	ldr	r2, [pc, #268]	; (8004f40 <HAL_RCC_GetSysClockFreq+0x188>)
 8004e32:	fba0 1202 	umull	r1, r2, r0, r2
 8004e36:	62fa      	str	r2, [r7, #44]	; 0x2c
 8004e38:	460a      	mov	r2, r1
 8004e3a:	62ba      	str	r2, [r7, #40]	; 0x28
 8004e3c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004e3e:	4413      	add	r3, r2
 8004e40:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004e42:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004e44:	2200      	movs	r2, #0
 8004e46:	61bb      	str	r3, [r7, #24]
 8004e48:	61fa      	str	r2, [r7, #28]
 8004e4a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004e4e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8004e52:	f7fb fea1 	bl	8000b98 <__aeabi_uldivmod>
 8004e56:	4602      	mov	r2, r0
 8004e58:	460b      	mov	r3, r1
 8004e5a:	4613      	mov	r3, r2
 8004e5c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004e5e:	e053      	b.n	8004f08 <HAL_RCC_GetSysClockFreq+0x150>
 8004e60:	4b35      	ldr	r3, [pc, #212]	; (8004f38 <HAL_RCC_GetSysClockFreq+0x180>)
 8004e62:	685b      	ldr	r3, [r3, #4]
 8004e64:	099b      	lsrs	r3, r3, #6
 8004e66:	2200      	movs	r2, #0
 8004e68:	613b      	str	r3, [r7, #16]
 8004e6a:	617a      	str	r2, [r7, #20]
 8004e6c:	693b      	ldr	r3, [r7, #16]
 8004e6e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8004e72:	f04f 0b00 	mov.w	fp, #0
 8004e76:	4652      	mov	r2, sl
 8004e78:	465b      	mov	r3, fp
 8004e7a:	f04f 0000 	mov.w	r0, #0
 8004e7e:	f04f 0100 	mov.w	r1, #0
 8004e82:	0159      	lsls	r1, r3, #5
 8004e84:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004e88:	0150      	lsls	r0, r2, #5
 8004e8a:	4602      	mov	r2, r0
 8004e8c:	460b      	mov	r3, r1
 8004e8e:	ebb2 080a 	subs.w	r8, r2, sl
 8004e92:	eb63 090b 	sbc.w	r9, r3, fp
 8004e96:	f04f 0200 	mov.w	r2, #0
 8004e9a:	f04f 0300 	mov.w	r3, #0
 8004e9e:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8004ea2:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8004ea6:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8004eaa:	ebb2 0408 	subs.w	r4, r2, r8
 8004eae:	eb63 0509 	sbc.w	r5, r3, r9
 8004eb2:	f04f 0200 	mov.w	r2, #0
 8004eb6:	f04f 0300 	mov.w	r3, #0
 8004eba:	00eb      	lsls	r3, r5, #3
 8004ebc:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004ec0:	00e2      	lsls	r2, r4, #3
 8004ec2:	4614      	mov	r4, r2
 8004ec4:	461d      	mov	r5, r3
 8004ec6:	eb14 030a 	adds.w	r3, r4, sl
 8004eca:	603b      	str	r3, [r7, #0]
 8004ecc:	eb45 030b 	adc.w	r3, r5, fp
 8004ed0:	607b      	str	r3, [r7, #4]
 8004ed2:	f04f 0200 	mov.w	r2, #0
 8004ed6:	f04f 0300 	mov.w	r3, #0
 8004eda:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004ede:	4629      	mov	r1, r5
 8004ee0:	028b      	lsls	r3, r1, #10
 8004ee2:	4621      	mov	r1, r4
 8004ee4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004ee8:	4621      	mov	r1, r4
 8004eea:	028a      	lsls	r2, r1, #10
 8004eec:	4610      	mov	r0, r2
 8004eee:	4619      	mov	r1, r3
 8004ef0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004ef2:	2200      	movs	r2, #0
 8004ef4:	60bb      	str	r3, [r7, #8]
 8004ef6:	60fa      	str	r2, [r7, #12]
 8004ef8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004efc:	f7fb fe4c 	bl	8000b98 <__aeabi_uldivmod>
 8004f00:	4602      	mov	r2, r0
 8004f02:	460b      	mov	r3, r1
 8004f04:	4613      	mov	r3, r2
 8004f06:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004f08:	4b0b      	ldr	r3, [pc, #44]	; (8004f38 <HAL_RCC_GetSysClockFreq+0x180>)
 8004f0a:	685b      	ldr	r3, [r3, #4]
 8004f0c:	0c1b      	lsrs	r3, r3, #16
 8004f0e:	f003 0303 	and.w	r3, r3, #3
 8004f12:	3301      	adds	r3, #1
 8004f14:	005b      	lsls	r3, r3, #1
 8004f16:	633b      	str	r3, [r7, #48]	; 0x30
 8004f18:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8004f1a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004f1c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004f20:	63bb      	str	r3, [r7, #56]	; 0x38
 8004f22:	e002      	b.n	8004f2a <HAL_RCC_GetSysClockFreq+0x172>
 8004f24:	4b05      	ldr	r3, [pc, #20]	; (8004f3c <HAL_RCC_GetSysClockFreq+0x184>)
 8004f26:	63bb      	str	r3, [r7, #56]	; 0x38
 8004f28:	bf00      	nop
 8004f2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004f2c:	4618      	mov	r0, r3
 8004f2e:	3740      	adds	r7, #64	; 0x40
 8004f30:	46bd      	mov	sp, r7
 8004f32:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004f36:	bf00      	nop
 8004f38:	40023800 	.word	0x40023800
 8004f3c:	00f42400 	.word	0x00f42400
 8004f40:	017d7840 	.word	0x017d7840

08004f44 <HAL_RCCEx_PeriphCLKConfig>:
 8004f44:	b580      	push	{r7, lr}
 8004f46:	b088      	sub	sp, #32
 8004f48:	af00      	add	r7, sp, #0
 8004f4a:	6078      	str	r0, [r7, #4]
 8004f4c:	2300      	movs	r3, #0
 8004f4e:	617b      	str	r3, [r7, #20]
 8004f50:	2300      	movs	r3, #0
 8004f52:	613b      	str	r3, [r7, #16]
 8004f54:	2300      	movs	r3, #0
 8004f56:	61fb      	str	r3, [r7, #28]
 8004f58:	2300      	movs	r3, #0
 8004f5a:	61bb      	str	r3, [r7, #24]
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	681b      	ldr	r3, [r3, #0]
 8004f60:	f003 0301 	and.w	r3, r3, #1
 8004f64:	2b00      	cmp	r3, #0
 8004f66:	d012      	beq.n	8004f8e <HAL_RCCEx_PeriphCLKConfig+0x4a>
 8004f68:	4b65      	ldr	r3, [pc, #404]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004f6a:	689b      	ldr	r3, [r3, #8]
 8004f6c:	4a64      	ldr	r2, [pc, #400]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004f6e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8004f72:	6093      	str	r3, [r2, #8]
 8004f74:	4b62      	ldr	r3, [pc, #392]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004f76:	689a      	ldr	r2, [r3, #8]
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f7c:	4960      	ldr	r1, [pc, #384]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004f7e:	4313      	orrs	r3, r2
 8004f80:	608b      	str	r3, [r1, #8]
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	d101      	bne.n	8004f8e <HAL_RCCEx_PeriphCLKConfig+0x4a>
 8004f8a:	2301      	movs	r3, #1
 8004f8c:	61fb      	str	r3, [r7, #28]
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004f96:	2b00      	cmp	r3, #0
 8004f98:	d017      	beq.n	8004fca <HAL_RCCEx_PeriphCLKConfig+0x86>
 8004f9a:	4b59      	ldr	r3, [pc, #356]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004f9c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004fa0:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004fa8:	4955      	ldr	r1, [pc, #340]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004faa:	4313      	orrs	r3, r2
 8004fac:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004fb4:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004fb8:	d101      	bne.n	8004fbe <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8004fba:	2301      	movs	r3, #1
 8004fbc:	61fb      	str	r3, [r7, #28]
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004fc2:	2b00      	cmp	r3, #0
 8004fc4:	d101      	bne.n	8004fca <HAL_RCCEx_PeriphCLKConfig+0x86>
 8004fc6:	2301      	movs	r3, #1
 8004fc8:	61bb      	str	r3, [r7, #24]
 8004fca:	687b      	ldr	r3, [r7, #4]
 8004fcc:	681b      	ldr	r3, [r3, #0]
 8004fce:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004fd2:	2b00      	cmp	r3, #0
 8004fd4:	d017      	beq.n	8005006 <HAL_RCCEx_PeriphCLKConfig+0xc2>
 8004fd6:	4b4a      	ldr	r3, [pc, #296]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004fd8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004fdc:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8004fe0:	687b      	ldr	r3, [r7, #4]
 8004fe2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004fe4:	4946      	ldr	r1, [pc, #280]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004fe6:	4313      	orrs	r3, r2
 8004fe8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004ff0:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004ff4:	d101      	bne.n	8004ffa <HAL_RCCEx_PeriphCLKConfig+0xb6>
 8004ff6:	2301      	movs	r3, #1
 8004ff8:	61fb      	str	r3, [r7, #28]
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004ffe:	2b00      	cmp	r3, #0
 8005000:	d101      	bne.n	8005006 <HAL_RCCEx_PeriphCLKConfig+0xc2>
 8005002:	2301      	movs	r3, #1
 8005004:	61bb      	str	r3, [r7, #24]
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	f003 0320 	and.w	r3, r3, #32
 800500e:	2b00      	cmp	r3, #0
 8005010:	f000 808b 	beq.w	800512a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
 8005014:	4b3a      	ldr	r3, [pc, #232]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8005016:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005018:	4a39      	ldr	r2, [pc, #228]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800501a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800501e:	6413      	str	r3, [r2, #64]	; 0x40
 8005020:	4b37      	ldr	r3, [pc, #220]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8005022:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005024:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005028:	60fb      	str	r3, [r7, #12]
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	4b35      	ldr	r3, [pc, #212]	; (8005104 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 800502e:	681b      	ldr	r3, [r3, #0]
 8005030:	4a34      	ldr	r2, [pc, #208]	; (8005104 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8005032:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005036:	6013      	str	r3, [r2, #0]
 8005038:	f7fd fc84 	bl	8002944 <HAL_GetTick>
 800503c:	6178      	str	r0, [r7, #20]
 800503e:	e008      	b.n	8005052 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8005040:	f7fd fc80 	bl	8002944 <HAL_GetTick>
 8005044:	4602      	mov	r2, r0
 8005046:	697b      	ldr	r3, [r7, #20]
 8005048:	1ad3      	subs	r3, r2, r3
 800504a:	2b64      	cmp	r3, #100	; 0x64
 800504c:	d901      	bls.n	8005052 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800504e:	2303      	movs	r3, #3
 8005050:	e2bc      	b.n	80055cc <HAL_RCCEx_PeriphCLKConfig+0x688>
 8005052:	4b2c      	ldr	r3, [pc, #176]	; (8005104 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8005054:	681b      	ldr	r3, [r3, #0]
 8005056:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800505a:	2b00      	cmp	r3, #0
 800505c:	d0f0      	beq.n	8005040 <HAL_RCCEx_PeriphCLKConfig+0xfc>
 800505e:	4b28      	ldr	r3, [pc, #160]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8005060:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005062:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005066:	613b      	str	r3, [r7, #16]
 8005068:	693b      	ldr	r3, [r7, #16]
 800506a:	2b00      	cmp	r3, #0
 800506c:	d035      	beq.n	80050da <HAL_RCCEx_PeriphCLKConfig+0x196>
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005072:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005076:	693a      	ldr	r2, [r7, #16]
 8005078:	429a      	cmp	r2, r3
 800507a:	d02e      	beq.n	80050da <HAL_RCCEx_PeriphCLKConfig+0x196>
 800507c:	4b20      	ldr	r3, [pc, #128]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800507e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005080:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005084:	613b      	str	r3, [r7, #16]
 8005086:	4b1e      	ldr	r3, [pc, #120]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8005088:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800508a:	4a1d      	ldr	r2, [pc, #116]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800508c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005090:	6713      	str	r3, [r2, #112]	; 0x70
 8005092:	4b1b      	ldr	r3, [pc, #108]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8005094:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005096:	4a1a      	ldr	r2, [pc, #104]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8005098:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800509c:	6713      	str	r3, [r2, #112]	; 0x70
 800509e:	4a18      	ldr	r2, [pc, #96]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80050a0:	693b      	ldr	r3, [r7, #16]
 80050a2:	6713      	str	r3, [r2, #112]	; 0x70
 80050a4:	4b16      	ldr	r3, [pc, #88]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80050a6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80050a8:	f003 0301 	and.w	r3, r3, #1
 80050ac:	2b01      	cmp	r3, #1
 80050ae:	d114      	bne.n	80050da <HAL_RCCEx_PeriphCLKConfig+0x196>
 80050b0:	f7fd fc48 	bl	8002944 <HAL_GetTick>
 80050b4:	6178      	str	r0, [r7, #20]
 80050b6:	e00a      	b.n	80050ce <HAL_RCCEx_PeriphCLKConfig+0x18a>
 80050b8:	f7fd fc44 	bl	8002944 <HAL_GetTick>
 80050bc:	4602      	mov	r2, r0
 80050be:	697b      	ldr	r3, [r7, #20]
 80050c0:	1ad3      	subs	r3, r2, r3
 80050c2:	f241 3288 	movw	r2, #5000	; 0x1388
 80050c6:	4293      	cmp	r3, r2
 80050c8:	d901      	bls.n	80050ce <HAL_RCCEx_PeriphCLKConfig+0x18a>
 80050ca:	2303      	movs	r3, #3
 80050cc:	e27e      	b.n	80055cc <HAL_RCCEx_PeriphCLKConfig+0x688>
 80050ce:	4b0c      	ldr	r3, [pc, #48]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80050d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80050d2:	f003 0302 	and.w	r3, r3, #2
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d0ee      	beq.n	80050b8 <HAL_RCCEx_PeriphCLKConfig+0x174>
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80050de:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80050e2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80050e6:	d111      	bne.n	800510c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 80050e8:	4b05      	ldr	r3, [pc, #20]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80050ea:	689b      	ldr	r3, [r3, #8]
 80050ec:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	6a99      	ldr	r1, [r3, #40]	; 0x28
 80050f4:	4b04      	ldr	r3, [pc, #16]	; (8005108 <HAL_RCCEx_PeriphCLKConfig+0x1c4>)
 80050f6:	400b      	ands	r3, r1
 80050f8:	4901      	ldr	r1, [pc, #4]	; (8005100 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80050fa:	4313      	orrs	r3, r2
 80050fc:	608b      	str	r3, [r1, #8]
 80050fe:	e00b      	b.n	8005118 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 8005100:	40023800 	.word	0x40023800
 8005104:	40007000 	.word	0x40007000
 8005108:	0ffffcff 	.word	0x0ffffcff
 800510c:	4ba4      	ldr	r3, [pc, #656]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800510e:	689b      	ldr	r3, [r3, #8]
 8005110:	4aa3      	ldr	r2, [pc, #652]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005112:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8005116:	6093      	str	r3, [r2, #8]
 8005118:	4ba1      	ldr	r3, [pc, #644]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800511a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800511c:	687b      	ldr	r3, [r7, #4]
 800511e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005120:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005124:	499e      	ldr	r1, [pc, #632]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005126:	4313      	orrs	r3, r2
 8005128:	670b      	str	r3, [r1, #112]	; 0x70
 800512a:	687b      	ldr	r3, [r7, #4]
 800512c:	681b      	ldr	r3, [r3, #0]
 800512e:	f003 0310 	and.w	r3, r3, #16
 8005132:	2b00      	cmp	r3, #0
 8005134:	d010      	beq.n	8005158 <HAL_RCCEx_PeriphCLKConfig+0x214>
 8005136:	4b9a      	ldr	r3, [pc, #616]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005138:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800513c:	4a98      	ldr	r2, [pc, #608]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800513e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005142:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8005146:	4b96      	ldr	r3, [pc, #600]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005148:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005150:	4993      	ldr	r1, [pc, #588]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005152:	4313      	orrs	r3, r2
 8005154:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005160:	2b00      	cmp	r3, #0
 8005162:	d00a      	beq.n	800517a <HAL_RCCEx_PeriphCLKConfig+0x236>
 8005164:	4b8e      	ldr	r3, [pc, #568]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005166:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800516a:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005172:	498b      	ldr	r1, [pc, #556]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005174:	4313      	orrs	r3, r2
 8005176:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005182:	2b00      	cmp	r3, #0
 8005184:	d00a      	beq.n	800519c <HAL_RCCEx_PeriphCLKConfig+0x258>
 8005186:	4b86      	ldr	r3, [pc, #536]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005188:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800518c:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005194:	4982      	ldr	r1, [pc, #520]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005196:	4313      	orrs	r3, r2
 8005198:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80051a4:	2b00      	cmp	r3, #0
 80051a6:	d00a      	beq.n	80051be <HAL_RCCEx_PeriphCLKConfig+0x27a>
 80051a8:	4b7d      	ldr	r3, [pc, #500]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80051aa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80051ae:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 80051b2:	687b      	ldr	r3, [r7, #4]
 80051b4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80051b6:	497a      	ldr	r1, [pc, #488]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80051b8:	4313      	orrs	r3, r2
 80051ba:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	681b      	ldr	r3, [r3, #0]
 80051c2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80051c6:	2b00      	cmp	r3, #0
 80051c8:	d00a      	beq.n	80051e0 <HAL_RCCEx_PeriphCLKConfig+0x29c>
 80051ca:	4b75      	ldr	r3, [pc, #468]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80051cc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80051d0:	f023 0203 	bic.w	r2, r3, #3
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80051d8:	4971      	ldr	r1, [pc, #452]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80051da:	4313      	orrs	r3, r2
 80051dc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	681b      	ldr	r3, [r3, #0]
 80051e4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80051e8:	2b00      	cmp	r3, #0
 80051ea:	d00a      	beq.n	8005202 <HAL_RCCEx_PeriphCLKConfig+0x2be>
 80051ec:	4b6c      	ldr	r3, [pc, #432]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80051ee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80051f2:	f023 020c 	bic.w	r2, r3, #12
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051fa:	4969      	ldr	r1, [pc, #420]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80051fc:	4313      	orrs	r3, r2
 80051fe:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800520a:	2b00      	cmp	r3, #0
 800520c:	d00a      	beq.n	8005224 <HAL_RCCEx_PeriphCLKConfig+0x2e0>
 800520e:	4b64      	ldr	r3, [pc, #400]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005210:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005214:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800521c:	4960      	ldr	r1, [pc, #384]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800521e:	4313      	orrs	r3, r2
 8005220:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005224:	687b      	ldr	r3, [r7, #4]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800522c:	2b00      	cmp	r3, #0
 800522e:	d00a      	beq.n	8005246 <HAL_RCCEx_PeriphCLKConfig+0x302>
 8005230:	4b5b      	ldr	r3, [pc, #364]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005232:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005236:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800523e:	4958      	ldr	r1, [pc, #352]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005240:	4313      	orrs	r3, r2
 8005242:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800524e:	2b00      	cmp	r3, #0
 8005250:	d00a      	beq.n	8005268 <HAL_RCCEx_PeriphCLKConfig+0x324>
 8005252:	4b53      	ldr	r3, [pc, #332]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005254:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005258:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005260:	494f      	ldr	r1, [pc, #316]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005262:	4313      	orrs	r3, r2
 8005264:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	681b      	ldr	r3, [r3, #0]
 800526c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8005270:	2b00      	cmp	r3, #0
 8005272:	d00a      	beq.n	800528a <HAL_RCCEx_PeriphCLKConfig+0x346>
 8005274:	4b4a      	ldr	r3, [pc, #296]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005276:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800527a:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800527e:	687b      	ldr	r3, [r7, #4]
 8005280:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005282:	4947      	ldr	r1, [pc, #284]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005284:	4313      	orrs	r3, r2
 8005286:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	681b      	ldr	r3, [r3, #0]
 800528e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8005292:	2b00      	cmp	r3, #0
 8005294:	d00a      	beq.n	80052ac <HAL_RCCEx_PeriphCLKConfig+0x368>
 8005296:	4b42      	ldr	r3, [pc, #264]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005298:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800529c:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80052a4:	493e      	ldr	r1, [pc, #248]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80052a6:	4313      	orrs	r3, r2
 80052a8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80052b4:	2b00      	cmp	r3, #0
 80052b6:	d00a      	beq.n	80052ce <HAL_RCCEx_PeriphCLKConfig+0x38a>
 80052b8:	4b39      	ldr	r3, [pc, #228]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80052ba:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80052be:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 80052c2:	687b      	ldr	r3, [r7, #4]
 80052c4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80052c6:	4936      	ldr	r1, [pc, #216]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80052c8:	4313      	orrs	r3, r2
 80052ca:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80052d6:	2b00      	cmp	r3, #0
 80052d8:	d011      	beq.n	80052fe <HAL_RCCEx_PeriphCLKConfig+0x3ba>
 80052da:	4b31      	ldr	r3, [pc, #196]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80052dc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80052e0:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80052e8:	492d      	ldr	r1, [pc, #180]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80052ea:	4313      	orrs	r3, r2
 80052ec:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80052f4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80052f8:	d101      	bne.n	80052fe <HAL_RCCEx_PeriphCLKConfig+0x3ba>
 80052fa:	2301      	movs	r3, #1
 80052fc:	61bb      	str	r3, [r7, #24]
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005306:	2b00      	cmp	r3, #0
 8005308:	d00a      	beq.n	8005320 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
 800530a:	4b25      	ldr	r3, [pc, #148]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800530c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005310:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005318:	4921      	ldr	r1, [pc, #132]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800531a:	4313      	orrs	r3, r2
 800531c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	681b      	ldr	r3, [r3, #0]
 8005324:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8005328:	2b00      	cmp	r3, #0
 800532a:	d00a      	beq.n	8005342 <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 800532c:	4b1c      	ldr	r3, [pc, #112]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800532e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005332:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800533a:	4919      	ldr	r1, [pc, #100]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800533c:	4313      	orrs	r3, r2
 800533e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	681b      	ldr	r3, [r3, #0]
 8005346:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800534a:	2b00      	cmp	r3, #0
 800534c:	d00a      	beq.n	8005364 <HAL_RCCEx_PeriphCLKConfig+0x420>
 800534e:	4b14      	ldr	r3, [pc, #80]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8005350:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005354:	f023 5200 	bic.w	r2, r3, #536870912	; 0x20000000
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800535c:	4910      	ldr	r1, [pc, #64]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800535e:	4313      	orrs	r3, r2
 8005360:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005364:	69fb      	ldr	r3, [r7, #28]
 8005366:	2b01      	cmp	r3, #1
 8005368:	d006      	beq.n	8005378 <HAL_RCCEx_PeriphCLKConfig+0x434>
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005372:	2b00      	cmp	r3, #0
 8005374:	f000 809d 	beq.w	80054b2 <HAL_RCCEx_PeriphCLKConfig+0x56e>
 8005378:	4b09      	ldr	r3, [pc, #36]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800537a:	681b      	ldr	r3, [r3, #0]
 800537c:	4a08      	ldr	r2, [pc, #32]	; (80053a0 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800537e:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8005382:	6013      	str	r3, [r2, #0]
 8005384:	f7fd fade 	bl	8002944 <HAL_GetTick>
 8005388:	6178      	str	r0, [r7, #20]
 800538a:	e00b      	b.n	80053a4 <HAL_RCCEx_PeriphCLKConfig+0x460>
 800538c:	f7fd fada 	bl	8002944 <HAL_GetTick>
 8005390:	4602      	mov	r2, r0
 8005392:	697b      	ldr	r3, [r7, #20]
 8005394:	1ad3      	subs	r3, r2, r3
 8005396:	2b64      	cmp	r3, #100	; 0x64
 8005398:	d904      	bls.n	80053a4 <HAL_RCCEx_PeriphCLKConfig+0x460>
 800539a:	2303      	movs	r3, #3
 800539c:	e116      	b.n	80055cc <HAL_RCCEx_PeriphCLKConfig+0x688>
 800539e:	bf00      	nop
 80053a0:	40023800 	.word	0x40023800
 80053a4:	4b8b      	ldr	r3, [pc, #556]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80053ac:	2b00      	cmp	r3, #0
 80053ae:	d1ed      	bne.n	800538c <HAL_RCCEx_PeriphCLKConfig+0x448>
 80053b0:	687b      	ldr	r3, [r7, #4]
 80053b2:	681b      	ldr	r3, [r3, #0]
 80053b4:	f003 0301 	and.w	r3, r3, #1
 80053b8:	2b00      	cmp	r3, #0
 80053ba:	d017      	beq.n	80053ec <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 80053bc:	687b      	ldr	r3, [r7, #4]
 80053be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80053c0:	2b00      	cmp	r3, #0
 80053c2:	d113      	bne.n	80053ec <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 80053c4:	4b83      	ldr	r3, [pc, #524]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80053c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80053ca:	0e1b      	lsrs	r3, r3, #24
 80053cc:	f003 030f 	and.w	r3, r3, #15
 80053d0:	613b      	str	r3, [r7, #16]
 80053d2:	687b      	ldr	r3, [r7, #4]
 80053d4:	685b      	ldr	r3, [r3, #4]
 80053d6:	019a      	lsls	r2, r3, #6
 80053d8:	693b      	ldr	r3, [r7, #16]
 80053da:	061b      	lsls	r3, r3, #24
 80053dc:	431a      	orrs	r2, r3
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	689b      	ldr	r3, [r3, #8]
 80053e2:	071b      	lsls	r3, r3, #28
 80053e4:	497b      	ldr	r1, [pc, #492]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80053e6:	4313      	orrs	r3, r2
 80053e8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80053f4:	2b00      	cmp	r3, #0
 80053f6:	d004      	beq.n	8005402 <HAL_RCCEx_PeriphCLKConfig+0x4be>
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80053fc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005400:	d00a      	beq.n	8005418 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	681b      	ldr	r3, [r3, #0]
 8005406:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800540a:	2b00      	cmp	r3, #0
 800540c:	d024      	beq.n	8005458 <HAL_RCCEx_PeriphCLKConfig+0x514>
 800540e:	687b      	ldr	r3, [r7, #4]
 8005410:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005412:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005416:	d11f      	bne.n	8005458 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8005418:	4b6e      	ldr	r3, [pc, #440]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800541a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800541e:	0f1b      	lsrs	r3, r3, #28
 8005420:	f003 0307 	and.w	r3, r3, #7
 8005424:	613b      	str	r3, [r7, #16]
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	685b      	ldr	r3, [r3, #4]
 800542a:	019a      	lsls	r2, r3, #6
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	68db      	ldr	r3, [r3, #12]
 8005430:	061b      	lsls	r3, r3, #24
 8005432:	431a      	orrs	r2, r3
 8005434:	693b      	ldr	r3, [r7, #16]
 8005436:	071b      	lsls	r3, r3, #28
 8005438:	4966      	ldr	r1, [pc, #408]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800543a:	4313      	orrs	r3, r2
 800543c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005440:	4b64      	ldr	r3, [pc, #400]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005442:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005446:	f023 021f 	bic.w	r2, r3, #31
 800544a:	687b      	ldr	r3, [r7, #4]
 800544c:	69db      	ldr	r3, [r3, #28]
 800544e:	3b01      	subs	r3, #1
 8005450:	4960      	ldr	r1, [pc, #384]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005452:	4313      	orrs	r3, r2
 8005454:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	681b      	ldr	r3, [r3, #0]
 800545c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005460:	2b00      	cmp	r3, #0
 8005462:	d00d      	beq.n	8005480 <HAL_RCCEx_PeriphCLKConfig+0x53c>
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	685b      	ldr	r3, [r3, #4]
 8005468:	019a      	lsls	r2, r3, #6
 800546a:	687b      	ldr	r3, [r7, #4]
 800546c:	68db      	ldr	r3, [r3, #12]
 800546e:	061b      	lsls	r3, r3, #24
 8005470:	431a      	orrs	r2, r3
 8005472:	687b      	ldr	r3, [r7, #4]
 8005474:	689b      	ldr	r3, [r3, #8]
 8005476:	071b      	lsls	r3, r3, #28
 8005478:	4956      	ldr	r1, [pc, #344]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800547a:	4313      	orrs	r3, r2
 800547c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005480:	4b54      	ldr	r3, [pc, #336]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	4a53      	ldr	r2, [pc, #332]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005486:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800548a:	6013      	str	r3, [r2, #0]
 800548c:	f7fd fa5a 	bl	8002944 <HAL_GetTick>
 8005490:	6178      	str	r0, [r7, #20]
 8005492:	e008      	b.n	80054a6 <HAL_RCCEx_PeriphCLKConfig+0x562>
 8005494:	f7fd fa56 	bl	8002944 <HAL_GetTick>
 8005498:	4602      	mov	r2, r0
 800549a:	697b      	ldr	r3, [r7, #20]
 800549c:	1ad3      	subs	r3, r2, r3
 800549e:	2b64      	cmp	r3, #100	; 0x64
 80054a0:	d901      	bls.n	80054a6 <HAL_RCCEx_PeriphCLKConfig+0x562>
 80054a2:	2303      	movs	r3, #3
 80054a4:	e092      	b.n	80055cc <HAL_RCCEx_PeriphCLKConfig+0x688>
 80054a6:	4b4b      	ldr	r3, [pc, #300]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80054a8:	681b      	ldr	r3, [r3, #0]
 80054aa:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80054ae:	2b00      	cmp	r3, #0
 80054b0:	d0f0      	beq.n	8005494 <HAL_RCCEx_PeriphCLKConfig+0x550>
 80054b2:	69bb      	ldr	r3, [r7, #24]
 80054b4:	2b01      	cmp	r3, #1
 80054b6:	f040 8088 	bne.w	80055ca <HAL_RCCEx_PeriphCLKConfig+0x686>
 80054ba:	4b46      	ldr	r3, [pc, #280]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80054bc:	681b      	ldr	r3, [r3, #0]
 80054be:	4a45      	ldr	r2, [pc, #276]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80054c0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80054c4:	6013      	str	r3, [r2, #0]
 80054c6:	f7fd fa3d 	bl	8002944 <HAL_GetTick>
 80054ca:	6178      	str	r0, [r7, #20]
 80054cc:	e008      	b.n	80054e0 <HAL_RCCEx_PeriphCLKConfig+0x59c>
 80054ce:	f7fd fa39 	bl	8002944 <HAL_GetTick>
 80054d2:	4602      	mov	r2, r0
 80054d4:	697b      	ldr	r3, [r7, #20]
 80054d6:	1ad3      	subs	r3, r2, r3
 80054d8:	2b64      	cmp	r3, #100	; 0x64
 80054da:	d901      	bls.n	80054e0 <HAL_RCCEx_PeriphCLKConfig+0x59c>
 80054dc:	2303      	movs	r3, #3
 80054de:	e075      	b.n	80055cc <HAL_RCCEx_PeriphCLKConfig+0x688>
 80054e0:	4b3c      	ldr	r3, [pc, #240]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80054e8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80054ec:	d0ef      	beq.n	80054ce <HAL_RCCEx_PeriphCLKConfig+0x58a>
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	681b      	ldr	r3, [r3, #0]
 80054f2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80054f6:	2b00      	cmp	r3, #0
 80054f8:	d003      	beq.n	8005502 <HAL_RCCEx_PeriphCLKConfig+0x5be>
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80054fe:	2b00      	cmp	r3, #0
 8005500:	d009      	beq.n	8005516 <HAL_RCCEx_PeriphCLKConfig+0x5d2>
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	681b      	ldr	r3, [r3, #0]
 8005506:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800550a:	2b00      	cmp	r3, #0
 800550c:	d024      	beq.n	8005558 <HAL_RCCEx_PeriphCLKConfig+0x614>
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005512:	2b00      	cmp	r3, #0
 8005514:	d120      	bne.n	8005558 <HAL_RCCEx_PeriphCLKConfig+0x614>
 8005516:	4b2f      	ldr	r3, [pc, #188]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005518:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800551c:	0c1b      	lsrs	r3, r3, #16
 800551e:	f003 0303 	and.w	r3, r3, #3
 8005522:	613b      	str	r3, [r7, #16]
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	691b      	ldr	r3, [r3, #16]
 8005528:	019a      	lsls	r2, r3, #6
 800552a:	693b      	ldr	r3, [r7, #16]
 800552c:	041b      	lsls	r3, r3, #16
 800552e:	431a      	orrs	r2, r3
 8005530:	687b      	ldr	r3, [r7, #4]
 8005532:	695b      	ldr	r3, [r3, #20]
 8005534:	061b      	lsls	r3, r3, #24
 8005536:	4927      	ldr	r1, [pc, #156]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005538:	4313      	orrs	r3, r2
 800553a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800553e:	4b25      	ldr	r3, [pc, #148]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005540:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005544:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	6a1b      	ldr	r3, [r3, #32]
 800554c:	3b01      	subs	r3, #1
 800554e:	021b      	lsls	r3, r3, #8
 8005550:	4920      	ldr	r1, [pc, #128]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005552:	4313      	orrs	r3, r2
 8005554:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	681b      	ldr	r3, [r3, #0]
 800555c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005560:	2b00      	cmp	r3, #0
 8005562:	d018      	beq.n	8005596 <HAL_RCCEx_PeriphCLKConfig+0x652>
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005568:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800556c:	d113      	bne.n	8005596 <HAL_RCCEx_PeriphCLKConfig+0x652>
 800556e:	4b19      	ldr	r3, [pc, #100]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005570:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005574:	0e1b      	lsrs	r3, r3, #24
 8005576:	f003 030f 	and.w	r3, r3, #15
 800557a:	613b      	str	r3, [r7, #16]
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	691b      	ldr	r3, [r3, #16]
 8005580:	019a      	lsls	r2, r3, #6
 8005582:	687b      	ldr	r3, [r7, #4]
 8005584:	699b      	ldr	r3, [r3, #24]
 8005586:	041b      	lsls	r3, r3, #16
 8005588:	431a      	orrs	r2, r3
 800558a:	693b      	ldr	r3, [r7, #16]
 800558c:	061b      	lsls	r3, r3, #24
 800558e:	4911      	ldr	r1, [pc, #68]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005590:	4313      	orrs	r3, r2
 8005592:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005596:	4b0f      	ldr	r3, [pc, #60]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	4a0e      	ldr	r2, [pc, #56]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800559c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80055a0:	6013      	str	r3, [r2, #0]
 80055a2:	f7fd f9cf 	bl	8002944 <HAL_GetTick>
 80055a6:	6178      	str	r0, [r7, #20]
 80055a8:	e008      	b.n	80055bc <HAL_RCCEx_PeriphCLKConfig+0x678>
 80055aa:	f7fd f9cb 	bl	8002944 <HAL_GetTick>
 80055ae:	4602      	mov	r2, r0
 80055b0:	697b      	ldr	r3, [r7, #20]
 80055b2:	1ad3      	subs	r3, r2, r3
 80055b4:	2b64      	cmp	r3, #100	; 0x64
 80055b6:	d901      	bls.n	80055bc <HAL_RCCEx_PeriphCLKConfig+0x678>
 80055b8:	2303      	movs	r3, #3
 80055ba:	e007      	b.n	80055cc <HAL_RCCEx_PeriphCLKConfig+0x688>
 80055bc:	4b05      	ldr	r3, [pc, #20]	; (80055d4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80055be:	681b      	ldr	r3, [r3, #0]
 80055c0:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80055c4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80055c8:	d1ef      	bne.n	80055aa <HAL_RCCEx_PeriphCLKConfig+0x666>
 80055ca:	2300      	movs	r3, #0
 80055cc:	4618      	mov	r0, r3
 80055ce:	3720      	adds	r7, #32
 80055d0:	46bd      	mov	sp, r7
 80055d2:	bd80      	pop	{r7, pc}
 80055d4:	40023800 	.word	0x40023800

080055d8 <calloc>:
 80055d8:	4b02      	ldr	r3, [pc, #8]	; (80055e4 <calloc+0xc>)
 80055da:	460a      	mov	r2, r1
 80055dc:	4601      	mov	r1, r0
 80055de:	6818      	ldr	r0, [r3, #0]
 80055e0:	f000 b802 	b.w	80055e8 <_calloc_r>
 80055e4:	200000ac 	.word	0x200000ac

080055e8 <_calloc_r>:
 80055e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80055ea:	fba1 2402 	umull	r2, r4, r1, r2
 80055ee:	b94c      	cbnz	r4, 8005604 <_calloc_r+0x1c>
 80055f0:	4611      	mov	r1, r2
 80055f2:	9201      	str	r2, [sp, #4]
 80055f4:	f000 f836 	bl	8005664 <_malloc_r>
 80055f8:	9a01      	ldr	r2, [sp, #4]
 80055fa:	4605      	mov	r5, r0
 80055fc:	b930      	cbnz	r0, 800560c <_calloc_r+0x24>
 80055fe:	4628      	mov	r0, r5
 8005600:	b003      	add	sp, #12
 8005602:	bd30      	pop	{r4, r5, pc}
 8005604:	220c      	movs	r2, #12
 8005606:	6002      	str	r2, [r0, #0]
 8005608:	2500      	movs	r5, #0
 800560a:	e7f8      	b.n	80055fe <_calloc_r+0x16>
 800560c:	4621      	mov	r1, r4
 800560e:	f000 f8b5 	bl	800577c <memset>
 8005612:	e7f4      	b.n	80055fe <_calloc_r+0x16>

08005614 <malloc>:
 8005614:	4b02      	ldr	r3, [pc, #8]	; (8005620 <malloc+0xc>)
 8005616:	4601      	mov	r1, r0
 8005618:	6818      	ldr	r0, [r3, #0]
 800561a:	f000 b823 	b.w	8005664 <_malloc_r>
 800561e:	bf00      	nop
 8005620:	200000ac 	.word	0x200000ac

08005624 <sbrk_aligned>:
 8005624:	b570      	push	{r4, r5, r6, lr}
 8005626:	4e0e      	ldr	r6, [pc, #56]	; (8005660 <sbrk_aligned+0x3c>)
 8005628:	460c      	mov	r4, r1
 800562a:	6831      	ldr	r1, [r6, #0]
 800562c:	4605      	mov	r5, r0
 800562e:	b911      	cbnz	r1, 8005636 <sbrk_aligned+0x12>
 8005630:	f000 f8ac 	bl	800578c <_sbrk_r>
 8005634:	6030      	str	r0, [r6, #0]
 8005636:	4621      	mov	r1, r4
 8005638:	4628      	mov	r0, r5
 800563a:	f000 f8a7 	bl	800578c <_sbrk_r>
 800563e:	1c43      	adds	r3, r0, #1
 8005640:	d00a      	beq.n	8005658 <sbrk_aligned+0x34>
 8005642:	1cc4      	adds	r4, r0, #3
 8005644:	f024 0403 	bic.w	r4, r4, #3
 8005648:	42a0      	cmp	r0, r4
 800564a:	d007      	beq.n	800565c <sbrk_aligned+0x38>
 800564c:	1a21      	subs	r1, r4, r0
 800564e:	4628      	mov	r0, r5
 8005650:	f000 f89c 	bl	800578c <_sbrk_r>
 8005654:	3001      	adds	r0, #1
 8005656:	d101      	bne.n	800565c <sbrk_aligned+0x38>
 8005658:	f04f 34ff 	mov.w	r4, #4294967295
 800565c:	4620      	mov	r0, r4
 800565e:	bd70      	pop	{r4, r5, r6, pc}
 8005660:	20000694 	.word	0x20000694

08005664 <_malloc_r>:
 8005664:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005668:	1ccd      	adds	r5, r1, #3
 800566a:	f025 0503 	bic.w	r5, r5, #3
 800566e:	3508      	adds	r5, #8
 8005670:	2d0c      	cmp	r5, #12
 8005672:	bf38      	it	cc
 8005674:	250c      	movcc	r5, #12
 8005676:	2d00      	cmp	r5, #0
 8005678:	4607      	mov	r7, r0
 800567a:	db01      	blt.n	8005680 <_malloc_r+0x1c>
 800567c:	42a9      	cmp	r1, r5
 800567e:	d905      	bls.n	800568c <_malloc_r+0x28>
 8005680:	230c      	movs	r3, #12
 8005682:	603b      	str	r3, [r7, #0]
 8005684:	2600      	movs	r6, #0
 8005686:	4630      	mov	r0, r6
 8005688:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800568c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8005760 <_malloc_r+0xfc>
 8005690:	f000 f868 	bl	8005764 <__malloc_lock>
 8005694:	f8d8 3000 	ldr.w	r3, [r8]
 8005698:	461c      	mov	r4, r3
 800569a:	bb5c      	cbnz	r4, 80056f4 <_malloc_r+0x90>
 800569c:	4629      	mov	r1, r5
 800569e:	4638      	mov	r0, r7
 80056a0:	f7ff ffc0 	bl	8005624 <sbrk_aligned>
 80056a4:	1c43      	adds	r3, r0, #1
 80056a6:	4604      	mov	r4, r0
 80056a8:	d155      	bne.n	8005756 <_malloc_r+0xf2>
 80056aa:	f8d8 4000 	ldr.w	r4, [r8]
 80056ae:	4626      	mov	r6, r4
 80056b0:	2e00      	cmp	r6, #0
 80056b2:	d145      	bne.n	8005740 <_malloc_r+0xdc>
 80056b4:	2c00      	cmp	r4, #0
 80056b6:	d048      	beq.n	800574a <_malloc_r+0xe6>
 80056b8:	6823      	ldr	r3, [r4, #0]
 80056ba:	4631      	mov	r1, r6
 80056bc:	4638      	mov	r0, r7
 80056be:	eb04 0903 	add.w	r9, r4, r3
 80056c2:	f000 f863 	bl	800578c <_sbrk_r>
 80056c6:	4581      	cmp	r9, r0
 80056c8:	d13f      	bne.n	800574a <_malloc_r+0xe6>
 80056ca:	6821      	ldr	r1, [r4, #0]
 80056cc:	1a6d      	subs	r5, r5, r1
 80056ce:	4629      	mov	r1, r5
 80056d0:	4638      	mov	r0, r7
 80056d2:	f7ff ffa7 	bl	8005624 <sbrk_aligned>
 80056d6:	3001      	adds	r0, #1
 80056d8:	d037      	beq.n	800574a <_malloc_r+0xe6>
 80056da:	6823      	ldr	r3, [r4, #0]
 80056dc:	442b      	add	r3, r5
 80056de:	6023      	str	r3, [r4, #0]
 80056e0:	f8d8 3000 	ldr.w	r3, [r8]
 80056e4:	2b00      	cmp	r3, #0
 80056e6:	d038      	beq.n	800575a <_malloc_r+0xf6>
 80056e8:	685a      	ldr	r2, [r3, #4]
 80056ea:	42a2      	cmp	r2, r4
 80056ec:	d12b      	bne.n	8005746 <_malloc_r+0xe2>
 80056ee:	2200      	movs	r2, #0
 80056f0:	605a      	str	r2, [r3, #4]
 80056f2:	e00f      	b.n	8005714 <_malloc_r+0xb0>
 80056f4:	6822      	ldr	r2, [r4, #0]
 80056f6:	1b52      	subs	r2, r2, r5
 80056f8:	d41f      	bmi.n	800573a <_malloc_r+0xd6>
 80056fa:	2a0b      	cmp	r2, #11
 80056fc:	d917      	bls.n	800572e <_malloc_r+0xca>
 80056fe:	1961      	adds	r1, r4, r5
 8005700:	42a3      	cmp	r3, r4
 8005702:	6025      	str	r5, [r4, #0]
 8005704:	bf18      	it	ne
 8005706:	6059      	strne	r1, [r3, #4]
 8005708:	6863      	ldr	r3, [r4, #4]
 800570a:	bf08      	it	eq
 800570c:	f8c8 1000 	streq.w	r1, [r8]
 8005710:	5162      	str	r2, [r4, r5]
 8005712:	604b      	str	r3, [r1, #4]
 8005714:	4638      	mov	r0, r7
 8005716:	f104 060b 	add.w	r6, r4, #11
 800571a:	f000 f829 	bl	8005770 <__malloc_unlock>
 800571e:	f026 0607 	bic.w	r6, r6, #7
 8005722:	1d23      	adds	r3, r4, #4
 8005724:	1af2      	subs	r2, r6, r3
 8005726:	d0ae      	beq.n	8005686 <_malloc_r+0x22>
 8005728:	1b9b      	subs	r3, r3, r6
 800572a:	50a3      	str	r3, [r4, r2]
 800572c:	e7ab      	b.n	8005686 <_malloc_r+0x22>
 800572e:	42a3      	cmp	r3, r4
 8005730:	6862      	ldr	r2, [r4, #4]
 8005732:	d1dd      	bne.n	80056f0 <_malloc_r+0x8c>
 8005734:	f8c8 2000 	str.w	r2, [r8]
 8005738:	e7ec      	b.n	8005714 <_malloc_r+0xb0>
 800573a:	4623      	mov	r3, r4
 800573c:	6864      	ldr	r4, [r4, #4]
 800573e:	e7ac      	b.n	800569a <_malloc_r+0x36>
 8005740:	4634      	mov	r4, r6
 8005742:	6876      	ldr	r6, [r6, #4]
 8005744:	e7b4      	b.n	80056b0 <_malloc_r+0x4c>
 8005746:	4613      	mov	r3, r2
 8005748:	e7cc      	b.n	80056e4 <_malloc_r+0x80>
 800574a:	230c      	movs	r3, #12
 800574c:	603b      	str	r3, [r7, #0]
 800574e:	4638      	mov	r0, r7
 8005750:	f000 f80e 	bl	8005770 <__malloc_unlock>
 8005754:	e797      	b.n	8005686 <_malloc_r+0x22>
 8005756:	6025      	str	r5, [r4, #0]
 8005758:	e7dc      	b.n	8005714 <_malloc_r+0xb0>
 800575a:	605b      	str	r3, [r3, #4]
 800575c:	deff      	udf	#255	; 0xff
 800575e:	bf00      	nop
 8005760:	20000690 	.word	0x20000690

08005764 <__malloc_lock>:
 8005764:	4801      	ldr	r0, [pc, #4]	; (800576c <__malloc_lock+0x8>)
 8005766:	f000 b84b 	b.w	8005800 <__retarget_lock_acquire_recursive>
 800576a:	bf00      	nop
 800576c:	200007d4 	.word	0x200007d4

08005770 <__malloc_unlock>:
 8005770:	4801      	ldr	r0, [pc, #4]	; (8005778 <__malloc_unlock+0x8>)
 8005772:	f000 b846 	b.w	8005802 <__retarget_lock_release_recursive>
 8005776:	bf00      	nop
 8005778:	200007d4 	.word	0x200007d4

0800577c <memset>:
 800577c:	4402      	add	r2, r0
 800577e:	4603      	mov	r3, r0
 8005780:	4293      	cmp	r3, r2
 8005782:	d100      	bne.n	8005786 <memset+0xa>
 8005784:	4770      	bx	lr
 8005786:	f803 1b01 	strb.w	r1, [r3], #1
 800578a:	e7f9      	b.n	8005780 <memset+0x4>

0800578c <_sbrk_r>:
 800578c:	b538      	push	{r3, r4, r5, lr}
 800578e:	4d06      	ldr	r5, [pc, #24]	; (80057a8 <_sbrk_r+0x1c>)
 8005790:	2300      	movs	r3, #0
 8005792:	4604      	mov	r4, r0
 8005794:	4608      	mov	r0, r1
 8005796:	602b      	str	r3, [r5, #0]
 8005798:	f7fd f812 	bl	80027c0 <_sbrk>
 800579c:	1c43      	adds	r3, r0, #1
 800579e:	d102      	bne.n	80057a6 <_sbrk_r+0x1a>
 80057a0:	682b      	ldr	r3, [r5, #0]
 80057a2:	b103      	cbz	r3, 80057a6 <_sbrk_r+0x1a>
 80057a4:	6023      	str	r3, [r4, #0]
 80057a6:	bd38      	pop	{r3, r4, r5, pc}
 80057a8:	200007d0 	.word	0x200007d0

080057ac <__errno>:
 80057ac:	4b01      	ldr	r3, [pc, #4]	; (80057b4 <__errno+0x8>)
 80057ae:	6818      	ldr	r0, [r3, #0]
 80057b0:	4770      	bx	lr
 80057b2:	bf00      	nop
 80057b4:	200000ac 	.word	0x200000ac

080057b8 <__libc_init_array>:
 80057b8:	b570      	push	{r4, r5, r6, lr}
 80057ba:	4d0d      	ldr	r5, [pc, #52]	; (80057f0 <__libc_init_array+0x38>)
 80057bc:	4c0d      	ldr	r4, [pc, #52]	; (80057f4 <__libc_init_array+0x3c>)
 80057be:	1b64      	subs	r4, r4, r5
 80057c0:	10a4      	asrs	r4, r4, #2
 80057c2:	2600      	movs	r6, #0
 80057c4:	42a6      	cmp	r6, r4
 80057c6:	d109      	bne.n	80057dc <__libc_init_array+0x24>
 80057c8:	4d0b      	ldr	r5, [pc, #44]	; (80057f8 <__libc_init_array+0x40>)
 80057ca:	4c0c      	ldr	r4, [pc, #48]	; (80057fc <__libc_init_array+0x44>)
 80057cc:	f001 fca8 	bl	8007120 <_init>
 80057d0:	1b64      	subs	r4, r4, r5
 80057d2:	10a4      	asrs	r4, r4, #2
 80057d4:	2600      	movs	r6, #0
 80057d6:	42a6      	cmp	r6, r4
 80057d8:	d105      	bne.n	80057e6 <__libc_init_array+0x2e>
 80057da:	bd70      	pop	{r4, r5, r6, pc}
 80057dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80057e0:	4798      	blx	r3
 80057e2:	3601      	adds	r6, #1
 80057e4:	e7ee      	b.n	80057c4 <__libc_init_array+0xc>
 80057e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80057ea:	4798      	blx	r3
 80057ec:	3601      	adds	r6, #1
 80057ee:	e7f2      	b.n	80057d6 <__libc_init_array+0x1e>
 80057f0:	08007570 	.word	0x08007570
 80057f4:	08007570 	.word	0x08007570
 80057f8:	08007570 	.word	0x08007570
 80057fc:	08007574 	.word	0x08007574

08005800 <__retarget_lock_acquire_recursive>:
 8005800:	4770      	bx	lr

08005802 <__retarget_lock_release_recursive>:
 8005802:	4770      	bx	lr

08005804 <pow>:
 8005804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005806:	ed2d 8b02 	vpush	{d8}
 800580a:	eeb0 8a40 	vmov.f32	s16, s0
 800580e:	eef0 8a60 	vmov.f32	s17, s1
 8005812:	ec55 4b11 	vmov	r4, r5, d1
 8005816:	f000 f9ab 	bl	8005b70 <__ieee754_pow>
 800581a:	4622      	mov	r2, r4
 800581c:	462b      	mov	r3, r5
 800581e:	4620      	mov	r0, r4
 8005820:	4629      	mov	r1, r5
 8005822:	ec57 6b10 	vmov	r6, r7, d0
 8005826:	f7fb f951 	bl	8000acc <__aeabi_dcmpun>
 800582a:	2800      	cmp	r0, #0
 800582c:	d13b      	bne.n	80058a6 <pow+0xa2>
 800582e:	ec51 0b18 	vmov	r0, r1, d8
 8005832:	2200      	movs	r2, #0
 8005834:	2300      	movs	r3, #0
 8005836:	f7fb f917 	bl	8000a68 <__aeabi_dcmpeq>
 800583a:	b1b8      	cbz	r0, 800586c <pow+0x68>
 800583c:	2200      	movs	r2, #0
 800583e:	2300      	movs	r3, #0
 8005840:	4620      	mov	r0, r4
 8005842:	4629      	mov	r1, r5
 8005844:	f7fb f910 	bl	8000a68 <__aeabi_dcmpeq>
 8005848:	2800      	cmp	r0, #0
 800584a:	d146      	bne.n	80058da <pow+0xd6>
 800584c:	ec45 4b10 	vmov	d0, r4, r5
 8005850:	f000 f88e 	bl	8005970 <finite>
 8005854:	b338      	cbz	r0, 80058a6 <pow+0xa2>
 8005856:	2200      	movs	r2, #0
 8005858:	2300      	movs	r3, #0
 800585a:	4620      	mov	r0, r4
 800585c:	4629      	mov	r1, r5
 800585e:	f7fb f90d 	bl	8000a7c <__aeabi_dcmplt>
 8005862:	b300      	cbz	r0, 80058a6 <pow+0xa2>
 8005864:	f7ff ffa2 	bl	80057ac <__errno>
 8005868:	2322      	movs	r3, #34	; 0x22
 800586a:	e01b      	b.n	80058a4 <pow+0xa0>
 800586c:	ec47 6b10 	vmov	d0, r6, r7
 8005870:	f000 f87e 	bl	8005970 <finite>
 8005874:	b9e0      	cbnz	r0, 80058b0 <pow+0xac>
 8005876:	eeb0 0a48 	vmov.f32	s0, s16
 800587a:	eef0 0a68 	vmov.f32	s1, s17
 800587e:	f000 f877 	bl	8005970 <finite>
 8005882:	b1a8      	cbz	r0, 80058b0 <pow+0xac>
 8005884:	ec45 4b10 	vmov	d0, r4, r5
 8005888:	f000 f872 	bl	8005970 <finite>
 800588c:	b180      	cbz	r0, 80058b0 <pow+0xac>
 800588e:	4632      	mov	r2, r6
 8005890:	463b      	mov	r3, r7
 8005892:	4630      	mov	r0, r6
 8005894:	4639      	mov	r1, r7
 8005896:	f7fb f919 	bl	8000acc <__aeabi_dcmpun>
 800589a:	2800      	cmp	r0, #0
 800589c:	d0e2      	beq.n	8005864 <pow+0x60>
 800589e:	f7ff ff85 	bl	80057ac <__errno>
 80058a2:	2321      	movs	r3, #33	; 0x21
 80058a4:	6003      	str	r3, [r0, #0]
 80058a6:	ecbd 8b02 	vpop	{d8}
 80058aa:	ec47 6b10 	vmov	d0, r6, r7
 80058ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80058b0:	2200      	movs	r2, #0
 80058b2:	2300      	movs	r3, #0
 80058b4:	4630      	mov	r0, r6
 80058b6:	4639      	mov	r1, r7
 80058b8:	f7fb f8d6 	bl	8000a68 <__aeabi_dcmpeq>
 80058bc:	2800      	cmp	r0, #0
 80058be:	d0f2      	beq.n	80058a6 <pow+0xa2>
 80058c0:	eeb0 0a48 	vmov.f32	s0, s16
 80058c4:	eef0 0a68 	vmov.f32	s1, s17
 80058c8:	f000 f852 	bl	8005970 <finite>
 80058cc:	2800      	cmp	r0, #0
 80058ce:	d0ea      	beq.n	80058a6 <pow+0xa2>
 80058d0:	ec45 4b10 	vmov	d0, r4, r5
 80058d4:	f000 f84c 	bl	8005970 <finite>
 80058d8:	e7c3      	b.n	8005862 <pow+0x5e>
 80058da:	4f01      	ldr	r7, [pc, #4]	; (80058e0 <pow+0xdc>)
 80058dc:	2600      	movs	r6, #0
 80058de:	e7e2      	b.n	80058a6 <pow+0xa2>
 80058e0:	3ff00000 	.word	0x3ff00000

080058e4 <sinf>:
 80058e4:	ee10 3a10 	vmov	r3, s0
 80058e8:	b507      	push	{r0, r1, r2, lr}
 80058ea:	4a1f      	ldr	r2, [pc, #124]	; (8005968 <sinf+0x84>)
 80058ec:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80058f0:	4293      	cmp	r3, r2
 80058f2:	dc07      	bgt.n	8005904 <sinf+0x20>
 80058f4:	eddf 0a1d 	vldr	s1, [pc, #116]	; 800596c <sinf+0x88>
 80058f8:	2000      	movs	r0, #0
 80058fa:	b003      	add	sp, #12
 80058fc:	f85d eb04 	ldr.w	lr, [sp], #4
 8005900:	f000 bec8 	b.w	8006694 <__kernel_sinf>
 8005904:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8005908:	db04      	blt.n	8005914 <sinf+0x30>
 800590a:	ee30 0a40 	vsub.f32	s0, s0, s0
 800590e:	b003      	add	sp, #12
 8005910:	f85d fb04 	ldr.w	pc, [sp], #4
 8005914:	4668      	mov	r0, sp
 8005916:	f000 ff05 	bl	8006724 <__ieee754_rem_pio2f>
 800591a:	f000 0003 	and.w	r0, r0, #3
 800591e:	2801      	cmp	r0, #1
 8005920:	d00a      	beq.n	8005938 <sinf+0x54>
 8005922:	2802      	cmp	r0, #2
 8005924:	d00f      	beq.n	8005946 <sinf+0x62>
 8005926:	b9c0      	cbnz	r0, 800595a <sinf+0x76>
 8005928:	eddd 0a01 	vldr	s1, [sp, #4]
 800592c:	ed9d 0a00 	vldr	s0, [sp]
 8005930:	2001      	movs	r0, #1
 8005932:	f000 feaf 	bl	8006694 <__kernel_sinf>
 8005936:	e7ea      	b.n	800590e <sinf+0x2a>
 8005938:	eddd 0a01 	vldr	s1, [sp, #4]
 800593c:	ed9d 0a00 	vldr	s0, [sp]
 8005940:	f000 fe4a 	bl	80065d8 <__kernel_cosf>
 8005944:	e7e3      	b.n	800590e <sinf+0x2a>
 8005946:	eddd 0a01 	vldr	s1, [sp, #4]
 800594a:	ed9d 0a00 	vldr	s0, [sp]
 800594e:	2001      	movs	r0, #1
 8005950:	f000 fea0 	bl	8006694 <__kernel_sinf>
 8005954:	eeb1 0a40 	vneg.f32	s0, s0
 8005958:	e7d9      	b.n	800590e <sinf+0x2a>
 800595a:	eddd 0a01 	vldr	s1, [sp, #4]
 800595e:	ed9d 0a00 	vldr	s0, [sp]
 8005962:	f000 fe39 	bl	80065d8 <__kernel_cosf>
 8005966:	e7f5      	b.n	8005954 <sinf+0x70>
 8005968:	3f490fd8 	.word	0x3f490fd8
 800596c:	00000000 	.word	0x00000000

08005970 <finite>:
 8005970:	b082      	sub	sp, #8
 8005972:	ed8d 0b00 	vstr	d0, [sp]
 8005976:	9801      	ldr	r0, [sp, #4]
 8005978:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 800597c:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8005980:	0fc0      	lsrs	r0, r0, #31
 8005982:	b002      	add	sp, #8
 8005984:	4770      	bx	lr
	...

08005988 <__ieee754_sqrt>:
 8005988:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800598c:	ec55 4b10 	vmov	r4, r5, d0
 8005990:	4e67      	ldr	r6, [pc, #412]	; (8005b30 <__ieee754_sqrt+0x1a8>)
 8005992:	43ae      	bics	r6, r5
 8005994:	ee10 0a10 	vmov	r0, s0
 8005998:	ee10 2a10 	vmov	r2, s0
 800599c:	4629      	mov	r1, r5
 800599e:	462b      	mov	r3, r5
 80059a0:	d10d      	bne.n	80059be <__ieee754_sqrt+0x36>
 80059a2:	f7fa fdf9 	bl	8000598 <__aeabi_dmul>
 80059a6:	4602      	mov	r2, r0
 80059a8:	460b      	mov	r3, r1
 80059aa:	4620      	mov	r0, r4
 80059ac:	4629      	mov	r1, r5
 80059ae:	f7fa fc3d 	bl	800022c <__adddf3>
 80059b2:	4604      	mov	r4, r0
 80059b4:	460d      	mov	r5, r1
 80059b6:	ec45 4b10 	vmov	d0, r4, r5
 80059ba:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80059be:	2d00      	cmp	r5, #0
 80059c0:	dc0b      	bgt.n	80059da <__ieee754_sqrt+0x52>
 80059c2:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 80059c6:	4326      	orrs	r6, r4
 80059c8:	d0f5      	beq.n	80059b6 <__ieee754_sqrt+0x2e>
 80059ca:	b135      	cbz	r5, 80059da <__ieee754_sqrt+0x52>
 80059cc:	f7fa fc2c 	bl	8000228 <__aeabi_dsub>
 80059d0:	4602      	mov	r2, r0
 80059d2:	460b      	mov	r3, r1
 80059d4:	f7fa ff0a 	bl	80007ec <__aeabi_ddiv>
 80059d8:	e7eb      	b.n	80059b2 <__ieee754_sqrt+0x2a>
 80059da:	1509      	asrs	r1, r1, #20
 80059dc:	f000 808d 	beq.w	8005afa <__ieee754_sqrt+0x172>
 80059e0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80059e4:	f2a1 36ff 	subw	r6, r1, #1023	; 0x3ff
 80059e8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80059ec:	07c9      	lsls	r1, r1, #31
 80059ee:	bf5c      	itt	pl
 80059f0:	005b      	lslpl	r3, r3, #1
 80059f2:	eb03 73d2 	addpl.w	r3, r3, r2, lsr #31
 80059f6:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80059fa:	bf58      	it	pl
 80059fc:	0052      	lslpl	r2, r2, #1
 80059fe:	2500      	movs	r5, #0
 8005a00:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8005a04:	1076      	asrs	r6, r6, #1
 8005a06:	0052      	lsls	r2, r2, #1
 8005a08:	f04f 0e16 	mov.w	lr, #22
 8005a0c:	46ac      	mov	ip, r5
 8005a0e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8005a12:	eb0c 0001 	add.w	r0, ip, r1
 8005a16:	4298      	cmp	r0, r3
 8005a18:	bfde      	ittt	le
 8005a1a:	1a1b      	suble	r3, r3, r0
 8005a1c:	eb00 0c01 	addle.w	ip, r0, r1
 8005a20:	186d      	addle	r5, r5, r1
 8005a22:	005b      	lsls	r3, r3, #1
 8005a24:	f1be 0e01 	subs.w	lr, lr, #1
 8005a28:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8005a2c:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8005a30:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8005a34:	d1ed      	bne.n	8005a12 <__ieee754_sqrt+0x8a>
 8005a36:	4674      	mov	r4, lr
 8005a38:	2720      	movs	r7, #32
 8005a3a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8005a3e:	4563      	cmp	r3, ip
 8005a40:	eb01 000e 	add.w	r0, r1, lr
 8005a44:	dc02      	bgt.n	8005a4c <__ieee754_sqrt+0xc4>
 8005a46:	d113      	bne.n	8005a70 <__ieee754_sqrt+0xe8>
 8005a48:	4290      	cmp	r0, r2
 8005a4a:	d811      	bhi.n	8005a70 <__ieee754_sqrt+0xe8>
 8005a4c:	2800      	cmp	r0, #0
 8005a4e:	eb00 0e01 	add.w	lr, r0, r1
 8005a52:	da57      	bge.n	8005b04 <__ieee754_sqrt+0x17c>
 8005a54:	f1be 0f00 	cmp.w	lr, #0
 8005a58:	db54      	blt.n	8005b04 <__ieee754_sqrt+0x17c>
 8005a5a:	f10c 0801 	add.w	r8, ip, #1
 8005a5e:	eba3 030c 	sub.w	r3, r3, ip
 8005a62:	4290      	cmp	r0, r2
 8005a64:	bf88      	it	hi
 8005a66:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8005a6a:	1a12      	subs	r2, r2, r0
 8005a6c:	440c      	add	r4, r1
 8005a6e:	46c4      	mov	ip, r8
 8005a70:	005b      	lsls	r3, r3, #1
 8005a72:	3f01      	subs	r7, #1
 8005a74:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 8005a78:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8005a7c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8005a80:	d1dd      	bne.n	8005a3e <__ieee754_sqrt+0xb6>
 8005a82:	4313      	orrs	r3, r2
 8005a84:	d01b      	beq.n	8005abe <__ieee754_sqrt+0x136>
 8005a86:	f8df a0ac 	ldr.w	sl, [pc, #172]	; 8005b34 <__ieee754_sqrt+0x1ac>
 8005a8a:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 8005b38 <__ieee754_sqrt+0x1b0>
 8005a8e:	e9da 0100 	ldrd	r0, r1, [sl]
 8005a92:	e9db 2300 	ldrd	r2, r3, [fp]
 8005a96:	f7fa fbc7 	bl	8000228 <__aeabi_dsub>
 8005a9a:	e9da 8900 	ldrd	r8, r9, [sl]
 8005a9e:	4602      	mov	r2, r0
 8005aa0:	460b      	mov	r3, r1
 8005aa2:	4640      	mov	r0, r8
 8005aa4:	4649      	mov	r1, r9
 8005aa6:	f7fa fff3 	bl	8000a90 <__aeabi_dcmple>
 8005aaa:	b140      	cbz	r0, 8005abe <__ieee754_sqrt+0x136>
 8005aac:	f1b4 3fff 	cmp.w	r4, #4294967295
 8005ab0:	e9da 0100 	ldrd	r0, r1, [sl]
 8005ab4:	e9db 2300 	ldrd	r2, r3, [fp]
 8005ab8:	d126      	bne.n	8005b08 <__ieee754_sqrt+0x180>
 8005aba:	3501      	adds	r5, #1
 8005abc:	463c      	mov	r4, r7
 8005abe:	106a      	asrs	r2, r5, #1
 8005ac0:	0863      	lsrs	r3, r4, #1
 8005ac2:	07e9      	lsls	r1, r5, #31
 8005ac4:	f102 527f 	add.w	r2, r2, #1069547520	; 0x3fc00000
 8005ac8:	f502 1200 	add.w	r2, r2, #2097152	; 0x200000
 8005acc:	bf48      	it	mi
 8005ace:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8005ad2:	eb02 5506 	add.w	r5, r2, r6, lsl #20
 8005ad6:	461c      	mov	r4, r3
 8005ad8:	e76d      	b.n	80059b6 <__ieee754_sqrt+0x2e>
 8005ada:	0ad3      	lsrs	r3, r2, #11
 8005adc:	3815      	subs	r0, #21
 8005ade:	0552      	lsls	r2, r2, #21
 8005ae0:	2b00      	cmp	r3, #0
 8005ae2:	d0fa      	beq.n	8005ada <__ieee754_sqrt+0x152>
 8005ae4:	02dc      	lsls	r4, r3, #11
 8005ae6:	d50a      	bpl.n	8005afe <__ieee754_sqrt+0x176>
 8005ae8:	f1c1 0420 	rsb	r4, r1, #32
 8005aec:	fa22 f404 	lsr.w	r4, r2, r4
 8005af0:	1e4d      	subs	r5, r1, #1
 8005af2:	408a      	lsls	r2, r1
 8005af4:	4323      	orrs	r3, r4
 8005af6:	1b41      	subs	r1, r0, r5
 8005af8:	e772      	b.n	80059e0 <__ieee754_sqrt+0x58>
 8005afa:	4608      	mov	r0, r1
 8005afc:	e7f0      	b.n	8005ae0 <__ieee754_sqrt+0x158>
 8005afe:	005b      	lsls	r3, r3, #1
 8005b00:	3101      	adds	r1, #1
 8005b02:	e7ef      	b.n	8005ae4 <__ieee754_sqrt+0x15c>
 8005b04:	46e0      	mov	r8, ip
 8005b06:	e7aa      	b.n	8005a5e <__ieee754_sqrt+0xd6>
 8005b08:	f7fa fb90 	bl	800022c <__adddf3>
 8005b0c:	e9da 8900 	ldrd	r8, r9, [sl]
 8005b10:	4602      	mov	r2, r0
 8005b12:	460b      	mov	r3, r1
 8005b14:	4640      	mov	r0, r8
 8005b16:	4649      	mov	r1, r9
 8005b18:	f7fa ffb0 	bl	8000a7c <__aeabi_dcmplt>
 8005b1c:	b120      	cbz	r0, 8005b28 <__ieee754_sqrt+0x1a0>
 8005b1e:	1ca0      	adds	r0, r4, #2
 8005b20:	bf08      	it	eq
 8005b22:	3501      	addeq	r5, #1
 8005b24:	3402      	adds	r4, #2
 8005b26:	e7ca      	b.n	8005abe <__ieee754_sqrt+0x136>
 8005b28:	3401      	adds	r4, #1
 8005b2a:	f024 0401 	bic.w	r4, r4, #1
 8005b2e:	e7c6      	b.n	8005abe <__ieee754_sqrt+0x136>
 8005b30:	7ff00000 	.word	0x7ff00000
 8005b34:	200000b0 	.word	0x200000b0
 8005b38:	200000b8 	.word	0x200000b8

08005b3c <truncf>:
 8005b3c:	ee10 1a10 	vmov	r1, s0
 8005b40:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8005b44:	3a7f      	subs	r2, #127	; 0x7f
 8005b46:	2a16      	cmp	r2, #22
 8005b48:	dc09      	bgt.n	8005b5e <truncf+0x22>
 8005b4a:	2a00      	cmp	r2, #0
 8005b4c:	bfa5      	ittet	ge
 8005b4e:	4b06      	ldrge	r3, [pc, #24]	; (8005b68 <truncf+0x2c>)
 8005b50:	4113      	asrge	r3, r2
 8005b52:	f001 4300 	andlt.w	r3, r1, #2147483648	; 0x80000000
 8005b56:	400b      	andge	r3, r1
 8005b58:	ee00 3a10 	vmov	s0, r3
 8005b5c:	4770      	bx	lr
 8005b5e:	2a80      	cmp	r2, #128	; 0x80
 8005b60:	bf08      	it	eq
 8005b62:	ee30 0a00 	vaddeq.f32	s0, s0, s0
 8005b66:	4770      	bx	lr
 8005b68:	ff800000 	.word	0xff800000
 8005b6c:	00000000 	.word	0x00000000

08005b70 <__ieee754_pow>:
 8005b70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b74:	ed2d 8b06 	vpush	{d8-d10}
 8005b78:	b089      	sub	sp, #36	; 0x24
 8005b7a:	ed8d 1b00 	vstr	d1, [sp]
 8005b7e:	e9dd 2900 	ldrd	r2, r9, [sp]
 8005b82:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 8005b86:	ea58 0102 	orrs.w	r1, r8, r2
 8005b8a:	ec57 6b10 	vmov	r6, r7, d0
 8005b8e:	d115      	bne.n	8005bbc <__ieee754_pow+0x4c>
 8005b90:	19b3      	adds	r3, r6, r6
 8005b92:	f487 2200 	eor.w	r2, r7, #524288	; 0x80000
 8005b96:	4152      	adcs	r2, r2
 8005b98:	4299      	cmp	r1, r3
 8005b9a:	4b89      	ldr	r3, [pc, #548]	; (8005dc0 <__ieee754_pow+0x250>)
 8005b9c:	4193      	sbcs	r3, r2
 8005b9e:	f080 84d1 	bcs.w	8006544 <__ieee754_pow+0x9d4>
 8005ba2:	e9dd 2300 	ldrd	r2, r3, [sp]
 8005ba6:	4630      	mov	r0, r6
 8005ba8:	4639      	mov	r1, r7
 8005baa:	f7fa fb3f 	bl	800022c <__adddf3>
 8005bae:	ec41 0b10 	vmov	d0, r0, r1
 8005bb2:	b009      	add	sp, #36	; 0x24
 8005bb4:	ecbd 8b06 	vpop	{d8-d10}
 8005bb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005bbc:	4b81      	ldr	r3, [pc, #516]	; (8005dc4 <__ieee754_pow+0x254>)
 8005bbe:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 8005bc2:	429c      	cmp	r4, r3
 8005bc4:	ee10 aa10 	vmov	sl, s0
 8005bc8:	463d      	mov	r5, r7
 8005bca:	dc06      	bgt.n	8005bda <__ieee754_pow+0x6a>
 8005bcc:	d101      	bne.n	8005bd2 <__ieee754_pow+0x62>
 8005bce:	2e00      	cmp	r6, #0
 8005bd0:	d1e7      	bne.n	8005ba2 <__ieee754_pow+0x32>
 8005bd2:	4598      	cmp	r8, r3
 8005bd4:	dc01      	bgt.n	8005bda <__ieee754_pow+0x6a>
 8005bd6:	d10f      	bne.n	8005bf8 <__ieee754_pow+0x88>
 8005bd8:	b172      	cbz	r2, 8005bf8 <__ieee754_pow+0x88>
 8005bda:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 8005bde:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 8005be2:	ea55 050a 	orrs.w	r5, r5, sl
 8005be6:	d1dc      	bne.n	8005ba2 <__ieee754_pow+0x32>
 8005be8:	e9dd 3200 	ldrd	r3, r2, [sp]
 8005bec:	18db      	adds	r3, r3, r3
 8005bee:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 8005bf2:	4152      	adcs	r2, r2
 8005bf4:	429d      	cmp	r5, r3
 8005bf6:	e7d0      	b.n	8005b9a <__ieee754_pow+0x2a>
 8005bf8:	2d00      	cmp	r5, #0
 8005bfa:	da3b      	bge.n	8005c74 <__ieee754_pow+0x104>
 8005bfc:	4b72      	ldr	r3, [pc, #456]	; (8005dc8 <__ieee754_pow+0x258>)
 8005bfe:	4598      	cmp	r8, r3
 8005c00:	dc51      	bgt.n	8005ca6 <__ieee754_pow+0x136>
 8005c02:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 8005c06:	4598      	cmp	r8, r3
 8005c08:	f340 84ab 	ble.w	8006562 <__ieee754_pow+0x9f2>
 8005c0c:	ea4f 5328 	mov.w	r3, r8, asr #20
 8005c10:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8005c14:	2b14      	cmp	r3, #20
 8005c16:	dd0f      	ble.n	8005c38 <__ieee754_pow+0xc8>
 8005c18:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 8005c1c:	fa22 f103 	lsr.w	r1, r2, r3
 8005c20:	fa01 f303 	lsl.w	r3, r1, r3
 8005c24:	4293      	cmp	r3, r2
 8005c26:	f040 849c 	bne.w	8006562 <__ieee754_pow+0x9f2>
 8005c2a:	f001 0101 	and.w	r1, r1, #1
 8005c2e:	f1c1 0302 	rsb	r3, r1, #2
 8005c32:	9304      	str	r3, [sp, #16]
 8005c34:	b182      	cbz	r2, 8005c58 <__ieee754_pow+0xe8>
 8005c36:	e05f      	b.n	8005cf8 <__ieee754_pow+0x188>
 8005c38:	2a00      	cmp	r2, #0
 8005c3a:	d15b      	bne.n	8005cf4 <__ieee754_pow+0x184>
 8005c3c:	f1c3 0314 	rsb	r3, r3, #20
 8005c40:	fa48 f103 	asr.w	r1, r8, r3
 8005c44:	fa01 f303 	lsl.w	r3, r1, r3
 8005c48:	4543      	cmp	r3, r8
 8005c4a:	f040 8487 	bne.w	800655c <__ieee754_pow+0x9ec>
 8005c4e:	f001 0101 	and.w	r1, r1, #1
 8005c52:	f1c1 0302 	rsb	r3, r1, #2
 8005c56:	9304      	str	r3, [sp, #16]
 8005c58:	4b5c      	ldr	r3, [pc, #368]	; (8005dcc <__ieee754_pow+0x25c>)
 8005c5a:	4598      	cmp	r8, r3
 8005c5c:	d132      	bne.n	8005cc4 <__ieee754_pow+0x154>
 8005c5e:	f1b9 0f00 	cmp.w	r9, #0
 8005c62:	f280 8477 	bge.w	8006554 <__ieee754_pow+0x9e4>
 8005c66:	4959      	ldr	r1, [pc, #356]	; (8005dcc <__ieee754_pow+0x25c>)
 8005c68:	4632      	mov	r2, r6
 8005c6a:	463b      	mov	r3, r7
 8005c6c:	2000      	movs	r0, #0
 8005c6e:	f7fa fdbd 	bl	80007ec <__aeabi_ddiv>
 8005c72:	e79c      	b.n	8005bae <__ieee754_pow+0x3e>
 8005c74:	2300      	movs	r3, #0
 8005c76:	9304      	str	r3, [sp, #16]
 8005c78:	2a00      	cmp	r2, #0
 8005c7a:	d13d      	bne.n	8005cf8 <__ieee754_pow+0x188>
 8005c7c:	4b51      	ldr	r3, [pc, #324]	; (8005dc4 <__ieee754_pow+0x254>)
 8005c7e:	4598      	cmp	r8, r3
 8005c80:	d1ea      	bne.n	8005c58 <__ieee754_pow+0xe8>
 8005c82:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8005c86:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8005c8a:	ea53 030a 	orrs.w	r3, r3, sl
 8005c8e:	f000 8459 	beq.w	8006544 <__ieee754_pow+0x9d4>
 8005c92:	4b4f      	ldr	r3, [pc, #316]	; (8005dd0 <__ieee754_pow+0x260>)
 8005c94:	429c      	cmp	r4, r3
 8005c96:	dd08      	ble.n	8005caa <__ieee754_pow+0x13a>
 8005c98:	f1b9 0f00 	cmp.w	r9, #0
 8005c9c:	f2c0 8456 	blt.w	800654c <__ieee754_pow+0x9dc>
 8005ca0:	e9dd 0100 	ldrd	r0, r1, [sp]
 8005ca4:	e783      	b.n	8005bae <__ieee754_pow+0x3e>
 8005ca6:	2302      	movs	r3, #2
 8005ca8:	e7e5      	b.n	8005c76 <__ieee754_pow+0x106>
 8005caa:	f1b9 0f00 	cmp.w	r9, #0
 8005cae:	f04f 0000 	mov.w	r0, #0
 8005cb2:	f04f 0100 	mov.w	r1, #0
 8005cb6:	f6bf af7a 	bge.w	8005bae <__ieee754_pow+0x3e>
 8005cba:	e9dd 0300 	ldrd	r0, r3, [sp]
 8005cbe:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8005cc2:	e774      	b.n	8005bae <__ieee754_pow+0x3e>
 8005cc4:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 8005cc8:	d106      	bne.n	8005cd8 <__ieee754_pow+0x168>
 8005cca:	4632      	mov	r2, r6
 8005ccc:	463b      	mov	r3, r7
 8005cce:	4630      	mov	r0, r6
 8005cd0:	4639      	mov	r1, r7
 8005cd2:	f7fa fc61 	bl	8000598 <__aeabi_dmul>
 8005cd6:	e76a      	b.n	8005bae <__ieee754_pow+0x3e>
 8005cd8:	4b3e      	ldr	r3, [pc, #248]	; (8005dd4 <__ieee754_pow+0x264>)
 8005cda:	4599      	cmp	r9, r3
 8005cdc:	d10c      	bne.n	8005cf8 <__ieee754_pow+0x188>
 8005cde:	2d00      	cmp	r5, #0
 8005ce0:	db0a      	blt.n	8005cf8 <__ieee754_pow+0x188>
 8005ce2:	ec47 6b10 	vmov	d0, r6, r7
 8005ce6:	b009      	add	sp, #36	; 0x24
 8005ce8:	ecbd 8b06 	vpop	{d8-d10}
 8005cec:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cf0:	f7ff be4a 	b.w	8005988 <__ieee754_sqrt>
 8005cf4:	2300      	movs	r3, #0
 8005cf6:	9304      	str	r3, [sp, #16]
 8005cf8:	ec47 6b10 	vmov	d0, r6, r7
 8005cfc:	f000 fc62 	bl	80065c4 <fabs>
 8005d00:	ec51 0b10 	vmov	r0, r1, d0
 8005d04:	f1ba 0f00 	cmp.w	sl, #0
 8005d08:	d129      	bne.n	8005d5e <__ieee754_pow+0x1ee>
 8005d0a:	b124      	cbz	r4, 8005d16 <__ieee754_pow+0x1a6>
 8005d0c:	4b2f      	ldr	r3, [pc, #188]	; (8005dcc <__ieee754_pow+0x25c>)
 8005d0e:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 8005d12:	429a      	cmp	r2, r3
 8005d14:	d123      	bne.n	8005d5e <__ieee754_pow+0x1ee>
 8005d16:	f1b9 0f00 	cmp.w	r9, #0
 8005d1a:	da05      	bge.n	8005d28 <__ieee754_pow+0x1b8>
 8005d1c:	4602      	mov	r2, r0
 8005d1e:	460b      	mov	r3, r1
 8005d20:	2000      	movs	r0, #0
 8005d22:	492a      	ldr	r1, [pc, #168]	; (8005dcc <__ieee754_pow+0x25c>)
 8005d24:	f7fa fd62 	bl	80007ec <__aeabi_ddiv>
 8005d28:	2d00      	cmp	r5, #0
 8005d2a:	f6bf af40 	bge.w	8005bae <__ieee754_pow+0x3e>
 8005d2e:	9b04      	ldr	r3, [sp, #16]
 8005d30:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8005d34:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8005d38:	431c      	orrs	r4, r3
 8005d3a:	d108      	bne.n	8005d4e <__ieee754_pow+0x1de>
 8005d3c:	4602      	mov	r2, r0
 8005d3e:	460b      	mov	r3, r1
 8005d40:	4610      	mov	r0, r2
 8005d42:	4619      	mov	r1, r3
 8005d44:	f7fa fa70 	bl	8000228 <__aeabi_dsub>
 8005d48:	4602      	mov	r2, r0
 8005d4a:	460b      	mov	r3, r1
 8005d4c:	e78f      	b.n	8005c6e <__ieee754_pow+0xfe>
 8005d4e:	9b04      	ldr	r3, [sp, #16]
 8005d50:	2b01      	cmp	r3, #1
 8005d52:	f47f af2c 	bne.w	8005bae <__ieee754_pow+0x3e>
 8005d56:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005d5a:	4619      	mov	r1, r3
 8005d5c:	e727      	b.n	8005bae <__ieee754_pow+0x3e>
 8005d5e:	0feb      	lsrs	r3, r5, #31
 8005d60:	3b01      	subs	r3, #1
 8005d62:	9306      	str	r3, [sp, #24]
 8005d64:	9a06      	ldr	r2, [sp, #24]
 8005d66:	9b04      	ldr	r3, [sp, #16]
 8005d68:	4313      	orrs	r3, r2
 8005d6a:	d102      	bne.n	8005d72 <__ieee754_pow+0x202>
 8005d6c:	4632      	mov	r2, r6
 8005d6e:	463b      	mov	r3, r7
 8005d70:	e7e6      	b.n	8005d40 <__ieee754_pow+0x1d0>
 8005d72:	4b19      	ldr	r3, [pc, #100]	; (8005dd8 <__ieee754_pow+0x268>)
 8005d74:	4598      	cmp	r8, r3
 8005d76:	f340 80fb 	ble.w	8005f70 <__ieee754_pow+0x400>
 8005d7a:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8005d7e:	4598      	cmp	r8, r3
 8005d80:	4b13      	ldr	r3, [pc, #76]	; (8005dd0 <__ieee754_pow+0x260>)
 8005d82:	dd0c      	ble.n	8005d9e <__ieee754_pow+0x22e>
 8005d84:	429c      	cmp	r4, r3
 8005d86:	dc0f      	bgt.n	8005da8 <__ieee754_pow+0x238>
 8005d88:	f1b9 0f00 	cmp.w	r9, #0
 8005d8c:	da0f      	bge.n	8005dae <__ieee754_pow+0x23e>
 8005d8e:	2000      	movs	r0, #0
 8005d90:	b009      	add	sp, #36	; 0x24
 8005d92:	ecbd 8b06 	vpop	{d8-d10}
 8005d96:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d9a:	f000 be9e 	b.w	8006ada <__math_oflow>
 8005d9e:	429c      	cmp	r4, r3
 8005da0:	dbf2      	blt.n	8005d88 <__ieee754_pow+0x218>
 8005da2:	4b0a      	ldr	r3, [pc, #40]	; (8005dcc <__ieee754_pow+0x25c>)
 8005da4:	429c      	cmp	r4, r3
 8005da6:	dd19      	ble.n	8005ddc <__ieee754_pow+0x26c>
 8005da8:	f1b9 0f00 	cmp.w	r9, #0
 8005dac:	dcef      	bgt.n	8005d8e <__ieee754_pow+0x21e>
 8005dae:	2000      	movs	r0, #0
 8005db0:	b009      	add	sp, #36	; 0x24
 8005db2:	ecbd 8b06 	vpop	{d8-d10}
 8005db6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005dba:	f000 be85 	b.w	8006ac8 <__math_uflow>
 8005dbe:	bf00      	nop
 8005dc0:	fff00000 	.word	0xfff00000
 8005dc4:	7ff00000 	.word	0x7ff00000
 8005dc8:	433fffff 	.word	0x433fffff
 8005dcc:	3ff00000 	.word	0x3ff00000
 8005dd0:	3fefffff 	.word	0x3fefffff
 8005dd4:	3fe00000 	.word	0x3fe00000
 8005dd8:	41e00000 	.word	0x41e00000
 8005ddc:	4b60      	ldr	r3, [pc, #384]	; (8005f60 <__ieee754_pow+0x3f0>)
 8005dde:	2200      	movs	r2, #0
 8005de0:	f7fa fa22 	bl	8000228 <__aeabi_dsub>
 8005de4:	a354      	add	r3, pc, #336	; (adr r3, 8005f38 <__ieee754_pow+0x3c8>)
 8005de6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005dea:	4604      	mov	r4, r0
 8005dec:	460d      	mov	r5, r1
 8005dee:	f7fa fbd3 	bl	8000598 <__aeabi_dmul>
 8005df2:	a353      	add	r3, pc, #332	; (adr r3, 8005f40 <__ieee754_pow+0x3d0>)
 8005df4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005df8:	4606      	mov	r6, r0
 8005dfa:	460f      	mov	r7, r1
 8005dfc:	4620      	mov	r0, r4
 8005dfe:	4629      	mov	r1, r5
 8005e00:	f7fa fbca 	bl	8000598 <__aeabi_dmul>
 8005e04:	4b57      	ldr	r3, [pc, #348]	; (8005f64 <__ieee754_pow+0x3f4>)
 8005e06:	4682      	mov	sl, r0
 8005e08:	468b      	mov	fp, r1
 8005e0a:	2200      	movs	r2, #0
 8005e0c:	4620      	mov	r0, r4
 8005e0e:	4629      	mov	r1, r5
 8005e10:	f7fa fbc2 	bl	8000598 <__aeabi_dmul>
 8005e14:	4602      	mov	r2, r0
 8005e16:	460b      	mov	r3, r1
 8005e18:	a14b      	add	r1, pc, #300	; (adr r1, 8005f48 <__ieee754_pow+0x3d8>)
 8005e1a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005e1e:	f7fa fa03 	bl	8000228 <__aeabi_dsub>
 8005e22:	4622      	mov	r2, r4
 8005e24:	462b      	mov	r3, r5
 8005e26:	f7fa fbb7 	bl	8000598 <__aeabi_dmul>
 8005e2a:	4602      	mov	r2, r0
 8005e2c:	460b      	mov	r3, r1
 8005e2e:	2000      	movs	r0, #0
 8005e30:	494d      	ldr	r1, [pc, #308]	; (8005f68 <__ieee754_pow+0x3f8>)
 8005e32:	f7fa f9f9 	bl	8000228 <__aeabi_dsub>
 8005e36:	4622      	mov	r2, r4
 8005e38:	4680      	mov	r8, r0
 8005e3a:	4689      	mov	r9, r1
 8005e3c:	462b      	mov	r3, r5
 8005e3e:	4620      	mov	r0, r4
 8005e40:	4629      	mov	r1, r5
 8005e42:	f7fa fba9 	bl	8000598 <__aeabi_dmul>
 8005e46:	4602      	mov	r2, r0
 8005e48:	460b      	mov	r3, r1
 8005e4a:	4640      	mov	r0, r8
 8005e4c:	4649      	mov	r1, r9
 8005e4e:	f7fa fba3 	bl	8000598 <__aeabi_dmul>
 8005e52:	a33f      	add	r3, pc, #252	; (adr r3, 8005f50 <__ieee754_pow+0x3e0>)
 8005e54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005e58:	f7fa fb9e 	bl	8000598 <__aeabi_dmul>
 8005e5c:	4602      	mov	r2, r0
 8005e5e:	460b      	mov	r3, r1
 8005e60:	4650      	mov	r0, sl
 8005e62:	4659      	mov	r1, fp
 8005e64:	f7fa f9e0 	bl	8000228 <__aeabi_dsub>
 8005e68:	4602      	mov	r2, r0
 8005e6a:	460b      	mov	r3, r1
 8005e6c:	4680      	mov	r8, r0
 8005e6e:	4689      	mov	r9, r1
 8005e70:	4630      	mov	r0, r6
 8005e72:	4639      	mov	r1, r7
 8005e74:	f7fa f9da 	bl	800022c <__adddf3>
 8005e78:	2000      	movs	r0, #0
 8005e7a:	4632      	mov	r2, r6
 8005e7c:	463b      	mov	r3, r7
 8005e7e:	4604      	mov	r4, r0
 8005e80:	460d      	mov	r5, r1
 8005e82:	f7fa f9d1 	bl	8000228 <__aeabi_dsub>
 8005e86:	4602      	mov	r2, r0
 8005e88:	460b      	mov	r3, r1
 8005e8a:	4640      	mov	r0, r8
 8005e8c:	4649      	mov	r1, r9
 8005e8e:	f7fa f9cb 	bl	8000228 <__aeabi_dsub>
 8005e92:	9b04      	ldr	r3, [sp, #16]
 8005e94:	9a06      	ldr	r2, [sp, #24]
 8005e96:	3b01      	subs	r3, #1
 8005e98:	4313      	orrs	r3, r2
 8005e9a:	4682      	mov	sl, r0
 8005e9c:	468b      	mov	fp, r1
 8005e9e:	f040 81e7 	bne.w	8006270 <__ieee754_pow+0x700>
 8005ea2:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 8005f58 <__ieee754_pow+0x3e8>
 8005ea6:	eeb0 8a47 	vmov.f32	s16, s14
 8005eaa:	eef0 8a67 	vmov.f32	s17, s15
 8005eae:	e9dd 6700 	ldrd	r6, r7, [sp]
 8005eb2:	2600      	movs	r6, #0
 8005eb4:	4632      	mov	r2, r6
 8005eb6:	463b      	mov	r3, r7
 8005eb8:	e9dd 0100 	ldrd	r0, r1, [sp]
 8005ebc:	f7fa f9b4 	bl	8000228 <__aeabi_dsub>
 8005ec0:	4622      	mov	r2, r4
 8005ec2:	462b      	mov	r3, r5
 8005ec4:	f7fa fb68 	bl	8000598 <__aeabi_dmul>
 8005ec8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8005ecc:	4680      	mov	r8, r0
 8005ece:	4689      	mov	r9, r1
 8005ed0:	4650      	mov	r0, sl
 8005ed2:	4659      	mov	r1, fp
 8005ed4:	f7fa fb60 	bl	8000598 <__aeabi_dmul>
 8005ed8:	4602      	mov	r2, r0
 8005eda:	460b      	mov	r3, r1
 8005edc:	4640      	mov	r0, r8
 8005ede:	4649      	mov	r1, r9
 8005ee0:	f7fa f9a4 	bl	800022c <__adddf3>
 8005ee4:	4632      	mov	r2, r6
 8005ee6:	463b      	mov	r3, r7
 8005ee8:	4680      	mov	r8, r0
 8005eea:	4689      	mov	r9, r1
 8005eec:	4620      	mov	r0, r4
 8005eee:	4629      	mov	r1, r5
 8005ef0:	f7fa fb52 	bl	8000598 <__aeabi_dmul>
 8005ef4:	460b      	mov	r3, r1
 8005ef6:	4604      	mov	r4, r0
 8005ef8:	460d      	mov	r5, r1
 8005efa:	4602      	mov	r2, r0
 8005efc:	4649      	mov	r1, r9
 8005efe:	4640      	mov	r0, r8
 8005f00:	f7fa f994 	bl	800022c <__adddf3>
 8005f04:	4b19      	ldr	r3, [pc, #100]	; (8005f6c <__ieee754_pow+0x3fc>)
 8005f06:	4299      	cmp	r1, r3
 8005f08:	ec45 4b19 	vmov	d9, r4, r5
 8005f0c:	4606      	mov	r6, r0
 8005f0e:	460f      	mov	r7, r1
 8005f10:	468b      	mov	fp, r1
 8005f12:	f340 82f0 	ble.w	80064f6 <__ieee754_pow+0x986>
 8005f16:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 8005f1a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 8005f1e:	4303      	orrs	r3, r0
 8005f20:	f000 81e4 	beq.w	80062ec <__ieee754_pow+0x77c>
 8005f24:	ec51 0b18 	vmov	r0, r1, d8
 8005f28:	2200      	movs	r2, #0
 8005f2a:	2300      	movs	r3, #0
 8005f2c:	f7fa fda6 	bl	8000a7c <__aeabi_dcmplt>
 8005f30:	3800      	subs	r0, #0
 8005f32:	bf18      	it	ne
 8005f34:	2001      	movne	r0, #1
 8005f36:	e72b      	b.n	8005d90 <__ieee754_pow+0x220>
 8005f38:	60000000 	.word	0x60000000
 8005f3c:	3ff71547 	.word	0x3ff71547
 8005f40:	f85ddf44 	.word	0xf85ddf44
 8005f44:	3e54ae0b 	.word	0x3e54ae0b
 8005f48:	55555555 	.word	0x55555555
 8005f4c:	3fd55555 	.word	0x3fd55555
 8005f50:	652b82fe 	.word	0x652b82fe
 8005f54:	3ff71547 	.word	0x3ff71547
 8005f58:	00000000 	.word	0x00000000
 8005f5c:	bff00000 	.word	0xbff00000
 8005f60:	3ff00000 	.word	0x3ff00000
 8005f64:	3fd00000 	.word	0x3fd00000
 8005f68:	3fe00000 	.word	0x3fe00000
 8005f6c:	408fffff 	.word	0x408fffff
 8005f70:	4bd5      	ldr	r3, [pc, #852]	; (80062c8 <__ieee754_pow+0x758>)
 8005f72:	402b      	ands	r3, r5
 8005f74:	2200      	movs	r2, #0
 8005f76:	b92b      	cbnz	r3, 8005f84 <__ieee754_pow+0x414>
 8005f78:	4bd4      	ldr	r3, [pc, #848]	; (80062cc <__ieee754_pow+0x75c>)
 8005f7a:	f7fa fb0d 	bl	8000598 <__aeabi_dmul>
 8005f7e:	f06f 0234 	mvn.w	r2, #52	; 0x34
 8005f82:	460c      	mov	r4, r1
 8005f84:	1523      	asrs	r3, r4, #20
 8005f86:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8005f8a:	4413      	add	r3, r2
 8005f8c:	9305      	str	r3, [sp, #20]
 8005f8e:	4bd0      	ldr	r3, [pc, #832]	; (80062d0 <__ieee754_pow+0x760>)
 8005f90:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8005f94:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8005f98:	429c      	cmp	r4, r3
 8005f9a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8005f9e:	dd08      	ble.n	8005fb2 <__ieee754_pow+0x442>
 8005fa0:	4bcc      	ldr	r3, [pc, #816]	; (80062d4 <__ieee754_pow+0x764>)
 8005fa2:	429c      	cmp	r4, r3
 8005fa4:	f340 8162 	ble.w	800626c <__ieee754_pow+0x6fc>
 8005fa8:	9b05      	ldr	r3, [sp, #20]
 8005faa:	3301      	adds	r3, #1
 8005fac:	9305      	str	r3, [sp, #20]
 8005fae:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 8005fb2:	2400      	movs	r4, #0
 8005fb4:	00e3      	lsls	r3, r4, #3
 8005fb6:	9307      	str	r3, [sp, #28]
 8005fb8:	4bc7      	ldr	r3, [pc, #796]	; (80062d8 <__ieee754_pow+0x768>)
 8005fba:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8005fbe:	ed93 7b00 	vldr	d7, [r3]
 8005fc2:	4629      	mov	r1, r5
 8005fc4:	ec53 2b17 	vmov	r2, r3, d7
 8005fc8:	eeb0 9a47 	vmov.f32	s18, s14
 8005fcc:	eef0 9a67 	vmov.f32	s19, s15
 8005fd0:	4682      	mov	sl, r0
 8005fd2:	f7fa f929 	bl	8000228 <__aeabi_dsub>
 8005fd6:	4652      	mov	r2, sl
 8005fd8:	4606      	mov	r6, r0
 8005fda:	460f      	mov	r7, r1
 8005fdc:	462b      	mov	r3, r5
 8005fde:	ec51 0b19 	vmov	r0, r1, d9
 8005fe2:	f7fa f923 	bl	800022c <__adddf3>
 8005fe6:	4602      	mov	r2, r0
 8005fe8:	460b      	mov	r3, r1
 8005fea:	2000      	movs	r0, #0
 8005fec:	49bb      	ldr	r1, [pc, #748]	; (80062dc <__ieee754_pow+0x76c>)
 8005fee:	f7fa fbfd 	bl	80007ec <__aeabi_ddiv>
 8005ff2:	ec41 0b1a 	vmov	d10, r0, r1
 8005ff6:	4602      	mov	r2, r0
 8005ff8:	460b      	mov	r3, r1
 8005ffa:	4630      	mov	r0, r6
 8005ffc:	4639      	mov	r1, r7
 8005ffe:	f7fa facb 	bl	8000598 <__aeabi_dmul>
 8006002:	2300      	movs	r3, #0
 8006004:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006008:	9302      	str	r3, [sp, #8]
 800600a:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 800600e:	46ab      	mov	fp, r5
 8006010:	106d      	asrs	r5, r5, #1
 8006012:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8006016:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 800601a:	ec41 0b18 	vmov	d8, r0, r1
 800601e:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 8006022:	2200      	movs	r2, #0
 8006024:	4640      	mov	r0, r8
 8006026:	4649      	mov	r1, r9
 8006028:	4614      	mov	r4, r2
 800602a:	461d      	mov	r5, r3
 800602c:	f7fa fab4 	bl	8000598 <__aeabi_dmul>
 8006030:	4602      	mov	r2, r0
 8006032:	460b      	mov	r3, r1
 8006034:	4630      	mov	r0, r6
 8006036:	4639      	mov	r1, r7
 8006038:	f7fa f8f6 	bl	8000228 <__aeabi_dsub>
 800603c:	ec53 2b19 	vmov	r2, r3, d9
 8006040:	4606      	mov	r6, r0
 8006042:	460f      	mov	r7, r1
 8006044:	4620      	mov	r0, r4
 8006046:	4629      	mov	r1, r5
 8006048:	f7fa f8ee 	bl	8000228 <__aeabi_dsub>
 800604c:	4602      	mov	r2, r0
 800604e:	460b      	mov	r3, r1
 8006050:	4650      	mov	r0, sl
 8006052:	4659      	mov	r1, fp
 8006054:	f7fa f8e8 	bl	8000228 <__aeabi_dsub>
 8006058:	4642      	mov	r2, r8
 800605a:	464b      	mov	r3, r9
 800605c:	f7fa fa9c 	bl	8000598 <__aeabi_dmul>
 8006060:	4602      	mov	r2, r0
 8006062:	460b      	mov	r3, r1
 8006064:	4630      	mov	r0, r6
 8006066:	4639      	mov	r1, r7
 8006068:	f7fa f8de 	bl	8000228 <__aeabi_dsub>
 800606c:	ec53 2b1a 	vmov	r2, r3, d10
 8006070:	f7fa fa92 	bl	8000598 <__aeabi_dmul>
 8006074:	ec53 2b18 	vmov	r2, r3, d8
 8006078:	ec41 0b19 	vmov	d9, r0, r1
 800607c:	ec51 0b18 	vmov	r0, r1, d8
 8006080:	f7fa fa8a 	bl	8000598 <__aeabi_dmul>
 8006084:	a37c      	add	r3, pc, #496	; (adr r3, 8006278 <__ieee754_pow+0x708>)
 8006086:	e9d3 2300 	ldrd	r2, r3, [r3]
 800608a:	4604      	mov	r4, r0
 800608c:	460d      	mov	r5, r1
 800608e:	f7fa fa83 	bl	8000598 <__aeabi_dmul>
 8006092:	a37b      	add	r3, pc, #492	; (adr r3, 8006280 <__ieee754_pow+0x710>)
 8006094:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006098:	f7fa f8c8 	bl	800022c <__adddf3>
 800609c:	4622      	mov	r2, r4
 800609e:	462b      	mov	r3, r5
 80060a0:	f7fa fa7a 	bl	8000598 <__aeabi_dmul>
 80060a4:	a378      	add	r3, pc, #480	; (adr r3, 8006288 <__ieee754_pow+0x718>)
 80060a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060aa:	f7fa f8bf 	bl	800022c <__adddf3>
 80060ae:	4622      	mov	r2, r4
 80060b0:	462b      	mov	r3, r5
 80060b2:	f7fa fa71 	bl	8000598 <__aeabi_dmul>
 80060b6:	a376      	add	r3, pc, #472	; (adr r3, 8006290 <__ieee754_pow+0x720>)
 80060b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060bc:	f7fa f8b6 	bl	800022c <__adddf3>
 80060c0:	4622      	mov	r2, r4
 80060c2:	462b      	mov	r3, r5
 80060c4:	f7fa fa68 	bl	8000598 <__aeabi_dmul>
 80060c8:	a373      	add	r3, pc, #460	; (adr r3, 8006298 <__ieee754_pow+0x728>)
 80060ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060ce:	f7fa f8ad 	bl	800022c <__adddf3>
 80060d2:	4622      	mov	r2, r4
 80060d4:	462b      	mov	r3, r5
 80060d6:	f7fa fa5f 	bl	8000598 <__aeabi_dmul>
 80060da:	a371      	add	r3, pc, #452	; (adr r3, 80062a0 <__ieee754_pow+0x730>)
 80060dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80060e0:	f7fa f8a4 	bl	800022c <__adddf3>
 80060e4:	4622      	mov	r2, r4
 80060e6:	4606      	mov	r6, r0
 80060e8:	460f      	mov	r7, r1
 80060ea:	462b      	mov	r3, r5
 80060ec:	4620      	mov	r0, r4
 80060ee:	4629      	mov	r1, r5
 80060f0:	f7fa fa52 	bl	8000598 <__aeabi_dmul>
 80060f4:	4602      	mov	r2, r0
 80060f6:	460b      	mov	r3, r1
 80060f8:	4630      	mov	r0, r6
 80060fa:	4639      	mov	r1, r7
 80060fc:	f7fa fa4c 	bl	8000598 <__aeabi_dmul>
 8006100:	4642      	mov	r2, r8
 8006102:	4604      	mov	r4, r0
 8006104:	460d      	mov	r5, r1
 8006106:	464b      	mov	r3, r9
 8006108:	ec51 0b18 	vmov	r0, r1, d8
 800610c:	f7fa f88e 	bl	800022c <__adddf3>
 8006110:	ec53 2b19 	vmov	r2, r3, d9
 8006114:	f7fa fa40 	bl	8000598 <__aeabi_dmul>
 8006118:	4622      	mov	r2, r4
 800611a:	462b      	mov	r3, r5
 800611c:	f7fa f886 	bl	800022c <__adddf3>
 8006120:	4642      	mov	r2, r8
 8006122:	4682      	mov	sl, r0
 8006124:	468b      	mov	fp, r1
 8006126:	464b      	mov	r3, r9
 8006128:	4640      	mov	r0, r8
 800612a:	4649      	mov	r1, r9
 800612c:	f7fa fa34 	bl	8000598 <__aeabi_dmul>
 8006130:	4b6b      	ldr	r3, [pc, #428]	; (80062e0 <__ieee754_pow+0x770>)
 8006132:	2200      	movs	r2, #0
 8006134:	4606      	mov	r6, r0
 8006136:	460f      	mov	r7, r1
 8006138:	f7fa f878 	bl	800022c <__adddf3>
 800613c:	4652      	mov	r2, sl
 800613e:	465b      	mov	r3, fp
 8006140:	f7fa f874 	bl	800022c <__adddf3>
 8006144:	2000      	movs	r0, #0
 8006146:	4604      	mov	r4, r0
 8006148:	460d      	mov	r5, r1
 800614a:	4602      	mov	r2, r0
 800614c:	460b      	mov	r3, r1
 800614e:	4640      	mov	r0, r8
 8006150:	4649      	mov	r1, r9
 8006152:	f7fa fa21 	bl	8000598 <__aeabi_dmul>
 8006156:	4b62      	ldr	r3, [pc, #392]	; (80062e0 <__ieee754_pow+0x770>)
 8006158:	4680      	mov	r8, r0
 800615a:	4689      	mov	r9, r1
 800615c:	2200      	movs	r2, #0
 800615e:	4620      	mov	r0, r4
 8006160:	4629      	mov	r1, r5
 8006162:	f7fa f861 	bl	8000228 <__aeabi_dsub>
 8006166:	4632      	mov	r2, r6
 8006168:	463b      	mov	r3, r7
 800616a:	f7fa f85d 	bl	8000228 <__aeabi_dsub>
 800616e:	4602      	mov	r2, r0
 8006170:	460b      	mov	r3, r1
 8006172:	4650      	mov	r0, sl
 8006174:	4659      	mov	r1, fp
 8006176:	f7fa f857 	bl	8000228 <__aeabi_dsub>
 800617a:	ec53 2b18 	vmov	r2, r3, d8
 800617e:	f7fa fa0b 	bl	8000598 <__aeabi_dmul>
 8006182:	4622      	mov	r2, r4
 8006184:	4606      	mov	r6, r0
 8006186:	460f      	mov	r7, r1
 8006188:	462b      	mov	r3, r5
 800618a:	ec51 0b19 	vmov	r0, r1, d9
 800618e:	f7fa fa03 	bl	8000598 <__aeabi_dmul>
 8006192:	4602      	mov	r2, r0
 8006194:	460b      	mov	r3, r1
 8006196:	4630      	mov	r0, r6
 8006198:	4639      	mov	r1, r7
 800619a:	f7fa f847 	bl	800022c <__adddf3>
 800619e:	4606      	mov	r6, r0
 80061a0:	460f      	mov	r7, r1
 80061a2:	4602      	mov	r2, r0
 80061a4:	460b      	mov	r3, r1
 80061a6:	4640      	mov	r0, r8
 80061a8:	4649      	mov	r1, r9
 80061aa:	f7fa f83f 	bl	800022c <__adddf3>
 80061ae:	a33e      	add	r3, pc, #248	; (adr r3, 80062a8 <__ieee754_pow+0x738>)
 80061b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061b4:	2000      	movs	r0, #0
 80061b6:	4604      	mov	r4, r0
 80061b8:	460d      	mov	r5, r1
 80061ba:	f7fa f9ed 	bl	8000598 <__aeabi_dmul>
 80061be:	4642      	mov	r2, r8
 80061c0:	ec41 0b18 	vmov	d8, r0, r1
 80061c4:	464b      	mov	r3, r9
 80061c6:	4620      	mov	r0, r4
 80061c8:	4629      	mov	r1, r5
 80061ca:	f7fa f82d 	bl	8000228 <__aeabi_dsub>
 80061ce:	4602      	mov	r2, r0
 80061d0:	460b      	mov	r3, r1
 80061d2:	4630      	mov	r0, r6
 80061d4:	4639      	mov	r1, r7
 80061d6:	f7fa f827 	bl	8000228 <__aeabi_dsub>
 80061da:	a335      	add	r3, pc, #212	; (adr r3, 80062b0 <__ieee754_pow+0x740>)
 80061dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061e0:	f7fa f9da 	bl	8000598 <__aeabi_dmul>
 80061e4:	a334      	add	r3, pc, #208	; (adr r3, 80062b8 <__ieee754_pow+0x748>)
 80061e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061ea:	4606      	mov	r6, r0
 80061ec:	460f      	mov	r7, r1
 80061ee:	4620      	mov	r0, r4
 80061f0:	4629      	mov	r1, r5
 80061f2:	f7fa f9d1 	bl	8000598 <__aeabi_dmul>
 80061f6:	4602      	mov	r2, r0
 80061f8:	460b      	mov	r3, r1
 80061fa:	4630      	mov	r0, r6
 80061fc:	4639      	mov	r1, r7
 80061fe:	f7fa f815 	bl	800022c <__adddf3>
 8006202:	9a07      	ldr	r2, [sp, #28]
 8006204:	4b37      	ldr	r3, [pc, #220]	; (80062e4 <__ieee754_pow+0x774>)
 8006206:	4413      	add	r3, r2
 8006208:	e9d3 2300 	ldrd	r2, r3, [r3]
 800620c:	f7fa f80e 	bl	800022c <__adddf3>
 8006210:	4682      	mov	sl, r0
 8006212:	9805      	ldr	r0, [sp, #20]
 8006214:	468b      	mov	fp, r1
 8006216:	f7fa f955 	bl	80004c4 <__aeabi_i2d>
 800621a:	9a07      	ldr	r2, [sp, #28]
 800621c:	4b32      	ldr	r3, [pc, #200]	; (80062e8 <__ieee754_pow+0x778>)
 800621e:	4413      	add	r3, r2
 8006220:	e9d3 8900 	ldrd	r8, r9, [r3]
 8006224:	4606      	mov	r6, r0
 8006226:	460f      	mov	r7, r1
 8006228:	4652      	mov	r2, sl
 800622a:	465b      	mov	r3, fp
 800622c:	ec51 0b18 	vmov	r0, r1, d8
 8006230:	f7f9 fffc 	bl	800022c <__adddf3>
 8006234:	4642      	mov	r2, r8
 8006236:	464b      	mov	r3, r9
 8006238:	f7f9 fff8 	bl	800022c <__adddf3>
 800623c:	4632      	mov	r2, r6
 800623e:	463b      	mov	r3, r7
 8006240:	f7f9 fff4 	bl	800022c <__adddf3>
 8006244:	2000      	movs	r0, #0
 8006246:	4632      	mov	r2, r6
 8006248:	463b      	mov	r3, r7
 800624a:	4604      	mov	r4, r0
 800624c:	460d      	mov	r5, r1
 800624e:	f7f9 ffeb 	bl	8000228 <__aeabi_dsub>
 8006252:	4642      	mov	r2, r8
 8006254:	464b      	mov	r3, r9
 8006256:	f7f9 ffe7 	bl	8000228 <__aeabi_dsub>
 800625a:	ec53 2b18 	vmov	r2, r3, d8
 800625e:	f7f9 ffe3 	bl	8000228 <__aeabi_dsub>
 8006262:	4602      	mov	r2, r0
 8006264:	460b      	mov	r3, r1
 8006266:	4650      	mov	r0, sl
 8006268:	4659      	mov	r1, fp
 800626a:	e610      	b.n	8005e8e <__ieee754_pow+0x31e>
 800626c:	2401      	movs	r4, #1
 800626e:	e6a1      	b.n	8005fb4 <__ieee754_pow+0x444>
 8006270:	ed9f 7b13 	vldr	d7, [pc, #76]	; 80062c0 <__ieee754_pow+0x750>
 8006274:	e617      	b.n	8005ea6 <__ieee754_pow+0x336>
 8006276:	bf00      	nop
 8006278:	4a454eef 	.word	0x4a454eef
 800627c:	3fca7e28 	.word	0x3fca7e28
 8006280:	93c9db65 	.word	0x93c9db65
 8006284:	3fcd864a 	.word	0x3fcd864a
 8006288:	a91d4101 	.word	0xa91d4101
 800628c:	3fd17460 	.word	0x3fd17460
 8006290:	518f264d 	.word	0x518f264d
 8006294:	3fd55555 	.word	0x3fd55555
 8006298:	db6fabff 	.word	0xdb6fabff
 800629c:	3fdb6db6 	.word	0x3fdb6db6
 80062a0:	33333303 	.word	0x33333303
 80062a4:	3fe33333 	.word	0x3fe33333
 80062a8:	e0000000 	.word	0xe0000000
 80062ac:	3feec709 	.word	0x3feec709
 80062b0:	dc3a03fd 	.word	0xdc3a03fd
 80062b4:	3feec709 	.word	0x3feec709
 80062b8:	145b01f5 	.word	0x145b01f5
 80062bc:	be3e2fe0 	.word	0xbe3e2fe0
 80062c0:	00000000 	.word	0x00000000
 80062c4:	3ff00000 	.word	0x3ff00000
 80062c8:	7ff00000 	.word	0x7ff00000
 80062cc:	43400000 	.word	0x43400000
 80062d0:	0003988e 	.word	0x0003988e
 80062d4:	000bb679 	.word	0x000bb679
 80062d8:	08007168 	.word	0x08007168
 80062dc:	3ff00000 	.word	0x3ff00000
 80062e0:	40080000 	.word	0x40080000
 80062e4:	08007188 	.word	0x08007188
 80062e8:	08007178 	.word	0x08007178
 80062ec:	a3b3      	add	r3, pc, #716	; (adr r3, 80065bc <__ieee754_pow+0xa4c>)
 80062ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062f2:	4640      	mov	r0, r8
 80062f4:	4649      	mov	r1, r9
 80062f6:	f7f9 ff99 	bl	800022c <__adddf3>
 80062fa:	4622      	mov	r2, r4
 80062fc:	ec41 0b1a 	vmov	d10, r0, r1
 8006300:	462b      	mov	r3, r5
 8006302:	4630      	mov	r0, r6
 8006304:	4639      	mov	r1, r7
 8006306:	f7f9 ff8f 	bl	8000228 <__aeabi_dsub>
 800630a:	4602      	mov	r2, r0
 800630c:	460b      	mov	r3, r1
 800630e:	ec51 0b1a 	vmov	r0, r1, d10
 8006312:	f7fa fbd1 	bl	8000ab8 <__aeabi_dcmpgt>
 8006316:	2800      	cmp	r0, #0
 8006318:	f47f ae04 	bne.w	8005f24 <__ieee754_pow+0x3b4>
 800631c:	4aa2      	ldr	r2, [pc, #648]	; (80065a8 <__ieee754_pow+0xa38>)
 800631e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8006322:	4293      	cmp	r3, r2
 8006324:	f340 8107 	ble.w	8006536 <__ieee754_pow+0x9c6>
 8006328:	151b      	asrs	r3, r3, #20
 800632a:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 800632e:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 8006332:	fa4a fa03 	asr.w	sl, sl, r3
 8006336:	44da      	add	sl, fp
 8006338:	f3ca 510a 	ubfx	r1, sl, #20, #11
 800633c:	489b      	ldr	r0, [pc, #620]	; (80065ac <__ieee754_pow+0xa3c>)
 800633e:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 8006342:	4108      	asrs	r0, r1
 8006344:	ea00 030a 	and.w	r3, r0, sl
 8006348:	f3ca 0a13 	ubfx	sl, sl, #0, #20
 800634c:	f1c1 0114 	rsb	r1, r1, #20
 8006350:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8006354:	fa4a fa01 	asr.w	sl, sl, r1
 8006358:	f1bb 0f00 	cmp.w	fp, #0
 800635c:	f04f 0200 	mov.w	r2, #0
 8006360:	4620      	mov	r0, r4
 8006362:	4629      	mov	r1, r5
 8006364:	bfb8      	it	lt
 8006366:	f1ca 0a00 	rsblt	sl, sl, #0
 800636a:	f7f9 ff5d 	bl	8000228 <__aeabi_dsub>
 800636e:	ec41 0b19 	vmov	d9, r0, r1
 8006372:	4642      	mov	r2, r8
 8006374:	464b      	mov	r3, r9
 8006376:	ec51 0b19 	vmov	r0, r1, d9
 800637a:	f7f9 ff57 	bl	800022c <__adddf3>
 800637e:	a37a      	add	r3, pc, #488	; (adr r3, 8006568 <__ieee754_pow+0x9f8>)
 8006380:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006384:	2000      	movs	r0, #0
 8006386:	4604      	mov	r4, r0
 8006388:	460d      	mov	r5, r1
 800638a:	f7fa f905 	bl	8000598 <__aeabi_dmul>
 800638e:	ec53 2b19 	vmov	r2, r3, d9
 8006392:	4606      	mov	r6, r0
 8006394:	460f      	mov	r7, r1
 8006396:	4620      	mov	r0, r4
 8006398:	4629      	mov	r1, r5
 800639a:	f7f9 ff45 	bl	8000228 <__aeabi_dsub>
 800639e:	4602      	mov	r2, r0
 80063a0:	460b      	mov	r3, r1
 80063a2:	4640      	mov	r0, r8
 80063a4:	4649      	mov	r1, r9
 80063a6:	f7f9 ff3f 	bl	8000228 <__aeabi_dsub>
 80063aa:	a371      	add	r3, pc, #452	; (adr r3, 8006570 <__ieee754_pow+0xa00>)
 80063ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063b0:	f7fa f8f2 	bl	8000598 <__aeabi_dmul>
 80063b4:	a370      	add	r3, pc, #448	; (adr r3, 8006578 <__ieee754_pow+0xa08>)
 80063b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063ba:	4680      	mov	r8, r0
 80063bc:	4689      	mov	r9, r1
 80063be:	4620      	mov	r0, r4
 80063c0:	4629      	mov	r1, r5
 80063c2:	f7fa f8e9 	bl	8000598 <__aeabi_dmul>
 80063c6:	4602      	mov	r2, r0
 80063c8:	460b      	mov	r3, r1
 80063ca:	4640      	mov	r0, r8
 80063cc:	4649      	mov	r1, r9
 80063ce:	f7f9 ff2d 	bl	800022c <__adddf3>
 80063d2:	4604      	mov	r4, r0
 80063d4:	460d      	mov	r5, r1
 80063d6:	4602      	mov	r2, r0
 80063d8:	460b      	mov	r3, r1
 80063da:	4630      	mov	r0, r6
 80063dc:	4639      	mov	r1, r7
 80063de:	f7f9 ff25 	bl	800022c <__adddf3>
 80063e2:	4632      	mov	r2, r6
 80063e4:	463b      	mov	r3, r7
 80063e6:	4680      	mov	r8, r0
 80063e8:	4689      	mov	r9, r1
 80063ea:	f7f9 ff1d 	bl	8000228 <__aeabi_dsub>
 80063ee:	4602      	mov	r2, r0
 80063f0:	460b      	mov	r3, r1
 80063f2:	4620      	mov	r0, r4
 80063f4:	4629      	mov	r1, r5
 80063f6:	f7f9 ff17 	bl	8000228 <__aeabi_dsub>
 80063fa:	4642      	mov	r2, r8
 80063fc:	4606      	mov	r6, r0
 80063fe:	460f      	mov	r7, r1
 8006400:	464b      	mov	r3, r9
 8006402:	4640      	mov	r0, r8
 8006404:	4649      	mov	r1, r9
 8006406:	f7fa f8c7 	bl	8000598 <__aeabi_dmul>
 800640a:	a35d      	add	r3, pc, #372	; (adr r3, 8006580 <__ieee754_pow+0xa10>)
 800640c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006410:	4604      	mov	r4, r0
 8006412:	460d      	mov	r5, r1
 8006414:	f7fa f8c0 	bl	8000598 <__aeabi_dmul>
 8006418:	a35b      	add	r3, pc, #364	; (adr r3, 8006588 <__ieee754_pow+0xa18>)
 800641a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800641e:	f7f9 ff03 	bl	8000228 <__aeabi_dsub>
 8006422:	4622      	mov	r2, r4
 8006424:	462b      	mov	r3, r5
 8006426:	f7fa f8b7 	bl	8000598 <__aeabi_dmul>
 800642a:	a359      	add	r3, pc, #356	; (adr r3, 8006590 <__ieee754_pow+0xa20>)
 800642c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006430:	f7f9 fefc 	bl	800022c <__adddf3>
 8006434:	4622      	mov	r2, r4
 8006436:	462b      	mov	r3, r5
 8006438:	f7fa f8ae 	bl	8000598 <__aeabi_dmul>
 800643c:	a356      	add	r3, pc, #344	; (adr r3, 8006598 <__ieee754_pow+0xa28>)
 800643e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006442:	f7f9 fef1 	bl	8000228 <__aeabi_dsub>
 8006446:	4622      	mov	r2, r4
 8006448:	462b      	mov	r3, r5
 800644a:	f7fa f8a5 	bl	8000598 <__aeabi_dmul>
 800644e:	a354      	add	r3, pc, #336	; (adr r3, 80065a0 <__ieee754_pow+0xa30>)
 8006450:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006454:	f7f9 feea 	bl	800022c <__adddf3>
 8006458:	4622      	mov	r2, r4
 800645a:	462b      	mov	r3, r5
 800645c:	f7fa f89c 	bl	8000598 <__aeabi_dmul>
 8006460:	4602      	mov	r2, r0
 8006462:	460b      	mov	r3, r1
 8006464:	4640      	mov	r0, r8
 8006466:	4649      	mov	r1, r9
 8006468:	f7f9 fede 	bl	8000228 <__aeabi_dsub>
 800646c:	4604      	mov	r4, r0
 800646e:	460d      	mov	r5, r1
 8006470:	4602      	mov	r2, r0
 8006472:	460b      	mov	r3, r1
 8006474:	4640      	mov	r0, r8
 8006476:	4649      	mov	r1, r9
 8006478:	f7fa f88e 	bl	8000598 <__aeabi_dmul>
 800647c:	2200      	movs	r2, #0
 800647e:	ec41 0b19 	vmov	d9, r0, r1
 8006482:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8006486:	4620      	mov	r0, r4
 8006488:	4629      	mov	r1, r5
 800648a:	f7f9 fecd 	bl	8000228 <__aeabi_dsub>
 800648e:	4602      	mov	r2, r0
 8006490:	460b      	mov	r3, r1
 8006492:	ec51 0b19 	vmov	r0, r1, d9
 8006496:	f7fa f9a9 	bl	80007ec <__aeabi_ddiv>
 800649a:	4632      	mov	r2, r6
 800649c:	4604      	mov	r4, r0
 800649e:	460d      	mov	r5, r1
 80064a0:	463b      	mov	r3, r7
 80064a2:	4640      	mov	r0, r8
 80064a4:	4649      	mov	r1, r9
 80064a6:	f7fa f877 	bl	8000598 <__aeabi_dmul>
 80064aa:	4632      	mov	r2, r6
 80064ac:	463b      	mov	r3, r7
 80064ae:	f7f9 febd 	bl	800022c <__adddf3>
 80064b2:	4602      	mov	r2, r0
 80064b4:	460b      	mov	r3, r1
 80064b6:	4620      	mov	r0, r4
 80064b8:	4629      	mov	r1, r5
 80064ba:	f7f9 feb5 	bl	8000228 <__aeabi_dsub>
 80064be:	4642      	mov	r2, r8
 80064c0:	464b      	mov	r3, r9
 80064c2:	f7f9 feb1 	bl	8000228 <__aeabi_dsub>
 80064c6:	460b      	mov	r3, r1
 80064c8:	4602      	mov	r2, r0
 80064ca:	4939      	ldr	r1, [pc, #228]	; (80065b0 <__ieee754_pow+0xa40>)
 80064cc:	2000      	movs	r0, #0
 80064ce:	f7f9 feab 	bl	8000228 <__aeabi_dsub>
 80064d2:	ec41 0b10 	vmov	d0, r0, r1
 80064d6:	ee10 3a90 	vmov	r3, s1
 80064da:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 80064de:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80064e2:	da2b      	bge.n	800653c <__ieee754_pow+0x9cc>
 80064e4:	4650      	mov	r0, sl
 80064e6:	f000 fa53 	bl	8006990 <scalbn>
 80064ea:	ec51 0b10 	vmov	r0, r1, d0
 80064ee:	ec53 2b18 	vmov	r2, r3, d8
 80064f2:	f7ff bbee 	b.w	8005cd2 <__ieee754_pow+0x162>
 80064f6:	4b2f      	ldr	r3, [pc, #188]	; (80065b4 <__ieee754_pow+0xa44>)
 80064f8:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 80064fc:	429e      	cmp	r6, r3
 80064fe:	f77f af0d 	ble.w	800631c <__ieee754_pow+0x7ac>
 8006502:	4b2d      	ldr	r3, [pc, #180]	; (80065b8 <__ieee754_pow+0xa48>)
 8006504:	440b      	add	r3, r1
 8006506:	4303      	orrs	r3, r0
 8006508:	d009      	beq.n	800651e <__ieee754_pow+0x9ae>
 800650a:	ec51 0b18 	vmov	r0, r1, d8
 800650e:	2200      	movs	r2, #0
 8006510:	2300      	movs	r3, #0
 8006512:	f7fa fab3 	bl	8000a7c <__aeabi_dcmplt>
 8006516:	3800      	subs	r0, #0
 8006518:	bf18      	it	ne
 800651a:	2001      	movne	r0, #1
 800651c:	e448      	b.n	8005db0 <__ieee754_pow+0x240>
 800651e:	4622      	mov	r2, r4
 8006520:	462b      	mov	r3, r5
 8006522:	f7f9 fe81 	bl	8000228 <__aeabi_dsub>
 8006526:	4642      	mov	r2, r8
 8006528:	464b      	mov	r3, r9
 800652a:	f7fa fabb 	bl	8000aa4 <__aeabi_dcmpge>
 800652e:	2800      	cmp	r0, #0
 8006530:	f43f aef4 	beq.w	800631c <__ieee754_pow+0x7ac>
 8006534:	e7e9      	b.n	800650a <__ieee754_pow+0x99a>
 8006536:	f04f 0a00 	mov.w	sl, #0
 800653a:	e71a      	b.n	8006372 <__ieee754_pow+0x802>
 800653c:	ec51 0b10 	vmov	r0, r1, d0
 8006540:	4619      	mov	r1, r3
 8006542:	e7d4      	b.n	80064ee <__ieee754_pow+0x97e>
 8006544:	491a      	ldr	r1, [pc, #104]	; (80065b0 <__ieee754_pow+0xa40>)
 8006546:	2000      	movs	r0, #0
 8006548:	f7ff bb31 	b.w	8005bae <__ieee754_pow+0x3e>
 800654c:	2000      	movs	r0, #0
 800654e:	2100      	movs	r1, #0
 8006550:	f7ff bb2d 	b.w	8005bae <__ieee754_pow+0x3e>
 8006554:	4630      	mov	r0, r6
 8006556:	4639      	mov	r1, r7
 8006558:	f7ff bb29 	b.w	8005bae <__ieee754_pow+0x3e>
 800655c:	9204      	str	r2, [sp, #16]
 800655e:	f7ff bb7b 	b.w	8005c58 <__ieee754_pow+0xe8>
 8006562:	2300      	movs	r3, #0
 8006564:	f7ff bb65 	b.w	8005c32 <__ieee754_pow+0xc2>
 8006568:	00000000 	.word	0x00000000
 800656c:	3fe62e43 	.word	0x3fe62e43
 8006570:	fefa39ef 	.word	0xfefa39ef
 8006574:	3fe62e42 	.word	0x3fe62e42
 8006578:	0ca86c39 	.word	0x0ca86c39
 800657c:	be205c61 	.word	0xbe205c61
 8006580:	72bea4d0 	.word	0x72bea4d0
 8006584:	3e663769 	.word	0x3e663769
 8006588:	c5d26bf1 	.word	0xc5d26bf1
 800658c:	3ebbbd41 	.word	0x3ebbbd41
 8006590:	af25de2c 	.word	0xaf25de2c
 8006594:	3f11566a 	.word	0x3f11566a
 8006598:	16bebd93 	.word	0x16bebd93
 800659c:	3f66c16c 	.word	0x3f66c16c
 80065a0:	5555553e 	.word	0x5555553e
 80065a4:	3fc55555 	.word	0x3fc55555
 80065a8:	3fe00000 	.word	0x3fe00000
 80065ac:	fff00000 	.word	0xfff00000
 80065b0:	3ff00000 	.word	0x3ff00000
 80065b4:	4090cbff 	.word	0x4090cbff
 80065b8:	3f6f3400 	.word	0x3f6f3400
 80065bc:	652b82fe 	.word	0x652b82fe
 80065c0:	3c971547 	.word	0x3c971547

080065c4 <fabs>:
 80065c4:	ec51 0b10 	vmov	r0, r1, d0
 80065c8:	ee10 2a10 	vmov	r2, s0
 80065cc:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80065d0:	ec43 2b10 	vmov	d0, r2, r3
 80065d4:	4770      	bx	lr
	...

080065d8 <__kernel_cosf>:
 80065d8:	ee10 3a10 	vmov	r3, s0
 80065dc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80065e0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80065e4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80065e8:	da05      	bge.n	80065f6 <__kernel_cosf+0x1e>
 80065ea:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80065ee:	ee17 2a90 	vmov	r2, s15
 80065f2:	2a00      	cmp	r2, #0
 80065f4:	d03b      	beq.n	800666e <__kernel_cosf+0x96>
 80065f6:	ee20 7a00 	vmul.f32	s14, s0, s0
 80065fa:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8006674 <__kernel_cosf+0x9c>
 80065fe:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8006678 <__kernel_cosf+0xa0>
 8006602:	4a1e      	ldr	r2, [pc, #120]	; (800667c <__kernel_cosf+0xa4>)
 8006604:	eea7 6a27 	vfma.f32	s12, s14, s15
 8006608:	4293      	cmp	r3, r2
 800660a:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8006680 <__kernel_cosf+0xa8>
 800660e:	eee6 7a07 	vfma.f32	s15, s12, s14
 8006612:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 8006684 <__kernel_cosf+0xac>
 8006616:	eea7 6a87 	vfma.f32	s12, s15, s14
 800661a:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8006688 <__kernel_cosf+0xb0>
 800661e:	eee6 7a07 	vfma.f32	s15, s12, s14
 8006622:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 800668c <__kernel_cosf+0xb4>
 8006626:	eea7 6a87 	vfma.f32	s12, s15, s14
 800662a:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 800662e:	ee26 6a07 	vmul.f32	s12, s12, s14
 8006632:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8006636:	eee7 0a06 	vfma.f32	s1, s14, s12
 800663a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800663e:	dc04      	bgt.n	800664a <__kernel_cosf+0x72>
 8006640:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8006644:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8006648:	4770      	bx	lr
 800664a:	4a11      	ldr	r2, [pc, #68]	; (8006690 <__kernel_cosf+0xb8>)
 800664c:	4293      	cmp	r3, r2
 800664e:	bfda      	itte	le
 8006650:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8006654:	ee07 3a10 	vmovle	s14, r3
 8006658:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 800665c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8006660:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8006664:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8006668:	ee30 0a67 	vsub.f32	s0, s0, s15
 800666c:	4770      	bx	lr
 800666e:	eeb0 0a66 	vmov.f32	s0, s13
 8006672:	4770      	bx	lr
 8006674:	ad47d74e 	.word	0xad47d74e
 8006678:	310f74f6 	.word	0x310f74f6
 800667c:	3e999999 	.word	0x3e999999
 8006680:	b493f27c 	.word	0xb493f27c
 8006684:	37d00d01 	.word	0x37d00d01
 8006688:	bab60b61 	.word	0xbab60b61
 800668c:	3d2aaaab 	.word	0x3d2aaaab
 8006690:	3f480000 	.word	0x3f480000

08006694 <__kernel_sinf>:
 8006694:	ee10 3a10 	vmov	r3, s0
 8006698:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800669c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80066a0:	da04      	bge.n	80066ac <__kernel_sinf+0x18>
 80066a2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80066a6:	ee17 3a90 	vmov	r3, s15
 80066aa:	b35b      	cbz	r3, 8006704 <__kernel_sinf+0x70>
 80066ac:	ee20 7a00 	vmul.f32	s14, s0, s0
 80066b0:	eddf 7a15 	vldr	s15, [pc, #84]	; 8006708 <__kernel_sinf+0x74>
 80066b4:	ed9f 6a15 	vldr	s12, [pc, #84]	; 800670c <__kernel_sinf+0x78>
 80066b8:	eea7 6a27 	vfma.f32	s12, s14, s15
 80066bc:	eddf 7a14 	vldr	s15, [pc, #80]	; 8006710 <__kernel_sinf+0x7c>
 80066c0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80066c4:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8006714 <__kernel_sinf+0x80>
 80066c8:	eea7 6a87 	vfma.f32	s12, s15, s14
 80066cc:	eddf 7a12 	vldr	s15, [pc, #72]	; 8006718 <__kernel_sinf+0x84>
 80066d0:	ee60 6a07 	vmul.f32	s13, s0, s14
 80066d4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80066d8:	b930      	cbnz	r0, 80066e8 <__kernel_sinf+0x54>
 80066da:	ed9f 6a10 	vldr	s12, [pc, #64]	; 800671c <__kernel_sinf+0x88>
 80066de:	eea7 6a27 	vfma.f32	s12, s14, s15
 80066e2:	eea6 0a26 	vfma.f32	s0, s12, s13
 80066e6:	4770      	bx	lr
 80066e8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80066ec:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80066f0:	eee0 7a86 	vfma.f32	s15, s1, s12
 80066f4:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80066f8:	eddf 7a09 	vldr	s15, [pc, #36]	; 8006720 <__kernel_sinf+0x8c>
 80066fc:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8006700:	ee30 0a60 	vsub.f32	s0, s0, s1
 8006704:	4770      	bx	lr
 8006706:	bf00      	nop
 8006708:	2f2ec9d3 	.word	0x2f2ec9d3
 800670c:	b2d72f34 	.word	0xb2d72f34
 8006710:	3638ef1b 	.word	0x3638ef1b
 8006714:	b9500d01 	.word	0xb9500d01
 8006718:	3c088889 	.word	0x3c088889
 800671c:	be2aaaab 	.word	0xbe2aaaab
 8006720:	3e2aaaab 	.word	0x3e2aaaab

08006724 <__ieee754_rem_pio2f>:
 8006724:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006726:	ee10 6a10 	vmov	r6, s0
 800672a:	4b86      	ldr	r3, [pc, #536]	; (8006944 <__ieee754_rem_pio2f+0x220>)
 800672c:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8006730:	429d      	cmp	r5, r3
 8006732:	b087      	sub	sp, #28
 8006734:	4604      	mov	r4, r0
 8006736:	dc05      	bgt.n	8006744 <__ieee754_rem_pio2f+0x20>
 8006738:	2300      	movs	r3, #0
 800673a:	ed80 0a00 	vstr	s0, [r0]
 800673e:	6043      	str	r3, [r0, #4]
 8006740:	2000      	movs	r0, #0
 8006742:	e020      	b.n	8006786 <__ieee754_rem_pio2f+0x62>
 8006744:	4b80      	ldr	r3, [pc, #512]	; (8006948 <__ieee754_rem_pio2f+0x224>)
 8006746:	429d      	cmp	r5, r3
 8006748:	dc38      	bgt.n	80067bc <__ieee754_rem_pio2f+0x98>
 800674a:	2e00      	cmp	r6, #0
 800674c:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 800694c <__ieee754_rem_pio2f+0x228>
 8006750:	4b7f      	ldr	r3, [pc, #508]	; (8006950 <__ieee754_rem_pio2f+0x22c>)
 8006752:	f025 050f 	bic.w	r5, r5, #15
 8006756:	dd18      	ble.n	800678a <__ieee754_rem_pio2f+0x66>
 8006758:	429d      	cmp	r5, r3
 800675a:	ee70 7a47 	vsub.f32	s15, s0, s14
 800675e:	bf09      	itett	eq
 8006760:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8006954 <__ieee754_rem_pio2f+0x230>
 8006764:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8006958 <__ieee754_rem_pio2f+0x234>
 8006768:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 800676c:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 800695c <__ieee754_rem_pio2f+0x238>
 8006770:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8006774:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006778:	edc0 6a00 	vstr	s13, [r0]
 800677c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8006780:	edc0 7a01 	vstr	s15, [r0, #4]
 8006784:	2001      	movs	r0, #1
 8006786:	b007      	add	sp, #28
 8006788:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800678a:	429d      	cmp	r5, r3
 800678c:	ee70 7a07 	vadd.f32	s15, s0, s14
 8006790:	bf09      	itett	eq
 8006792:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8006954 <__ieee754_rem_pio2f+0x230>
 8006796:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8006958 <__ieee754_rem_pio2f+0x234>
 800679a:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 800679e:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 800695c <__ieee754_rem_pio2f+0x238>
 80067a2:	ee77 6a87 	vadd.f32	s13, s15, s14
 80067a6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80067aa:	edc0 6a00 	vstr	s13, [r0]
 80067ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80067b2:	edc0 7a01 	vstr	s15, [r0, #4]
 80067b6:	f04f 30ff 	mov.w	r0, #4294967295
 80067ba:	e7e4      	b.n	8006786 <__ieee754_rem_pio2f+0x62>
 80067bc:	4b68      	ldr	r3, [pc, #416]	; (8006960 <__ieee754_rem_pio2f+0x23c>)
 80067be:	429d      	cmp	r5, r3
 80067c0:	dc71      	bgt.n	80068a6 <__ieee754_rem_pio2f+0x182>
 80067c2:	f000 f8db 	bl	800697c <fabsf>
 80067c6:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8006964 <__ieee754_rem_pio2f+0x240>
 80067ca:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80067ce:	eee0 7a07 	vfma.f32	s15, s0, s14
 80067d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80067d6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80067da:	ee17 0a90 	vmov	r0, s15
 80067de:	eddf 7a5b 	vldr	s15, [pc, #364]	; 800694c <__ieee754_rem_pio2f+0x228>
 80067e2:	eea7 0a67 	vfms.f32	s0, s14, s15
 80067e6:	281f      	cmp	r0, #31
 80067e8:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8006958 <__ieee754_rem_pio2f+0x234>
 80067ec:	ee67 7a27 	vmul.f32	s15, s14, s15
 80067f0:	eeb1 6a47 	vneg.f32	s12, s14
 80067f4:	ee70 6a67 	vsub.f32	s13, s0, s15
 80067f8:	ee16 2a90 	vmov	r2, s13
 80067fc:	dc1c      	bgt.n	8006838 <__ieee754_rem_pio2f+0x114>
 80067fe:	495a      	ldr	r1, [pc, #360]	; (8006968 <__ieee754_rem_pio2f+0x244>)
 8006800:	1e47      	subs	r7, r0, #1
 8006802:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8006806:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 800680a:	428b      	cmp	r3, r1
 800680c:	d014      	beq.n	8006838 <__ieee754_rem_pio2f+0x114>
 800680e:	6022      	str	r2, [r4, #0]
 8006810:	ed94 7a00 	vldr	s14, [r4]
 8006814:	ee30 0a47 	vsub.f32	s0, s0, s14
 8006818:	2e00      	cmp	r6, #0
 800681a:	ee30 0a67 	vsub.f32	s0, s0, s15
 800681e:	ed84 0a01 	vstr	s0, [r4, #4]
 8006822:	dab0      	bge.n	8006786 <__ieee754_rem_pio2f+0x62>
 8006824:	eeb1 7a47 	vneg.f32	s14, s14
 8006828:	eeb1 0a40 	vneg.f32	s0, s0
 800682c:	ed84 7a00 	vstr	s14, [r4]
 8006830:	ed84 0a01 	vstr	s0, [r4, #4]
 8006834:	4240      	negs	r0, r0
 8006836:	e7a6      	b.n	8006786 <__ieee754_rem_pio2f+0x62>
 8006838:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 800683c:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8006840:	2908      	cmp	r1, #8
 8006842:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8006846:	dde2      	ble.n	800680e <__ieee754_rem_pio2f+0xea>
 8006848:	eddf 5a42 	vldr	s11, [pc, #264]	; 8006954 <__ieee754_rem_pio2f+0x230>
 800684c:	eef0 6a40 	vmov.f32	s13, s0
 8006850:	eee6 6a25 	vfma.f32	s13, s12, s11
 8006854:	ee70 7a66 	vsub.f32	s15, s0, s13
 8006858:	eee6 7a25 	vfma.f32	s15, s12, s11
 800685c:	eddf 5a3f 	vldr	s11, [pc, #252]	; 800695c <__ieee754_rem_pio2f+0x238>
 8006860:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8006864:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8006868:	ee15 2a90 	vmov	r2, s11
 800686c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8006870:	1a5b      	subs	r3, r3, r1
 8006872:	2b19      	cmp	r3, #25
 8006874:	dc04      	bgt.n	8006880 <__ieee754_rem_pio2f+0x15c>
 8006876:	edc4 5a00 	vstr	s11, [r4]
 800687a:	eeb0 0a66 	vmov.f32	s0, s13
 800687e:	e7c7      	b.n	8006810 <__ieee754_rem_pio2f+0xec>
 8006880:	eddf 5a3a 	vldr	s11, [pc, #232]	; 800696c <__ieee754_rem_pio2f+0x248>
 8006884:	eeb0 0a66 	vmov.f32	s0, s13
 8006888:	eea6 0a25 	vfma.f32	s0, s12, s11
 800688c:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8006890:	eddf 6a37 	vldr	s13, [pc, #220]	; 8006970 <__ieee754_rem_pio2f+0x24c>
 8006894:	eee6 7a25 	vfma.f32	s15, s12, s11
 8006898:	eed7 7a26 	vfnms.f32	s15, s14, s13
 800689c:	ee30 7a67 	vsub.f32	s14, s0, s15
 80068a0:	ed84 7a00 	vstr	s14, [r4]
 80068a4:	e7b4      	b.n	8006810 <__ieee754_rem_pio2f+0xec>
 80068a6:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 80068aa:	db06      	blt.n	80068ba <__ieee754_rem_pio2f+0x196>
 80068ac:	ee70 7a40 	vsub.f32	s15, s0, s0
 80068b0:	edc0 7a01 	vstr	s15, [r0, #4]
 80068b4:	edc0 7a00 	vstr	s15, [r0]
 80068b8:	e742      	b.n	8006740 <__ieee754_rem_pio2f+0x1c>
 80068ba:	15ea      	asrs	r2, r5, #23
 80068bc:	3a86      	subs	r2, #134	; 0x86
 80068be:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80068c2:	ee07 3a90 	vmov	s15, r3
 80068c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80068ca:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8006974 <__ieee754_rem_pio2f+0x250>
 80068ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80068d2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80068d6:	ed8d 7a03 	vstr	s14, [sp, #12]
 80068da:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80068de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80068e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80068e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80068ea:	ed8d 7a04 	vstr	s14, [sp, #16]
 80068ee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80068f2:	eef5 7a40 	vcmp.f32	s15, #0.0
 80068f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80068fa:	edcd 7a05 	vstr	s15, [sp, #20]
 80068fe:	d11e      	bne.n	800693e <__ieee754_rem_pio2f+0x21a>
 8006900:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8006904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006908:	bf14      	ite	ne
 800690a:	2302      	movne	r3, #2
 800690c:	2301      	moveq	r3, #1
 800690e:	491a      	ldr	r1, [pc, #104]	; (8006978 <__ieee754_rem_pio2f+0x254>)
 8006910:	9101      	str	r1, [sp, #4]
 8006912:	2102      	movs	r1, #2
 8006914:	9100      	str	r1, [sp, #0]
 8006916:	a803      	add	r0, sp, #12
 8006918:	4621      	mov	r1, r4
 800691a:	f000 f8e7 	bl	8006aec <__kernel_rem_pio2f>
 800691e:	2e00      	cmp	r6, #0
 8006920:	f6bf af31 	bge.w	8006786 <__ieee754_rem_pio2f+0x62>
 8006924:	edd4 7a00 	vldr	s15, [r4]
 8006928:	eef1 7a67 	vneg.f32	s15, s15
 800692c:	edc4 7a00 	vstr	s15, [r4]
 8006930:	edd4 7a01 	vldr	s15, [r4, #4]
 8006934:	eef1 7a67 	vneg.f32	s15, s15
 8006938:	edc4 7a01 	vstr	s15, [r4, #4]
 800693c:	e77a      	b.n	8006834 <__ieee754_rem_pio2f+0x110>
 800693e:	2303      	movs	r3, #3
 8006940:	e7e5      	b.n	800690e <__ieee754_rem_pio2f+0x1ea>
 8006942:	bf00      	nop
 8006944:	3f490fd8 	.word	0x3f490fd8
 8006948:	4016cbe3 	.word	0x4016cbe3
 800694c:	3fc90f80 	.word	0x3fc90f80
 8006950:	3fc90fd0 	.word	0x3fc90fd0
 8006954:	37354400 	.word	0x37354400
 8006958:	37354443 	.word	0x37354443
 800695c:	2e85a308 	.word	0x2e85a308
 8006960:	43490f80 	.word	0x43490f80
 8006964:	3f22f984 	.word	0x3f22f984
 8006968:	08007198 	.word	0x08007198
 800696c:	2e85a300 	.word	0x2e85a300
 8006970:	248d3132 	.word	0x248d3132
 8006974:	43800000 	.word	0x43800000
 8006978:	08007218 	.word	0x08007218

0800697c <fabsf>:
 800697c:	ee10 3a10 	vmov	r3, s0
 8006980:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8006984:	ee00 3a10 	vmov	s0, r3
 8006988:	4770      	bx	lr
 800698a:	0000      	movs	r0, r0
 800698c:	0000      	movs	r0, r0
	...

08006990 <scalbn>:
 8006990:	b570      	push	{r4, r5, r6, lr}
 8006992:	ec55 4b10 	vmov	r4, r5, d0
 8006996:	f3c5 510a 	ubfx	r1, r5, #20, #11
 800699a:	4606      	mov	r6, r0
 800699c:	462b      	mov	r3, r5
 800699e:	b999      	cbnz	r1, 80069c8 <scalbn+0x38>
 80069a0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80069a4:	4323      	orrs	r3, r4
 80069a6:	d03f      	beq.n	8006a28 <scalbn+0x98>
 80069a8:	4b35      	ldr	r3, [pc, #212]	; (8006a80 <scalbn+0xf0>)
 80069aa:	4629      	mov	r1, r5
 80069ac:	ee10 0a10 	vmov	r0, s0
 80069b0:	2200      	movs	r2, #0
 80069b2:	f7f9 fdf1 	bl	8000598 <__aeabi_dmul>
 80069b6:	4b33      	ldr	r3, [pc, #204]	; (8006a84 <scalbn+0xf4>)
 80069b8:	429e      	cmp	r6, r3
 80069ba:	4604      	mov	r4, r0
 80069bc:	460d      	mov	r5, r1
 80069be:	da10      	bge.n	80069e2 <scalbn+0x52>
 80069c0:	a327      	add	r3, pc, #156	; (adr r3, 8006a60 <scalbn+0xd0>)
 80069c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80069c6:	e01f      	b.n	8006a08 <scalbn+0x78>
 80069c8:	f240 72ff 	movw	r2, #2047	; 0x7ff
 80069cc:	4291      	cmp	r1, r2
 80069ce:	d10c      	bne.n	80069ea <scalbn+0x5a>
 80069d0:	ee10 2a10 	vmov	r2, s0
 80069d4:	4620      	mov	r0, r4
 80069d6:	4629      	mov	r1, r5
 80069d8:	f7f9 fc28 	bl	800022c <__adddf3>
 80069dc:	4604      	mov	r4, r0
 80069de:	460d      	mov	r5, r1
 80069e0:	e022      	b.n	8006a28 <scalbn+0x98>
 80069e2:	460b      	mov	r3, r1
 80069e4:	f3c1 510a 	ubfx	r1, r1, #20, #11
 80069e8:	3936      	subs	r1, #54	; 0x36
 80069ea:	f24c 3250 	movw	r2, #50000	; 0xc350
 80069ee:	4296      	cmp	r6, r2
 80069f0:	dd0d      	ble.n	8006a0e <scalbn+0x7e>
 80069f2:	2d00      	cmp	r5, #0
 80069f4:	a11c      	add	r1, pc, #112	; (adr r1, 8006a68 <scalbn+0xd8>)
 80069f6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80069fa:	da02      	bge.n	8006a02 <scalbn+0x72>
 80069fc:	a11c      	add	r1, pc, #112	; (adr r1, 8006a70 <scalbn+0xe0>)
 80069fe:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006a02:	a319      	add	r3, pc, #100	; (adr r3, 8006a68 <scalbn+0xd8>)
 8006a04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a08:	f7f9 fdc6 	bl	8000598 <__aeabi_dmul>
 8006a0c:	e7e6      	b.n	80069dc <scalbn+0x4c>
 8006a0e:	1872      	adds	r2, r6, r1
 8006a10:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8006a14:	428a      	cmp	r2, r1
 8006a16:	dcec      	bgt.n	80069f2 <scalbn+0x62>
 8006a18:	2a00      	cmp	r2, #0
 8006a1a:	dd08      	ble.n	8006a2e <scalbn+0x9e>
 8006a1c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8006a20:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8006a24:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8006a28:	ec45 4b10 	vmov	d0, r4, r5
 8006a2c:	bd70      	pop	{r4, r5, r6, pc}
 8006a2e:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8006a32:	da08      	bge.n	8006a46 <scalbn+0xb6>
 8006a34:	2d00      	cmp	r5, #0
 8006a36:	a10a      	add	r1, pc, #40	; (adr r1, 8006a60 <scalbn+0xd0>)
 8006a38:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006a3c:	dac0      	bge.n	80069c0 <scalbn+0x30>
 8006a3e:	a10e      	add	r1, pc, #56	; (adr r1, 8006a78 <scalbn+0xe8>)
 8006a40:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006a44:	e7bc      	b.n	80069c0 <scalbn+0x30>
 8006a46:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8006a4a:	3236      	adds	r2, #54	; 0x36
 8006a4c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8006a50:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8006a54:	4620      	mov	r0, r4
 8006a56:	4b0c      	ldr	r3, [pc, #48]	; (8006a88 <scalbn+0xf8>)
 8006a58:	2200      	movs	r2, #0
 8006a5a:	e7d5      	b.n	8006a08 <scalbn+0x78>
 8006a5c:	f3af 8000 	nop.w
 8006a60:	c2f8f359 	.word	0xc2f8f359
 8006a64:	01a56e1f 	.word	0x01a56e1f
 8006a68:	8800759c 	.word	0x8800759c
 8006a6c:	7e37e43c 	.word	0x7e37e43c
 8006a70:	8800759c 	.word	0x8800759c
 8006a74:	fe37e43c 	.word	0xfe37e43c
 8006a78:	c2f8f359 	.word	0xc2f8f359
 8006a7c:	81a56e1f 	.word	0x81a56e1f
 8006a80:	43500000 	.word	0x43500000
 8006a84:	ffff3cb0 	.word	0xffff3cb0
 8006a88:	3c900000 	.word	0x3c900000

08006a8c <with_errno>:
 8006a8c:	b570      	push	{r4, r5, r6, lr}
 8006a8e:	4604      	mov	r4, r0
 8006a90:	460d      	mov	r5, r1
 8006a92:	4616      	mov	r6, r2
 8006a94:	f7fe fe8a 	bl	80057ac <__errno>
 8006a98:	4629      	mov	r1, r5
 8006a9a:	6006      	str	r6, [r0, #0]
 8006a9c:	4620      	mov	r0, r4
 8006a9e:	bd70      	pop	{r4, r5, r6, pc}

08006aa0 <xflow>:
 8006aa0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006aa2:	4614      	mov	r4, r2
 8006aa4:	461d      	mov	r5, r3
 8006aa6:	b108      	cbz	r0, 8006aac <xflow+0xc>
 8006aa8:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8006aac:	e9cd 2300 	strd	r2, r3, [sp]
 8006ab0:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006ab4:	4620      	mov	r0, r4
 8006ab6:	4629      	mov	r1, r5
 8006ab8:	f7f9 fd6e 	bl	8000598 <__aeabi_dmul>
 8006abc:	2222      	movs	r2, #34	; 0x22
 8006abe:	b003      	add	sp, #12
 8006ac0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006ac4:	f7ff bfe2 	b.w	8006a8c <with_errno>

08006ac8 <__math_uflow>:
 8006ac8:	b508      	push	{r3, lr}
 8006aca:	2200      	movs	r2, #0
 8006acc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8006ad0:	f7ff ffe6 	bl	8006aa0 <xflow>
 8006ad4:	ec41 0b10 	vmov	d0, r0, r1
 8006ad8:	bd08      	pop	{r3, pc}

08006ada <__math_oflow>:
 8006ada:	b508      	push	{r3, lr}
 8006adc:	2200      	movs	r2, #0
 8006ade:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 8006ae2:	f7ff ffdd 	bl	8006aa0 <xflow>
 8006ae6:	ec41 0b10 	vmov	d0, r0, r1
 8006aea:	bd08      	pop	{r3, pc}

08006aec <__kernel_rem_pio2f>:
 8006aec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006af0:	ed2d 8b04 	vpush	{d8-d9}
 8006af4:	b0d9      	sub	sp, #356	; 0x164
 8006af6:	4688      	mov	r8, r1
 8006af8:	9002      	str	r0, [sp, #8]
 8006afa:	49b8      	ldr	r1, [pc, #736]	; (8006ddc <__kernel_rem_pio2f+0x2f0>)
 8006afc:	9866      	ldr	r0, [sp, #408]	; 0x198
 8006afe:	9301      	str	r3, [sp, #4]
 8006b00:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8006b04:	9901      	ldr	r1, [sp, #4]
 8006b06:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8006b08:	f101 3bff 	add.w	fp, r1, #4294967295
 8006b0c:	1d11      	adds	r1, r2, #4
 8006b0e:	db25      	blt.n	8006b5c <__kernel_rem_pio2f+0x70>
 8006b10:	1ed0      	subs	r0, r2, #3
 8006b12:	bf48      	it	mi
 8006b14:	1d10      	addmi	r0, r2, #4
 8006b16:	10c0      	asrs	r0, r0, #3
 8006b18:	1c45      	adds	r5, r0, #1
 8006b1a:	00e9      	lsls	r1, r5, #3
 8006b1c:	eba0 070b 	sub.w	r7, r0, fp
 8006b20:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8006dec <__kernel_rem_pio2f+0x300>
 8006b24:	9103      	str	r1, [sp, #12]
 8006b26:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8006b2a:	eb0a 0c0b 	add.w	ip, sl, fp
 8006b2e:	ae1c      	add	r6, sp, #112	; 0x70
 8006b30:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8006b34:	2400      	movs	r4, #0
 8006b36:	4564      	cmp	r4, ip
 8006b38:	dd12      	ble.n	8006b60 <__kernel_rem_pio2f+0x74>
 8006b3a:	9901      	ldr	r1, [sp, #4]
 8006b3c:	ac1c      	add	r4, sp, #112	; 0x70
 8006b3e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8006b42:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8006b46:	f04f 0c00 	mov.w	ip, #0
 8006b4a:	45d4      	cmp	ip, sl
 8006b4c:	dc27      	bgt.n	8006b9e <__kernel_rem_pio2f+0xb2>
 8006b4e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8006b52:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8006dec <__kernel_rem_pio2f+0x300>
 8006b56:	4627      	mov	r7, r4
 8006b58:	2600      	movs	r6, #0
 8006b5a:	e016      	b.n	8006b8a <__kernel_rem_pio2f+0x9e>
 8006b5c:	2000      	movs	r0, #0
 8006b5e:	e7db      	b.n	8006b18 <__kernel_rem_pio2f+0x2c>
 8006b60:	42e7      	cmn	r7, r4
 8006b62:	bf5d      	ittte	pl
 8006b64:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8006b68:	ee07 1a90 	vmovpl	s15, r1
 8006b6c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8006b70:	eef0 7a47 	vmovmi.f32	s15, s14
 8006b74:	ece6 7a01 	vstmia	r6!, {s15}
 8006b78:	3401      	adds	r4, #1
 8006b7a:	e7dc      	b.n	8006b36 <__kernel_rem_pio2f+0x4a>
 8006b7c:	ecfe 6a01 	vldmia	lr!, {s13}
 8006b80:	ed97 7a00 	vldr	s14, [r7]
 8006b84:	eee6 7a87 	vfma.f32	s15, s13, s14
 8006b88:	3601      	adds	r6, #1
 8006b8a:	455e      	cmp	r6, fp
 8006b8c:	f1a7 0704 	sub.w	r7, r7, #4
 8006b90:	ddf4      	ble.n	8006b7c <__kernel_rem_pio2f+0x90>
 8006b92:	ece9 7a01 	vstmia	r9!, {s15}
 8006b96:	f10c 0c01 	add.w	ip, ip, #1
 8006b9a:	3404      	adds	r4, #4
 8006b9c:	e7d5      	b.n	8006b4a <__kernel_rem_pio2f+0x5e>
 8006b9e:	a908      	add	r1, sp, #32
 8006ba0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8006ba4:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8006ba8:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8006de8 <__kernel_rem_pio2f+0x2fc>
 8006bac:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8006de4 <__kernel_rem_pio2f+0x2f8>
 8006bb0:	9105      	str	r1, [sp, #20]
 8006bb2:	9304      	str	r3, [sp, #16]
 8006bb4:	4656      	mov	r6, sl
 8006bb6:	00b3      	lsls	r3, r6, #2
 8006bb8:	9306      	str	r3, [sp, #24]
 8006bba:	ab58      	add	r3, sp, #352	; 0x160
 8006bbc:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8006bc0:	ac08      	add	r4, sp, #32
 8006bc2:	ab44      	add	r3, sp, #272	; 0x110
 8006bc4:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8006bc8:	46a4      	mov	ip, r4
 8006bca:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8006bce:	4637      	mov	r7, r6
 8006bd0:	2f00      	cmp	r7, #0
 8006bd2:	f1a0 0004 	sub.w	r0, r0, #4
 8006bd6:	dc4a      	bgt.n	8006c6e <__kernel_rem_pio2f+0x182>
 8006bd8:	4628      	mov	r0, r5
 8006bda:	9207      	str	r2, [sp, #28]
 8006bdc:	f000 f9f8 	bl	8006fd0 <scalbnf>
 8006be0:	eeb0 8a40 	vmov.f32	s16, s0
 8006be4:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8006be8:	ee28 0a00 	vmul.f32	s0, s16, s0
 8006bec:	f000 fa56 	bl	800709c <floorf>
 8006bf0:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8006bf4:	eea0 8a67 	vfms.f32	s16, s0, s15
 8006bf8:	2d00      	cmp	r5, #0
 8006bfa:	9a07      	ldr	r2, [sp, #28]
 8006bfc:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8006c00:	ee17 9a90 	vmov	r9, s15
 8006c04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006c08:	ee38 8a67 	vsub.f32	s16, s16, s15
 8006c0c:	dd41      	ble.n	8006c92 <__kernel_rem_pio2f+0x1a6>
 8006c0e:	f106 3cff 	add.w	ip, r6, #4294967295
 8006c12:	ab08      	add	r3, sp, #32
 8006c14:	f1c5 0e08 	rsb	lr, r5, #8
 8006c18:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8006c1c:	fa47 f00e 	asr.w	r0, r7, lr
 8006c20:	4481      	add	r9, r0
 8006c22:	fa00 f00e 	lsl.w	r0, r0, lr
 8006c26:	1a3f      	subs	r7, r7, r0
 8006c28:	f1c5 0007 	rsb	r0, r5, #7
 8006c2c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8006c30:	4107      	asrs	r7, r0
 8006c32:	2f00      	cmp	r7, #0
 8006c34:	dd3c      	ble.n	8006cb0 <__kernel_rem_pio2f+0x1c4>
 8006c36:	f04f 0e00 	mov.w	lr, #0
 8006c3a:	f109 0901 	add.w	r9, r9, #1
 8006c3e:	4671      	mov	r1, lr
 8006c40:	4576      	cmp	r6, lr
 8006c42:	dc67      	bgt.n	8006d14 <__kernel_rem_pio2f+0x228>
 8006c44:	2d00      	cmp	r5, #0
 8006c46:	dd03      	ble.n	8006c50 <__kernel_rem_pio2f+0x164>
 8006c48:	2d01      	cmp	r5, #1
 8006c4a:	d074      	beq.n	8006d36 <__kernel_rem_pio2f+0x24a>
 8006c4c:	2d02      	cmp	r5, #2
 8006c4e:	d07b      	beq.n	8006d48 <__kernel_rem_pio2f+0x25c>
 8006c50:	2f02      	cmp	r7, #2
 8006c52:	d12d      	bne.n	8006cb0 <__kernel_rem_pio2f+0x1c4>
 8006c54:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8006c58:	ee30 8a48 	vsub.f32	s16, s0, s16
 8006c5c:	b341      	cbz	r1, 8006cb0 <__kernel_rem_pio2f+0x1c4>
 8006c5e:	4628      	mov	r0, r5
 8006c60:	9207      	str	r2, [sp, #28]
 8006c62:	f000 f9b5 	bl	8006fd0 <scalbnf>
 8006c66:	9a07      	ldr	r2, [sp, #28]
 8006c68:	ee38 8a40 	vsub.f32	s16, s16, s0
 8006c6c:	e020      	b.n	8006cb0 <__kernel_rem_pio2f+0x1c4>
 8006c6e:	ee60 7a28 	vmul.f32	s15, s0, s17
 8006c72:	3f01      	subs	r7, #1
 8006c74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006c78:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006c7c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8006c80:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8006c84:	ecac 0a01 	vstmia	ip!, {s0}
 8006c88:	ed90 0a00 	vldr	s0, [r0]
 8006c8c:	ee37 0a80 	vadd.f32	s0, s15, s0
 8006c90:	e79e      	b.n	8006bd0 <__kernel_rem_pio2f+0xe4>
 8006c92:	d105      	bne.n	8006ca0 <__kernel_rem_pio2f+0x1b4>
 8006c94:	1e70      	subs	r0, r6, #1
 8006c96:	ab08      	add	r3, sp, #32
 8006c98:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8006c9c:	11ff      	asrs	r7, r7, #7
 8006c9e:	e7c8      	b.n	8006c32 <__kernel_rem_pio2f+0x146>
 8006ca0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8006ca4:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8006ca8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006cac:	da30      	bge.n	8006d10 <__kernel_rem_pio2f+0x224>
 8006cae:	2700      	movs	r7, #0
 8006cb0:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8006cb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006cb8:	f040 809a 	bne.w	8006df0 <__kernel_rem_pio2f+0x304>
 8006cbc:	1e74      	subs	r4, r6, #1
 8006cbe:	46a4      	mov	ip, r4
 8006cc0:	2100      	movs	r1, #0
 8006cc2:	45d4      	cmp	ip, sl
 8006cc4:	da47      	bge.n	8006d56 <__kernel_rem_pio2f+0x26a>
 8006cc6:	2900      	cmp	r1, #0
 8006cc8:	d063      	beq.n	8006d92 <__kernel_rem_pio2f+0x2a6>
 8006cca:	ab08      	add	r3, sp, #32
 8006ccc:	3d08      	subs	r5, #8
 8006cce:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8006cd2:	2b00      	cmp	r3, #0
 8006cd4:	d07f      	beq.n	8006dd6 <__kernel_rem_pio2f+0x2ea>
 8006cd6:	4628      	mov	r0, r5
 8006cd8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8006cdc:	f000 f978 	bl	8006fd0 <scalbnf>
 8006ce0:	1c63      	adds	r3, r4, #1
 8006ce2:	aa44      	add	r2, sp, #272	; 0x110
 8006ce4:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8006de8 <__kernel_rem_pio2f+0x2fc>
 8006ce8:	0099      	lsls	r1, r3, #2
 8006cea:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8006cee:	4623      	mov	r3, r4
 8006cf0:	2b00      	cmp	r3, #0
 8006cf2:	f280 80ad 	bge.w	8006e50 <__kernel_rem_pio2f+0x364>
 8006cf6:	4623      	mov	r3, r4
 8006cf8:	2b00      	cmp	r3, #0
 8006cfa:	f2c0 80cb 	blt.w	8006e94 <__kernel_rem_pio2f+0x3a8>
 8006cfe:	aa44      	add	r2, sp, #272	; 0x110
 8006d00:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8006d04:	4e36      	ldr	r6, [pc, #216]	; (8006de0 <__kernel_rem_pio2f+0x2f4>)
 8006d06:	eddf 7a39 	vldr	s15, [pc, #228]	; 8006dec <__kernel_rem_pio2f+0x300>
 8006d0a:	2000      	movs	r0, #0
 8006d0c:	1ae2      	subs	r2, r4, r3
 8006d0e:	e0b6      	b.n	8006e7e <__kernel_rem_pio2f+0x392>
 8006d10:	2702      	movs	r7, #2
 8006d12:	e790      	b.n	8006c36 <__kernel_rem_pio2f+0x14a>
 8006d14:	6820      	ldr	r0, [r4, #0]
 8006d16:	b949      	cbnz	r1, 8006d2c <__kernel_rem_pio2f+0x240>
 8006d18:	b118      	cbz	r0, 8006d22 <__kernel_rem_pio2f+0x236>
 8006d1a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8006d1e:	6020      	str	r0, [r4, #0]
 8006d20:	2001      	movs	r0, #1
 8006d22:	f10e 0e01 	add.w	lr, lr, #1
 8006d26:	3404      	adds	r4, #4
 8006d28:	4601      	mov	r1, r0
 8006d2a:	e789      	b.n	8006c40 <__kernel_rem_pio2f+0x154>
 8006d2c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8006d30:	6020      	str	r0, [r4, #0]
 8006d32:	4608      	mov	r0, r1
 8006d34:	e7f5      	b.n	8006d22 <__kernel_rem_pio2f+0x236>
 8006d36:	1e74      	subs	r4, r6, #1
 8006d38:	ab08      	add	r3, sp, #32
 8006d3a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8006d3e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8006d42:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8006d46:	e783      	b.n	8006c50 <__kernel_rem_pio2f+0x164>
 8006d48:	1e74      	subs	r4, r6, #1
 8006d4a:	ab08      	add	r3, sp, #32
 8006d4c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8006d50:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8006d54:	e7f5      	b.n	8006d42 <__kernel_rem_pio2f+0x256>
 8006d56:	ab08      	add	r3, sp, #32
 8006d58:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8006d5c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006d60:	4301      	orrs	r1, r0
 8006d62:	e7ae      	b.n	8006cc2 <__kernel_rem_pio2f+0x1d6>
 8006d64:	3001      	adds	r0, #1
 8006d66:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 8006d6a:	2f00      	cmp	r7, #0
 8006d6c:	d0fa      	beq.n	8006d64 <__kernel_rem_pio2f+0x278>
 8006d6e:	9b06      	ldr	r3, [sp, #24]
 8006d70:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8006d74:	eb0d 0403 	add.w	r4, sp, r3
 8006d78:	9b01      	ldr	r3, [sp, #4]
 8006d7a:	18f7      	adds	r7, r6, r3
 8006d7c:	ab1c      	add	r3, sp, #112	; 0x70
 8006d7e:	f106 0c01 	add.w	ip, r6, #1
 8006d82:	3c4c      	subs	r4, #76	; 0x4c
 8006d84:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8006d88:	4430      	add	r0, r6
 8006d8a:	4560      	cmp	r0, ip
 8006d8c:	da04      	bge.n	8006d98 <__kernel_rem_pio2f+0x2ac>
 8006d8e:	4606      	mov	r6, r0
 8006d90:	e711      	b.n	8006bb6 <__kernel_rem_pio2f+0xca>
 8006d92:	9c05      	ldr	r4, [sp, #20]
 8006d94:	2001      	movs	r0, #1
 8006d96:	e7e6      	b.n	8006d66 <__kernel_rem_pio2f+0x27a>
 8006d98:	9b04      	ldr	r3, [sp, #16]
 8006d9a:	f8dd e008 	ldr.w	lr, [sp, #8]
 8006d9e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8006da2:	9306      	str	r3, [sp, #24]
 8006da4:	ee07 3a90 	vmov	s15, r3
 8006da8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006dac:	2600      	movs	r6, #0
 8006dae:	ece7 7a01 	vstmia	r7!, {s15}
 8006db2:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8006dec <__kernel_rem_pio2f+0x300>
 8006db6:	46b9      	mov	r9, r7
 8006db8:	455e      	cmp	r6, fp
 8006dba:	dd04      	ble.n	8006dc6 <__kernel_rem_pio2f+0x2da>
 8006dbc:	ece4 7a01 	vstmia	r4!, {s15}
 8006dc0:	f10c 0c01 	add.w	ip, ip, #1
 8006dc4:	e7e1      	b.n	8006d8a <__kernel_rem_pio2f+0x29e>
 8006dc6:	ecfe 6a01 	vldmia	lr!, {s13}
 8006dca:	ed39 7a01 	vldmdb	r9!, {s14}
 8006dce:	3601      	adds	r6, #1
 8006dd0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8006dd4:	e7f0      	b.n	8006db8 <__kernel_rem_pio2f+0x2cc>
 8006dd6:	3c01      	subs	r4, #1
 8006dd8:	e777      	b.n	8006cca <__kernel_rem_pio2f+0x1de>
 8006dda:	bf00      	nop
 8006ddc:	0800755c 	.word	0x0800755c
 8006de0:	08007530 	.word	0x08007530
 8006de4:	43800000 	.word	0x43800000
 8006de8:	3b800000 	.word	0x3b800000
 8006dec:	00000000 	.word	0x00000000
 8006df0:	9b03      	ldr	r3, [sp, #12]
 8006df2:	eeb0 0a48 	vmov.f32	s0, s16
 8006df6:	1a98      	subs	r0, r3, r2
 8006df8:	f000 f8ea 	bl	8006fd0 <scalbnf>
 8006dfc:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8006de4 <__kernel_rem_pio2f+0x2f8>
 8006e00:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8006e04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e08:	db19      	blt.n	8006e3e <__kernel_rem_pio2f+0x352>
 8006e0a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8006de8 <__kernel_rem_pio2f+0x2fc>
 8006e0e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8006e12:	aa08      	add	r2, sp, #32
 8006e14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006e18:	1c74      	adds	r4, r6, #1
 8006e1a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006e1e:	3508      	adds	r5, #8
 8006e20:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8006e24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006e28:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8006e2c:	ee10 3a10 	vmov	r3, s0
 8006e30:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8006e34:	ee17 3a90 	vmov	r3, s15
 8006e38:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8006e3c:	e74b      	b.n	8006cd6 <__kernel_rem_pio2f+0x1ea>
 8006e3e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8006e42:	aa08      	add	r2, sp, #32
 8006e44:	ee10 3a10 	vmov	r3, s0
 8006e48:	4634      	mov	r4, r6
 8006e4a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8006e4e:	e742      	b.n	8006cd6 <__kernel_rem_pio2f+0x1ea>
 8006e50:	a808      	add	r0, sp, #32
 8006e52:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8006e56:	9001      	str	r0, [sp, #4]
 8006e58:	ee07 0a90 	vmov	s15, r0
 8006e5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006e60:	3b01      	subs	r3, #1
 8006e62:	ee67 7a80 	vmul.f32	s15, s15, s0
 8006e66:	ee20 0a07 	vmul.f32	s0, s0, s14
 8006e6a:	ed62 7a01 	vstmdb	r2!, {s15}
 8006e6e:	e73f      	b.n	8006cf0 <__kernel_rem_pio2f+0x204>
 8006e70:	ecf6 6a01 	vldmia	r6!, {s13}
 8006e74:	ecb5 7a01 	vldmia	r5!, {s14}
 8006e78:	eee6 7a87 	vfma.f32	s15, s13, s14
 8006e7c:	3001      	adds	r0, #1
 8006e7e:	4550      	cmp	r0, sl
 8006e80:	dc01      	bgt.n	8006e86 <__kernel_rem_pio2f+0x39a>
 8006e82:	4290      	cmp	r0, r2
 8006e84:	ddf4      	ble.n	8006e70 <__kernel_rem_pio2f+0x384>
 8006e86:	a858      	add	r0, sp, #352	; 0x160
 8006e88:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8006e8c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8006e90:	3b01      	subs	r3, #1
 8006e92:	e731      	b.n	8006cf8 <__kernel_rem_pio2f+0x20c>
 8006e94:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8006e96:	2b02      	cmp	r3, #2
 8006e98:	dc09      	bgt.n	8006eae <__kernel_rem_pio2f+0x3c2>
 8006e9a:	2b00      	cmp	r3, #0
 8006e9c:	dc2b      	bgt.n	8006ef6 <__kernel_rem_pio2f+0x40a>
 8006e9e:	d044      	beq.n	8006f2a <__kernel_rem_pio2f+0x43e>
 8006ea0:	f009 0007 	and.w	r0, r9, #7
 8006ea4:	b059      	add	sp, #356	; 0x164
 8006ea6:	ecbd 8b04 	vpop	{d8-d9}
 8006eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006eae:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8006eb0:	2b03      	cmp	r3, #3
 8006eb2:	d1f5      	bne.n	8006ea0 <__kernel_rem_pio2f+0x3b4>
 8006eb4:	aa30      	add	r2, sp, #192	; 0xc0
 8006eb6:	1f0b      	subs	r3, r1, #4
 8006eb8:	4413      	add	r3, r2
 8006eba:	461a      	mov	r2, r3
 8006ebc:	4620      	mov	r0, r4
 8006ebe:	2800      	cmp	r0, #0
 8006ec0:	f1a2 0204 	sub.w	r2, r2, #4
 8006ec4:	dc52      	bgt.n	8006f6c <__kernel_rem_pio2f+0x480>
 8006ec6:	4622      	mov	r2, r4
 8006ec8:	2a01      	cmp	r2, #1
 8006eca:	f1a3 0304 	sub.w	r3, r3, #4
 8006ece:	dc5d      	bgt.n	8006f8c <__kernel_rem_pio2f+0x4a0>
 8006ed0:	ab30      	add	r3, sp, #192	; 0xc0
 8006ed2:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8006dec <__kernel_rem_pio2f+0x300>
 8006ed6:	440b      	add	r3, r1
 8006ed8:	2c01      	cmp	r4, #1
 8006eda:	dc67      	bgt.n	8006fac <__kernel_rem_pio2f+0x4c0>
 8006edc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8006ee0:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8006ee4:	2f00      	cmp	r7, #0
 8006ee6:	d167      	bne.n	8006fb8 <__kernel_rem_pio2f+0x4cc>
 8006ee8:	edc8 6a00 	vstr	s13, [r8]
 8006eec:	ed88 7a01 	vstr	s14, [r8, #4]
 8006ef0:	edc8 7a02 	vstr	s15, [r8, #8]
 8006ef4:	e7d4      	b.n	8006ea0 <__kernel_rem_pio2f+0x3b4>
 8006ef6:	ab30      	add	r3, sp, #192	; 0xc0
 8006ef8:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8006dec <__kernel_rem_pio2f+0x300>
 8006efc:	440b      	add	r3, r1
 8006efe:	4622      	mov	r2, r4
 8006f00:	2a00      	cmp	r2, #0
 8006f02:	da24      	bge.n	8006f4e <__kernel_rem_pio2f+0x462>
 8006f04:	b34f      	cbz	r7, 8006f5a <__kernel_rem_pio2f+0x46e>
 8006f06:	eef1 7a47 	vneg.f32	s15, s14
 8006f0a:	edc8 7a00 	vstr	s15, [r8]
 8006f0e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8006f12:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8006f16:	aa31      	add	r2, sp, #196	; 0xc4
 8006f18:	2301      	movs	r3, #1
 8006f1a:	429c      	cmp	r4, r3
 8006f1c:	da20      	bge.n	8006f60 <__kernel_rem_pio2f+0x474>
 8006f1e:	b10f      	cbz	r7, 8006f24 <__kernel_rem_pio2f+0x438>
 8006f20:	eef1 7a67 	vneg.f32	s15, s15
 8006f24:	edc8 7a01 	vstr	s15, [r8, #4]
 8006f28:	e7ba      	b.n	8006ea0 <__kernel_rem_pio2f+0x3b4>
 8006f2a:	ab30      	add	r3, sp, #192	; 0xc0
 8006f2c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8006dec <__kernel_rem_pio2f+0x300>
 8006f30:	440b      	add	r3, r1
 8006f32:	2c00      	cmp	r4, #0
 8006f34:	da05      	bge.n	8006f42 <__kernel_rem_pio2f+0x456>
 8006f36:	b10f      	cbz	r7, 8006f3c <__kernel_rem_pio2f+0x450>
 8006f38:	eef1 7a67 	vneg.f32	s15, s15
 8006f3c:	edc8 7a00 	vstr	s15, [r8]
 8006f40:	e7ae      	b.n	8006ea0 <__kernel_rem_pio2f+0x3b4>
 8006f42:	ed33 7a01 	vldmdb	r3!, {s14}
 8006f46:	3c01      	subs	r4, #1
 8006f48:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006f4c:	e7f1      	b.n	8006f32 <__kernel_rem_pio2f+0x446>
 8006f4e:	ed73 7a01 	vldmdb	r3!, {s15}
 8006f52:	3a01      	subs	r2, #1
 8006f54:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006f58:	e7d2      	b.n	8006f00 <__kernel_rem_pio2f+0x414>
 8006f5a:	eef0 7a47 	vmov.f32	s15, s14
 8006f5e:	e7d4      	b.n	8006f0a <__kernel_rem_pio2f+0x41e>
 8006f60:	ecb2 7a01 	vldmia	r2!, {s14}
 8006f64:	3301      	adds	r3, #1
 8006f66:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006f6a:	e7d6      	b.n	8006f1a <__kernel_rem_pio2f+0x42e>
 8006f6c:	edd2 7a00 	vldr	s15, [r2]
 8006f70:	edd2 6a01 	vldr	s13, [r2, #4]
 8006f74:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8006f78:	3801      	subs	r0, #1
 8006f7a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8006f7e:	ed82 7a00 	vstr	s14, [r2]
 8006f82:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006f86:	edc2 7a01 	vstr	s15, [r2, #4]
 8006f8a:	e798      	b.n	8006ebe <__kernel_rem_pio2f+0x3d2>
 8006f8c:	edd3 7a00 	vldr	s15, [r3]
 8006f90:	edd3 6a01 	vldr	s13, [r3, #4]
 8006f94:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8006f98:	3a01      	subs	r2, #1
 8006f9a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8006f9e:	ed83 7a00 	vstr	s14, [r3]
 8006fa2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006fa6:	edc3 7a01 	vstr	s15, [r3, #4]
 8006faa:	e78d      	b.n	8006ec8 <__kernel_rem_pio2f+0x3dc>
 8006fac:	ed33 7a01 	vldmdb	r3!, {s14}
 8006fb0:	3c01      	subs	r4, #1
 8006fb2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006fb6:	e78f      	b.n	8006ed8 <__kernel_rem_pio2f+0x3ec>
 8006fb8:	eef1 6a66 	vneg.f32	s13, s13
 8006fbc:	eeb1 7a47 	vneg.f32	s14, s14
 8006fc0:	edc8 6a00 	vstr	s13, [r8]
 8006fc4:	ed88 7a01 	vstr	s14, [r8, #4]
 8006fc8:	eef1 7a67 	vneg.f32	s15, s15
 8006fcc:	e790      	b.n	8006ef0 <__kernel_rem_pio2f+0x404>
 8006fce:	bf00      	nop

08006fd0 <scalbnf>:
 8006fd0:	ee10 3a10 	vmov	r3, s0
 8006fd4:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8006fd8:	d02b      	beq.n	8007032 <scalbnf+0x62>
 8006fda:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8006fde:	d302      	bcc.n	8006fe6 <scalbnf+0x16>
 8006fe0:	ee30 0a00 	vadd.f32	s0, s0, s0
 8006fe4:	4770      	bx	lr
 8006fe6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8006fea:	d123      	bne.n	8007034 <scalbnf+0x64>
 8006fec:	4b24      	ldr	r3, [pc, #144]	; (8007080 <scalbnf+0xb0>)
 8006fee:	eddf 7a25 	vldr	s15, [pc, #148]	; 8007084 <scalbnf+0xb4>
 8006ff2:	4298      	cmp	r0, r3
 8006ff4:	ee20 0a27 	vmul.f32	s0, s0, s15
 8006ff8:	db17      	blt.n	800702a <scalbnf+0x5a>
 8006ffa:	ee10 3a10 	vmov	r3, s0
 8006ffe:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8007002:	3a19      	subs	r2, #25
 8007004:	f24c 3150 	movw	r1, #50000	; 0xc350
 8007008:	4288      	cmp	r0, r1
 800700a:	dd15      	ble.n	8007038 <scalbnf+0x68>
 800700c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8007088 <scalbnf+0xb8>
 8007010:	eddf 6a1e 	vldr	s13, [pc, #120]	; 800708c <scalbnf+0xbc>
 8007014:	ee10 3a10 	vmov	r3, s0
 8007018:	eeb0 7a67 	vmov.f32	s14, s15
 800701c:	2b00      	cmp	r3, #0
 800701e:	bfb8      	it	lt
 8007020:	eef0 7a66 	vmovlt.f32	s15, s13
 8007024:	ee27 0a87 	vmul.f32	s0, s15, s14
 8007028:	4770      	bx	lr
 800702a:	eddf 7a19 	vldr	s15, [pc, #100]	; 8007090 <scalbnf+0xc0>
 800702e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8007032:	4770      	bx	lr
 8007034:	0dd2      	lsrs	r2, r2, #23
 8007036:	e7e5      	b.n	8007004 <scalbnf+0x34>
 8007038:	4410      	add	r0, r2
 800703a:	28fe      	cmp	r0, #254	; 0xfe
 800703c:	dce6      	bgt.n	800700c <scalbnf+0x3c>
 800703e:	2800      	cmp	r0, #0
 8007040:	dd06      	ble.n	8007050 <scalbnf+0x80>
 8007042:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007046:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 800704a:	ee00 3a10 	vmov	s0, r3
 800704e:	4770      	bx	lr
 8007050:	f110 0f16 	cmn.w	r0, #22
 8007054:	da09      	bge.n	800706a <scalbnf+0x9a>
 8007056:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8007090 <scalbnf+0xc0>
 800705a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8007094 <scalbnf+0xc4>
 800705e:	ee10 3a10 	vmov	r3, s0
 8007062:	eeb0 7a67 	vmov.f32	s14, s15
 8007066:	2b00      	cmp	r3, #0
 8007068:	e7d9      	b.n	800701e <scalbnf+0x4e>
 800706a:	3019      	adds	r0, #25
 800706c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8007070:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8007074:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8007098 <scalbnf+0xc8>
 8007078:	ee07 3a90 	vmov	s15, r3
 800707c:	e7d7      	b.n	800702e <scalbnf+0x5e>
 800707e:	bf00      	nop
 8007080:	ffff3cb0 	.word	0xffff3cb0
 8007084:	4c000000 	.word	0x4c000000
 8007088:	7149f2ca 	.word	0x7149f2ca
 800708c:	f149f2ca 	.word	0xf149f2ca
 8007090:	0da24260 	.word	0x0da24260
 8007094:	8da24260 	.word	0x8da24260
 8007098:	33000000 	.word	0x33000000

0800709c <floorf>:
 800709c:	ee10 3a10 	vmov	r3, s0
 80070a0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80070a4:	3a7f      	subs	r2, #127	; 0x7f
 80070a6:	2a16      	cmp	r2, #22
 80070a8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80070ac:	dc2a      	bgt.n	8007104 <floorf+0x68>
 80070ae:	2a00      	cmp	r2, #0
 80070b0:	da11      	bge.n	80070d6 <floorf+0x3a>
 80070b2:	eddf 7a18 	vldr	s15, [pc, #96]	; 8007114 <floorf+0x78>
 80070b6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80070ba:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80070be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80070c2:	dd05      	ble.n	80070d0 <floorf+0x34>
 80070c4:	2b00      	cmp	r3, #0
 80070c6:	da23      	bge.n	8007110 <floorf+0x74>
 80070c8:	4a13      	ldr	r2, [pc, #76]	; (8007118 <floorf+0x7c>)
 80070ca:	2900      	cmp	r1, #0
 80070cc:	bf18      	it	ne
 80070ce:	4613      	movne	r3, r2
 80070d0:	ee00 3a10 	vmov	s0, r3
 80070d4:	4770      	bx	lr
 80070d6:	4911      	ldr	r1, [pc, #68]	; (800711c <floorf+0x80>)
 80070d8:	4111      	asrs	r1, r2
 80070da:	420b      	tst	r3, r1
 80070dc:	d0fa      	beq.n	80070d4 <floorf+0x38>
 80070de:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8007114 <floorf+0x78>
 80070e2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80070e6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80070ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80070ee:	ddef      	ble.n	80070d0 <floorf+0x34>
 80070f0:	2b00      	cmp	r3, #0
 80070f2:	bfbe      	ittt	lt
 80070f4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80070f8:	fa40 f202 	asrlt.w	r2, r0, r2
 80070fc:	189b      	addlt	r3, r3, r2
 80070fe:	ea23 0301 	bic.w	r3, r3, r1
 8007102:	e7e5      	b.n	80070d0 <floorf+0x34>
 8007104:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8007108:	d3e4      	bcc.n	80070d4 <floorf+0x38>
 800710a:	ee30 0a00 	vadd.f32	s0, s0, s0
 800710e:	4770      	bx	lr
 8007110:	2300      	movs	r3, #0
 8007112:	e7dd      	b.n	80070d0 <floorf+0x34>
 8007114:	7149f2ca 	.word	0x7149f2ca
 8007118:	bf800000 	.word	0xbf800000
 800711c:	007fffff 	.word	0x007fffff

08007120 <_init>:
 8007120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007122:	bf00      	nop
 8007124:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007126:	bc08      	pop	{r3}
 8007128:	469e      	mov	lr, r3
 800712a:	4770      	bx	lr

0800712c <_fini>:
 800712c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800712e:	bf00      	nop
 8007130:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007132:	bc08      	pop	{r3}
 8007134:	469e      	mov	lr, r3
 8007136:	4770      	bx	lr
