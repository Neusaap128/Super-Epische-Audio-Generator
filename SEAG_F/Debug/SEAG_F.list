
SEAG_F.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006300  080001e0  080001e0  000101e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000210  080064e0  080064e0  000164e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080066f0  080066f0  000200b0  2**0
                  CONTENTS
  4 .ARM          00000008  080066f0  080066f0  000166f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080066f8  080066f8  000200b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080066f8  080066f8  000166f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080066fc  080066fc  000166fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000b0  20000000  08006700  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000514  200000b0  080067b0  000200b0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200005c4  080067b0  000205c4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200b0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000200e0  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000d93c  00000000  00000000  00020123  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002e63  00000000  00000000  0002da5f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000bf8  00000000  00000000  000308c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000008db  00000000  00000000  000314c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00023fc7  00000000  00000000  00031d9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00014015  00000000  00000000  00055d62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d0538  00000000  00000000  00069d77  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000033e4  00000000  00000000  0013a2b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000073  00000000  00000000  0013d694  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	; (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	; (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	; (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	200000b0 	.word	0x200000b0
 80001fc:	00000000 	.word	0x00000000
 8000200:	080064c8 	.word	0x080064c8

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	; (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	; (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	; (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	200000b4 	.word	0x200000b4
 800021c:	080064c8 	.word	0x080064c8

08000220 <__aeabi_drsub>:
 8000220:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000224:	e002      	b.n	800022c <__adddf3>
 8000226:	bf00      	nop

08000228 <__aeabi_dsub>:
 8000228:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800022c <__adddf3>:
 800022c:	b530      	push	{r4, r5, lr}
 800022e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000232:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000236:	ea94 0f05 	teq	r4, r5
 800023a:	bf08      	it	eq
 800023c:	ea90 0f02 	teqeq	r0, r2
 8000240:	bf1f      	itttt	ne
 8000242:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000246:	ea55 0c02 	orrsne.w	ip, r5, r2
 800024a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800024e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000252:	f000 80e2 	beq.w	800041a <__adddf3+0x1ee>
 8000256:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800025a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800025e:	bfb8      	it	lt
 8000260:	426d      	neglt	r5, r5
 8000262:	dd0c      	ble.n	800027e <__adddf3+0x52>
 8000264:	442c      	add	r4, r5
 8000266:	ea80 0202 	eor.w	r2, r0, r2
 800026a:	ea81 0303 	eor.w	r3, r1, r3
 800026e:	ea82 0000 	eor.w	r0, r2, r0
 8000272:	ea83 0101 	eor.w	r1, r3, r1
 8000276:	ea80 0202 	eor.w	r2, r0, r2
 800027a:	ea81 0303 	eor.w	r3, r1, r3
 800027e:	2d36      	cmp	r5, #54	; 0x36
 8000280:	bf88      	it	hi
 8000282:	bd30      	pophi	{r4, r5, pc}
 8000284:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000288:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800028c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000290:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000294:	d002      	beq.n	800029c <__adddf3+0x70>
 8000296:	4240      	negs	r0, r0
 8000298:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800029c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002a4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002a8:	d002      	beq.n	80002b0 <__adddf3+0x84>
 80002aa:	4252      	negs	r2, r2
 80002ac:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002b0:	ea94 0f05 	teq	r4, r5
 80002b4:	f000 80a7 	beq.w	8000406 <__adddf3+0x1da>
 80002b8:	f1a4 0401 	sub.w	r4, r4, #1
 80002bc:	f1d5 0e20 	rsbs	lr, r5, #32
 80002c0:	db0d      	blt.n	80002de <__adddf3+0xb2>
 80002c2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002c6:	fa22 f205 	lsr.w	r2, r2, r5
 80002ca:	1880      	adds	r0, r0, r2
 80002cc:	f141 0100 	adc.w	r1, r1, #0
 80002d0:	fa03 f20e 	lsl.w	r2, r3, lr
 80002d4:	1880      	adds	r0, r0, r2
 80002d6:	fa43 f305 	asr.w	r3, r3, r5
 80002da:	4159      	adcs	r1, r3
 80002dc:	e00e      	b.n	80002fc <__adddf3+0xd0>
 80002de:	f1a5 0520 	sub.w	r5, r5, #32
 80002e2:	f10e 0e20 	add.w	lr, lr, #32
 80002e6:	2a01      	cmp	r2, #1
 80002e8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002ec:	bf28      	it	cs
 80002ee:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002f2:	fa43 f305 	asr.w	r3, r3, r5
 80002f6:	18c0      	adds	r0, r0, r3
 80002f8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002fc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000300:	d507      	bpl.n	8000312 <__adddf3+0xe6>
 8000302:	f04f 0e00 	mov.w	lr, #0
 8000306:	f1dc 0c00 	rsbs	ip, ip, #0
 800030a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800030e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000312:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000316:	d31b      	bcc.n	8000350 <__adddf3+0x124>
 8000318:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800031c:	d30c      	bcc.n	8000338 <__adddf3+0x10c>
 800031e:	0849      	lsrs	r1, r1, #1
 8000320:	ea5f 0030 	movs.w	r0, r0, rrx
 8000324:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000328:	f104 0401 	add.w	r4, r4, #1
 800032c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000330:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000334:	f080 809a 	bcs.w	800046c <__adddf3+0x240>
 8000338:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800033c:	bf08      	it	eq
 800033e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000342:	f150 0000 	adcs.w	r0, r0, #0
 8000346:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800034a:	ea41 0105 	orr.w	r1, r1, r5
 800034e:	bd30      	pop	{r4, r5, pc}
 8000350:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000354:	4140      	adcs	r0, r0
 8000356:	eb41 0101 	adc.w	r1, r1, r1
 800035a:	3c01      	subs	r4, #1
 800035c:	bf28      	it	cs
 800035e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000362:	d2e9      	bcs.n	8000338 <__adddf3+0x10c>
 8000364:	f091 0f00 	teq	r1, #0
 8000368:	bf04      	itt	eq
 800036a:	4601      	moveq	r1, r0
 800036c:	2000      	moveq	r0, #0
 800036e:	fab1 f381 	clz	r3, r1
 8000372:	bf08      	it	eq
 8000374:	3320      	addeq	r3, #32
 8000376:	f1a3 030b 	sub.w	r3, r3, #11
 800037a:	f1b3 0220 	subs.w	r2, r3, #32
 800037e:	da0c      	bge.n	800039a <__adddf3+0x16e>
 8000380:	320c      	adds	r2, #12
 8000382:	dd08      	ble.n	8000396 <__adddf3+0x16a>
 8000384:	f102 0c14 	add.w	ip, r2, #20
 8000388:	f1c2 020c 	rsb	r2, r2, #12
 800038c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000390:	fa21 f102 	lsr.w	r1, r1, r2
 8000394:	e00c      	b.n	80003b0 <__adddf3+0x184>
 8000396:	f102 0214 	add.w	r2, r2, #20
 800039a:	bfd8      	it	le
 800039c:	f1c2 0c20 	rsble	ip, r2, #32
 80003a0:	fa01 f102 	lsl.w	r1, r1, r2
 80003a4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003a8:	bfdc      	itt	le
 80003aa:	ea41 010c 	orrle.w	r1, r1, ip
 80003ae:	4090      	lslle	r0, r2
 80003b0:	1ae4      	subs	r4, r4, r3
 80003b2:	bfa2      	ittt	ge
 80003b4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003b8:	4329      	orrge	r1, r5
 80003ba:	bd30      	popge	{r4, r5, pc}
 80003bc:	ea6f 0404 	mvn.w	r4, r4
 80003c0:	3c1f      	subs	r4, #31
 80003c2:	da1c      	bge.n	80003fe <__adddf3+0x1d2>
 80003c4:	340c      	adds	r4, #12
 80003c6:	dc0e      	bgt.n	80003e6 <__adddf3+0x1ba>
 80003c8:	f104 0414 	add.w	r4, r4, #20
 80003cc:	f1c4 0220 	rsb	r2, r4, #32
 80003d0:	fa20 f004 	lsr.w	r0, r0, r4
 80003d4:	fa01 f302 	lsl.w	r3, r1, r2
 80003d8:	ea40 0003 	orr.w	r0, r0, r3
 80003dc:	fa21 f304 	lsr.w	r3, r1, r4
 80003e0:	ea45 0103 	orr.w	r1, r5, r3
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	f1c4 040c 	rsb	r4, r4, #12
 80003ea:	f1c4 0220 	rsb	r2, r4, #32
 80003ee:	fa20 f002 	lsr.w	r0, r0, r2
 80003f2:	fa01 f304 	lsl.w	r3, r1, r4
 80003f6:	ea40 0003 	orr.w	r0, r0, r3
 80003fa:	4629      	mov	r1, r5
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	fa21 f004 	lsr.w	r0, r1, r4
 8000402:	4629      	mov	r1, r5
 8000404:	bd30      	pop	{r4, r5, pc}
 8000406:	f094 0f00 	teq	r4, #0
 800040a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800040e:	bf06      	itte	eq
 8000410:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000414:	3401      	addeq	r4, #1
 8000416:	3d01      	subne	r5, #1
 8000418:	e74e      	b.n	80002b8 <__adddf3+0x8c>
 800041a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800041e:	bf18      	it	ne
 8000420:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000424:	d029      	beq.n	800047a <__adddf3+0x24e>
 8000426:	ea94 0f05 	teq	r4, r5
 800042a:	bf08      	it	eq
 800042c:	ea90 0f02 	teqeq	r0, r2
 8000430:	d005      	beq.n	800043e <__adddf3+0x212>
 8000432:	ea54 0c00 	orrs.w	ip, r4, r0
 8000436:	bf04      	itt	eq
 8000438:	4619      	moveq	r1, r3
 800043a:	4610      	moveq	r0, r2
 800043c:	bd30      	pop	{r4, r5, pc}
 800043e:	ea91 0f03 	teq	r1, r3
 8000442:	bf1e      	ittt	ne
 8000444:	2100      	movne	r1, #0
 8000446:	2000      	movne	r0, #0
 8000448:	bd30      	popne	{r4, r5, pc}
 800044a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800044e:	d105      	bne.n	800045c <__adddf3+0x230>
 8000450:	0040      	lsls	r0, r0, #1
 8000452:	4149      	adcs	r1, r1
 8000454:	bf28      	it	cs
 8000456:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800045a:	bd30      	pop	{r4, r5, pc}
 800045c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000460:	bf3c      	itt	cc
 8000462:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000466:	bd30      	popcc	{r4, r5, pc}
 8000468:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800046c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000470:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000474:	f04f 0000 	mov.w	r0, #0
 8000478:	bd30      	pop	{r4, r5, pc}
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf1a      	itte	ne
 8000480:	4619      	movne	r1, r3
 8000482:	4610      	movne	r0, r2
 8000484:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000488:	bf1c      	itt	ne
 800048a:	460b      	movne	r3, r1
 800048c:	4602      	movne	r2, r0
 800048e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000492:	bf06      	itte	eq
 8000494:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000498:	ea91 0f03 	teqeq	r1, r3
 800049c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004a0:	bd30      	pop	{r4, r5, pc}
 80004a2:	bf00      	nop

080004a4 <__aeabi_ui2d>:
 80004a4:	f090 0f00 	teq	r0, #0
 80004a8:	bf04      	itt	eq
 80004aa:	2100      	moveq	r1, #0
 80004ac:	4770      	bxeq	lr
 80004ae:	b530      	push	{r4, r5, lr}
 80004b0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004b4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004b8:	f04f 0500 	mov.w	r5, #0
 80004bc:	f04f 0100 	mov.w	r1, #0
 80004c0:	e750      	b.n	8000364 <__adddf3+0x138>
 80004c2:	bf00      	nop

080004c4 <__aeabi_i2d>:
 80004c4:	f090 0f00 	teq	r0, #0
 80004c8:	bf04      	itt	eq
 80004ca:	2100      	moveq	r1, #0
 80004cc:	4770      	bxeq	lr
 80004ce:	b530      	push	{r4, r5, lr}
 80004d0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004d4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004d8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004dc:	bf48      	it	mi
 80004de:	4240      	negmi	r0, r0
 80004e0:	f04f 0100 	mov.w	r1, #0
 80004e4:	e73e      	b.n	8000364 <__adddf3+0x138>
 80004e6:	bf00      	nop

080004e8 <__aeabi_f2d>:
 80004e8:	0042      	lsls	r2, r0, #1
 80004ea:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004ee:	ea4f 0131 	mov.w	r1, r1, rrx
 80004f2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004f6:	bf1f      	itttt	ne
 80004f8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004fc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000500:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000504:	4770      	bxne	lr
 8000506:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800050a:	bf08      	it	eq
 800050c:	4770      	bxeq	lr
 800050e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000512:	bf04      	itt	eq
 8000514:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000518:	4770      	bxeq	lr
 800051a:	b530      	push	{r4, r5, lr}
 800051c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000520:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000524:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000528:	e71c      	b.n	8000364 <__adddf3+0x138>
 800052a:	bf00      	nop

0800052c <__aeabi_ul2d>:
 800052c:	ea50 0201 	orrs.w	r2, r0, r1
 8000530:	bf08      	it	eq
 8000532:	4770      	bxeq	lr
 8000534:	b530      	push	{r4, r5, lr}
 8000536:	f04f 0500 	mov.w	r5, #0
 800053a:	e00a      	b.n	8000552 <__aeabi_l2d+0x16>

0800053c <__aeabi_l2d>:
 800053c:	ea50 0201 	orrs.w	r2, r0, r1
 8000540:	bf08      	it	eq
 8000542:	4770      	bxeq	lr
 8000544:	b530      	push	{r4, r5, lr}
 8000546:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800054a:	d502      	bpl.n	8000552 <__aeabi_l2d+0x16>
 800054c:	4240      	negs	r0, r0
 800054e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000552:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000556:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800055a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800055e:	f43f aed8 	beq.w	8000312 <__adddf3+0xe6>
 8000562:	f04f 0203 	mov.w	r2, #3
 8000566:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800056a:	bf18      	it	ne
 800056c:	3203      	addne	r2, #3
 800056e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000572:	bf18      	it	ne
 8000574:	3203      	addne	r2, #3
 8000576:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800057a:	f1c2 0320 	rsb	r3, r2, #32
 800057e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000582:	fa20 f002 	lsr.w	r0, r0, r2
 8000586:	fa01 fe03 	lsl.w	lr, r1, r3
 800058a:	ea40 000e 	orr.w	r0, r0, lr
 800058e:	fa21 f102 	lsr.w	r1, r1, r2
 8000592:	4414      	add	r4, r2
 8000594:	e6bd      	b.n	8000312 <__adddf3+0xe6>
 8000596:	bf00      	nop

08000598 <__aeabi_dmul>:
 8000598:	b570      	push	{r4, r5, r6, lr}
 800059a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800059e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005a2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005a6:	bf1d      	ittte	ne
 80005a8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005ac:	ea94 0f0c 	teqne	r4, ip
 80005b0:	ea95 0f0c 	teqne	r5, ip
 80005b4:	f000 f8de 	bleq	8000774 <__aeabi_dmul+0x1dc>
 80005b8:	442c      	add	r4, r5
 80005ba:	ea81 0603 	eor.w	r6, r1, r3
 80005be:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005c2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005c6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005ca:	bf18      	it	ne
 80005cc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005d0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005d8:	d038      	beq.n	800064c <__aeabi_dmul+0xb4>
 80005da:	fba0 ce02 	umull	ip, lr, r0, r2
 80005de:	f04f 0500 	mov.w	r5, #0
 80005e2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005e6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005ea:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005ee:	f04f 0600 	mov.w	r6, #0
 80005f2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005f6:	f09c 0f00 	teq	ip, #0
 80005fa:	bf18      	it	ne
 80005fc:	f04e 0e01 	orrne.w	lr, lr, #1
 8000600:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000604:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000608:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800060c:	d204      	bcs.n	8000618 <__aeabi_dmul+0x80>
 800060e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000612:	416d      	adcs	r5, r5
 8000614:	eb46 0606 	adc.w	r6, r6, r6
 8000618:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800061c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000620:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000624:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000628:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800062c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000630:	bf88      	it	hi
 8000632:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000636:	d81e      	bhi.n	8000676 <__aeabi_dmul+0xde>
 8000638:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800063c:	bf08      	it	eq
 800063e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000642:	f150 0000 	adcs.w	r0, r0, #0
 8000646:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800064a:	bd70      	pop	{r4, r5, r6, pc}
 800064c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000650:	ea46 0101 	orr.w	r1, r6, r1
 8000654:	ea40 0002 	orr.w	r0, r0, r2
 8000658:	ea81 0103 	eor.w	r1, r1, r3
 800065c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000660:	bfc2      	ittt	gt
 8000662:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000666:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800066a:	bd70      	popgt	{r4, r5, r6, pc}
 800066c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000670:	f04f 0e00 	mov.w	lr, #0
 8000674:	3c01      	subs	r4, #1
 8000676:	f300 80ab 	bgt.w	80007d0 <__aeabi_dmul+0x238>
 800067a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800067e:	bfde      	ittt	le
 8000680:	2000      	movle	r0, #0
 8000682:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000686:	bd70      	pople	{r4, r5, r6, pc}
 8000688:	f1c4 0400 	rsb	r4, r4, #0
 800068c:	3c20      	subs	r4, #32
 800068e:	da35      	bge.n	80006fc <__aeabi_dmul+0x164>
 8000690:	340c      	adds	r4, #12
 8000692:	dc1b      	bgt.n	80006cc <__aeabi_dmul+0x134>
 8000694:	f104 0414 	add.w	r4, r4, #20
 8000698:	f1c4 0520 	rsb	r5, r4, #32
 800069c:	fa00 f305 	lsl.w	r3, r0, r5
 80006a0:	fa20 f004 	lsr.w	r0, r0, r4
 80006a4:	fa01 f205 	lsl.w	r2, r1, r5
 80006a8:	ea40 0002 	orr.w	r0, r0, r2
 80006ac:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006b0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006b4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006b8:	fa21 f604 	lsr.w	r6, r1, r4
 80006bc:	eb42 0106 	adc.w	r1, r2, r6
 80006c0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006c4:	bf08      	it	eq
 80006c6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f1c4 040c 	rsb	r4, r4, #12
 80006d0:	f1c4 0520 	rsb	r5, r4, #32
 80006d4:	fa00 f304 	lsl.w	r3, r0, r4
 80006d8:	fa20 f005 	lsr.w	r0, r0, r5
 80006dc:	fa01 f204 	lsl.w	r2, r1, r4
 80006e0:	ea40 0002 	orr.w	r0, r0, r2
 80006e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006e8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006ec:	f141 0100 	adc.w	r1, r1, #0
 80006f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006f4:	bf08      	it	eq
 80006f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006fa:	bd70      	pop	{r4, r5, r6, pc}
 80006fc:	f1c4 0520 	rsb	r5, r4, #32
 8000700:	fa00 f205 	lsl.w	r2, r0, r5
 8000704:	ea4e 0e02 	orr.w	lr, lr, r2
 8000708:	fa20 f304 	lsr.w	r3, r0, r4
 800070c:	fa01 f205 	lsl.w	r2, r1, r5
 8000710:	ea43 0302 	orr.w	r3, r3, r2
 8000714:	fa21 f004 	lsr.w	r0, r1, r4
 8000718:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800071c:	fa21 f204 	lsr.w	r2, r1, r4
 8000720:	ea20 0002 	bic.w	r0, r0, r2
 8000724:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000728:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800072c:	bf08      	it	eq
 800072e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000732:	bd70      	pop	{r4, r5, r6, pc}
 8000734:	f094 0f00 	teq	r4, #0
 8000738:	d10f      	bne.n	800075a <__aeabi_dmul+0x1c2>
 800073a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800073e:	0040      	lsls	r0, r0, #1
 8000740:	eb41 0101 	adc.w	r1, r1, r1
 8000744:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000748:	bf08      	it	eq
 800074a:	3c01      	subeq	r4, #1
 800074c:	d0f7      	beq.n	800073e <__aeabi_dmul+0x1a6>
 800074e:	ea41 0106 	orr.w	r1, r1, r6
 8000752:	f095 0f00 	teq	r5, #0
 8000756:	bf18      	it	ne
 8000758:	4770      	bxne	lr
 800075a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800075e:	0052      	lsls	r2, r2, #1
 8000760:	eb43 0303 	adc.w	r3, r3, r3
 8000764:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000768:	bf08      	it	eq
 800076a:	3d01      	subeq	r5, #1
 800076c:	d0f7      	beq.n	800075e <__aeabi_dmul+0x1c6>
 800076e:	ea43 0306 	orr.w	r3, r3, r6
 8000772:	4770      	bx	lr
 8000774:	ea94 0f0c 	teq	r4, ip
 8000778:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800077c:	bf18      	it	ne
 800077e:	ea95 0f0c 	teqne	r5, ip
 8000782:	d00c      	beq.n	800079e <__aeabi_dmul+0x206>
 8000784:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000788:	bf18      	it	ne
 800078a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800078e:	d1d1      	bne.n	8000734 <__aeabi_dmul+0x19c>
 8000790:	ea81 0103 	eor.w	r1, r1, r3
 8000794:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000798:	f04f 0000 	mov.w	r0, #0
 800079c:	bd70      	pop	{r4, r5, r6, pc}
 800079e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007a2:	bf06      	itte	eq
 80007a4:	4610      	moveq	r0, r2
 80007a6:	4619      	moveq	r1, r3
 80007a8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ac:	d019      	beq.n	80007e2 <__aeabi_dmul+0x24a>
 80007ae:	ea94 0f0c 	teq	r4, ip
 80007b2:	d102      	bne.n	80007ba <__aeabi_dmul+0x222>
 80007b4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007b8:	d113      	bne.n	80007e2 <__aeabi_dmul+0x24a>
 80007ba:	ea95 0f0c 	teq	r5, ip
 80007be:	d105      	bne.n	80007cc <__aeabi_dmul+0x234>
 80007c0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007c4:	bf1c      	itt	ne
 80007c6:	4610      	movne	r0, r2
 80007c8:	4619      	movne	r1, r3
 80007ca:	d10a      	bne.n	80007e2 <__aeabi_dmul+0x24a>
 80007cc:	ea81 0103 	eor.w	r1, r1, r3
 80007d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007d4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007d8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007dc:	f04f 0000 	mov.w	r0, #0
 80007e0:	bd70      	pop	{r4, r5, r6, pc}
 80007e2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007e6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007ea:	bd70      	pop	{r4, r5, r6, pc}

080007ec <__aeabi_ddiv>:
 80007ec:	b570      	push	{r4, r5, r6, lr}
 80007ee:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007f2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007f6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007fa:	bf1d      	ittte	ne
 80007fc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000800:	ea94 0f0c 	teqne	r4, ip
 8000804:	ea95 0f0c 	teqne	r5, ip
 8000808:	f000 f8a7 	bleq	800095a <__aeabi_ddiv+0x16e>
 800080c:	eba4 0405 	sub.w	r4, r4, r5
 8000810:	ea81 0e03 	eor.w	lr, r1, r3
 8000814:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000818:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800081c:	f000 8088 	beq.w	8000930 <__aeabi_ddiv+0x144>
 8000820:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000824:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000828:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800082c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000830:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000834:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000838:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800083c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000840:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000844:	429d      	cmp	r5, r3
 8000846:	bf08      	it	eq
 8000848:	4296      	cmpeq	r6, r2
 800084a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800084e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000852:	d202      	bcs.n	800085a <__aeabi_ddiv+0x6e>
 8000854:	085b      	lsrs	r3, r3, #1
 8000856:	ea4f 0232 	mov.w	r2, r2, rrx
 800085a:	1ab6      	subs	r6, r6, r2
 800085c:	eb65 0503 	sbc.w	r5, r5, r3
 8000860:	085b      	lsrs	r3, r3, #1
 8000862:	ea4f 0232 	mov.w	r2, r2, rrx
 8000866:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800086a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000880:	085b      	lsrs	r3, r3, #1
 8000882:	ea4f 0232 	mov.w	r2, r2, rrx
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008b0:	085b      	lsrs	r3, r3, #1
 80008b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008be:	bf22      	ittt	cs
 80008c0:	1ab6      	subcs	r6, r6, r2
 80008c2:	4675      	movcs	r5, lr
 80008c4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008c8:	ea55 0e06 	orrs.w	lr, r5, r6
 80008cc:	d018      	beq.n	8000900 <__aeabi_ddiv+0x114>
 80008ce:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008d2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008d6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008da:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008de:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008e2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008e6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008ea:	d1c0      	bne.n	800086e <__aeabi_ddiv+0x82>
 80008ec:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008f0:	d10b      	bne.n	800090a <__aeabi_ddiv+0x11e>
 80008f2:	ea41 0100 	orr.w	r1, r1, r0
 80008f6:	f04f 0000 	mov.w	r0, #0
 80008fa:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008fe:	e7b6      	b.n	800086e <__aeabi_ddiv+0x82>
 8000900:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000904:	bf04      	itt	eq
 8000906:	4301      	orreq	r1, r0
 8000908:	2000      	moveq	r0, #0
 800090a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800090e:	bf88      	it	hi
 8000910:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000914:	f63f aeaf 	bhi.w	8000676 <__aeabi_dmul+0xde>
 8000918:	ebb5 0c03 	subs.w	ip, r5, r3
 800091c:	bf04      	itt	eq
 800091e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000922:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000926:	f150 0000 	adcs.w	r0, r0, #0
 800092a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800092e:	bd70      	pop	{r4, r5, r6, pc}
 8000930:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000934:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000938:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800093c:	bfc2      	ittt	gt
 800093e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000942:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000946:	bd70      	popgt	{r4, r5, r6, pc}
 8000948:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800094c:	f04f 0e00 	mov.w	lr, #0
 8000950:	3c01      	subs	r4, #1
 8000952:	e690      	b.n	8000676 <__aeabi_dmul+0xde>
 8000954:	ea45 0e06 	orr.w	lr, r5, r6
 8000958:	e68d      	b.n	8000676 <__aeabi_dmul+0xde>
 800095a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800095e:	ea94 0f0c 	teq	r4, ip
 8000962:	bf08      	it	eq
 8000964:	ea95 0f0c 	teqeq	r5, ip
 8000968:	f43f af3b 	beq.w	80007e2 <__aeabi_dmul+0x24a>
 800096c:	ea94 0f0c 	teq	r4, ip
 8000970:	d10a      	bne.n	8000988 <__aeabi_ddiv+0x19c>
 8000972:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000976:	f47f af34 	bne.w	80007e2 <__aeabi_dmul+0x24a>
 800097a:	ea95 0f0c 	teq	r5, ip
 800097e:	f47f af25 	bne.w	80007cc <__aeabi_dmul+0x234>
 8000982:	4610      	mov	r0, r2
 8000984:	4619      	mov	r1, r3
 8000986:	e72c      	b.n	80007e2 <__aeabi_dmul+0x24a>
 8000988:	ea95 0f0c 	teq	r5, ip
 800098c:	d106      	bne.n	800099c <__aeabi_ddiv+0x1b0>
 800098e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000992:	f43f aefd 	beq.w	8000790 <__aeabi_dmul+0x1f8>
 8000996:	4610      	mov	r0, r2
 8000998:	4619      	mov	r1, r3
 800099a:	e722      	b.n	80007e2 <__aeabi_dmul+0x24a>
 800099c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009a0:	bf18      	it	ne
 80009a2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009a6:	f47f aec5 	bne.w	8000734 <__aeabi_dmul+0x19c>
 80009aa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009ae:	f47f af0d 	bne.w	80007cc <__aeabi_dmul+0x234>
 80009b2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009b6:	f47f aeeb 	bne.w	8000790 <__aeabi_dmul+0x1f8>
 80009ba:	e712      	b.n	80007e2 <__aeabi_dmul+0x24a>

080009bc <__gedf2>:
 80009bc:	f04f 3cff 	mov.w	ip, #4294967295
 80009c0:	e006      	b.n	80009d0 <__cmpdf2+0x4>
 80009c2:	bf00      	nop

080009c4 <__ledf2>:
 80009c4:	f04f 0c01 	mov.w	ip, #1
 80009c8:	e002      	b.n	80009d0 <__cmpdf2+0x4>
 80009ca:	bf00      	nop

080009cc <__cmpdf2>:
 80009cc:	f04f 0c01 	mov.w	ip, #1
 80009d0:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009d4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009d8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009dc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009e0:	bf18      	it	ne
 80009e2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009e6:	d01b      	beq.n	8000a20 <__cmpdf2+0x54>
 80009e8:	b001      	add	sp, #4
 80009ea:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009ee:	bf0c      	ite	eq
 80009f0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009f4:	ea91 0f03 	teqne	r1, r3
 80009f8:	bf02      	ittt	eq
 80009fa:	ea90 0f02 	teqeq	r0, r2
 80009fe:	2000      	moveq	r0, #0
 8000a00:	4770      	bxeq	lr
 8000a02:	f110 0f00 	cmn.w	r0, #0
 8000a06:	ea91 0f03 	teq	r1, r3
 8000a0a:	bf58      	it	pl
 8000a0c:	4299      	cmppl	r1, r3
 8000a0e:	bf08      	it	eq
 8000a10:	4290      	cmpeq	r0, r2
 8000a12:	bf2c      	ite	cs
 8000a14:	17d8      	asrcs	r0, r3, #31
 8000a16:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a1a:	f040 0001 	orr.w	r0, r0, #1
 8000a1e:	4770      	bx	lr
 8000a20:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a24:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a28:	d102      	bne.n	8000a30 <__cmpdf2+0x64>
 8000a2a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a2e:	d107      	bne.n	8000a40 <__cmpdf2+0x74>
 8000a30:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a38:	d1d6      	bne.n	80009e8 <__cmpdf2+0x1c>
 8000a3a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a3e:	d0d3      	beq.n	80009e8 <__cmpdf2+0x1c>
 8000a40:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a44:	4770      	bx	lr
 8000a46:	bf00      	nop

08000a48 <__aeabi_cdrcmple>:
 8000a48:	4684      	mov	ip, r0
 8000a4a:	4610      	mov	r0, r2
 8000a4c:	4662      	mov	r2, ip
 8000a4e:	468c      	mov	ip, r1
 8000a50:	4619      	mov	r1, r3
 8000a52:	4663      	mov	r3, ip
 8000a54:	e000      	b.n	8000a58 <__aeabi_cdcmpeq>
 8000a56:	bf00      	nop

08000a58 <__aeabi_cdcmpeq>:
 8000a58:	b501      	push	{r0, lr}
 8000a5a:	f7ff ffb7 	bl	80009cc <__cmpdf2>
 8000a5e:	2800      	cmp	r0, #0
 8000a60:	bf48      	it	mi
 8000a62:	f110 0f00 	cmnmi.w	r0, #0
 8000a66:	bd01      	pop	{r0, pc}

08000a68 <__aeabi_dcmpeq>:
 8000a68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a6c:	f7ff fff4 	bl	8000a58 <__aeabi_cdcmpeq>
 8000a70:	bf0c      	ite	eq
 8000a72:	2001      	moveq	r0, #1
 8000a74:	2000      	movne	r0, #0
 8000a76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a7a:	bf00      	nop

08000a7c <__aeabi_dcmplt>:
 8000a7c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a80:	f7ff ffea 	bl	8000a58 <__aeabi_cdcmpeq>
 8000a84:	bf34      	ite	cc
 8000a86:	2001      	movcc	r0, #1
 8000a88:	2000      	movcs	r0, #0
 8000a8a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8e:	bf00      	nop

08000a90 <__aeabi_dcmple>:
 8000a90:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a94:	f7ff ffe0 	bl	8000a58 <__aeabi_cdcmpeq>
 8000a98:	bf94      	ite	ls
 8000a9a:	2001      	movls	r0, #1
 8000a9c:	2000      	movhi	r0, #0
 8000a9e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aa2:	bf00      	nop

08000aa4 <__aeabi_dcmpge>:
 8000aa4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa8:	f7ff ffce 	bl	8000a48 <__aeabi_cdrcmple>
 8000aac:	bf94      	ite	ls
 8000aae:	2001      	movls	r0, #1
 8000ab0:	2000      	movhi	r0, #0
 8000ab2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_dcmpgt>:
 8000ab8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000abc:	f7ff ffc4 	bl	8000a48 <__aeabi_cdrcmple>
 8000ac0:	bf34      	ite	cc
 8000ac2:	2001      	movcc	r0, #1
 8000ac4:	2000      	movcs	r0, #0
 8000ac6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aca:	bf00      	nop

08000acc <__aeabi_d2iz>:
 8000acc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ad0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ad4:	d215      	bcs.n	8000b02 <__aeabi_d2iz+0x36>
 8000ad6:	d511      	bpl.n	8000afc <__aeabi_d2iz+0x30>
 8000ad8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000adc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ae0:	d912      	bls.n	8000b08 <__aeabi_d2iz+0x3c>
 8000ae2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ae6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aea:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aee:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000af2:	fa23 f002 	lsr.w	r0, r3, r2
 8000af6:	bf18      	it	ne
 8000af8:	4240      	negne	r0, r0
 8000afa:	4770      	bx	lr
 8000afc:	f04f 0000 	mov.w	r0, #0
 8000b00:	4770      	bx	lr
 8000b02:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b06:	d105      	bne.n	8000b14 <__aeabi_d2iz+0x48>
 8000b08:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b0c:	bf08      	it	eq
 8000b0e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b12:	4770      	bx	lr
 8000b14:	f04f 0000 	mov.w	r0, #0
 8000b18:	4770      	bx	lr
 8000b1a:	bf00      	nop

08000b1c <__aeabi_uldivmod>:
 8000b1c:	b953      	cbnz	r3, 8000b34 <__aeabi_uldivmod+0x18>
 8000b1e:	b94a      	cbnz	r2, 8000b34 <__aeabi_uldivmod+0x18>
 8000b20:	2900      	cmp	r1, #0
 8000b22:	bf08      	it	eq
 8000b24:	2800      	cmpeq	r0, #0
 8000b26:	bf1c      	itt	ne
 8000b28:	f04f 31ff 	movne.w	r1, #4294967295
 8000b2c:	f04f 30ff 	movne.w	r0, #4294967295
 8000b30:	f000 b970 	b.w	8000e14 <__aeabi_idiv0>
 8000b34:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b38:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b3c:	f000 f806 	bl	8000b4c <__udivmoddi4>
 8000b40:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b44:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b48:	b004      	add	sp, #16
 8000b4a:	4770      	bx	lr

08000b4c <__udivmoddi4>:
 8000b4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b50:	9e08      	ldr	r6, [sp, #32]
 8000b52:	460d      	mov	r5, r1
 8000b54:	4604      	mov	r4, r0
 8000b56:	460f      	mov	r7, r1
 8000b58:	2b00      	cmp	r3, #0
 8000b5a:	d14a      	bne.n	8000bf2 <__udivmoddi4+0xa6>
 8000b5c:	428a      	cmp	r2, r1
 8000b5e:	4694      	mov	ip, r2
 8000b60:	d965      	bls.n	8000c2e <__udivmoddi4+0xe2>
 8000b62:	fab2 f382 	clz	r3, r2
 8000b66:	b143      	cbz	r3, 8000b7a <__udivmoddi4+0x2e>
 8000b68:	fa02 fc03 	lsl.w	ip, r2, r3
 8000b6c:	f1c3 0220 	rsb	r2, r3, #32
 8000b70:	409f      	lsls	r7, r3
 8000b72:	fa20 f202 	lsr.w	r2, r0, r2
 8000b76:	4317      	orrs	r7, r2
 8000b78:	409c      	lsls	r4, r3
 8000b7a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000b7e:	fa1f f58c 	uxth.w	r5, ip
 8000b82:	fbb7 f1fe 	udiv	r1, r7, lr
 8000b86:	0c22      	lsrs	r2, r4, #16
 8000b88:	fb0e 7711 	mls	r7, lr, r1, r7
 8000b8c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000b90:	fb01 f005 	mul.w	r0, r1, r5
 8000b94:	4290      	cmp	r0, r2
 8000b96:	d90a      	bls.n	8000bae <__udivmoddi4+0x62>
 8000b98:	eb1c 0202 	adds.w	r2, ip, r2
 8000b9c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000ba0:	f080 811c 	bcs.w	8000ddc <__udivmoddi4+0x290>
 8000ba4:	4290      	cmp	r0, r2
 8000ba6:	f240 8119 	bls.w	8000ddc <__udivmoddi4+0x290>
 8000baa:	3902      	subs	r1, #2
 8000bac:	4462      	add	r2, ip
 8000bae:	1a12      	subs	r2, r2, r0
 8000bb0:	b2a4      	uxth	r4, r4
 8000bb2:	fbb2 f0fe 	udiv	r0, r2, lr
 8000bb6:	fb0e 2210 	mls	r2, lr, r0, r2
 8000bba:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000bbe:	fb00 f505 	mul.w	r5, r0, r5
 8000bc2:	42a5      	cmp	r5, r4
 8000bc4:	d90a      	bls.n	8000bdc <__udivmoddi4+0x90>
 8000bc6:	eb1c 0404 	adds.w	r4, ip, r4
 8000bca:	f100 32ff 	add.w	r2, r0, #4294967295
 8000bce:	f080 8107 	bcs.w	8000de0 <__udivmoddi4+0x294>
 8000bd2:	42a5      	cmp	r5, r4
 8000bd4:	f240 8104 	bls.w	8000de0 <__udivmoddi4+0x294>
 8000bd8:	4464      	add	r4, ip
 8000bda:	3802      	subs	r0, #2
 8000bdc:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000be0:	1b64      	subs	r4, r4, r5
 8000be2:	2100      	movs	r1, #0
 8000be4:	b11e      	cbz	r6, 8000bee <__udivmoddi4+0xa2>
 8000be6:	40dc      	lsrs	r4, r3
 8000be8:	2300      	movs	r3, #0
 8000bea:	e9c6 4300 	strd	r4, r3, [r6]
 8000bee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bf2:	428b      	cmp	r3, r1
 8000bf4:	d908      	bls.n	8000c08 <__udivmoddi4+0xbc>
 8000bf6:	2e00      	cmp	r6, #0
 8000bf8:	f000 80ed 	beq.w	8000dd6 <__udivmoddi4+0x28a>
 8000bfc:	2100      	movs	r1, #0
 8000bfe:	e9c6 0500 	strd	r0, r5, [r6]
 8000c02:	4608      	mov	r0, r1
 8000c04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c08:	fab3 f183 	clz	r1, r3
 8000c0c:	2900      	cmp	r1, #0
 8000c0e:	d149      	bne.n	8000ca4 <__udivmoddi4+0x158>
 8000c10:	42ab      	cmp	r3, r5
 8000c12:	d302      	bcc.n	8000c1a <__udivmoddi4+0xce>
 8000c14:	4282      	cmp	r2, r0
 8000c16:	f200 80f8 	bhi.w	8000e0a <__udivmoddi4+0x2be>
 8000c1a:	1a84      	subs	r4, r0, r2
 8000c1c:	eb65 0203 	sbc.w	r2, r5, r3
 8000c20:	2001      	movs	r0, #1
 8000c22:	4617      	mov	r7, r2
 8000c24:	2e00      	cmp	r6, #0
 8000c26:	d0e2      	beq.n	8000bee <__udivmoddi4+0xa2>
 8000c28:	e9c6 4700 	strd	r4, r7, [r6]
 8000c2c:	e7df      	b.n	8000bee <__udivmoddi4+0xa2>
 8000c2e:	b902      	cbnz	r2, 8000c32 <__udivmoddi4+0xe6>
 8000c30:	deff      	udf	#255	; 0xff
 8000c32:	fab2 f382 	clz	r3, r2
 8000c36:	2b00      	cmp	r3, #0
 8000c38:	f040 8090 	bne.w	8000d5c <__udivmoddi4+0x210>
 8000c3c:	1a8a      	subs	r2, r1, r2
 8000c3e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c42:	fa1f fe8c 	uxth.w	lr, ip
 8000c46:	2101      	movs	r1, #1
 8000c48:	fbb2 f5f7 	udiv	r5, r2, r7
 8000c4c:	fb07 2015 	mls	r0, r7, r5, r2
 8000c50:	0c22      	lsrs	r2, r4, #16
 8000c52:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000c56:	fb0e f005 	mul.w	r0, lr, r5
 8000c5a:	4290      	cmp	r0, r2
 8000c5c:	d908      	bls.n	8000c70 <__udivmoddi4+0x124>
 8000c5e:	eb1c 0202 	adds.w	r2, ip, r2
 8000c62:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c66:	d202      	bcs.n	8000c6e <__udivmoddi4+0x122>
 8000c68:	4290      	cmp	r0, r2
 8000c6a:	f200 80cb 	bhi.w	8000e04 <__udivmoddi4+0x2b8>
 8000c6e:	4645      	mov	r5, r8
 8000c70:	1a12      	subs	r2, r2, r0
 8000c72:	b2a4      	uxth	r4, r4
 8000c74:	fbb2 f0f7 	udiv	r0, r2, r7
 8000c78:	fb07 2210 	mls	r2, r7, r0, r2
 8000c7c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000c80:	fb0e fe00 	mul.w	lr, lr, r0
 8000c84:	45a6      	cmp	lr, r4
 8000c86:	d908      	bls.n	8000c9a <__udivmoddi4+0x14e>
 8000c88:	eb1c 0404 	adds.w	r4, ip, r4
 8000c8c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000c90:	d202      	bcs.n	8000c98 <__udivmoddi4+0x14c>
 8000c92:	45a6      	cmp	lr, r4
 8000c94:	f200 80bb 	bhi.w	8000e0e <__udivmoddi4+0x2c2>
 8000c98:	4610      	mov	r0, r2
 8000c9a:	eba4 040e 	sub.w	r4, r4, lr
 8000c9e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000ca2:	e79f      	b.n	8000be4 <__udivmoddi4+0x98>
 8000ca4:	f1c1 0720 	rsb	r7, r1, #32
 8000ca8:	408b      	lsls	r3, r1
 8000caa:	fa22 fc07 	lsr.w	ip, r2, r7
 8000cae:	ea4c 0c03 	orr.w	ip, ip, r3
 8000cb2:	fa05 f401 	lsl.w	r4, r5, r1
 8000cb6:	fa20 f307 	lsr.w	r3, r0, r7
 8000cba:	40fd      	lsrs	r5, r7
 8000cbc:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000cc0:	4323      	orrs	r3, r4
 8000cc2:	fbb5 f8f9 	udiv	r8, r5, r9
 8000cc6:	fa1f fe8c 	uxth.w	lr, ip
 8000cca:	fb09 5518 	mls	r5, r9, r8, r5
 8000cce:	0c1c      	lsrs	r4, r3, #16
 8000cd0:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000cd4:	fb08 f50e 	mul.w	r5, r8, lr
 8000cd8:	42a5      	cmp	r5, r4
 8000cda:	fa02 f201 	lsl.w	r2, r2, r1
 8000cde:	fa00 f001 	lsl.w	r0, r0, r1
 8000ce2:	d90b      	bls.n	8000cfc <__udivmoddi4+0x1b0>
 8000ce4:	eb1c 0404 	adds.w	r4, ip, r4
 8000ce8:	f108 3aff 	add.w	sl, r8, #4294967295
 8000cec:	f080 8088 	bcs.w	8000e00 <__udivmoddi4+0x2b4>
 8000cf0:	42a5      	cmp	r5, r4
 8000cf2:	f240 8085 	bls.w	8000e00 <__udivmoddi4+0x2b4>
 8000cf6:	f1a8 0802 	sub.w	r8, r8, #2
 8000cfa:	4464      	add	r4, ip
 8000cfc:	1b64      	subs	r4, r4, r5
 8000cfe:	b29d      	uxth	r5, r3
 8000d00:	fbb4 f3f9 	udiv	r3, r4, r9
 8000d04:	fb09 4413 	mls	r4, r9, r3, r4
 8000d08:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000d0c:	fb03 fe0e 	mul.w	lr, r3, lr
 8000d10:	45a6      	cmp	lr, r4
 8000d12:	d908      	bls.n	8000d26 <__udivmoddi4+0x1da>
 8000d14:	eb1c 0404 	adds.w	r4, ip, r4
 8000d18:	f103 35ff 	add.w	r5, r3, #4294967295
 8000d1c:	d26c      	bcs.n	8000df8 <__udivmoddi4+0x2ac>
 8000d1e:	45a6      	cmp	lr, r4
 8000d20:	d96a      	bls.n	8000df8 <__udivmoddi4+0x2ac>
 8000d22:	3b02      	subs	r3, #2
 8000d24:	4464      	add	r4, ip
 8000d26:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d2a:	fba3 9502 	umull	r9, r5, r3, r2
 8000d2e:	eba4 040e 	sub.w	r4, r4, lr
 8000d32:	42ac      	cmp	r4, r5
 8000d34:	46c8      	mov	r8, r9
 8000d36:	46ae      	mov	lr, r5
 8000d38:	d356      	bcc.n	8000de8 <__udivmoddi4+0x29c>
 8000d3a:	d053      	beq.n	8000de4 <__udivmoddi4+0x298>
 8000d3c:	b156      	cbz	r6, 8000d54 <__udivmoddi4+0x208>
 8000d3e:	ebb0 0208 	subs.w	r2, r0, r8
 8000d42:	eb64 040e 	sbc.w	r4, r4, lr
 8000d46:	fa04 f707 	lsl.w	r7, r4, r7
 8000d4a:	40ca      	lsrs	r2, r1
 8000d4c:	40cc      	lsrs	r4, r1
 8000d4e:	4317      	orrs	r7, r2
 8000d50:	e9c6 7400 	strd	r7, r4, [r6]
 8000d54:	4618      	mov	r0, r3
 8000d56:	2100      	movs	r1, #0
 8000d58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d5c:	f1c3 0120 	rsb	r1, r3, #32
 8000d60:	fa02 fc03 	lsl.w	ip, r2, r3
 8000d64:	fa20 f201 	lsr.w	r2, r0, r1
 8000d68:	fa25 f101 	lsr.w	r1, r5, r1
 8000d6c:	409d      	lsls	r5, r3
 8000d6e:	432a      	orrs	r2, r5
 8000d70:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d74:	fa1f fe8c 	uxth.w	lr, ip
 8000d78:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d7c:	fb07 1510 	mls	r5, r7, r0, r1
 8000d80:	0c11      	lsrs	r1, r2, #16
 8000d82:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000d86:	fb00 f50e 	mul.w	r5, r0, lr
 8000d8a:	428d      	cmp	r5, r1
 8000d8c:	fa04 f403 	lsl.w	r4, r4, r3
 8000d90:	d908      	bls.n	8000da4 <__udivmoddi4+0x258>
 8000d92:	eb1c 0101 	adds.w	r1, ip, r1
 8000d96:	f100 38ff 	add.w	r8, r0, #4294967295
 8000d9a:	d22f      	bcs.n	8000dfc <__udivmoddi4+0x2b0>
 8000d9c:	428d      	cmp	r5, r1
 8000d9e:	d92d      	bls.n	8000dfc <__udivmoddi4+0x2b0>
 8000da0:	3802      	subs	r0, #2
 8000da2:	4461      	add	r1, ip
 8000da4:	1b49      	subs	r1, r1, r5
 8000da6:	b292      	uxth	r2, r2
 8000da8:	fbb1 f5f7 	udiv	r5, r1, r7
 8000dac:	fb07 1115 	mls	r1, r7, r5, r1
 8000db0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000db4:	fb05 f10e 	mul.w	r1, r5, lr
 8000db8:	4291      	cmp	r1, r2
 8000dba:	d908      	bls.n	8000dce <__udivmoddi4+0x282>
 8000dbc:	eb1c 0202 	adds.w	r2, ip, r2
 8000dc0:	f105 38ff 	add.w	r8, r5, #4294967295
 8000dc4:	d216      	bcs.n	8000df4 <__udivmoddi4+0x2a8>
 8000dc6:	4291      	cmp	r1, r2
 8000dc8:	d914      	bls.n	8000df4 <__udivmoddi4+0x2a8>
 8000dca:	3d02      	subs	r5, #2
 8000dcc:	4462      	add	r2, ip
 8000dce:	1a52      	subs	r2, r2, r1
 8000dd0:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000dd4:	e738      	b.n	8000c48 <__udivmoddi4+0xfc>
 8000dd6:	4631      	mov	r1, r6
 8000dd8:	4630      	mov	r0, r6
 8000dda:	e708      	b.n	8000bee <__udivmoddi4+0xa2>
 8000ddc:	4639      	mov	r1, r7
 8000dde:	e6e6      	b.n	8000bae <__udivmoddi4+0x62>
 8000de0:	4610      	mov	r0, r2
 8000de2:	e6fb      	b.n	8000bdc <__udivmoddi4+0x90>
 8000de4:	4548      	cmp	r0, r9
 8000de6:	d2a9      	bcs.n	8000d3c <__udivmoddi4+0x1f0>
 8000de8:	ebb9 0802 	subs.w	r8, r9, r2
 8000dec:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000df0:	3b01      	subs	r3, #1
 8000df2:	e7a3      	b.n	8000d3c <__udivmoddi4+0x1f0>
 8000df4:	4645      	mov	r5, r8
 8000df6:	e7ea      	b.n	8000dce <__udivmoddi4+0x282>
 8000df8:	462b      	mov	r3, r5
 8000dfa:	e794      	b.n	8000d26 <__udivmoddi4+0x1da>
 8000dfc:	4640      	mov	r0, r8
 8000dfe:	e7d1      	b.n	8000da4 <__udivmoddi4+0x258>
 8000e00:	46d0      	mov	r8, sl
 8000e02:	e77b      	b.n	8000cfc <__udivmoddi4+0x1b0>
 8000e04:	3d02      	subs	r5, #2
 8000e06:	4462      	add	r2, ip
 8000e08:	e732      	b.n	8000c70 <__udivmoddi4+0x124>
 8000e0a:	4608      	mov	r0, r1
 8000e0c:	e70a      	b.n	8000c24 <__udivmoddi4+0xd8>
 8000e0e:	4464      	add	r4, ip
 8000e10:	3802      	subs	r0, #2
 8000e12:	e742      	b.n	8000c9a <__udivmoddi4+0x14e>

08000e14 <__aeabi_idiv0>:
 8000e14:	4770      	bx	lr
 8000e16:	bf00      	nop

08000e18 <CodecInit>:
 *  Created on: Mar 17, 2024
 *      Author: seppe
 */
#include "CodecDriver.h"

void CodecInit(I2C_HandleTypeDef *hi2c1){
 8000e18:	b580      	push	{r7, lr}
 8000e1a:	b082      	sub	sp, #8
 8000e1c:	af00      	add	r7, sp, #0
 8000e1e:	6078      	str	r0, [r7, #4]

	ResetCodec(hi2c1);
 8000e20:	6878      	ldr	r0, [r7, #4]
 8000e22:	f000 f88c 	bl	8000f3e <ResetCodec>

	HAL_Delay(25);
 8000e26:	2019      	movs	r0, #25
 8000e28:	f001 fbbe 	bl	80025a8 <HAL_Delay>

	//Connect Linput1 to inverting input of left input PGA, 0db gain, connecting Left input PGA to input booster
	//WriteCodecRegister(hi2c1, 0x20, 0b100001000);

	// L out Volume
	WriteCodecRegister(hi2c1, 0x02, 0b101111001);
 8000e2c:	f240 1279 	movw	r2, #377	; 0x179
 8000e30:	2102      	movs	r1, #2
 8000e32:	6878      	ldr	r0, [r7, #4]
 8000e34:	f000 f890 	bl	8000f58 <WriteCodecRegister>

	//un mute left channel, LINVOL = +0DB [5:0]
	WriteCodecRegister(hi2c1, 0x00, 0b100010111);
 8000e38:	f240 1217 	movw	r2, #279	; 0x117
 8000e3c:	2100      	movs	r1, #0
 8000e3e:	6878      	ldr	r0, [r7, #4]
 8000e40:	f000 f88a 	bl	8000f58 <WriteCodecRegister>

	//mute right channel
	WriteCodecRegister(hi2c1, 0x01, 0b100000000);
 8000e44:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000e48:	2101      	movs	r1, #1
 8000e4a:	6878      	ldr	r0, [r7, #4]
 8000e4c:	f000 f884 	bl	8000f58 <WriteCodecRegister>

	//Enable LB2LO
	WriteCodecRegister(hi2c1, 0x2D, 0b001010000);
 8000e50:	2250      	movs	r2, #80	; 0x50
 8000e52:	212d      	movs	r1, #45	; 0x2d
 8000e54:	6878      	ldr	r0, [r7, #4]
 8000e56:	f000 f87f 	bl	8000f58 <WriteCodecRegister>


	// ----- Power Management -----

	// outdated R25 VMIDSEL: 01 = driver enable(playback/record), VREF enable, AINL enable, AINR disabled, ADCL enable, ADCR disable, MICB disable, MCLK enabled
	WriteCodecRegister(hi2c1, 0x19, 0b011111100);
 8000e5a:	22fc      	movs	r2, #252	; 0xfc
 8000e5c:	2119      	movs	r1, #25
 8000e5e:	6878      	ldr	r0, [r7, #4]
 8000e60:	f000 f87a 	bl	8000f58 <WriteCodecRegister>

	//left DAC, LOUT1 buffer SPKL PGA, PLL enabled
	WriteCodecRegister(hi2c1, 0x1A, 0b111010000);
 8000e64:	f44f 72e8 	mov.w	r2, #464	; 0x1d0
 8000e68:	211a      	movs	r1, #26
 8000e6a:	6878      	ldr	r0, [r7, #4]
 8000e6c:	f000 f874 	bl	8000f58 <WriteCodecRegister>

	//left PGA enabled, Left output mixer
	WriteCodecRegister(hi2c1, 0x2F, 0b000111100);
 8000e70:	223c      	movs	r2, #60	; 0x3c
 8000e72:	212f      	movs	r1, #47	; 0x2f
 8000e74:	6878      	ldr	r0, [r7, #4]
 8000e76:	f000 f86f 	bl	8000f58 <WriteCodecRegister>
	//WriteCodecRegister(hi2c1, 0x02, 0b100000000);

	//-----------------------

	// Disable master mode codec, I²S format
	WriteCodecRegister(hi2c1, 0x07, 0b000000010);
 8000e7a:	2202      	movs	r2, #2
 8000e7c:	2107      	movs	r1, #7
 8000e7e:	6878      	ldr	r0, [r7, #4]
 8000e80:	f000 f86a 	bl	8000f58 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x20, 0b100001000);
 8000e84:	f44f 7284 	mov.w	r2, #264	; 0x108
 8000e88:	2120      	movs	r1, #32
 8000e8a:	6878      	ldr	r0, [r7, #4]
 8000e8c:	f000 f864 	bl	8000f58 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x21, 0b000000000);
 8000e90:	2200      	movs	r2, #0
 8000e92:	2121      	movs	r1, #33	; 0x21
 8000e94:	6878      	ldr	r0, [r7, #4]
 8000e96:	f000 f85f 	bl	8000f58 <WriteCodecRegister>

	//WriteCodecRegister(hi2c1, 0x2D, 0b000000000);

	WriteCodecRegister(hi2c1, 0x2E, 0b000000000);
 8000e9a:	2200      	movs	r2, #0
 8000e9c:	212e      	movs	r1, #46	; 0x2e
 8000e9e:	6878      	ldr	r0, [r7, #4]
 8000ea0:	f000 f85a 	bl	8000f58 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x22, 0b101010000);
 8000ea4:	f44f 72a8 	mov.w	r2, #336	; 0x150
 8000ea8:	2122      	movs	r1, #34	; 0x22
 8000eaa:	6878      	ldr	r0, [r7, #4]
 8000eac:	f000 f854 	bl	8000f58 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x25, 0b001010000);
 8000eb0:	2250      	movs	r2, #80	; 0x50
 8000eb2:	2125      	movs	r1, #37	; 0x25
 8000eb4:	6878      	ldr	r0, [r7, #4]
 8000eb6:	f000 f84f 	bl	8000f58 <WriteCodecRegister>

	//Write speaker L volume
	WriteCodecRegister(hi2c1, 0x28, 0b101111001);
 8000eba:	f240 1279 	movw	r2, #377	; 0x179
 8000ebe:	2128      	movs	r1, #40	; 0x28
 8000ec0:	6878      	ldr	r0, [r7, #4]
 8000ec2:	f000 f849 	bl	8000f58 <WriteCodecRegister>
	//Write speaker R volume
	WriteCodecRegister(hi2c1, 0x29, 0b101111001);
 8000ec6:	f240 1279 	movw	r2, #377	; 0x179
 8000eca:	2129      	movs	r1, #41	; 0x29
 8000ecc:	6878      	ldr	r0, [r7, #4]
 8000ece:	f000 f843 	bl	8000f58 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x34, 0b000000000);
 8000ed2:	2200      	movs	r2, #0
 8000ed4:	2134      	movs	r1, #52	; 0x34
 8000ed6:	6878      	ldr	r0, [r7, #4]
 8000ed8:	f000 f83e 	bl	8000f58 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x04, 0b000000000);
 8000edc:	2200      	movs	r2, #0
 8000ede:	2104      	movs	r1, #4
 8000ee0:	6878      	ldr	r0, [r7, #4]
 8000ee2:	f000 f839 	bl	8000f58 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x08, 0b111000000);
 8000ee6:	f44f 72e0 	mov.w	r2, #448	; 0x1c0
 8000eea:	2108      	movs	r1, #8
 8000eec:	6878      	ldr	r0, [r7, #4]
 8000eee:	f000 f833 	bl	8000f58 <WriteCodecRegister>

	// Disabled high pass filter
	WriteCodecRegister(hi2c1, 0x05, 0b000000001);
 8000ef2:	2201      	movs	r2, #1
 8000ef4:	2105      	movs	r1, #5
 8000ef6:	6878      	ldr	r0, [r7, #4]
 8000ef8:	f000 f82e 	bl	8000f58 <WriteCodecRegister>

	WriteCodecRegister(hi2c1, 0x09, 0b000000000);
 8000efc:	2200      	movs	r2, #0
 8000efe:	2109      	movs	r1, #9
 8000f00:	6878      	ldr	r0, [r7, #4]
 8000f02:	f000 f829 	bl	8000f58 <WriteCodecRegister>

	//Writing ADC and DAC volume
	WriteCodecRegister(hi2c1, 0x15, 0b111000011);
 8000f06:	f240 12c3 	movw	r2, #451	; 0x1c3
 8000f0a:	2115      	movs	r1, #21
 8000f0c:	6878      	ldr	r0, [r7, #4]
 8000f0e:	f000 f823 	bl	8000f58 <WriteCodecRegister>
	WriteCodecRegister(hi2c1, 0x16, 0b111000011);
 8000f12:	f240 12c3 	movw	r2, #451	; 0x1c3
 8000f16:	2116      	movs	r1, #22
 8000f18:	6878      	ldr	r0, [r7, #4]
 8000f1a:	f000 f81d 	bl	8000f58 <WriteCodecRegister>

	//Writing ADC and DAC volume
	WriteCodecRegister(hi2c1, 0x0A, 0b111111111);
 8000f1e:	f240 12ff 	movw	r2, #511	; 0x1ff
 8000f22:	210a      	movs	r1, #10
 8000f24:	6878      	ldr	r0, [r7, #4]
 8000f26:	f000 f817 	bl	8000f58 <WriteCodecRegister>
	WriteCodecRegister(hi2c1, 0x0B, 0b111111111);
 8000f2a:	f240 12ff 	movw	r2, #511	; 0x1ff
 8000f2e:	210b      	movs	r1, #11
 8000f30:	6878      	ldr	r0, [r7, #4]
 8000f32:	f000 f811 	bl	8000f58 <WriteCodecRegister>
	buf[0]=0x55;
	HAL_I2C_Master_Transmit(hi2c1, codecAddr, buf, 1 , HAL_MAX_DELAY);

	HAL_I2C_Mem_Write(hi2c1, codecAddr, reg , I2C_MEMADD_SIZE_8BIT, data)
	*/
}
 8000f36:	bf00      	nop
 8000f38:	3708      	adds	r7, #8
 8000f3a:	46bd      	mov	sp, r7
 8000f3c:	bd80      	pop	{r7, pc}

08000f3e <ResetCodec>:


void ResetCodec(I2C_HandleTypeDef *hi2c1){
 8000f3e:	b580      	push	{r7, lr}
 8000f40:	b082      	sub	sp, #8
 8000f42:	af00      	add	r7, sp, #0
 8000f44:	6078      	str	r0, [r7, #4]
	WriteCodecRegister(hi2c1, 0x0F, 0xFF);
 8000f46:	22ff      	movs	r2, #255	; 0xff
 8000f48:	210f      	movs	r1, #15
 8000f4a:	6878      	ldr	r0, [r7, #4]
 8000f4c:	f000 f804 	bl	8000f58 <WriteCodecRegister>
}
 8000f50:	bf00      	nop
 8000f52:	3708      	adds	r7, #8
 8000f54:	46bd      	mov	sp, r7
 8000f56:	bd80      	pop	{r7, pc}

08000f58 <WriteCodecRegister>:

void WriteCodecRegister(I2C_HandleTypeDef *hi2c1, uint8_t reg, uint16_t pData){
 8000f58:	b580      	push	{r7, lr}
 8000f5a:	b088      	sub	sp, #32
 8000f5c:	af04      	add	r7, sp, #16
 8000f5e:	6078      	str	r0, [r7, #4]
 8000f60:	460b      	mov	r3, r1
 8000f62:	70fb      	strb	r3, [r7, #3]
 8000f64:	4613      	mov	r3, r2
 8000f66:	803b      	strh	r3, [r7, #0]
	uint8_t regAddrWDataBit = (uint8_t)(reg << 1) | (pData >> 8);
 8000f68:	78fb      	ldrb	r3, [r7, #3]
 8000f6a:	005b      	lsls	r3, r3, #1
 8000f6c:	b2da      	uxtb	r2, r3
 8000f6e:	883b      	ldrh	r3, [r7, #0]
 8000f70:	0a1b      	lsrs	r3, r3, #8
 8000f72:	b29b      	uxth	r3, r3
 8000f74:	b2db      	uxtb	r3, r3
 8000f76:	4313      	orrs	r3, r2
 8000f78:	73fb      	strb	r3, [r7, #15]
	uint8_t lowByte = (uint8_t)(pData & 0xFF);
 8000f7a:	883b      	ldrh	r3, [r7, #0]
 8000f7c:	b2db      	uxtb	r3, r3
 8000f7e:	73bb      	strb	r3, [r7, #14]
	HAL_I2C_Mem_Write(hi2c1, codecAddr, regAddrWDataBit, I2C_MEMADD_SIZE_8BIT, &lowByte, 1, HAL_MAX_DELAY);
 8000f80:	2334      	movs	r3, #52	; 0x34
 8000f82:	b299      	uxth	r1, r3
 8000f84:	7bfb      	ldrb	r3, [r7, #15]
 8000f86:	b29a      	uxth	r2, r3
 8000f88:	f04f 33ff 	mov.w	r3, #4294967295
 8000f8c:	9302      	str	r3, [sp, #8]
 8000f8e:	2301      	movs	r3, #1
 8000f90:	9301      	str	r3, [sp, #4]
 8000f92:	f107 030e 	add.w	r3, r7, #14
 8000f96:	9300      	str	r3, [sp, #0]
 8000f98:	2301      	movs	r3, #1
 8000f9a:	6878      	ldr	r0, [r7, #4]
 8000f9c:	f002 fa28 	bl	80033f0 <HAL_I2C_Mem_Write>
}
 8000fa0:	bf00      	nop
 8000fa2:	3710      	adds	r7, #16
 8000fa4:	46bd      	mov	sp, r7
 8000fa6:	bd80      	pop	{r7, pc}

08000fa8 <InitDSP>:
// --- Filters ---

Filters* filters;


void InitDSP(uint32_t sampleFrequency, I2S_HandleTypeDef *hi2s1, I2S_HandleTypeDef *hi2s2){
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	b084      	sub	sp, #16
 8000fac:	af00      	add	r7, sp, #0
 8000fae:	60f8      	str	r0, [r7, #12]
 8000fb0:	60b9      	str	r1, [r7, #8]
 8000fb2:	607a      	str	r2, [r7, #4]


	//Init filters
	filters = initializeFilters(sampleFrequency);
 8000fb4:	68f8      	ldr	r0, [r7, #12]
 8000fb6:	f000 f9b1 	bl	800131c <initializeFilters>
 8000fba:	4603      	mov	r3, r0
 8000fbc:	4a07      	ldr	r2, [pc, #28]	; (8000fdc <InitDSP+0x34>)
 8000fbe:	6013      	str	r3, [r2, #0]

	//Init I²S
	HAL_I2S_Transmit_DMA(hi2s1, (uint16_t*)&outputData[0], BUFFER_SIZE);
 8000fc0:	2280      	movs	r2, #128	; 0x80
 8000fc2:	4907      	ldr	r1, [pc, #28]	; (8000fe0 <InitDSP+0x38>)
 8000fc4:	68b8      	ldr	r0, [r7, #8]
 8000fc6:	f002 feeb 	bl	8003da0 <HAL_I2S_Transmit_DMA>
	HAL_I2S_Receive_DMA(hi2s2, (uint16_t*)&inputData[0], BUFFER_SIZE);
 8000fca:	2280      	movs	r2, #128	; 0x80
 8000fcc:	4905      	ldr	r1, [pc, #20]	; (8000fe4 <InitDSP+0x3c>)
 8000fce:	6878      	ldr	r0, [r7, #4]
 8000fd0:	f002 ff8e 	bl	8003ef0 <HAL_I2S_Receive_DMA>

}
 8000fd4:	bf00      	nop
 8000fd6:	3710      	adds	r7, #16
 8000fd8:	46bd      	mov	sp, r7
 8000fda:	bd80      	pop	{r7, pc}
 8000fdc:	200002d0 	.word	0x200002d0
 8000fe0:	200001cc 	.word	0x200001cc
 8000fe4:	200000cc 	.word	0x200000cc

08000fe8 <DSPUpdate>:


void DSPUpdate(){
 8000fe8:	b590      	push	{r4, r7, lr}
 8000fea:	b083      	sub	sp, #12
 8000fec:	af00      	add	r7, sp, #0


	if(dataReadyFlag){
 8000fee:	4b1a      	ldr	r3, [pc, #104]	; (8001058 <DSPUpdate+0x70>)
 8000ff0:	781b      	ldrb	r3, [r3, #0]
 8000ff2:	2b00      	cmp	r3, #0
 8000ff4:	d02b      	beq.n	800104e <DSPUpdate+0x66>

		for(uint8_t i = 0; i < BUFFER_SIZE/2; i++){
 8000ff6:	2300      	movs	r3, #0
 8000ff8:	71fb      	strb	r3, [r7, #7]
 8000ffa:	e022      	b.n	8001042 <DSPUpdate+0x5a>

			// Process left channel
			if(i % 2 == 0){
 8000ffc:	79fb      	ldrb	r3, [r7, #7]
 8000ffe:	f003 0301 	and.w	r3, r3, #1
 8001002:	b2db      	uxtb	r3, r3
 8001004:	2b00      	cmp	r3, #0
 8001006:	d112      	bne.n	800102e <DSPUpdate+0x46>
				*(outputBufPtr+i) = appendSample(filters, *(inputBufPtr+i) );
 8001008:	4b14      	ldr	r3, [pc, #80]	; (800105c <DSPUpdate+0x74>)
 800100a:	6818      	ldr	r0, [r3, #0]
 800100c:	4b14      	ldr	r3, [pc, #80]	; (8001060 <DSPUpdate+0x78>)
 800100e:	681a      	ldr	r2, [r3, #0]
 8001010:	79fb      	ldrb	r3, [r7, #7]
 8001012:	005b      	lsls	r3, r3, #1
 8001014:	4413      	add	r3, r2
 8001016:	881b      	ldrh	r3, [r3, #0]
 8001018:	b219      	sxth	r1, r3
 800101a:	4b12      	ldr	r3, [pc, #72]	; (8001064 <DSPUpdate+0x7c>)
 800101c:	681a      	ldr	r2, [r3, #0]
 800101e:	79fb      	ldrb	r3, [r7, #7]
 8001020:	005b      	lsls	r3, r3, #1
 8001022:	18d4      	adds	r4, r2, r3
 8001024:	f000 f9d4 	bl	80013d0 <appendSample>
 8001028:	4603      	mov	r3, r0
 800102a:	8023      	strh	r3, [r4, #0]
 800102c:	e006      	b.n	800103c <DSPUpdate+0x54>
			}else{
				*(outputBufPtr+i) = (int16_t)(1);
 800102e:	4b0d      	ldr	r3, [pc, #52]	; (8001064 <DSPUpdate+0x7c>)
 8001030:	681a      	ldr	r2, [r3, #0]
 8001032:	79fb      	ldrb	r3, [r7, #7]
 8001034:	005b      	lsls	r3, r3, #1
 8001036:	4413      	add	r3, r2
 8001038:	2201      	movs	r2, #1
 800103a:	801a      	strh	r2, [r3, #0]
		for(uint8_t i = 0; i < BUFFER_SIZE/2; i++){
 800103c:	79fb      	ldrb	r3, [r7, #7]
 800103e:	3301      	adds	r3, #1
 8001040:	71fb      	strb	r3, [r7, #7]
 8001042:	79fb      	ldrb	r3, [r7, #7]
 8001044:	2b3f      	cmp	r3, #63	; 0x3f
 8001046:	d9d9      	bls.n	8000ffc <DSPUpdate+0x14>
			}

		}


		dataReadyFlag = 0;
 8001048:	4b03      	ldr	r3, [pc, #12]	; (8001058 <DSPUpdate+0x70>)
 800104a:	2200      	movs	r2, #0
 800104c:	701a      	strb	r2, [r3, #0]

	}


}
 800104e:	bf00      	nop
 8001050:	370c      	adds	r7, #12
 8001052:	46bd      	mov	sp, r7
 8001054:	bd90      	pop	{r4, r7, pc}
 8001056:	bf00      	nop
 8001058:	200002cc 	.word	0x200002cc
 800105c:	200002d0 	.word	0x200002d0
 8001060:	20000000 	.word	0x20000000
 8001064:	20000004 	.word	0x20000004

08001068 <GetEnabledFilters>:
	}else{
		filters->enabledFilters &= 0 << filterIndex;
	}
}

uint8_t GetEnabledFilters(){
 8001068:	b480      	push	{r7}
 800106a:	af00      	add	r7, sp, #0
	return filters->enabledFilters;
 800106c:	4b03      	ldr	r3, [pc, #12]	; (800107c <GetEnabledFilters+0x14>)
 800106e:	681b      	ldr	r3, [r3, #0]
 8001070:	781b      	ldrb	r3, [r3, #0]
}
 8001072:	4618      	mov	r0, r3
 8001074:	46bd      	mov	sp, r7
 8001076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800107a:	4770      	bx	lr
 800107c:	200002d0 	.word	0x200002d0

08001080 <HAL_I2S_RxHalfCpltCallback>:


void HAL_I2S_RxHalfCpltCallback(I2S_HandleTypeDef *hi2s){
 8001080:	b480      	push	{r7}
 8001082:	b083      	sub	sp, #12
 8001084:	af00      	add	r7, sp, #0
 8001086:	6078      	str	r0, [r7, #4]

	inputBufPtr = &inputData[0];
 8001088:	4b07      	ldr	r3, [pc, #28]	; (80010a8 <HAL_I2S_RxHalfCpltCallback+0x28>)
 800108a:	4a08      	ldr	r2, [pc, #32]	; (80010ac <HAL_I2S_RxHalfCpltCallback+0x2c>)
 800108c:	601a      	str	r2, [r3, #0]
	outputBufPtr = &outputData[0];
 800108e:	4b08      	ldr	r3, [pc, #32]	; (80010b0 <HAL_I2S_RxHalfCpltCallback+0x30>)
 8001090:	4a08      	ldr	r2, [pc, #32]	; (80010b4 <HAL_I2S_RxHalfCpltCallback+0x34>)
 8001092:	601a      	str	r2, [r3, #0]

	dataReadyFlag = 1;
 8001094:	4b08      	ldr	r3, [pc, #32]	; (80010b8 <HAL_I2S_RxHalfCpltCallback+0x38>)
 8001096:	2201      	movs	r2, #1
 8001098:	701a      	strb	r2, [r3, #0]

}
 800109a:	bf00      	nop
 800109c:	370c      	adds	r7, #12
 800109e:	46bd      	mov	sp, r7
 80010a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010a4:	4770      	bx	lr
 80010a6:	bf00      	nop
 80010a8:	20000000 	.word	0x20000000
 80010ac:	200000cc 	.word	0x200000cc
 80010b0:	20000004 	.word	0x20000004
 80010b4:	200001cc 	.word	0x200001cc
 80010b8:	200002cc 	.word	0x200002cc

080010bc <HAL_I2S_RxCpltCallback>:

void HAL_I2S_RxCpltCallback(I2S_HandleTypeDef *hi2s){
 80010bc:	b480      	push	{r7}
 80010be:	b083      	sub	sp, #12
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	6078      	str	r0, [r7, #4]

	inputBufPtr = &inputData[BUFFER_SIZE/2];
 80010c4:	4b07      	ldr	r3, [pc, #28]	; (80010e4 <HAL_I2S_RxCpltCallback+0x28>)
 80010c6:	4a08      	ldr	r2, [pc, #32]	; (80010e8 <HAL_I2S_RxCpltCallback+0x2c>)
 80010c8:	601a      	str	r2, [r3, #0]
	outputBufPtr = &outputData[BUFFER_SIZE/2];
 80010ca:	4b08      	ldr	r3, [pc, #32]	; (80010ec <HAL_I2S_RxCpltCallback+0x30>)
 80010cc:	4a08      	ldr	r2, [pc, #32]	; (80010f0 <HAL_I2S_RxCpltCallback+0x34>)
 80010ce:	601a      	str	r2, [r3, #0]

	dataReadyFlag = 1;
 80010d0:	4b08      	ldr	r3, [pc, #32]	; (80010f4 <HAL_I2S_RxCpltCallback+0x38>)
 80010d2:	2201      	movs	r2, #1
 80010d4:	701a      	strb	r2, [r3, #0]

}
 80010d6:	bf00      	nop
 80010d8:	370c      	adds	r7, #12
 80010da:	46bd      	mov	sp, r7
 80010dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e0:	4770      	bx	lr
 80010e2:	bf00      	nop
 80010e4:	20000000 	.word	0x20000000
 80010e8:	2000014c 	.word	0x2000014c
 80010ec:	20000004 	.word	0x20000004
 80010f0:	2000024c 	.word	0x2000024c
 80010f4:	200002cc 	.word	0x200002cc

080010f8 <initializeAllPass>:

#include "AllPass.h"

AllPass* initializeAllPass(uint32_t sampleRate, float delayS, float b0, float am){
 80010f8:	b580      	push	{r7, lr}
 80010fa:	b088      	sub	sp, #32
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	60f8      	str	r0, [r7, #12]
 8001100:	ed87 0a02 	vstr	s0, [r7, #8]
 8001104:	edc7 0a01 	vstr	s1, [r7, #4]
 8001108:	ed87 1a00 	vstr	s2, [r7]

    AllPass* allPass = malloc(sizeof(AllPass));
 800110c:	2008      	movs	r0, #8
 800110e:	f004 f8a7 	bl	8005260 <malloc>
 8001112:	4603      	mov	r3, r0
 8001114:	61fb      	str	r3, [r7, #28]

    CombFeedforward *combFeedforward = initializeCombFeedforward(sampleRate, delayS);
 8001116:	ed97 0a02 	vldr	s0, [r7, #8]
 800111a:	68f8      	ldr	r0, [r7, #12]
 800111c:	f000 f8a1 	bl	8001262 <initializeCombFeedforward>
 8001120:	61b8      	str	r0, [r7, #24]
    CombFeedback *combFeedback = initializeCombFeedback(sampleRate, delayS, b0, am);
 8001122:	ed97 1a00 	vldr	s2, [r7]
 8001126:	edd7 0a01 	vldr	s1, [r7, #4]
 800112a:	ed97 0a02 	vldr	s0, [r7, #8]
 800112e:	68f8      	ldr	r0, [r7, #12]
 8001130:	f000 f82c 	bl	800118c <initializeCombFeedback>
 8001134:	6178      	str	r0, [r7, #20]

    allPass->combFeedforward = combFeedforward;
 8001136:	69fb      	ldr	r3, [r7, #28]
 8001138:	69ba      	ldr	r2, [r7, #24]
 800113a:	601a      	str	r2, [r3, #0]
    allPass->combFeedback = combFeedback;
 800113c:	69fb      	ldr	r3, [r7, #28]
 800113e:	697a      	ldr	r2, [r7, #20]
 8001140:	605a      	str	r2, [r3, #4]

    return allPass;
 8001142:	69fb      	ldr	r3, [r7, #28]

}
 8001144:	4618      	mov	r0, r3
 8001146:	3720      	adds	r7, #32
 8001148:	46bd      	mov	sp, r7
 800114a:	bd80      	pop	{r7, pc}

0800114c <allPassAppendSample>:

SampleType  allPassAppendSample(AllPass* filter, SampleType  newSample){
 800114c:	b580      	push	{r7, lr}
 800114e:	b084      	sub	sp, #16
 8001150:	af00      	add	r7, sp, #0
 8001152:	6078      	str	r0, [r7, #4]
 8001154:	460b      	mov	r3, r1
 8001156:	807b      	strh	r3, [r7, #2]

	SampleType feedForwardOutput = combFeedforwardAppendSample(filter->combFeedforward, newSample);
 8001158:	687b      	ldr	r3, [r7, #4]
 800115a:	681b      	ldr	r3, [r3, #0]
 800115c:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8001160:	4611      	mov	r1, r2
 8001162:	4618      	mov	r0, r3
 8001164:	f000 f8a2 	bl	80012ac <combFeedforwardAppendSample>
 8001168:	4603      	mov	r3, r0
 800116a:	81fb      	strh	r3, [r7, #14]

	SampleType output = combFeedbackAppendSample(filter->combFeedback, feedForwardOutput);
 800116c:	687b      	ldr	r3, [r7, #4]
 800116e:	685b      	ldr	r3, [r3, #4]
 8001170:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8001174:	4611      	mov	r1, r2
 8001176:	4618      	mov	r0, r3
 8001178:	f000 f837 	bl	80011ea <combFeedbackAppendSample>
 800117c:	4603      	mov	r3, r0
 800117e:	81bb      	strh	r3, [r7, #12]

    return output;
 8001180:	f9b7 300c 	ldrsh.w	r3, [r7, #12]

}
 8001184:	4618      	mov	r0, r3
 8001186:	3710      	adds	r7, #16
 8001188:	46bd      	mov	sp, r7
 800118a:	bd80      	pop	{r7, pc}

0800118c <initializeCombFeedback>:

#include "CombFeedback.h"

CombFeedback* initializeCombFeedback(uint32_t sampleRate, float delayS, float amplification, float attenuation){
 800118c:	b580      	push	{r7, lr}
 800118e:	b086      	sub	sp, #24
 8001190:	af00      	add	r7, sp, #0
 8001192:	60f8      	str	r0, [r7, #12]
 8001194:	ed87 0a02 	vstr	s0, [r7, #8]
 8001198:	edc7 0a01 	vstr	s1, [r7, #4]
 800119c:	ed87 1a00 	vstr	s2, [r7]

    CombFeedback *filter = malloc(sizeof(CombFeedback));
 80011a0:	2010      	movs	r0, #16
 80011a2:	f004 f85d 	bl	8005260 <malloc>
 80011a6:	4603      	mov	r3, r0
 80011a8:	617b      	str	r3, [r7, #20]

    filter->offset = 0;
 80011aa:	697b      	ldr	r3, [r7, #20]
 80011ac:	2200      	movs	r2, #0
 80011ae:	601a      	str	r2, [r3, #0]
    filter->outputSamples = initializeCircularBuffer( delayS*sampleRate);
 80011b0:	68fb      	ldr	r3, [r7, #12]
 80011b2:	ee07 3a90 	vmov	s15, r3
 80011b6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80011ba:	edd7 7a02 	vldr	s15, [r7, #8]
 80011be:	ee67 7a27 	vmul.f32	s15, s14, s15
 80011c2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80011c6:	ee17 0a90 	vmov	r0, s15
 80011ca:	f000 faa7 	bl	800171c <initializeCircularBuffer>
 80011ce:	4602      	mov	r2, r0
 80011d0:	697b      	ldr	r3, [r7, #20]
 80011d2:	605a      	str	r2, [r3, #4]

    filter->K = amplification;
 80011d4:	697b      	ldr	r3, [r7, #20]
 80011d6:	687a      	ldr	r2, [r7, #4]
 80011d8:	609a      	str	r2, [r3, #8]
    filter->a = attenuation;
 80011da:	697b      	ldr	r3, [r7, #20]
 80011dc:	683a      	ldr	r2, [r7, #0]
 80011de:	60da      	str	r2, [r3, #12]

    return filter;
 80011e0:	697b      	ldr	r3, [r7, #20]

}
 80011e2:	4618      	mov	r0, r3
 80011e4:	3718      	adds	r7, #24
 80011e6:	46bd      	mov	sp, r7
 80011e8:	bd80      	pop	{r7, pc}

080011ea <combFeedbackAppendSample>:

SampleType combFeedbackAppendSample(CombFeedback *filter, SampleType newSample){
 80011ea:	b580      	push	{r7, lr}
 80011ec:	ed2d 8b04 	vpush	{d8-d9}
 80011f0:	b084      	sub	sp, #16
 80011f2:	af00      	add	r7, sp, #0
 80011f4:	6078      	str	r0, [r7, #4]
 80011f6:	460b      	mov	r3, r1
 80011f8:	807b      	strh	r3, [r7, #2]

    //static const float b0 = 0.5;
    //static const float am = 0.8;

	SampleType output = (filter->K)*(newSample - (filter->a)*getValueInCircularBuffer(filter->outputSamples, filter->offset)); // M - 1 see struct def for explanation
 80011fa:	687b      	ldr	r3, [r7, #4]
 80011fc:	ed93 8a02 	vldr	s16, [r3, #8]
 8001200:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001204:	ee07 3a90 	vmov	s15, r3
 8001208:	eef8 8ae7 	vcvt.f32.s32	s17, s15
 800120c:	687b      	ldr	r3, [r7, #4]
 800120e:	ed93 9a03 	vldr	s18, [r3, #12]
 8001212:	687b      	ldr	r3, [r7, #4]
 8001214:	685a      	ldr	r2, [r3, #4]
 8001216:	687b      	ldr	r3, [r7, #4]
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	4619      	mov	r1, r3
 800121c:	4610      	mov	r0, r2
 800121e:	f000 fab9 	bl	8001794 <getValueInCircularBuffer>
 8001222:	4603      	mov	r3, r0
 8001224:	ee07 3a90 	vmov	s15, r3
 8001228:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800122c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8001230:	ee78 7ae7 	vsub.f32	s15, s17, s15
 8001234:	ee68 7a27 	vmul.f32	s15, s16, s15
 8001238:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800123c:	ee17 3a90 	vmov	r3, s15
 8001240:	81fb      	strh	r3, [r7, #14]

	putValueInCircularBuffer(filter->outputSamples, output);
 8001242:	687b      	ldr	r3, [r7, #4]
 8001244:	685b      	ldr	r3, [r3, #4]
 8001246:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800124a:	4611      	mov	r1, r2
 800124c:	4618      	mov	r0, r3
 800124e:	f000 fa81 	bl	8001754 <putValueInCircularBuffer>

    return output;
 8001252:	f9b7 300e 	ldrsh.w	r3, [r7, #14]

}
 8001256:	4618      	mov	r0, r3
 8001258:	3710      	adds	r7, #16
 800125a:	46bd      	mov	sp, r7
 800125c:	ecbd 8b04 	vpop	{d8-d9}
 8001260:	bd80      	pop	{r7, pc}

08001262 <initializeCombFeedforward>:
#include "CombFeedforward.h"
#include <math.h>

const float INT24_TO_FLOAT = 1.0/8388608.0;

CombFeedforward* initializeCombFeedforward(uint32_t sampleRate, float delayS){
 8001262:	b580      	push	{r7, lr}
 8001264:	b084      	sub	sp, #16
 8001266:	af00      	add	r7, sp, #0
 8001268:	6078      	str	r0, [r7, #4]
 800126a:	ed87 0a00 	vstr	s0, [r7]

    CombFeedforward *filter = malloc(sizeof(CombFeedforward));
 800126e:	2008      	movs	r0, #8
 8001270:	f003 fff6 	bl	8005260 <malloc>
 8001274:	4603      	mov	r3, r0
 8001276:	60fb      	str	r3, [r7, #12]

    filter->offset = 0;
 8001278:	68fb      	ldr	r3, [r7, #12]
 800127a:	2200      	movs	r2, #0
 800127c:	601a      	str	r2, [r3, #0]

    filter->inputSamples = initializeCircularBuffer(delayS*sampleRate);
 800127e:	687b      	ldr	r3, [r7, #4]
 8001280:	ee07 3a90 	vmov	s15, r3
 8001284:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001288:	edd7 7a00 	vldr	s15, [r7]
 800128c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001290:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001294:	ee17 0a90 	vmov	r0, s15
 8001298:	f000 fa40 	bl	800171c <initializeCircularBuffer>
 800129c:	4602      	mov	r2, r0
 800129e:	68fb      	ldr	r3, [r7, #12]
 80012a0:	605a      	str	r2, [r3, #4]

    return filter;
 80012a2:	68fb      	ldr	r3, [r7, #12]

}
 80012a4:	4618      	mov	r0, r3
 80012a6:	3710      	adds	r7, #16
 80012a8:	46bd      	mov	sp, r7
 80012aa:	bd80      	pop	{r7, pc}

080012ac <combFeedforwardAppendSample>:

SampleType combFeedforwardAppendSample(CombFeedforward *filter, SampleType newSample){
 80012ac:	b580      	push	{r7, lr}
 80012ae:	ed2d 8b02 	vpush	{d8}
 80012b2:	b084      	sub	sp, #16
 80012b4:	af00      	add	r7, sp, #0
 80012b6:	6078      	str	r0, [r7, #4]
 80012b8:	460b      	mov	r3, r1
 80012ba:	807b      	strh	r3, [r7, #2]


    static const float b0 = 1.0;
    static const float bm = 0.9;

    SampleType output = b0*newSample + bm*getValueInCircularBuffer(filter->inputSamples, filter->offset); //+ bm*filter->inputSamples[filter->M-1]) ); // M - 1 see struct def for explanation
 80012bc:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80012c0:	ee07 3a90 	vmov	s15, r3
 80012c4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80012c8:	4b12      	ldr	r3, [pc, #72]	; (8001314 <combFeedforwardAppendSample+0x68>)
 80012ca:	edd3 7a00 	vldr	s15, [r3]
 80012ce:	ee27 8a27 	vmul.f32	s16, s14, s15
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	685a      	ldr	r2, [r3, #4]
 80012d6:	687b      	ldr	r3, [r7, #4]
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	4619      	mov	r1, r3
 80012dc:	4610      	mov	r0, r2
 80012de:	f000 fa59 	bl	8001794 <getValueInCircularBuffer>
 80012e2:	4603      	mov	r3, r0
 80012e4:	ee07 3a90 	vmov	s15, r3
 80012e8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80012ec:	4b0a      	ldr	r3, [pc, #40]	; (8001318 <combFeedforwardAppendSample+0x6c>)
 80012ee:	edd3 7a00 	vldr	s15, [r3]
 80012f2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80012f6:	ee78 7a27 	vadd.f32	s15, s16, s15
 80012fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80012fe:	ee17 3a90 	vmov	r3, s15
 8001302:	81fb      	strh	r3, [r7, #14]

    return output;
 8001304:	f9b7 300e 	ldrsh.w	r3, [r7, #14]

}
 8001308:	4618      	mov	r0, r3
 800130a:	3710      	adds	r7, #16
 800130c:	46bd      	mov	sp, r7
 800130e:	ecbd 8b02 	vpop	{d8}
 8001312:	bd80      	pop	{r7, pc}
 8001314:	080064f8 	.word	0x080064f8
 8001318:	080064fc 	.word	0x080064fc

0800131c <initializeFilters>:
 *  Created on: May 13, 2024
 *      Author: Joran
 */
#include "Filters.h"

Filters* initializeFilters(uint32_t sampleRate){
 800131c:	b590      	push	{r4, r7, lr}
 800131e:	b08f      	sub	sp, #60	; 0x3c
 8001320:	af02      	add	r7, sp, #8
 8001322:	6078      	str	r0, [r7, #4]

	Filters* filters = malloc(sizeof(Filters));
 8001324:	201c      	movs	r0, #28
 8001326:	f003 ff9b 	bl	8005260 <malloc>
 800132a:	4603      	mov	r3, r0
 800132c:	62fb      	str	r3, [r7, #44]	; 0x2c

    filters->enabledFilters = 0b010;
 800132e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001330:	2202      	movs	r2, #2
 8001332:	701a      	strb	r2, [r3, #0]


    CombFeedback* echo = initializeCombFeedback(sampleRate, 0.5, 1.0, 0.5);
 8001334:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
 8001338:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 800133c:	eeb6 0a00 	vmov.f32	s0, #96	; 0x3f000000  0.5
 8001340:	6878      	ldr	r0, [r7, #4]
 8001342:	f7ff ff23 	bl	800118c <initializeCombFeedback>
 8001346:	62b8      	str	r0, [r7, #40]	; 0x28

    float delayCombS[4] = {0.0297, 0.0371, 0.411, 0.437};
 8001348:	4b1b      	ldr	r3, [pc, #108]	; (80013b8 <initializeFilters+0x9c>)
 800134a:	f107 0410 	add.w	r4, r7, #16
 800134e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001350:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    float delayAllS[2] = {0.005, 0.0017};
 8001354:	4a19      	ldr	r2, [pc, #100]	; (80013bc <initializeFilters+0xa0>)
 8001356:	f107 0308 	add.w	r3, r7, #8
 800135a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800135e:	e883 0003 	stmia.w	r3, {r0, r1}
	Reverb* reverb = initializeReverb(sampleRate, 4, delayCombS, 2, delayAllS);
 8001362:	f107 0210 	add.w	r2, r7, #16
 8001366:	f107 0308 	add.w	r3, r7, #8
 800136a:	9300      	str	r3, [sp, #0]
 800136c:	2302      	movs	r3, #2
 800136e:	2104      	movs	r1, #4
 8001370:	6878      	ldr	r0, [r7, #4]
 8001372:	f000 f91f 	bl	80015b4 <initializeReverb>
 8001376:	6278      	str	r0, [r7, #36]	; 0x24


	Flanger* flanger = initializeFlanger(sampleRate, 1.5, 0.05);
 8001378:	eddf 0a11 	vldr	s1, [pc, #68]	; 80013c0 <initializeFilters+0xa4>
 800137c:	eeb7 0a08 	vmov.f32	s0, #120	; 0x3fc00000  1.5
 8001380:	6878      	ldr	r0, [r7, #4]
 8001382:	f000 f85d 	bl	8001440 <initializeFlanger>
 8001386:	6238      	str	r0, [r7, #32]


    filters->filterStructs[0] = echo;
 8001388:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800138a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800138c:	605a      	str	r2, [r3, #4]
    filters->filterMethods[0] = combFeedbackAppendSample;
 800138e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001390:	4a0c      	ldr	r2, [pc, #48]	; (80013c4 <initializeFilters+0xa8>)
 8001392:	611a      	str	r2, [r3, #16]

    filters->filterStructs[1] = reverb;
 8001394:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001396:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001398:	609a      	str	r2, [r3, #8]
    filters->filterMethods[1] = reverbAppendSample;
 800139a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800139c:	4a0a      	ldr	r2, [pc, #40]	; (80013c8 <initializeFilters+0xac>)
 800139e:	615a      	str	r2, [r3, #20]

    filters->filterStructs[2] = flanger;
 80013a0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80013a2:	6a3a      	ldr	r2, [r7, #32]
 80013a4:	60da      	str	r2, [r3, #12]
    filters->filterMethods[2] = flangerAppendSample;
 80013a6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80013a8:	4a08      	ldr	r2, [pc, #32]	; (80013cc <initializeFilters+0xb0>)
 80013aa:	619a      	str	r2, [r3, #24]

    return filters;
 80013ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c

}
 80013ae:	4618      	mov	r0, r3
 80013b0:	3734      	adds	r7, #52	; 0x34
 80013b2:	46bd      	mov	sp, r7
 80013b4:	bd90      	pop	{r4, r7, pc}
 80013b6:	bf00      	nop
 80013b8:	080064e0 	.word	0x080064e0
 80013bc:	080064f0 	.word	0x080064f0
 80013c0:	3d4ccccd 	.word	0x3d4ccccd
 80013c4:	080011eb 	.word	0x080011eb
 80013c8:	08001691 	.word	0x08001691
 80013cc:	080014c9 	.word	0x080014c9

080013d0 <appendSample>:


SampleType appendSample(Filters* filters, SampleType newSample){
 80013d0:	b580      	push	{r7, lr}
 80013d2:	b086      	sub	sp, #24
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	6078      	str	r0, [r7, #4]
 80013d8:	460b      	mov	r3, r1
 80013da:	807b      	strh	r3, [r7, #2]

	SampleType previousOutput = newSample;
 80013dc:	887b      	ldrh	r3, [r7, #2]
 80013de:	82fb      	strh	r3, [r7, #22]

	for(uint8_t i = 0; i < AMOUNT_OF_FILTERS; i++){
 80013e0:	2300      	movs	r3, #0
 80013e2:	757b      	strb	r3, [r7, #21]
 80013e4:	e023      	b.n	800142e <appendSample+0x5e>

		uint8_t filterEnabled = (filters->enabledFilters >> i) & 1;
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	781b      	ldrb	r3, [r3, #0]
 80013ea:	461a      	mov	r2, r3
 80013ec:	7d7b      	ldrb	r3, [r7, #21]
 80013ee:	fa42 f303 	asr.w	r3, r2, r3
 80013f2:	b2db      	uxtb	r3, r3
 80013f4:	f003 0301 	and.w	r3, r3, #1
 80013f8:	753b      	strb	r3, [r7, #20]
		if(filterEnabled){
 80013fa:	7d3b      	ldrb	r3, [r7, #20]
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d013      	beq.n	8001428 <appendSample+0x58>
			SampleType (*filterMethod)(void*, SampleType) = filters->filterMethods[i];
 8001400:	7d7a      	ldrb	r2, [r7, #21]
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	3204      	adds	r2, #4
 8001406:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800140a:	613b      	str	r3, [r7, #16]
			void* filterStruct = filters->filterStructs[i];
 800140c:	7d7b      	ldrb	r3, [r7, #21]
 800140e:	687a      	ldr	r2, [r7, #4]
 8001410:	009b      	lsls	r3, r3, #2
 8001412:	4413      	add	r3, r2
 8001414:	685b      	ldr	r3, [r3, #4]
 8001416:	60fb      	str	r3, [r7, #12]
			previousOutput = filterMethod(filterStruct, previousOutput);
 8001418:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 800141c:	693b      	ldr	r3, [r7, #16]
 800141e:	4611      	mov	r1, r2
 8001420:	68f8      	ldr	r0, [r7, #12]
 8001422:	4798      	blx	r3
 8001424:	4603      	mov	r3, r0
 8001426:	82fb      	strh	r3, [r7, #22]
	for(uint8_t i = 0; i < AMOUNT_OF_FILTERS; i++){
 8001428:	7d7b      	ldrb	r3, [r7, #21]
 800142a:	3301      	adds	r3, #1
 800142c:	757b      	strb	r3, [r7, #21]
 800142e:	7d7b      	ldrb	r3, [r7, #21]
 8001430:	2b02      	cmp	r3, #2
 8001432:	d9d8      	bls.n	80013e6 <appendSample+0x16>
		}

	}

	return previousOutput;
 8001434:	f9b7 3016 	ldrsh.w	r3, [r7, #22]

}
 8001438:	4618      	mov	r0, r3
 800143a:	3718      	adds	r7, #24
 800143c:	46bd      	mov	sp, r7
 800143e:	bd80      	pop	{r7, pc}

08001440 <initializeFlanger>:

#include "Flanger.h"

Flanger* initializeFlanger(uint32_t sampleRate, float fer, float amp){
 8001440:	b580      	push	{r7, lr}
 8001442:	b086      	sub	sp, #24
 8001444:	af00      	add	r7, sp, #0
 8001446:	60f8      	str	r0, [r7, #12]
 8001448:	ed87 0a02 	vstr	s0, [r7, #8]
 800144c:	edc7 0a01 	vstr	s1, [r7, #4]
    Flanger *flanger= malloc(sizeof(flanger));
 8001450:	2004      	movs	r0, #4
 8001452:	f003 ff05 	bl	8005260 <malloc>
 8001456:	4603      	mov	r3, r0
 8001458:	617b      	str	r3, [r7, #20]
    flanger->delayFerquentie = sampleRate/fer; // [(1/s)/(1/s)]
 800145a:	68fb      	ldr	r3, [r7, #12]
 800145c:	ee07 3a90 	vmov	s15, r3
 8001460:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8001464:	ed97 7a02 	vldr	s14, [r7, #8]
 8001468:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800146c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001470:	ee17 2a90 	vmov	r2, s15
 8001474:	697b      	ldr	r3, [r7, #20]
 8001476:	605a      	str	r2, [r3, #4]
    flanger->amplification = amp*sampleRate; // [s*1/s]
 8001478:	68fb      	ldr	r3, [r7, #12]
 800147a:	ee07 3a90 	vmov	s15, r3
 800147e:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001482:	edd7 7a01 	vldr	s15, [r7, #4]
 8001486:	ee67 7a27 	vmul.f32	s15, s14, s15
 800148a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800148e:	ee17 2a90 	vmov	r2, s15
 8001492:	697b      	ldr	r3, [r7, #20]
 8001494:	609a      	str	r2, [r3, #8]

    flanger->i = 0;
 8001496:	697b      	ldr	r3, [r7, #20]
 8001498:	2200      	movs	r2, #0
 800149a:	601a      	str	r2, [r3, #0]
    
    flanger->combFilter = initializeCombFeedback(sampleRate, amp, 1, 0.8);
 800149c:	ed9f 1a08 	vldr	s2, [pc, #32]	; 80014c0 <initializeFlanger+0x80>
 80014a0:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 80014a4:	ed97 0a01 	vldr	s0, [r7, #4]
 80014a8:	68f8      	ldr	r0, [r7, #12]
 80014aa:	f7ff fe6f 	bl	800118c <initializeCombFeedback>
 80014ae:	4602      	mov	r2, r0
 80014b0:	697b      	ldr	r3, [r7, #20]
 80014b2:	60da      	str	r2, [r3, #12]
    return flanger;
 80014b4:	697b      	ldr	r3, [r7, #20]
}
 80014b6:	4618      	mov	r0, r3
 80014b8:	3718      	adds	r7, #24
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bd80      	pop	{r7, pc}
 80014be:	bf00      	nop
 80014c0:	3f4ccccd 	.word	0x3f4ccccd
 80014c4:	00000000 	.word	0x00000000

080014c8 <flangerAppendSample>:

SampleType flangerAppendSample(Flanger* flanger, SampleType newSample){
 80014c8:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80014cc:	b084      	sub	sp, #16
 80014ce:	af00      	add	r7, sp, #0
 80014d0:	6078      	str	r0, [r7, #4]
 80014d2:	460b      	mov	r3, r1
 80014d4:	807b      	strh	r3, [r7, #2]
    
    int delay = (flanger->amplification/2)*(1.0-cos(2*PI*flanger->delayFerquentie*flanger->i) ) + 1;
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	689b      	ldr	r3, [r3, #8]
 80014da:	2b00      	cmp	r3, #0
 80014dc:	da00      	bge.n	80014e0 <flangerAppendSample+0x18>
 80014de:	3301      	adds	r3, #1
 80014e0:	105b      	asrs	r3, r3, #1
 80014e2:	4618      	mov	r0, r3
 80014e4:	f7fe ffee 	bl	80004c4 <__aeabi_i2d>
 80014e8:	4604      	mov	r4, r0
 80014ea:	460d      	mov	r5, r1
 80014ec:	687b      	ldr	r3, [r7, #4]
 80014ee:	685b      	ldr	r3, [r3, #4]
 80014f0:	4618      	mov	r0, r3
 80014f2:	f7fe ffe7 	bl	80004c4 <__aeabi_i2d>
 80014f6:	a32d      	add	r3, pc, #180	; (adr r3, 80015ac <flangerAppendSample+0xe4>)
 80014f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014fc:	f7ff f84c 	bl	8000598 <__aeabi_dmul>
 8001500:	4602      	mov	r2, r0
 8001502:	460b      	mov	r3, r1
 8001504:	4690      	mov	r8, r2
 8001506:	4699      	mov	r9, r3
 8001508:	687b      	ldr	r3, [r7, #4]
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	4618      	mov	r0, r3
 800150e:	f7fe ffd9 	bl	80004c4 <__aeabi_i2d>
 8001512:	4602      	mov	r2, r0
 8001514:	460b      	mov	r3, r1
 8001516:	4640      	mov	r0, r8
 8001518:	4649      	mov	r1, r9
 800151a:	f7ff f83d 	bl	8000598 <__aeabi_dmul>
 800151e:	4602      	mov	r2, r0
 8001520:	460b      	mov	r3, r1
 8001522:	ec43 2b17 	vmov	d7, r2, r3
 8001526:	eeb0 0a47 	vmov.f32	s0, s14
 800152a:	eef0 0a67 	vmov.f32	s1, s15
 800152e:	f003 ff8f 	bl	8005450 <cos>
 8001532:	ec53 2b10 	vmov	r2, r3, d0
 8001536:	f04f 0000 	mov.w	r0, #0
 800153a:	491b      	ldr	r1, [pc, #108]	; (80015a8 <flangerAppendSample+0xe0>)
 800153c:	f7fe fe74 	bl	8000228 <__aeabi_dsub>
 8001540:	4602      	mov	r2, r0
 8001542:	460b      	mov	r3, r1
 8001544:	4620      	mov	r0, r4
 8001546:	4629      	mov	r1, r5
 8001548:	f7ff f826 	bl	8000598 <__aeabi_dmul>
 800154c:	4602      	mov	r2, r0
 800154e:	460b      	mov	r3, r1
 8001550:	4610      	mov	r0, r2
 8001552:	4619      	mov	r1, r3
 8001554:	f04f 0200 	mov.w	r2, #0
 8001558:	4b13      	ldr	r3, [pc, #76]	; (80015a8 <flangerAppendSample+0xe0>)
 800155a:	f7fe fe67 	bl	800022c <__adddf3>
 800155e:	4602      	mov	r2, r0
 8001560:	460b      	mov	r3, r1
 8001562:	4610      	mov	r0, r2
 8001564:	4619      	mov	r1, r3
 8001566:	f7ff fab1 	bl	8000acc <__aeabi_d2iz>
 800156a:	4603      	mov	r3, r0
 800156c:	60fb      	str	r3, [r7, #12]

    flanger->combFilter->offset = delay;
 800156e:	687b      	ldr	r3, [r7, #4]
 8001570:	68db      	ldr	r3, [r3, #12]
 8001572:	68fa      	ldr	r2, [r7, #12]
 8001574:	601a      	str	r2, [r3, #0]

    flanger->i++;
 8001576:	687b      	ldr	r3, [r7, #4]
 8001578:	681b      	ldr	r3, [r3, #0]
 800157a:	1c5a      	adds	r2, r3, #1
 800157c:	687b      	ldr	r3, [r7, #4]
 800157e:	601a      	str	r2, [r3, #0]
    SampleType result = combFeedbackAppendSample(flanger->combFilter, newSample);
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	68db      	ldr	r3, [r3, #12]
 8001584:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8001588:	4611      	mov	r1, r2
 800158a:	4618      	mov	r0, r3
 800158c:	f7ff fe2d 	bl	80011ea <combFeedbackAppendSample>
 8001590:	4603      	mov	r3, r0
 8001592:	817b      	strh	r3, [r7, #10]

    return result;
 8001594:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
}
 8001598:	4618      	mov	r0, r3
 800159a:	3710      	adds	r7, #16
 800159c:	46bd      	mov	sp, r7
 800159e:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80015a2:	bf00      	nop
 80015a4:	f3af 8000 	nop.w
 80015a8:	3ff00000 	.word	0x3ff00000
 80015ac:	54524550 	.word	0x54524550
 80015b0:	401921fb 	.word	0x401921fb

080015b4 <initializeReverb>:

#include "Reverb.h"

//Order delayS smallest to largest
Reverb* initializeReverb(uint32_t sampleRate, uint8_t amountOfCombFilters, float *delayCombS, uint8_t amountOfAllPassFilters, float *delayAllS){
 80015b4:	b590      	push	{r4, r7, lr}
 80015b6:	b089      	sub	sp, #36	; 0x24
 80015b8:	af00      	add	r7, sp, #0
 80015ba:	60f8      	str	r0, [r7, #12]
 80015bc:	607a      	str	r2, [r7, #4]
 80015be:	461a      	mov	r2, r3
 80015c0:	460b      	mov	r3, r1
 80015c2:	72fb      	strb	r3, [r7, #11]
 80015c4:	4613      	mov	r3, r2
 80015c6:	72bb      	strb	r3, [r7, #10]

    Reverb *reverb = malloc(sizeof(Reverb));
 80015c8:	2010      	movs	r0, #16
 80015ca:	f003 fe49 	bl	8005260 <malloc>
 80015ce:	4603      	mov	r3, r0
 80015d0:	617b      	str	r3, [r7, #20]


    //Comb
    reverb->amountOfCombFilters = amountOfCombFilters;
 80015d2:	7afa      	ldrb	r2, [r7, #11]
 80015d4:	697b      	ldr	r3, [r7, #20]
 80015d6:	601a      	str	r2, [r3, #0]

    reverb->combFilters = malloc(reverb->amountOfCombFilters*sizeof(CombFeedforward));
 80015d8:	697b      	ldr	r3, [r7, #20]
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	00db      	lsls	r3, r3, #3
 80015de:	4618      	mov	r0, r3
 80015e0:	f003 fe3e 	bl	8005260 <malloc>
 80015e4:	4603      	mov	r3, r0
 80015e6:	461a      	mov	r2, r3
 80015e8:	697b      	ldr	r3, [r7, #20]
 80015ea:	605a      	str	r2, [r3, #4]

    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 80015ec:	2300      	movs	r3, #0
 80015ee:	61fb      	str	r3, [r7, #28]
 80015f0:	e014      	b.n	800161c <initializeReverb+0x68>
        reverb->combFilters[i] = initializeCombFeedforward(sampleRate, delayCombS[i]);
 80015f2:	69fb      	ldr	r3, [r7, #28]
 80015f4:	009b      	lsls	r3, r3, #2
 80015f6:	687a      	ldr	r2, [r7, #4]
 80015f8:	4413      	add	r3, r2
 80015fa:	edd3 7a00 	vldr	s15, [r3]
 80015fe:	697b      	ldr	r3, [r7, #20]
 8001600:	685a      	ldr	r2, [r3, #4]
 8001602:	69fb      	ldr	r3, [r7, #28]
 8001604:	009b      	lsls	r3, r3, #2
 8001606:	18d4      	adds	r4, r2, r3
 8001608:	eeb0 0a67 	vmov.f32	s0, s15
 800160c:	68f8      	ldr	r0, [r7, #12]
 800160e:	f7ff fe28 	bl	8001262 <initializeCombFeedforward>
 8001612:	4603      	mov	r3, r0
 8001614:	6023      	str	r3, [r4, #0]
    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 8001616:	69fb      	ldr	r3, [r7, #28]
 8001618:	3301      	adds	r3, #1
 800161a:	61fb      	str	r3, [r7, #28]
 800161c:	697b      	ldr	r3, [r7, #20]
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	69fa      	ldr	r2, [r7, #28]
 8001622:	429a      	cmp	r2, r3
 8001624:	dbe5      	blt.n	80015f2 <initializeReverb+0x3e>
    }
    
    
    //AllPass
    reverb->amountOfAllPassFilters = amountOfAllPassFilters;
 8001626:	7aba      	ldrb	r2, [r7, #10]
 8001628:	697b      	ldr	r3, [r7, #20]
 800162a:	609a      	str	r2, [r3, #8]
    reverb->allPassFilters = malloc(reverb->amountOfAllPassFilters*sizeof(AllPass));
 800162c:	697b      	ldr	r3, [r7, #20]
 800162e:	689b      	ldr	r3, [r3, #8]
 8001630:	00db      	lsls	r3, r3, #3
 8001632:	4618      	mov	r0, r3
 8001634:	f003 fe14 	bl	8005260 <malloc>
 8001638:	4603      	mov	r3, r0
 800163a:	461a      	mov	r2, r3
 800163c:	697b      	ldr	r3, [r7, #20]
 800163e:	60da      	str	r2, [r3, #12]

    for(int i = 0; i < reverb->amountOfAllPassFilters; i++){
 8001640:	2300      	movs	r3, #0
 8001642:	61bb      	str	r3, [r7, #24]
 8001644:	e018      	b.n	8001678 <initializeReverb+0xc4>
        reverb->allPassFilters[i] = initializeAllPass(sampleRate, delayAllS[i], 1, 0.8);
 8001646:	69bb      	ldr	r3, [r7, #24]
 8001648:	009b      	lsls	r3, r3, #2
 800164a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800164c:	4413      	add	r3, r2
 800164e:	edd3 7a00 	vldr	s15, [r3]
 8001652:	697b      	ldr	r3, [r7, #20]
 8001654:	68da      	ldr	r2, [r3, #12]
 8001656:	69bb      	ldr	r3, [r7, #24]
 8001658:	009b      	lsls	r3, r3, #2
 800165a:	18d4      	adds	r4, r2, r3
 800165c:	ed9f 1a0b 	vldr	s2, [pc, #44]	; 800168c <initializeReverb+0xd8>
 8001660:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8001664:	eeb0 0a67 	vmov.f32	s0, s15
 8001668:	68f8      	ldr	r0, [r7, #12]
 800166a:	f7ff fd45 	bl	80010f8 <initializeAllPass>
 800166e:	4603      	mov	r3, r0
 8001670:	6023      	str	r3, [r4, #0]
    for(int i = 0; i < reverb->amountOfAllPassFilters; i++){
 8001672:	69bb      	ldr	r3, [r7, #24]
 8001674:	3301      	adds	r3, #1
 8001676:	61bb      	str	r3, [r7, #24]
 8001678:	697b      	ldr	r3, [r7, #20]
 800167a:	689b      	ldr	r3, [r3, #8]
 800167c:	69ba      	ldr	r2, [r7, #24]
 800167e:	429a      	cmp	r2, r3
 8001680:	dbe1      	blt.n	8001646 <initializeReverb+0x92>
    }

    return reverb;
 8001682:	697b      	ldr	r3, [r7, #20]

}
 8001684:	4618      	mov	r0, r3
 8001686:	3724      	adds	r7, #36	; 0x24
 8001688:	46bd      	mov	sp, r7
 800168a:	bd90      	pop	{r4, r7, pc}
 800168c:	3f4ccccd 	.word	0x3f4ccccd

08001690 <reverbAppendSample>:

SampleType reverbAppendSample(Reverb* reverb, SampleType  newSample){
 8001690:	b580      	push	{r7, lr}
 8001692:	b086      	sub	sp, #24
 8001694:	af00      	add	r7, sp, #0
 8001696:	6078      	str	r0, [r7, #4]
 8001698:	460b      	mov	r3, r1
 800169a:	807b      	strh	r3, [r7, #2]

	SampleType  combSumOutput = 0;
 800169c:	2300      	movs	r3, #0
 800169e:	82fb      	strh	r3, [r7, #22]

    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 80016a0:	2300      	movs	r3, #0
 80016a2:	613b      	str	r3, [r7, #16]
 80016a4:	e014      	b.n	80016d0 <reverbAppendSample+0x40>
        combSumOutput += combFeedforwardAppendSample(reverb->combFilters[i], newSample);
 80016a6:	687b      	ldr	r3, [r7, #4]
 80016a8:	685a      	ldr	r2, [r3, #4]
 80016aa:	693b      	ldr	r3, [r7, #16]
 80016ac:	009b      	lsls	r3, r3, #2
 80016ae:	4413      	add	r3, r2
 80016b0:	681b      	ldr	r3, [r3, #0]
 80016b2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80016b6:	4611      	mov	r1, r2
 80016b8:	4618      	mov	r0, r3
 80016ba:	f7ff fdf7 	bl	80012ac <combFeedforwardAppendSample>
 80016be:	4603      	mov	r3, r0
 80016c0:	b29a      	uxth	r2, r3
 80016c2:	8afb      	ldrh	r3, [r7, #22]
 80016c4:	4413      	add	r3, r2
 80016c6:	b29b      	uxth	r3, r3
 80016c8:	82fb      	strh	r3, [r7, #22]
    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 80016ca:	693b      	ldr	r3, [r7, #16]
 80016cc:	3301      	adds	r3, #1
 80016ce:	613b      	str	r3, [r7, #16]
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	693a      	ldr	r2, [r7, #16]
 80016d6:	429a      	cmp	r2, r3
 80016d8:	dbe5      	blt.n	80016a6 <reverbAppendSample+0x16>
    }


    SampleType  previousAllPassOutput = combSumOutput;
 80016da:	8afb      	ldrh	r3, [r7, #22]
 80016dc:	81fb      	strh	r3, [r7, #14]

    for (int i = 0; i < reverb->amountOfAllPassFilters; i++){
 80016de:	2300      	movs	r3, #0
 80016e0:	60bb      	str	r3, [r7, #8]
 80016e2:	e010      	b.n	8001706 <reverbAppendSample+0x76>
        previousAllPassOutput = allPassAppendSample(reverb->allPassFilters[i], previousAllPassOutput);
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	68da      	ldr	r2, [r3, #12]
 80016e8:	68bb      	ldr	r3, [r7, #8]
 80016ea:	009b      	lsls	r3, r3, #2
 80016ec:	4413      	add	r3, r2
 80016ee:	681b      	ldr	r3, [r3, #0]
 80016f0:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80016f4:	4611      	mov	r1, r2
 80016f6:	4618      	mov	r0, r3
 80016f8:	f7ff fd28 	bl	800114c <allPassAppendSample>
 80016fc:	4603      	mov	r3, r0
 80016fe:	81fb      	strh	r3, [r7, #14]
    for (int i = 0; i < reverb->amountOfAllPassFilters; i++){
 8001700:	68bb      	ldr	r3, [r7, #8]
 8001702:	3301      	adds	r3, #1
 8001704:	60bb      	str	r3, [r7, #8]
 8001706:	687b      	ldr	r3, [r7, #4]
 8001708:	689b      	ldr	r3, [r3, #8]
 800170a:	68ba      	ldr	r2, [r7, #8]
 800170c:	429a      	cmp	r2, r3
 800170e:	dbe9      	blt.n	80016e4 <reverbAppendSample+0x54>
    }
    
    return previousAllPassOutput;
 8001710:	f9b7 300e 	ldrsh.w	r3, [r7, #14]

}
 8001714:	4618      	mov	r0, r3
 8001716:	3718      	adds	r7, #24
 8001718:	46bd      	mov	sp, r7
 800171a:	bd80      	pop	{r7, pc}

0800171c <initializeCircularBuffer>:

#include "CircularBuffer.h"

CircularBuffer* initializeCircularBuffer(uint32_t bufferSize){
 800171c:	b580      	push	{r7, lr}
 800171e:	b084      	sub	sp, #16
 8001720:	af00      	add	r7, sp, #0
 8001722:	6078      	str	r0, [r7, #4]

    CircularBuffer *buffer = malloc(sizeof(CircularBuffer));
 8001724:	200c      	movs	r0, #12
 8001726:	f003 fd9b 	bl	8005260 <malloc>
 800172a:	4603      	mov	r3, r0
 800172c:	60fb      	str	r3, [r7, #12]

    buffer->bufferSize = bufferSize;
 800172e:	68fb      	ldr	r3, [r7, #12]
 8001730:	687a      	ldr	r2, [r7, #4]
 8001732:	609a      	str	r2, [r3, #8]
    buffer->buffer = calloc(bufferSize, sizeof(int16_t));
 8001734:	2102      	movs	r1, #2
 8001736:	6878      	ldr	r0, [r7, #4]
 8001738:	f003 fd74 	bl	8005224 <calloc>
 800173c:	4603      	mov	r3, r0
 800173e:	461a      	mov	r2, r3
 8001740:	68fb      	ldr	r3, [r7, #12]
 8001742:	601a      	str	r2, [r3, #0]
    buffer->writeIndex = 0;
 8001744:	68fb      	ldr	r3, [r7, #12]
 8001746:	2200      	movs	r2, #0
 8001748:	605a      	str	r2, [r3, #4]

    return buffer;
 800174a:	68fb      	ldr	r3, [r7, #12]

}
 800174c:	4618      	mov	r0, r3
 800174e:	3710      	adds	r7, #16
 8001750:	46bd      	mov	sp, r7
 8001752:	bd80      	pop	{r7, pc}

08001754 <putValueInCircularBuffer>:

void putValueInCircularBuffer(CircularBuffer* buffer, int16_t value){
 8001754:	b480      	push	{r7}
 8001756:	b083      	sub	sp, #12
 8001758:	af00      	add	r7, sp, #0
 800175a:	6078      	str	r0, [r7, #4]
 800175c:	460b      	mov	r3, r1
 800175e:	807b      	strh	r3, [r7, #2]

    buffer->buffer[buffer->writeIndex] = value;
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	681a      	ldr	r2, [r3, #0]
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	685b      	ldr	r3, [r3, #4]
 8001768:	005b      	lsls	r3, r3, #1
 800176a:	4413      	add	r3, r2
 800176c:	887a      	ldrh	r2, [r7, #2]
 800176e:	801a      	strh	r2, [r3, #0]
    buffer->writeIndex = (buffer->writeIndex+1) % buffer->bufferSize;
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	685b      	ldr	r3, [r3, #4]
 8001774:	3301      	adds	r3, #1
 8001776:	687a      	ldr	r2, [r7, #4]
 8001778:	6892      	ldr	r2, [r2, #8]
 800177a:	fbb3 f1f2 	udiv	r1, r3, r2
 800177e:	fb01 f202 	mul.w	r2, r1, r2
 8001782:	1a9a      	subs	r2, r3, r2
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	605a      	str	r2, [r3, #4]

}
 8001788:	bf00      	nop
 800178a:	370c      	adds	r7, #12
 800178c:	46bd      	mov	sp, r7
 800178e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001792:	4770      	bx	lr

08001794 <getValueInCircularBuffer>:

SampleType getValueInCircularBuffer(CircularBuffer* buffer, uint32_t offset){
 8001794:	b480      	push	{r7}
 8001796:	b085      	sub	sp, #20
 8001798:	af00      	add	r7, sp, #0
 800179a:	6078      	str	r0, [r7, #4]
 800179c:	6039      	str	r1, [r7, #0]

    SampleType output = buffer->buffer[ (buffer->writeIndex + offset ) % buffer->bufferSize ];
 800179e:	687b      	ldr	r3, [r7, #4]
 80017a0:	6819      	ldr	r1, [r3, #0]
 80017a2:	687b      	ldr	r3, [r7, #4]
 80017a4:	685a      	ldr	r2, [r3, #4]
 80017a6:	683b      	ldr	r3, [r7, #0]
 80017a8:	4413      	add	r3, r2
 80017aa:	687a      	ldr	r2, [r7, #4]
 80017ac:	6892      	ldr	r2, [r2, #8]
 80017ae:	fbb3 f0f2 	udiv	r0, r3, r2
 80017b2:	fb00 f202 	mul.w	r2, r0, r2
 80017b6:	1a9b      	subs	r3, r3, r2
 80017b8:	005b      	lsls	r3, r3, #1
 80017ba:	440b      	add	r3, r1
 80017bc:	881b      	ldrh	r3, [r3, #0]
 80017be:	81fb      	strh	r3, [r7, #14]
    return output;
 80017c0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]

}
 80017c4:	4618      	mov	r0, r3
 80017c6:	3714      	adds	r7, #20
 80017c8:	46bd      	mov	sp, r7
 80017ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ce:	4770      	bx	lr

080017d0 <InitIO>:
// 1, SelectingValue -> Disabled
// 2, Disabled -> SelectingFilter
// 3, SelectingFilter -> SelectingValue
uint8_t switchedStateFlag;

void InitIO(){
 80017d0:	b580      	push	{r7, lr}
 80017d2:	af00      	add	r7, sp, #0
	LoadValueIntoShiftRegister(&shiftRegFilterSelect, GetEnabledFilters());
 80017d4:	f7ff fc48 	bl	8001068 <GetEnabledFilters>
 80017d8:	4603      	mov	r3, r0
 80017da:	4619      	mov	r1, r3
 80017dc:	4803      	ldr	r0, [pc, #12]	; (80017ec <InitIO+0x1c>)
 80017de:	f000 f985 	bl	8001aec <LoadValueIntoShiftRegister>
	ResetShiftRegister(&shiftRegLedbar);
 80017e2:	4803      	ldr	r0, [pc, #12]	; (80017f0 <InitIO+0x20>)
 80017e4:	f000 f976 	bl	8001ad4 <ResetShiftRegister>
}
 80017e8:	bf00      	nop
 80017ea:	bd80      	pop	{r7, pc}
 80017ec:	20000008 	.word	0x20000008
 80017f0:	20000020 	.word	0x20000020

080017f4 <HandleSelectingFilter>:

void HandleSelectingFilter(){
 80017f4:	b580      	push	{r7, lr}
 80017f6:	af00      	add	r7, sp, #0

	selectedFilter = (uint16_t)(rotaryEncoder.currentPos/4) % AMOUNT_OF_FILTERS;
 80017f8:	4b0d      	ldr	r3, [pc, #52]	; (8001830 <HandleSelectingFilter+0x3c>)
 80017fa:	781b      	ldrb	r3, [r3, #0]
 80017fc:	089b      	lsrs	r3, r3, #2
 80017fe:	b2da      	uxtb	r2, r3
 8001800:	4b0c      	ldr	r3, [pc, #48]	; (8001834 <HandleSelectingFilter+0x40>)
 8001802:	fba3 1302 	umull	r1, r3, r3, r2
 8001806:	0859      	lsrs	r1, r3, #1
 8001808:	460b      	mov	r3, r1
 800180a:	005b      	lsls	r3, r3, #1
 800180c:	440b      	add	r3, r1
 800180e:	1ad3      	subs	r3, r2, r3
 8001810:	b2da      	uxtb	r2, r3
 8001812:	4b09      	ldr	r3, [pc, #36]	; (8001838 <HandleSelectingFilter+0x44>)
 8001814:	701a      	strb	r2, [r3, #0]
	LoadValueIntoShiftRegister(&shiftRegFilterSelect, 1 << selectedFilter);
 8001816:	4b08      	ldr	r3, [pc, #32]	; (8001838 <HandleSelectingFilter+0x44>)
 8001818:	781b      	ldrb	r3, [r3, #0]
 800181a:	461a      	mov	r2, r3
 800181c:	2301      	movs	r3, #1
 800181e:	4093      	lsls	r3, r2
 8001820:	b2db      	uxtb	r3, r3
 8001822:	4619      	mov	r1, r3
 8001824:	4805      	ldr	r0, [pc, #20]	; (800183c <HandleSelectingFilter+0x48>)
 8001826:	f000 f961 	bl	8001aec <LoadValueIntoShiftRegister>

}
 800182a:	bf00      	nop
 800182c:	bd80      	pop	{r7, pc}
 800182e:	bf00      	nop
 8001830:	20000038 	.word	0x20000038
 8001834:	aaaaaaab 	.word	0xaaaaaaab
 8001838:	200002d5 	.word	0x200002d5
 800183c:	20000008 	.word	0x20000008

08001840 <HandleSelectingValue>:

void HandleSelectingValue(){
 8001840:	b580      	push	{r7, lr}
 8001842:	b082      	sub	sp, #8
 8001844:	af00      	add	r7, sp, #0

	uint8_t led_bar = (rotaryEncoder.currentPos/4);
 8001846:	4b0a      	ldr	r3, [pc, #40]	; (8001870 <HandleSelectingValue+0x30>)
 8001848:	781b      	ldrb	r3, [r3, #0]
 800184a:	089b      	lsrs	r3, r3, #2
 800184c:	71fb      	strb	r3, [r7, #7]
	uint8_t ledbar_array = (1 << led_bar) - 1;
 800184e:	79fb      	ldrb	r3, [r7, #7]
 8001850:	2201      	movs	r2, #1
 8001852:	fa02 f303 	lsl.w	r3, r2, r3
 8001856:	b2db      	uxtb	r3, r3
 8001858:	3b01      	subs	r3, #1
 800185a:	71bb      	strb	r3, [r7, #6]

	LoadValueIntoShiftRegister(&shiftRegLedbar, ledbar_array);
 800185c:	79bb      	ldrb	r3, [r7, #6]
 800185e:	4619      	mov	r1, r3
 8001860:	4804      	ldr	r0, [pc, #16]	; (8001874 <HandleSelectingValue+0x34>)
 8001862:	f000 f943 	bl	8001aec <LoadValueIntoShiftRegister>

}
 8001866:	bf00      	nop
 8001868:	3708      	adds	r7, #8
 800186a:	46bd      	mov	sp, r7
 800186c:	bd80      	pop	{r7, pc}
 800186e:	bf00      	nop
 8001870:	20000038 	.word	0x20000038
 8001874:	20000020 	.word	0x20000020

08001878 <ButtonInterrupt>:

void ButtonInterrupt(uint32_t time){
 8001878:	b480      	push	{r7}
 800187a:	b083      	sub	sp, #12
 800187c:	af00      	add	r7, sp, #0
 800187e:	6078      	str	r0, [r7, #4]

	IOState = (IOState + 1)%3;
 8001880:	4b0e      	ldr	r3, [pc, #56]	; (80018bc <ButtonInterrupt+0x44>)
 8001882:	781b      	ldrb	r3, [r3, #0]
 8001884:	1c5a      	adds	r2, r3, #1
 8001886:	4b0e      	ldr	r3, [pc, #56]	; (80018c0 <ButtonInterrupt+0x48>)
 8001888:	fb83 3102 	smull	r3, r1, r3, r2
 800188c:	17d3      	asrs	r3, r2, #31
 800188e:	1ac9      	subs	r1, r1, r3
 8001890:	460b      	mov	r3, r1
 8001892:	005b      	lsls	r3, r3, #1
 8001894:	440b      	add	r3, r1
 8001896:	1ad1      	subs	r1, r2, r3
 8001898:	b2ca      	uxtb	r2, r1
 800189a:	4b08      	ldr	r3, [pc, #32]	; (80018bc <ButtonInterrupt+0x44>)
 800189c:	701a      	strb	r2, [r3, #0]

	rotaryEncoder.currentPos = 0;
 800189e:	4b09      	ldr	r3, [pc, #36]	; (80018c4 <ButtonInterrupt+0x4c>)
 80018a0:	2200      	movs	r2, #0
 80018a2:	701a      	strb	r2, [r3, #0]

	switchedStateFlag = IOState + 1;
 80018a4:	4b05      	ldr	r3, [pc, #20]	; (80018bc <ButtonInterrupt+0x44>)
 80018a6:	781b      	ldrb	r3, [r3, #0]
 80018a8:	3301      	adds	r3, #1
 80018aa:	b2da      	uxtb	r2, r3
 80018ac:	4b06      	ldr	r3, [pc, #24]	; (80018c8 <ButtonInterrupt+0x50>)
 80018ae:	701a      	strb	r2, [r3, #0]


}
 80018b0:	bf00      	nop
 80018b2:	370c      	adds	r7, #12
 80018b4:	46bd      	mov	sp, r7
 80018b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ba:	4770      	bx	lr
 80018bc:	200002d4 	.word	0x200002d4
 80018c0:	55555556 	.word	0x55555556
 80018c4:	20000038 	.word	0x20000038
 80018c8:	200002d6 	.word	0x200002d6

080018cc <RotaryEncoderInterrupt>:

void RotaryEncoderInterrupt(){
 80018cc:	b580      	push	{r7, lr}
 80018ce:	af00      	add	r7, sp, #0
	rot_intrupt(&rotaryEncoder);
 80018d0:	4802      	ldr	r0, [pc, #8]	; (80018dc <RotaryEncoderInterrupt+0x10>)
 80018d2:	f000 f871 	bl	80019b8 <rot_intrupt>
}
 80018d6:	bf00      	nop
 80018d8:	bd80      	pop	{r7, pc}
 80018da:	bf00      	nop
 80018dc:	20000038 	.word	0x20000038

080018e0 <IOUpdate>:


void IOUpdate(){
 80018e0:	b580      	push	{r7, lr}
 80018e2:	b082      	sub	sp, #8
 80018e4:	af00      	add	r7, sp, #0


	uint8_t buttonPressed = HAL_GPIO_ReadPin(ToggleInput1_GPIO_Port, ToggleInput1_Pin);
 80018e6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80018ea:	481d      	ldr	r0, [pc, #116]	; (8001960 <IOUpdate+0x80>)
 80018ec:	f001 fca6 	bl	800323c <HAL_GPIO_ReadPin>
 80018f0:	4603      	mov	r3, r0
 80018f2:	71fb      	strb	r3, [r7, #7]
	//SetFilterState(0, buttonPressed);


	//Handling Transistions
	if(switchedStateFlag > 0){
 80018f4:	4b1b      	ldr	r3, [pc, #108]	; (8001964 <IOUpdate+0x84>)
 80018f6:	781b      	ldrb	r3, [r3, #0]
 80018f8:	2b00      	cmp	r3, #0
 80018fa:	d01b      	beq.n	8001934 <IOUpdate+0x54>

		switch(switchedStateFlag){
 80018fc:	4b19      	ldr	r3, [pc, #100]	; (8001964 <IOUpdate+0x84>)
 80018fe:	781b      	ldrb	r3, [r3, #0]
 8001900:	2b03      	cmp	r3, #3
 8001902:	d010      	beq.n	8001926 <IOUpdate+0x46>
 8001904:	2b03      	cmp	r3, #3
 8001906:	dc12      	bgt.n	800192e <IOUpdate+0x4e>
 8001908:	2b01      	cmp	r3, #1
 800190a:	d001      	beq.n	8001910 <IOUpdate+0x30>
 800190c:	2b02      	cmp	r3, #2
				LoadValueIntoShiftRegister(&shiftRegFilterSelect, GetEnabledFilters());
				ResetShiftRegister(&shiftRegLedbar);
				break;
			case 2:
				// Nothing needs to be reset
				break;
 800190e:	e00e      	b.n	800192e <IOUpdate+0x4e>
				LoadValueIntoShiftRegister(&shiftRegFilterSelect, GetEnabledFilters());
 8001910:	f7ff fbaa 	bl	8001068 <GetEnabledFilters>
 8001914:	4603      	mov	r3, r0
 8001916:	4619      	mov	r1, r3
 8001918:	4813      	ldr	r0, [pc, #76]	; (8001968 <IOUpdate+0x88>)
 800191a:	f000 f8e7 	bl	8001aec <LoadValueIntoShiftRegister>
				ResetShiftRegister(&shiftRegLedbar);
 800191e:	4813      	ldr	r0, [pc, #76]	; (800196c <IOUpdate+0x8c>)
 8001920:	f000 f8d8 	bl	8001ad4 <ResetShiftRegister>
				break;
 8001924:	e003      	b.n	800192e <IOUpdate+0x4e>
			case 3:
				// Nothing needs to be reset
				rotaryEncoder.currentPos = 4; // At least one led on, at start
 8001926:	4b12      	ldr	r3, [pc, #72]	; (8001970 <IOUpdate+0x90>)
 8001928:	2204      	movs	r2, #4
 800192a:	701a      	strb	r2, [r3, #0]
				break;
 800192c:	bf00      	nop
		}

		switchedStateFlag = 0;
 800192e:	4b0d      	ldr	r3, [pc, #52]	; (8001964 <IOUpdate+0x84>)
 8001930:	2200      	movs	r2, #0
 8001932:	701a      	strb	r2, [r3, #0]

	}

	//Handling states
	switch (IOState) {
 8001934:	4b0f      	ldr	r3, [pc, #60]	; (8001974 <IOUpdate+0x94>)
 8001936:	781b      	ldrb	r3, [r3, #0]
 8001938:	2b02      	cmp	r3, #2
 800193a:	d009      	beq.n	8001950 <IOUpdate+0x70>
 800193c:	2b02      	cmp	r3, #2
 800193e:	dc0b      	bgt.n	8001958 <IOUpdate+0x78>
 8001940:	2b00      	cmp	r3, #0
 8001942:	d008      	beq.n	8001956 <IOUpdate+0x76>
 8001944:	2b01      	cmp	r3, #1
 8001946:	d000      	beq.n	800194a <IOUpdate+0x6a>
	    	break;
	  }



}
 8001948:	e006      	b.n	8001958 <IOUpdate+0x78>
	    	HandleSelectingFilter();
 800194a:	f7ff ff53 	bl	80017f4 <HandleSelectingFilter>
	    	break;
 800194e:	e003      	b.n	8001958 <IOUpdate+0x78>
	    	HandleSelectingValue();
 8001950:	f7ff ff76 	bl	8001840 <HandleSelectingValue>
	    	break;
 8001954:	e000      	b.n	8001958 <IOUpdate+0x78>
	    	break;
 8001956:	bf00      	nop
}
 8001958:	bf00      	nop
 800195a:	3708      	adds	r7, #8
 800195c:	46bd      	mov	sp, r7
 800195e:	bd80      	pop	{r7, pc}
 8001960:	40020000 	.word	0x40020000
 8001964:	200002d6 	.word	0x200002d6
 8001968:	20000008 	.word	0x20000008
 800196c:	20000020 	.word	0x20000020
 8001970:	20000038 	.word	0x20000038
 8001974:	200002d4 	.word	0x200002d4

08001978 <rot_get_state>:

uint8_t rot_old_state =0;
uint8_t rot_new_state=0;


uint8_t rot_get_state(RotaryEncoder_t* rotEncoder) {
 8001978:	b590      	push	{r4, r7, lr}
 800197a:	b083      	sub	sp, #12
 800197c:	af00      	add	r7, sp, #0
 800197e:	6078      	str	r0, [r7, #4]
	return (uint8_t)( (HAL_GPIO_ReadPin(rotEncoder->portB, rotEncoder->pinB) << 1)
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	68da      	ldr	r2, [r3, #12]
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	8a1b      	ldrh	r3, [r3, #16]
 8001988:	4619      	mov	r1, r3
 800198a:	4610      	mov	r0, r2
 800198c:	f001 fc56 	bl	800323c <HAL_GPIO_ReadPin>
 8001990:	4603      	mov	r3, r0
 8001992:	005b      	lsls	r3, r3, #1
                	| (HAL_GPIO_ReadPin(rotEncoder->portA, rotEncoder->pinA)) );
 8001994:	b25c      	sxtb	r4, r3
 8001996:	687b      	ldr	r3, [r7, #4]
 8001998:	685a      	ldr	r2, [r3, #4]
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	891b      	ldrh	r3, [r3, #8]
 800199e:	4619      	mov	r1, r3
 80019a0:	4610      	mov	r0, r2
 80019a2:	f001 fc4b 	bl	800323c <HAL_GPIO_ReadPin>
 80019a6:	4603      	mov	r3, r0
 80019a8:	b25b      	sxtb	r3, r3
 80019aa:	4323      	orrs	r3, r4
 80019ac:	b25b      	sxtb	r3, r3
	return (uint8_t)( (HAL_GPIO_ReadPin(rotEncoder->portB, rotEncoder->pinB) << 1)
 80019ae:	b2db      	uxtb	r3, r3
}
 80019b0:	4618      	mov	r0, r3
 80019b2:	370c      	adds	r7, #12
 80019b4:	46bd      	mov	sp, r7
 80019b6:	bd90      	pop	{r4, r7, pc}

080019b8 <rot_intrupt>:

void rot_intrupt(RotaryEncoder_t* rotEncoder){
 80019b8:	b580      	push	{r7, lr}
 80019ba:	b082      	sub	sp, #8
 80019bc:	af00      	add	r7, sp, #0
 80019be:	6078      	str	r0, [r7, #4]

	  rot_new_state = rot_get_state(rotEncoder);
 80019c0:	6878      	ldr	r0, [r7, #4]
 80019c2:	f7ff ffd9 	bl	8001978 <rot_get_state>
 80019c6:	4603      	mov	r3, r0
 80019c8:	461a      	mov	r2, r3
 80019ca:	4b40      	ldr	r3, [pc, #256]	; (8001acc <rot_intrupt+0x114>)
 80019cc:	701a      	strb	r2, [r3, #0]
	  		// Check transition
	  if (rot_old_state == 3 && rot_new_state == 2) {        // 3 -> 2 transition
 80019ce:	4b40      	ldr	r3, [pc, #256]	; (8001ad0 <rot_intrupt+0x118>)
 80019d0:	781b      	ldrb	r3, [r3, #0]
 80019d2:	2b03      	cmp	r3, #3
 80019d4:	d10a      	bne.n	80019ec <rot_intrupt+0x34>
 80019d6:	4b3d      	ldr	r3, [pc, #244]	; (8001acc <rot_intrupt+0x114>)
 80019d8:	781b      	ldrb	r3, [r3, #0]
 80019da:	2b02      	cmp	r3, #2
 80019dc:	d106      	bne.n	80019ec <rot_intrupt+0x34>
		  rotEncoder->currentPos++;
 80019de:	687b      	ldr	r3, [r7, #4]
 80019e0:	781b      	ldrb	r3, [r3, #0]
 80019e2:	3301      	adds	r3, #1
 80019e4:	b2da      	uxtb	r2, r3
 80019e6:	687b      	ldr	r3, [r7, #4]
 80019e8:	701a      	strb	r2, [r3, #0]
 80019ea:	e067      	b.n	8001abc <rot_intrupt+0x104>
	  } else if (rot_old_state == 2 && rot_new_state == 0) { // 2 -> 0 transition
 80019ec:	4b38      	ldr	r3, [pc, #224]	; (8001ad0 <rot_intrupt+0x118>)
 80019ee:	781b      	ldrb	r3, [r3, #0]
 80019f0:	2b02      	cmp	r3, #2
 80019f2:	d10a      	bne.n	8001a0a <rot_intrupt+0x52>
 80019f4:	4b35      	ldr	r3, [pc, #212]	; (8001acc <rot_intrupt+0x114>)
 80019f6:	781b      	ldrb	r3, [r3, #0]
 80019f8:	2b00      	cmp	r3, #0
 80019fa:	d106      	bne.n	8001a0a <rot_intrupt+0x52>
		  rotEncoder->currentPos++;
 80019fc:	687b      	ldr	r3, [r7, #4]
 80019fe:	781b      	ldrb	r3, [r3, #0]
 8001a00:	3301      	adds	r3, #1
 8001a02:	b2da      	uxtb	r2, r3
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	701a      	strb	r2, [r3, #0]
 8001a08:	e058      	b.n	8001abc <rot_intrupt+0x104>
	  } else if (rot_old_state == 0 && rot_new_state == 1) { // 0 -> 1 transition
 8001a0a:	4b31      	ldr	r3, [pc, #196]	; (8001ad0 <rot_intrupt+0x118>)
 8001a0c:	781b      	ldrb	r3, [r3, #0]
 8001a0e:	2b00      	cmp	r3, #0
 8001a10:	d10a      	bne.n	8001a28 <rot_intrupt+0x70>
 8001a12:	4b2e      	ldr	r3, [pc, #184]	; (8001acc <rot_intrupt+0x114>)
 8001a14:	781b      	ldrb	r3, [r3, #0]
 8001a16:	2b01      	cmp	r3, #1
 8001a18:	d106      	bne.n	8001a28 <rot_intrupt+0x70>
		  rotEncoder->currentPos++;
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	781b      	ldrb	r3, [r3, #0]
 8001a1e:	3301      	adds	r3, #1
 8001a20:	b2da      	uxtb	r2, r3
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	701a      	strb	r2, [r3, #0]
 8001a26:	e049      	b.n	8001abc <rot_intrupt+0x104>
	  } else if (rot_old_state == 1 && rot_new_state == 3) { // 1 -> 3 transition
 8001a28:	4b29      	ldr	r3, [pc, #164]	; (8001ad0 <rot_intrupt+0x118>)
 8001a2a:	781b      	ldrb	r3, [r3, #0]
 8001a2c:	2b01      	cmp	r3, #1
 8001a2e:	d10a      	bne.n	8001a46 <rot_intrupt+0x8e>
 8001a30:	4b26      	ldr	r3, [pc, #152]	; (8001acc <rot_intrupt+0x114>)
 8001a32:	781b      	ldrb	r3, [r3, #0]
 8001a34:	2b03      	cmp	r3, #3
 8001a36:	d106      	bne.n	8001a46 <rot_intrupt+0x8e>
		  rotEncoder->currentPos++;
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	781b      	ldrb	r3, [r3, #0]
 8001a3c:	3301      	adds	r3, #1
 8001a3e:	b2da      	uxtb	r2, r3
 8001a40:	687b      	ldr	r3, [r7, #4]
 8001a42:	701a      	strb	r2, [r3, #0]
 8001a44:	e03a      	b.n	8001abc <rot_intrupt+0x104>
	  } else if (rot_old_state == 3 && rot_new_state == 1) { // 3 -> 1 transition
 8001a46:	4b22      	ldr	r3, [pc, #136]	; (8001ad0 <rot_intrupt+0x118>)
 8001a48:	781b      	ldrb	r3, [r3, #0]
 8001a4a:	2b03      	cmp	r3, #3
 8001a4c:	d10a      	bne.n	8001a64 <rot_intrupt+0xac>
 8001a4e:	4b1f      	ldr	r3, [pc, #124]	; (8001acc <rot_intrupt+0x114>)
 8001a50:	781b      	ldrb	r3, [r3, #0]
 8001a52:	2b01      	cmp	r3, #1
 8001a54:	d106      	bne.n	8001a64 <rot_intrupt+0xac>
		  rotEncoder->currentPos--;
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	781b      	ldrb	r3, [r3, #0]
 8001a5a:	3b01      	subs	r3, #1
 8001a5c:	b2da      	uxtb	r2, r3
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	701a      	strb	r2, [r3, #0]
 8001a62:	e02b      	b.n	8001abc <rot_intrupt+0x104>
	  } else if (rot_old_state == 1 && rot_new_state == 0) { // 1 -> 0 transition
 8001a64:	4b1a      	ldr	r3, [pc, #104]	; (8001ad0 <rot_intrupt+0x118>)
 8001a66:	781b      	ldrb	r3, [r3, #0]
 8001a68:	2b01      	cmp	r3, #1
 8001a6a:	d10a      	bne.n	8001a82 <rot_intrupt+0xca>
 8001a6c:	4b17      	ldr	r3, [pc, #92]	; (8001acc <rot_intrupt+0x114>)
 8001a6e:	781b      	ldrb	r3, [r3, #0]
 8001a70:	2b00      	cmp	r3, #0
 8001a72:	d106      	bne.n	8001a82 <rot_intrupt+0xca>
		  rotEncoder->currentPos--;
 8001a74:	687b      	ldr	r3, [r7, #4]
 8001a76:	781b      	ldrb	r3, [r3, #0]
 8001a78:	3b01      	subs	r3, #1
 8001a7a:	b2da      	uxtb	r2, r3
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	701a      	strb	r2, [r3, #0]
 8001a80:	e01c      	b.n	8001abc <rot_intrupt+0x104>
	  } else if (rot_old_state == 0 && rot_new_state == 2) { // 0 -> 2 transition
 8001a82:	4b13      	ldr	r3, [pc, #76]	; (8001ad0 <rot_intrupt+0x118>)
 8001a84:	781b      	ldrb	r3, [r3, #0]
 8001a86:	2b00      	cmp	r3, #0
 8001a88:	d10a      	bne.n	8001aa0 <rot_intrupt+0xe8>
 8001a8a:	4b10      	ldr	r3, [pc, #64]	; (8001acc <rot_intrupt+0x114>)
 8001a8c:	781b      	ldrb	r3, [r3, #0]
 8001a8e:	2b02      	cmp	r3, #2
 8001a90:	d106      	bne.n	8001aa0 <rot_intrupt+0xe8>
		  rotEncoder->currentPos--;
 8001a92:	687b      	ldr	r3, [r7, #4]
 8001a94:	781b      	ldrb	r3, [r3, #0]
 8001a96:	3b01      	subs	r3, #1
 8001a98:	b2da      	uxtb	r2, r3
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	701a      	strb	r2, [r3, #0]
 8001a9e:	e00d      	b.n	8001abc <rot_intrupt+0x104>
	  } else if (rot_old_state == 2 && rot_new_state == 3) { // 2 -> 3 transition
 8001aa0:	4b0b      	ldr	r3, [pc, #44]	; (8001ad0 <rot_intrupt+0x118>)
 8001aa2:	781b      	ldrb	r3, [r3, #0]
 8001aa4:	2b02      	cmp	r3, #2
 8001aa6:	d109      	bne.n	8001abc <rot_intrupt+0x104>
 8001aa8:	4b08      	ldr	r3, [pc, #32]	; (8001acc <rot_intrupt+0x114>)
 8001aaa:	781b      	ldrb	r3, [r3, #0]
 8001aac:	2b03      	cmp	r3, #3
 8001aae:	d105      	bne.n	8001abc <rot_intrupt+0x104>
		  rotEncoder->currentPos--;
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	781b      	ldrb	r3, [r3, #0]
 8001ab4:	3b01      	subs	r3, #1
 8001ab6:	b2da      	uxtb	r2, r3
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	701a      	strb	r2, [r3, #0]
	  }
	  rot_old_state = rot_new_state;
 8001abc:	4b03      	ldr	r3, [pc, #12]	; (8001acc <rot_intrupt+0x114>)
 8001abe:	781a      	ldrb	r2, [r3, #0]
 8001ac0:	4b03      	ldr	r3, [pc, #12]	; (8001ad0 <rot_intrupt+0x118>)
 8001ac2:	701a      	strb	r2, [r3, #0]
}
 8001ac4:	bf00      	nop
 8001ac6:	3708      	adds	r7, #8
 8001ac8:	46bd      	mov	sp, r7
 8001aca:	bd80      	pop	{r7, pc}
 8001acc:	200002d8 	.word	0x200002d8
 8001ad0:	200002d7 	.word	0x200002d7

08001ad4 <ResetShiftRegister>:
 */


#include "ShiftRegister.h"

void ResetShiftRegister(ShiftRegister_t *reg){
 8001ad4:	b580      	push	{r7, lr}
 8001ad6:	b082      	sub	sp, #8
 8001ad8:	af00      	add	r7, sp, #0
 8001ada:	6078      	str	r0, [r7, #4]
	LoadValueIntoShiftRegister(reg, 0x00);
 8001adc:	2100      	movs	r1, #0
 8001ade:	6878      	ldr	r0, [r7, #4]
 8001ae0:	f000 f804 	bl	8001aec <LoadValueIntoShiftRegister>
}
 8001ae4:	bf00      	nop
 8001ae6:	3708      	adds	r7, #8
 8001ae8:	46bd      	mov	sp, r7
 8001aea:	bd80      	pop	{r7, pc}

08001aec <LoadValueIntoShiftRegister>:

void LoadValueIntoShiftRegister(ShiftRegister_t *reg, uint8_t num){
 8001aec:	b580      	push	{r7, lr}
 8001aee:	b084      	sub	sp, #16
 8001af0:	af00      	add	r7, sp, #0
 8001af2:	6078      	str	r0, [r7, #4]
 8001af4:	460b      	mov	r3, r1
 8001af6:	70fb      	strb	r3, [r7, #3]

	for (int8_t i = 7; i >= 0; i--) {
 8001af8:	2307      	movs	r3, #7
 8001afa:	73fb      	strb	r3, [r7, #15]
 8001afc:	e02c      	b.n	8001b58 <LoadValueIntoShiftRegister+0x6c>
		GPIO_PinState bit_value = ((num >> i) & 1)  ? GPIO_PIN_SET : GPIO_PIN_RESET;
 8001afe:	78fa      	ldrb	r2, [r7, #3]
 8001b00:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b04:	fa42 f303 	asr.w	r3, r2, r3
 8001b08:	b2db      	uxtb	r3, r3
 8001b0a:	f003 0301 	and.w	r3, r3, #1
 8001b0e:	73bb      	strb	r3, [r7, #14]
		HAL_GPIO_WritePin(reg->dataPort, reg->dataPin, bit_value);
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	6898      	ldr	r0, [r3, #8]
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	899b      	ldrh	r3, [r3, #12]
 8001b18:	7bba      	ldrb	r2, [r7, #14]
 8001b1a:	4619      	mov	r1, r3
 8001b1c:	f001 fba6 	bl	800326c <HAL_GPIO_WritePin>
		HAL_Delay(1);
 8001b20:	2001      	movs	r0, #1
 8001b22:	f000 fd41 	bl	80025a8 <HAL_Delay>
		HAL_GPIO_WritePin(reg->clkPort, reg->clkPin, GPIO_PIN_SET);
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	6818      	ldr	r0, [r3, #0]
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	889b      	ldrh	r3, [r3, #4]
 8001b2e:	2201      	movs	r2, #1
 8001b30:	4619      	mov	r1, r3
 8001b32:	f001 fb9b 	bl	800326c <HAL_GPIO_WritePin>
		HAL_Delay(1);
 8001b36:	2001      	movs	r0, #1
 8001b38:	f000 fd36 	bl	80025a8 <HAL_Delay>
		HAL_GPIO_WritePin(reg->clkPort, reg->clkPin, GPIO_PIN_RESET);
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	6818      	ldr	r0, [r3, #0]
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	889b      	ldrh	r3, [r3, #4]
 8001b44:	2200      	movs	r2, #0
 8001b46:	4619      	mov	r1, r3
 8001b48:	f001 fb90 	bl	800326c <HAL_GPIO_WritePin>
	for (int8_t i = 7; i >= 0; i--) {
 8001b4c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b50:	b2db      	uxtb	r3, r3
 8001b52:	3b01      	subs	r3, #1
 8001b54:	b2db      	uxtb	r3, r3
 8001b56:	73fb      	strb	r3, [r7, #15]
 8001b58:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	dace      	bge.n	8001afe <LoadValueIntoShiftRegister+0x12>
	  }

	HAL_GPIO_WritePin(reg->enabledPort, reg->enabledPin, GPIO_PIN_SET);
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	6918      	ldr	r0, [r3, #16]
 8001b64:	687b      	ldr	r3, [r7, #4]
 8001b66:	8a9b      	ldrh	r3, [r3, #20]
 8001b68:	2201      	movs	r2, #1
 8001b6a:	4619      	mov	r1, r3
 8001b6c:	f001 fb7e 	bl	800326c <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8001b70:	2001      	movs	r0, #1
 8001b72:	f000 fd19 	bl	80025a8 <HAL_Delay>
	HAL_GPIO_WritePin(reg->enabledPort, reg->enabledPin, GPIO_PIN_RESET);
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	6918      	ldr	r0, [r3, #16]
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	8a9b      	ldrh	r3, [r3, #20]
 8001b7e:	2200      	movs	r2, #0
 8001b80:	4619      	mov	r1, r3
 8001b82:	f001 fb73 	bl	800326c <HAL_GPIO_WritePin>
}
 8001b86:	bf00      	nop
 8001b88:	3710      	adds	r7, #16
 8001b8a:	46bd      	mov	sp, r7
 8001b8c:	bd80      	pop	{r7, pc}
	...

08001b90 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001b90:	b580      	push	{r7, lr}
 8001b92:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
   HAL_Init();
 8001b94:	f000 fcab 	bl	80024ee <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001b98:	f000 f824 	bl	8001be4 <SystemClock_Config>

/* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 8001b9c:	f000 f890 	bl	8001cc0 <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001ba0:	f000 f978 	bl	8001e94 <MX_GPIO_Init>
  MX_DMA_Init();
 8001ba4:	f000 f944 	bl	8001e30 <MX_DMA_Init>
  MX_I2C1_Init();
 8001ba8:	f000 f8ac 	bl	8001d04 <MX_I2C1_Init>
  MX_I2S1_Init();
 8001bac:	f000 f8ea 	bl	8001d84 <MX_I2S1_Init>
  MX_I2S2_Init();
 8001bb0:	f000 f914 	bl	8001ddc <MX_I2S2_Init>
  /* USER CODE BEGIN 2 */

  InitIO();
 8001bb4:	f7ff fe0c 	bl	80017d0 <InitIO>
  CodecInit(&hi2c1);
 8001bb8:	4807      	ldr	r0, [pc, #28]	; (8001bd8 <main+0x48>)
 8001bba:	f7ff f92d 	bl	8000e18 <CodecInit>

  InitDSP(48000, &hi2s1, &hi2s2); //44117 is in IOC file
 8001bbe:	4a07      	ldr	r2, [pc, #28]	; (8001bdc <main+0x4c>)
 8001bc0:	4907      	ldr	r1, [pc, #28]	; (8001be0 <main+0x50>)
 8001bc2:	f64b 3080 	movw	r0, #48000	; 0xbb80
 8001bc6:	f7ff f9ef 	bl	8000fa8 <InitDSP>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {

	IOUpdate();
 8001bca:	f7ff fe89 	bl	80018e0 <IOUpdate>
	DSPUpdate(&hi2s1);
 8001bce:	4804      	ldr	r0, [pc, #16]	; (8001be0 <main+0x50>)
 8001bd0:	f7ff fa0a 	bl	8000fe8 <DSPUpdate>
	IOUpdate();
 8001bd4:	e7f9      	b.n	8001bca <main+0x3a>
 8001bd6:	bf00      	nop
 8001bd8:	200002dc 	.word	0x200002dc
 8001bdc:	20000370 	.word	0x20000370
 8001be0:	20000330 	.word	0x20000330

08001be4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001be4:	b580      	push	{r7, lr}
 8001be6:	b094      	sub	sp, #80	; 0x50
 8001be8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001bea:	f107 0320 	add.w	r3, r7, #32
 8001bee:	2230      	movs	r2, #48	; 0x30
 8001bf0:	2100      	movs	r1, #0
 8001bf2:	4618      	mov	r0, r3
 8001bf4:	f003 fbe8 	bl	80053c8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001bf8:	f107 030c 	add.w	r3, r7, #12
 8001bfc:	2200      	movs	r2, #0
 8001bfe:	601a      	str	r2, [r3, #0]
 8001c00:	605a      	str	r2, [r3, #4]
 8001c02:	609a      	str	r2, [r3, #8]
 8001c04:	60da      	str	r2, [r3, #12]
 8001c06:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001c08:	4b2b      	ldr	r3, [pc, #172]	; (8001cb8 <SystemClock_Config+0xd4>)
 8001c0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c0c:	4a2a      	ldr	r2, [pc, #168]	; (8001cb8 <SystemClock_Config+0xd4>)
 8001c0e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001c12:	6413      	str	r3, [r2, #64]	; 0x40
 8001c14:	4b28      	ldr	r3, [pc, #160]	; (8001cb8 <SystemClock_Config+0xd4>)
 8001c16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c18:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c1c:	60bb      	str	r3, [r7, #8]
 8001c1e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001c20:	4b26      	ldr	r3, [pc, #152]	; (8001cbc <SystemClock_Config+0xd8>)
 8001c22:	681b      	ldr	r3, [r3, #0]
 8001c24:	4a25      	ldr	r2, [pc, #148]	; (8001cbc <SystemClock_Config+0xd8>)
 8001c26:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001c2a:	6013      	str	r3, [r2, #0]
 8001c2c:	4b23      	ldr	r3, [pc, #140]	; (8001cbc <SystemClock_Config+0xd8>)
 8001c2e:	681b      	ldr	r3, [r3, #0]
 8001c30:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001c34:	607b      	str	r3, [r7, #4]
 8001c36:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001c38:	2301      	movs	r3, #1
 8001c3a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001c3c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001c40:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001c42:	2302      	movs	r3, #2
 8001c44:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001c46:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001c4a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 8001c4c:	2319      	movs	r3, #25
 8001c4e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 432;
 8001c50:	f44f 73d8 	mov.w	r3, #432	; 0x1b0
 8001c54:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001c56:	2302      	movs	r3, #2
 8001c58:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001c5a:	2302      	movs	r3, #2
 8001c5c:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001c5e:	f107 0320 	add.w	r3, r7, #32
 8001c62:	4618      	mov	r0, r3
 8001c64:	f002 fb3e 	bl	80042e4 <HAL_RCC_OscConfig>
 8001c68:	4603      	mov	r3, r0
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	d001      	beq.n	8001c72 <SystemClock_Config+0x8e>
  {
    Error_Handler();
 8001c6e:	f000 f9dd 	bl	800202c <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001c72:	f002 fae7 	bl	8004244 <HAL_PWREx_EnableOverDrive>
 8001c76:	4603      	mov	r3, r0
 8001c78:	2b00      	cmp	r3, #0
 8001c7a:	d001      	beq.n	8001c80 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8001c7c:	f000 f9d6 	bl	800202c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001c80:	230f      	movs	r3, #15
 8001c82:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001c84:	2302      	movs	r3, #2
 8001c86:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001c88:	2300      	movs	r3, #0
 8001c8a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001c8c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001c90:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001c92:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001c96:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8001c98:	f107 030c 	add.w	r3, r7, #12
 8001c9c:	2107      	movs	r1, #7
 8001c9e:	4618      	mov	r0, r3
 8001ca0:	f002 fdc4 	bl	800482c <HAL_RCC_ClockConfig>
 8001ca4:	4603      	mov	r3, r0
 8001ca6:	2b00      	cmp	r3, #0
 8001ca8:	d001      	beq.n	8001cae <SystemClock_Config+0xca>
  {
    Error_Handler();
 8001caa:	f000 f9bf 	bl	800202c <Error_Handler>
  }
}
 8001cae:	bf00      	nop
 8001cb0:	3750      	adds	r7, #80	; 0x50
 8001cb2:	46bd      	mov	sp, r7
 8001cb4:	bd80      	pop	{r7, pc}
 8001cb6:	bf00      	nop
 8001cb8:	40023800 	.word	0x40023800
 8001cbc:	40007000 	.word	0x40007000

08001cc0 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 8001cc0:	b580      	push	{r7, lr}
 8001cc2:	b0a0      	sub	sp, #128	; 0x80
 8001cc4:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cc6:	463b      	mov	r3, r7
 8001cc8:	2280      	movs	r2, #128	; 0x80
 8001cca:	2100      	movs	r1, #0
 8001ccc:	4618      	mov	r0, r3
 8001cce:	f003 fb7b 	bl	80053c8 <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 8001cd2:	2301      	movs	r3, #1
 8001cd4:	603b      	str	r3, [r7, #0]
  PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 8001cd6:	23c0      	movs	r3, #192	; 0xc0
 8001cd8:	607b      	str	r3, [r7, #4]
  PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 8001cda:	2302      	movs	r3, #2
 8001cdc:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 8001cde:	2302      	movs	r3, #2
 8001ce0:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLI2SDivQ = 1;
 8001ce2:	2301      	movs	r3, #1
 8001ce4:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.I2sClockSelection = RCC_I2SCLKSOURCE_PLLI2S;
 8001ce6:	2300      	movs	r3, #0
 8001ce8:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001cea:	463b      	mov	r3, r7
 8001cec:	4618      	mov	r0, r3
 8001cee:	f002 ff4f 	bl	8004b90 <HAL_RCCEx_PeriphCLKConfig>
 8001cf2:	4603      	mov	r3, r0
 8001cf4:	2b00      	cmp	r3, #0
 8001cf6:	d001      	beq.n	8001cfc <PeriphCommonClock_Config+0x3c>
  {
    Error_Handler();
 8001cf8:	f000 f998 	bl	800202c <Error_Handler>
  }
}
 8001cfc:	bf00      	nop
 8001cfe:	3780      	adds	r7, #128	; 0x80
 8001d00:	46bd      	mov	sp, r7
 8001d02:	bd80      	pop	{r7, pc}

08001d04 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001d04:	b580      	push	{r7, lr}
 8001d06:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001d08:	4b1b      	ldr	r3, [pc, #108]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d0a:	4a1c      	ldr	r2, [pc, #112]	; (8001d7c <MX_I2C1_Init+0x78>)
 8001d0c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x20404768;
 8001d0e:	4b1a      	ldr	r3, [pc, #104]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d10:	4a1b      	ldr	r2, [pc, #108]	; (8001d80 <MX_I2C1_Init+0x7c>)
 8001d12:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8001d14:	4b18      	ldr	r3, [pc, #96]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d16:	2200      	movs	r2, #0
 8001d18:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001d1a:	4b17      	ldr	r3, [pc, #92]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d1c:	2201      	movs	r2, #1
 8001d1e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001d20:	4b15      	ldr	r3, [pc, #84]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d22:	2200      	movs	r2, #0
 8001d24:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8001d26:	4b14      	ldr	r3, [pc, #80]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d28:	2200      	movs	r2, #0
 8001d2a:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001d2c:	4b12      	ldr	r3, [pc, #72]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d2e:	2200      	movs	r2, #0
 8001d30:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001d32:	4b11      	ldr	r3, [pc, #68]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d34:	2200      	movs	r2, #0
 8001d36:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001d38:	4b0f      	ldr	r3, [pc, #60]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d3a:	2200      	movs	r2, #0
 8001d3c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001d3e:	480e      	ldr	r0, [pc, #56]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d40:	f001 fac6 	bl	80032d0 <HAL_I2C_Init>
 8001d44:	4603      	mov	r3, r0
 8001d46:	2b00      	cmp	r3, #0
 8001d48:	d001      	beq.n	8001d4e <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8001d4a:	f000 f96f 	bl	800202c <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001d4e:	2100      	movs	r1, #0
 8001d50:	4809      	ldr	r0, [pc, #36]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d52:	f001 fea7 	bl	8003aa4 <HAL_I2CEx_ConfigAnalogFilter>
 8001d56:	4603      	mov	r3, r0
 8001d58:	2b00      	cmp	r3, #0
 8001d5a:	d001      	beq.n	8001d60 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8001d5c:	f000 f966 	bl	800202c <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001d60:	2100      	movs	r1, #0
 8001d62:	4805      	ldr	r0, [pc, #20]	; (8001d78 <MX_I2C1_Init+0x74>)
 8001d64:	f001 fee9 	bl	8003b3a <HAL_I2CEx_ConfigDigitalFilter>
 8001d68:	4603      	mov	r3, r0
 8001d6a:	2b00      	cmp	r3, #0
 8001d6c:	d001      	beq.n	8001d72 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8001d6e:	f000 f95d 	bl	800202c <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001d72:	bf00      	nop
 8001d74:	bd80      	pop	{r7, pc}
 8001d76:	bf00      	nop
 8001d78:	200002dc 	.word	0x200002dc
 8001d7c:	40005400 	.word	0x40005400
 8001d80:	20404768 	.word	0x20404768

08001d84 <MX_I2S1_Init>:
  * @brief I2S1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2S1_Init(void)
{
 8001d84:	b580      	push	{r7, lr}
 8001d86:	af00      	add	r7, sp, #0
  /* USER CODE END I2S1_Init 0 */

  /* USER CODE BEGIN I2S1_Init 1 */

  /* USER CODE END I2S1_Init 1 */
  hi2s1.Instance = SPI1;
 8001d88:	4b12      	ldr	r3, [pc, #72]	; (8001dd4 <MX_I2S1_Init+0x50>)
 8001d8a:	4a13      	ldr	r2, [pc, #76]	; (8001dd8 <MX_I2S1_Init+0x54>)
 8001d8c:	601a      	str	r2, [r3, #0]
  hi2s1.Init.Mode = I2S_MODE_MASTER_TX;
 8001d8e:	4b11      	ldr	r3, [pc, #68]	; (8001dd4 <MX_I2S1_Init+0x50>)
 8001d90:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001d94:	605a      	str	r2, [r3, #4]
  hi2s1.Init.Standard = I2S_STANDARD_PHILIPS;
 8001d96:	4b0f      	ldr	r3, [pc, #60]	; (8001dd4 <MX_I2S1_Init+0x50>)
 8001d98:	2200      	movs	r2, #0
 8001d9a:	609a      	str	r2, [r3, #8]
  hi2s1.Init.DataFormat = I2S_DATAFORMAT_16B;
 8001d9c:	4b0d      	ldr	r3, [pc, #52]	; (8001dd4 <MX_I2S1_Init+0x50>)
 8001d9e:	2200      	movs	r2, #0
 8001da0:	60da      	str	r2, [r3, #12]
  hi2s1.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 8001da2:	4b0c      	ldr	r3, [pc, #48]	; (8001dd4 <MX_I2S1_Init+0x50>)
 8001da4:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001da8:	611a      	str	r2, [r3, #16]
  hi2s1.Init.AudioFreq = I2S_AUDIOFREQ_48K;
 8001daa:	4b0a      	ldr	r3, [pc, #40]	; (8001dd4 <MX_I2S1_Init+0x50>)
 8001dac:	f64b 3280 	movw	r2, #48000	; 0xbb80
 8001db0:	615a      	str	r2, [r3, #20]
  hi2s1.Init.CPOL = I2S_CPOL_LOW;
 8001db2:	4b08      	ldr	r3, [pc, #32]	; (8001dd4 <MX_I2S1_Init+0x50>)
 8001db4:	2200      	movs	r2, #0
 8001db6:	619a      	str	r2, [r3, #24]
  hi2s1.Init.ClockSource = I2S_CLOCK_PLL;
 8001db8:	4b06      	ldr	r3, [pc, #24]	; (8001dd4 <MX_I2S1_Init+0x50>)
 8001dba:	2202      	movs	r2, #2
 8001dbc:	61da      	str	r2, [r3, #28]
  if (HAL_I2S_Init(&hi2s1) != HAL_OK)
 8001dbe:	4805      	ldr	r0, [pc, #20]	; (8001dd4 <MX_I2S1_Init+0x50>)
 8001dc0:	f001 ff08 	bl	8003bd4 <HAL_I2S_Init>
 8001dc4:	4603      	mov	r3, r0
 8001dc6:	2b00      	cmp	r3, #0
 8001dc8:	d001      	beq.n	8001dce <MX_I2S1_Init+0x4a>
  {
    Error_Handler();
 8001dca:	f000 f92f 	bl	800202c <Error_Handler>
  }
  /* USER CODE BEGIN I2S1_Init 2 */

  /* USER CODE END I2S1_Init 2 */

}
 8001dce:	bf00      	nop
 8001dd0:	bd80      	pop	{r7, pc}
 8001dd2:	bf00      	nop
 8001dd4:	20000330 	.word	0x20000330
 8001dd8:	40013000 	.word	0x40013000

08001ddc <MX_I2S2_Init>:
  * @brief I2S2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2S2_Init(void)
{
 8001ddc:	b580      	push	{r7, lr}
 8001dde:	af00      	add	r7, sp, #0
  /* USER CODE END I2S2_Init 0 */

  /* USER CODE BEGIN I2S2_Init 1 */

  /* USER CODE END I2S2_Init 1 */
  hi2s2.Instance = SPI2;
 8001de0:	4b11      	ldr	r3, [pc, #68]	; (8001e28 <MX_I2S2_Init+0x4c>)
 8001de2:	4a12      	ldr	r2, [pc, #72]	; (8001e2c <MX_I2S2_Init+0x50>)
 8001de4:	601a      	str	r2, [r3, #0]
  hi2s2.Init.Mode = I2S_MODE_SLAVE_RX;
 8001de6:	4b10      	ldr	r3, [pc, #64]	; (8001e28 <MX_I2S2_Init+0x4c>)
 8001de8:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001dec:	605a      	str	r2, [r3, #4]
  hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 8001dee:	4b0e      	ldr	r3, [pc, #56]	; (8001e28 <MX_I2S2_Init+0x4c>)
 8001df0:	2200      	movs	r2, #0
 8001df2:	609a      	str	r2, [r3, #8]
  hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 8001df4:	4b0c      	ldr	r3, [pc, #48]	; (8001e28 <MX_I2S2_Init+0x4c>)
 8001df6:	2200      	movs	r2, #0
 8001df8:	60da      	str	r2, [r3, #12]
  hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 8001dfa:	4b0b      	ldr	r3, [pc, #44]	; (8001e28 <MX_I2S2_Init+0x4c>)
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	611a      	str	r2, [r3, #16]
  hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_48K;
 8001e00:	4b09      	ldr	r3, [pc, #36]	; (8001e28 <MX_I2S2_Init+0x4c>)
 8001e02:	f64b 3280 	movw	r2, #48000	; 0xbb80
 8001e06:	615a      	str	r2, [r3, #20]
  hi2s2.Init.CPOL = I2S_CPOL_LOW;
 8001e08:	4b07      	ldr	r3, [pc, #28]	; (8001e28 <MX_I2S2_Init+0x4c>)
 8001e0a:	2200      	movs	r2, #0
 8001e0c:	619a      	str	r2, [r3, #24]
  hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 8001e0e:	4b06      	ldr	r3, [pc, #24]	; (8001e28 <MX_I2S2_Init+0x4c>)
 8001e10:	2202      	movs	r2, #2
 8001e12:	61da      	str	r2, [r3, #28]
  if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 8001e14:	4804      	ldr	r0, [pc, #16]	; (8001e28 <MX_I2S2_Init+0x4c>)
 8001e16:	f001 fedd 	bl	8003bd4 <HAL_I2S_Init>
 8001e1a:	4603      	mov	r3, r0
 8001e1c:	2b00      	cmp	r3, #0
 8001e1e:	d001      	beq.n	8001e24 <MX_I2S2_Init+0x48>
  {
    Error_Handler();
 8001e20:	f000 f904 	bl	800202c <Error_Handler>
  }
  /* USER CODE BEGIN I2S2_Init 2 */

  /* USER CODE END I2S2_Init 2 */

}
 8001e24:	bf00      	nop
 8001e26:	bd80      	pop	{r7, pc}
 8001e28:	20000370 	.word	0x20000370
 8001e2c:	40003800 	.word	0x40003800

08001e30 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8001e30:	b580      	push	{r7, lr}
 8001e32:	b082      	sub	sp, #8
 8001e34:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001e36:	4b16      	ldr	r3, [pc, #88]	; (8001e90 <MX_DMA_Init+0x60>)
 8001e38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e3a:	4a15      	ldr	r2, [pc, #84]	; (8001e90 <MX_DMA_Init+0x60>)
 8001e3c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001e40:	6313      	str	r3, [r2, #48]	; 0x30
 8001e42:	4b13      	ldr	r3, [pc, #76]	; (8001e90 <MX_DMA_Init+0x60>)
 8001e44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e46:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001e4a:	607b      	str	r3, [r7, #4]
 8001e4c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8001e4e:	4b10      	ldr	r3, [pc, #64]	; (8001e90 <MX_DMA_Init+0x60>)
 8001e50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e52:	4a0f      	ldr	r2, [pc, #60]	; (8001e90 <MX_DMA_Init+0x60>)
 8001e54:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001e58:	6313      	str	r3, [r2, #48]	; 0x30
 8001e5a:	4b0d      	ldr	r3, [pc, #52]	; (8001e90 <MX_DMA_Init+0x60>)
 8001e5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e5e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001e62:	603b      	str	r3, [r7, #0]
 8001e64:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 0, 0);
 8001e66:	2200      	movs	r2, #0
 8001e68:	2100      	movs	r1, #0
 8001e6a:	200e      	movs	r0, #14
 8001e6c:	f000 fc9b 	bl	80027a6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 8001e70:	200e      	movs	r0, #14
 8001e72:	f000 fcb4 	bl	80027de <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
 8001e76:	2200      	movs	r2, #0
 8001e78:	2100      	movs	r1, #0
 8001e7a:	203b      	movs	r0, #59	; 0x3b
 8001e7c:	f000 fc93 	bl	80027a6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 8001e80:	203b      	movs	r0, #59	; 0x3b
 8001e82:	f000 fcac 	bl	80027de <HAL_NVIC_EnableIRQ>

}
 8001e86:	bf00      	nop
 8001e88:	3708      	adds	r7, #8
 8001e8a:	46bd      	mov	sp, r7
 8001e8c:	bd80      	pop	{r7, pc}
 8001e8e:	bf00      	nop
 8001e90:	40023800 	.word	0x40023800

08001e94 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001e94:	b580      	push	{r7, lr}
 8001e96:	b08a      	sub	sp, #40	; 0x28
 8001e98:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e9a:	f107 0314 	add.w	r3, r7, #20
 8001e9e:	2200      	movs	r2, #0
 8001ea0:	601a      	str	r2, [r3, #0]
 8001ea2:	605a      	str	r2, [r3, #4]
 8001ea4:	609a      	str	r2, [r3, #8]
 8001ea6:	60da      	str	r2, [r3, #12]
 8001ea8:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001eaa:	4b4a      	ldr	r3, [pc, #296]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001eac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001eae:	4a49      	ldr	r2, [pc, #292]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001eb0:	f043 0304 	orr.w	r3, r3, #4
 8001eb4:	6313      	str	r3, [r2, #48]	; 0x30
 8001eb6:	4b47      	ldr	r3, [pc, #284]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001eb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001eba:	f003 0304 	and.w	r3, r3, #4
 8001ebe:	613b      	str	r3, [r7, #16]
 8001ec0:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001ec2:	4b44      	ldr	r3, [pc, #272]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001ec4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ec6:	4a43      	ldr	r2, [pc, #268]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001ec8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001ecc:	6313      	str	r3, [r2, #48]	; 0x30
 8001ece:	4b41      	ldr	r3, [pc, #260]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001ed0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ed2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001ed6:	60fb      	str	r3, [r7, #12]
 8001ed8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001eda:	4b3e      	ldr	r3, [pc, #248]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001edc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ede:	4a3d      	ldr	r2, [pc, #244]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001ee0:	f043 0301 	orr.w	r3, r3, #1
 8001ee4:	6313      	str	r3, [r2, #48]	; 0x30
 8001ee6:	4b3b      	ldr	r3, [pc, #236]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001ee8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001eea:	f003 0301 	and.w	r3, r3, #1
 8001eee:	60bb      	str	r3, [r7, #8]
 8001ef0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ef2:	4b38      	ldr	r3, [pc, #224]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001ef4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ef6:	4a37      	ldr	r2, [pc, #220]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001ef8:	f043 0302 	orr.w	r3, r3, #2
 8001efc:	6313      	str	r3, [r2, #48]	; 0x30
 8001efe:	4b35      	ldr	r3, [pc, #212]	; (8001fd4 <MX_GPIO_Init+0x140>)
 8001f00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f02:	f003 0302 	and.w	r3, r3, #2
 8001f06:	607b      	str	r3, [r7, #4]
 8001f08:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, ShiftRegFDat_Pin|ShiftRegFStoClk_Pin|ShiftRegFClk_Pin|ShiftRegLBarDat_Pin
 8001f0a:	2200      	movs	r2, #0
 8001f0c:	f24e 010d 	movw	r1, #57357	; 0xe00d
 8001f10:	4831      	ldr	r0, [pc, #196]	; (8001fd8 <MX_GPIO_Init+0x144>)
 8001f12:	f001 f9ab 	bl	800326c <HAL_GPIO_WritePin>
                          |ShiftRegLBarStoClk_Pin|ShiftRegLBarClk_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : ShiftRegFDat_Pin ShiftRegFStoClk_Pin ShiftRegFClk_Pin ShiftRegLBarDat_Pin
                           ShiftRegLBarStoClk_Pin ShiftRegLBarClk_Pin */
  GPIO_InitStruct.Pin = ShiftRegFDat_Pin|ShiftRegFStoClk_Pin|ShiftRegFClk_Pin|ShiftRegLBarDat_Pin
 8001f16:	f24e 030d 	movw	r3, #57357	; 0xe00d
 8001f1a:	617b      	str	r3, [r7, #20]
                          |ShiftRegLBarStoClk_Pin|ShiftRegLBarClk_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f1c:	2301      	movs	r3, #1
 8001f1e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f20:	2300      	movs	r3, #0
 8001f22:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f24:	2300      	movs	r3, #0
 8001f26:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f28:	f107 0314 	add.w	r3, r7, #20
 8001f2c:	4619      	mov	r1, r3
 8001f2e:	482a      	ldr	r0, [pc, #168]	; (8001fd8 <MX_GPIO_Init+0x144>)
 8001f30:	f000 ffe8 	bl	8002f04 <HAL_GPIO_Init>

  /*Configure GPIO pins : RotEncoderInA_Pin RotEncoderButton_Pin */
  GPIO_InitStruct.Pin = RotEncoderInA_Pin|RotEncoderButton_Pin;
 8001f34:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001f38:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001f3a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001f3e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f40:	2300      	movs	r3, #0
 8001f42:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f44:	f107 0314 	add.w	r3, r7, #20
 8001f48:	4619      	mov	r1, r3
 8001f4a:	4823      	ldr	r0, [pc, #140]	; (8001fd8 <MX_GPIO_Init+0x144>)
 8001f4c:	f000 ffda 	bl	8002f04 <HAL_GPIO_Init>

  /*Configure GPIO pin : RotEncoderInB_Pin */
  GPIO_InitStruct.Pin = RotEncoderInB_Pin;
 8001f50:	2380      	movs	r3, #128	; 0x80
 8001f52:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8001f54:	f44f 1344 	mov.w	r3, #3211264	; 0x310000
 8001f58:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f5a:	2300      	movs	r3, #0
 8001f5c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(RotEncoderInB_GPIO_Port, &GPIO_InitStruct);
 8001f5e:	f107 0314 	add.w	r3, r7, #20
 8001f62:	4619      	mov	r1, r3
 8001f64:	481c      	ldr	r0, [pc, #112]	; (8001fd8 <MX_GPIO_Init+0x144>)
 8001f66:	f000 ffcd 	bl	8002f04 <HAL_GPIO_Init>

  /*Configure GPIO pins : ToggleInput4_Pin ToggleInput2_Pin ToggleInput1_Pin ToggleInput8_Pin */
  GPIO_InitStruct.Pin = ToggleInput4_Pin|ToggleInput2_Pin|ToggleInput1_Pin|ToggleInput8_Pin;
 8001f6a:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
 8001f6e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001f70:	2300      	movs	r3, #0
 8001f72:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f74:	2300      	movs	r3, #0
 8001f76:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f78:	f107 0314 	add.w	r3, r7, #20
 8001f7c:	4619      	mov	r1, r3
 8001f7e:	4817      	ldr	r0, [pc, #92]	; (8001fdc <MX_GPIO_Init+0x148>)
 8001f80:	f000 ffc0 	bl	8002f04 <HAL_GPIO_Init>

  /*Configure GPIO pin : ToggleInput3_Pin */
  GPIO_InitStruct.Pin = ToggleInput3_Pin;
 8001f84:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001f88:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001f8a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001f8e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f90:	2300      	movs	r3, #0
 8001f92:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(ToggleInput3_GPIO_Port, &GPIO_InitStruct);
 8001f94:	f107 0314 	add.w	r3, r7, #20
 8001f98:	4619      	mov	r1, r3
 8001f9a:	4810      	ldr	r0, [pc, #64]	; (8001fdc <MX_GPIO_Init+0x148>)
 8001f9c:	f000 ffb2 	bl	8002f04 <HAL_GPIO_Init>

  /*Configure GPIO pins : ToggleInput7_Pin ToggleInput6_Pin ToggleInput5_Pin */
  GPIO_InitStruct.Pin = ToggleInput7_Pin|ToggleInput6_Pin|ToggleInput5_Pin;
 8001fa0:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 8001fa4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001fa6:	2300      	movs	r3, #0
 8001fa8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001faa:	2300      	movs	r3, #0
 8001fac:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fae:	f107 0314 	add.w	r3, r7, #20
 8001fb2:	4619      	mov	r1, r3
 8001fb4:	4808      	ldr	r0, [pc, #32]	; (8001fd8 <MX_GPIO_Init+0x144>)
 8001fb6:	f000 ffa5 	bl	8002f04 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001fba:	2200      	movs	r2, #0
 8001fbc:	2100      	movs	r1, #0
 8001fbe:	2017      	movs	r0, #23
 8001fc0:	f000 fbf1 	bl	80027a6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001fc4:	2017      	movs	r0, #23
 8001fc6:	f000 fc0a 	bl	80027de <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001fca:	bf00      	nop
 8001fcc:	3728      	adds	r7, #40	; 0x28
 8001fce:	46bd      	mov	sp, r7
 8001fd0:	bd80      	pop	{r7, pc}
 8001fd2:	bf00      	nop
 8001fd4:	40023800 	.word	0x40023800
 8001fd8:	40020800 	.word	0x40020800
 8001fdc:	40020000 	.word	0x40020000

08001fe0 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 8001fe0:	b580      	push	{r7, lr}
 8001fe2:	b084      	sub	sp, #16
 8001fe4:	af00      	add	r7, sp, #0
 8001fe6:	4603      	mov	r3, r0
 8001fe8:	80fb      	strh	r3, [r7, #6]

  /* Prevent unused argument(s) compilation warning */
  uint32_t currentMillis = HAL_GetTick();
 8001fea:	f000 fad1 	bl	8002590 <HAL_GetTick>
 8001fee:	60f8      	str	r0, [r7, #12]
  UNUSED(GPIO_Pin);


  if(GPIO_Pin == RotEncoderButton_Pin && (currentMillis - previousMillis > 100)){
 8001ff0:	88fb      	ldrh	r3, [r7, #6]
 8001ff2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001ff6:	d108      	bne.n	800200a <HAL_GPIO_EXTI_Callback+0x2a>
 8001ff8:	4b0b      	ldr	r3, [pc, #44]	; (8002028 <HAL_GPIO_EXTI_Callback+0x48>)
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	68fa      	ldr	r2, [r7, #12]
 8001ffe:	1ad3      	subs	r3, r2, r3
 8002000:	2b64      	cmp	r3, #100	; 0x64
 8002002:	d902      	bls.n	800200a <HAL_GPIO_EXTI_Callback+0x2a>
	  ButtonInterrupt(currentMillis);
 8002004:	68f8      	ldr	r0, [r7, #12]
 8002006:	f7ff fc37 	bl	8001878 <ButtonInterrupt>
  }

  if(GPIO_Pin == RotEncoderInA_Pin || GPIO_Pin == RotEncoderInB_Pin){
 800200a:	88fb      	ldrh	r3, [r7, #6]
 800200c:	2b40      	cmp	r3, #64	; 0x40
 800200e:	d002      	beq.n	8002016 <HAL_GPIO_EXTI_Callback+0x36>
 8002010:	88fb      	ldrh	r3, [r7, #6]
 8002012:	2b80      	cmp	r3, #128	; 0x80
 8002014:	d101      	bne.n	800201a <HAL_GPIO_EXTI_Callback+0x3a>
	  RotaryEncoderInterrupt();
 8002016:	f7ff fc59 	bl	80018cc <RotaryEncoderInterrupt>
  }

  previousMillis = currentMillis;
 800201a:	4a03      	ldr	r2, [pc, #12]	; (8002028 <HAL_GPIO_EXTI_Callback+0x48>)
 800201c:	68fb      	ldr	r3, [r7, #12]
 800201e:	6013      	str	r3, [r2, #0]

}
 8002020:	bf00      	nop
 8002022:	3710      	adds	r7, #16
 8002024:	46bd      	mov	sp, r7
 8002026:	bd80      	pop	{r7, pc}
 8002028:	20000470 	.word	0x20000470

0800202c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800202c:	b480      	push	{r7}
 800202e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002030:	b672      	cpsid	i
}
 8002032:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002034:	e7fe      	b.n	8002034 <Error_Handler+0x8>
	...

08002038 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002038:	b480      	push	{r7}
 800203a:	b083      	sub	sp, #12
 800203c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 800203e:	4b0f      	ldr	r3, [pc, #60]	; (800207c <HAL_MspInit+0x44>)
 8002040:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002042:	4a0e      	ldr	r2, [pc, #56]	; (800207c <HAL_MspInit+0x44>)
 8002044:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002048:	6413      	str	r3, [r2, #64]	; 0x40
 800204a:	4b0c      	ldr	r3, [pc, #48]	; (800207c <HAL_MspInit+0x44>)
 800204c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800204e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002052:	607b      	str	r3, [r7, #4]
 8002054:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002056:	4b09      	ldr	r3, [pc, #36]	; (800207c <HAL_MspInit+0x44>)
 8002058:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800205a:	4a08      	ldr	r2, [pc, #32]	; (800207c <HAL_MspInit+0x44>)
 800205c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002060:	6453      	str	r3, [r2, #68]	; 0x44
 8002062:	4b06      	ldr	r3, [pc, #24]	; (800207c <HAL_MspInit+0x44>)
 8002064:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002066:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800206a:	603b      	str	r3, [r7, #0]
 800206c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800206e:	bf00      	nop
 8002070:	370c      	adds	r7, #12
 8002072:	46bd      	mov	sp, r7
 8002074:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002078:	4770      	bx	lr
 800207a:	bf00      	nop
 800207c:	40023800 	.word	0x40023800

08002080 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002080:	b580      	push	{r7, lr}
 8002082:	b0aa      	sub	sp, #168	; 0xa8
 8002084:	af00      	add	r7, sp, #0
 8002086:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002088:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800208c:	2200      	movs	r2, #0
 800208e:	601a      	str	r2, [r3, #0]
 8002090:	605a      	str	r2, [r3, #4]
 8002092:	609a      	str	r2, [r3, #8]
 8002094:	60da      	str	r2, [r3, #12]
 8002096:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002098:	f107 0314 	add.w	r3, r7, #20
 800209c:	2280      	movs	r2, #128	; 0x80
 800209e:	2100      	movs	r1, #0
 80020a0:	4618      	mov	r0, r3
 80020a2:	f003 f991 	bl	80053c8 <memset>
  if(hi2c->Instance==I2C1)
 80020a6:	687b      	ldr	r3, [r7, #4]
 80020a8:	681b      	ldr	r3, [r3, #0]
 80020aa:	4a21      	ldr	r2, [pc, #132]	; (8002130 <HAL_I2C_MspInit+0xb0>)
 80020ac:	4293      	cmp	r3, r2
 80020ae:	d13b      	bne.n	8002128 <HAL_I2C_MspInit+0xa8>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 80020b0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80020b4:	617b      	str	r3, [r7, #20]
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 80020b6:	2300      	movs	r3, #0
 80020b8:	673b      	str	r3, [r7, #112]	; 0x70
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80020ba:	f107 0314 	add.w	r3, r7, #20
 80020be:	4618      	mov	r0, r3
 80020c0:	f002 fd66 	bl	8004b90 <HAL_RCCEx_PeriphCLKConfig>
 80020c4:	4603      	mov	r3, r0
 80020c6:	2b00      	cmp	r3, #0
 80020c8:	d001      	beq.n	80020ce <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 80020ca:	f7ff ffaf 	bl	800202c <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80020ce:	4b19      	ldr	r3, [pc, #100]	; (8002134 <HAL_I2C_MspInit+0xb4>)
 80020d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020d2:	4a18      	ldr	r2, [pc, #96]	; (8002134 <HAL_I2C_MspInit+0xb4>)
 80020d4:	f043 0302 	orr.w	r3, r3, #2
 80020d8:	6313      	str	r3, [r2, #48]	; 0x30
 80020da:	4b16      	ldr	r3, [pc, #88]	; (8002134 <HAL_I2C_MspInit+0xb4>)
 80020dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020de:	f003 0302 	and.w	r3, r3, #2
 80020e2:	613b      	str	r3, [r7, #16]
 80020e4:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80020e6:	23c0      	movs	r3, #192	; 0xc0
 80020e8:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80020ec:	2312      	movs	r3, #18
 80020ee:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020f2:	2300      	movs	r3, #0
 80020f4:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020f8:	2303      	movs	r3, #3
 80020fa:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80020fe:	2304      	movs	r3, #4
 8002100:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002104:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8002108:	4619      	mov	r1, r3
 800210a:	480b      	ldr	r0, [pc, #44]	; (8002138 <HAL_I2C_MspInit+0xb8>)
 800210c:	f000 fefa 	bl	8002f04 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002110:	4b08      	ldr	r3, [pc, #32]	; (8002134 <HAL_I2C_MspInit+0xb4>)
 8002112:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002114:	4a07      	ldr	r2, [pc, #28]	; (8002134 <HAL_I2C_MspInit+0xb4>)
 8002116:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800211a:	6413      	str	r3, [r2, #64]	; 0x40
 800211c:	4b05      	ldr	r3, [pc, #20]	; (8002134 <HAL_I2C_MspInit+0xb4>)
 800211e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002120:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002124:	60fb      	str	r3, [r7, #12]
 8002126:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8002128:	bf00      	nop
 800212a:	37a8      	adds	r7, #168	; 0xa8
 800212c:	46bd      	mov	sp, r7
 800212e:	bd80      	pop	{r7, pc}
 8002130:	40005400 	.word	0x40005400
 8002134:	40023800 	.word	0x40023800
 8002138:	40020400 	.word	0x40020400

0800213c <HAL_I2S_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2s: I2S handle pointer
* @retval None
*/
void HAL_I2S_MspInit(I2S_HandleTypeDef* hi2s)
{
 800213c:	b580      	push	{r7, lr}
 800213e:	b08e      	sub	sp, #56	; 0x38
 8002140:	af00      	add	r7, sp, #0
 8002142:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002144:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002148:	2200      	movs	r2, #0
 800214a:	601a      	str	r2, [r3, #0]
 800214c:	605a      	str	r2, [r3, #4]
 800214e:	609a      	str	r2, [r3, #8]
 8002150:	60da      	str	r2, [r3, #12]
 8002152:	611a      	str	r2, [r3, #16]
  if(hi2s->Instance==SPI1)
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	681b      	ldr	r3, [r3, #0]
 8002158:	4a7c      	ldr	r2, [pc, #496]	; (800234c <HAL_I2S_MspInit+0x210>)
 800215a:	4293      	cmp	r3, r2
 800215c:	d176      	bne.n	800224c <HAL_I2S_MspInit+0x110>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 800215e:	4b7c      	ldr	r3, [pc, #496]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002160:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002162:	4a7b      	ldr	r2, [pc, #492]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002164:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002168:	6453      	str	r3, [r2, #68]	; 0x44
 800216a:	4b79      	ldr	r3, [pc, #484]	; (8002350 <HAL_I2S_MspInit+0x214>)
 800216c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800216e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002172:	623b      	str	r3, [r7, #32]
 8002174:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002176:	4b76      	ldr	r3, [pc, #472]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002178:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800217a:	4a75      	ldr	r2, [pc, #468]	; (8002350 <HAL_I2S_MspInit+0x214>)
 800217c:	f043 0301 	orr.w	r3, r3, #1
 8002180:	6313      	str	r3, [r2, #48]	; 0x30
 8002182:	4b73      	ldr	r3, [pc, #460]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002184:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002186:	f003 0301 	and.w	r3, r3, #1
 800218a:	61fb      	str	r3, [r7, #28]
 800218c:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800218e:	4b70      	ldr	r3, [pc, #448]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002190:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002192:	4a6f      	ldr	r2, [pc, #444]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002194:	f043 0304 	orr.w	r3, r3, #4
 8002198:	6313      	str	r3, [r2, #48]	; 0x30
 800219a:	4b6d      	ldr	r3, [pc, #436]	; (8002350 <HAL_I2S_MspInit+0x214>)
 800219c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800219e:	f003 0304 	and.w	r3, r3, #4
 80021a2:	61bb      	str	r3, [r7, #24]
 80021a4:	69bb      	ldr	r3, [r7, #24]
    PA4     ------> I2S1_WS
    PA5     ------> I2S1_CK
    PA7     ------> I2S1_SD
    PC4     ------> I2S1_MCK
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7;
 80021a6:	23b0      	movs	r3, #176	; 0xb0
 80021a8:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021aa:	2302      	movs	r3, #2
 80021ac:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021ae:	2300      	movs	r3, #0
 80021b0:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021b2:	2300      	movs	r3, #0
 80021b4:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80021b6:	2305      	movs	r3, #5
 80021b8:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021ba:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80021be:	4619      	mov	r1, r3
 80021c0:	4864      	ldr	r0, [pc, #400]	; (8002354 <HAL_I2S_MspInit+0x218>)
 80021c2:	f000 fe9f 	bl	8002f04 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_4;
 80021c6:	2310      	movs	r3, #16
 80021c8:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021ca:	2302      	movs	r3, #2
 80021cc:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021ce:	2300      	movs	r3, #0
 80021d0:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021d2:	2300      	movs	r3, #0
 80021d4:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80021d6:	2305      	movs	r3, #5
 80021d8:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021da:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80021de:	4619      	mov	r1, r3
 80021e0:	485d      	ldr	r0, [pc, #372]	; (8002358 <HAL_I2S_MspInit+0x21c>)
 80021e2:	f000 fe8f 	bl	8002f04 <HAL_GPIO_Init>

    /* I2S1 DMA Init */
    /* SPI1_TX Init */
    hdma_spi1_tx.Instance = DMA2_Stream3;
 80021e6:	4b5d      	ldr	r3, [pc, #372]	; (800235c <HAL_I2S_MspInit+0x220>)
 80021e8:	4a5d      	ldr	r2, [pc, #372]	; (8002360 <HAL_I2S_MspInit+0x224>)
 80021ea:	601a      	str	r2, [r3, #0]
    hdma_spi1_tx.Init.Channel = DMA_CHANNEL_3;
 80021ec:	4b5b      	ldr	r3, [pc, #364]	; (800235c <HAL_I2S_MspInit+0x220>)
 80021ee:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 80021f2:	605a      	str	r2, [r3, #4]
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80021f4:	4b59      	ldr	r3, [pc, #356]	; (800235c <HAL_I2S_MspInit+0x220>)
 80021f6:	2240      	movs	r2, #64	; 0x40
 80021f8:	609a      	str	r2, [r3, #8]
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80021fa:	4b58      	ldr	r3, [pc, #352]	; (800235c <HAL_I2S_MspInit+0x220>)
 80021fc:	2200      	movs	r2, #0
 80021fe:	60da      	str	r2, [r3, #12]
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002200:	4b56      	ldr	r3, [pc, #344]	; (800235c <HAL_I2S_MspInit+0x220>)
 8002202:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002206:	611a      	str	r2, [r3, #16]
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002208:	4b54      	ldr	r3, [pc, #336]	; (800235c <HAL_I2S_MspInit+0x220>)
 800220a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800220e:	615a      	str	r2, [r3, #20]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8002210:	4b52      	ldr	r3, [pc, #328]	; (800235c <HAL_I2S_MspInit+0x220>)
 8002212:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002216:	619a      	str	r2, [r3, #24]
    hdma_spi1_tx.Init.Mode = DMA_CIRCULAR;
 8002218:	4b50      	ldr	r3, [pc, #320]	; (800235c <HAL_I2S_MspInit+0x220>)
 800221a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800221e:	61da      	str	r2, [r3, #28]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8002220:	4b4e      	ldr	r3, [pc, #312]	; (800235c <HAL_I2S_MspInit+0x220>)
 8002222:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8002226:	621a      	str	r2, [r3, #32]
    hdma_spi1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002228:	4b4c      	ldr	r3, [pc, #304]	; (800235c <HAL_I2S_MspInit+0x220>)
 800222a:	2200      	movs	r2, #0
 800222c:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 800222e:	484b      	ldr	r0, [pc, #300]	; (800235c <HAL_I2S_MspInit+0x220>)
 8002230:	f000 faf0 	bl	8002814 <HAL_DMA_Init>
 8002234:	4603      	mov	r3, r0
 8002236:	2b00      	cmp	r3, #0
 8002238:	d001      	beq.n	800223e <HAL_I2S_MspInit+0x102>
    {
      Error_Handler();
 800223a:	f7ff fef7 	bl	800202c <Error_Handler>
    }

    __HAL_LINKDMA(hi2s,hdmatx,hdma_spi1_tx);
 800223e:	687b      	ldr	r3, [r7, #4]
 8002240:	4a46      	ldr	r2, [pc, #280]	; (800235c <HAL_I2S_MspInit+0x220>)
 8002242:	631a      	str	r2, [r3, #48]	; 0x30
 8002244:	4a45      	ldr	r2, [pc, #276]	; (800235c <HAL_I2S_MspInit+0x220>)
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	6393      	str	r3, [r2, #56]	; 0x38
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 800224a:	e07a      	b.n	8002342 <HAL_I2S_MspInit+0x206>
  else if(hi2s->Instance==SPI2)
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	681b      	ldr	r3, [r3, #0]
 8002250:	4a44      	ldr	r2, [pc, #272]	; (8002364 <HAL_I2S_MspInit+0x228>)
 8002252:	4293      	cmp	r3, r2
 8002254:	d175      	bne.n	8002342 <HAL_I2S_MspInit+0x206>
    __HAL_RCC_SPI2_CLK_ENABLE();
 8002256:	4b3e      	ldr	r3, [pc, #248]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002258:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800225a:	4a3d      	ldr	r2, [pc, #244]	; (8002350 <HAL_I2S_MspInit+0x214>)
 800225c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002260:	6413      	str	r3, [r2, #64]	; 0x40
 8002262:	4b3b      	ldr	r3, [pc, #236]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002264:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002266:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800226a:	617b      	str	r3, [r7, #20]
 800226c:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800226e:	4b38      	ldr	r3, [pc, #224]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002270:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002272:	4a37      	ldr	r2, [pc, #220]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002274:	f043 0304 	orr.w	r3, r3, #4
 8002278:	6313      	str	r3, [r2, #48]	; 0x30
 800227a:	4b35      	ldr	r3, [pc, #212]	; (8002350 <HAL_I2S_MspInit+0x214>)
 800227c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800227e:	f003 0304 	and.w	r3, r3, #4
 8002282:	613b      	str	r3, [r7, #16]
 8002284:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002286:	4b32      	ldr	r3, [pc, #200]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800228a:	4a31      	ldr	r2, [pc, #196]	; (8002350 <HAL_I2S_MspInit+0x214>)
 800228c:	f043 0302 	orr.w	r3, r3, #2
 8002290:	6313      	str	r3, [r2, #48]	; 0x30
 8002292:	4b2f      	ldr	r3, [pc, #188]	; (8002350 <HAL_I2S_MspInit+0x214>)
 8002294:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002296:	f003 0302 	and.w	r3, r3, #2
 800229a:	60fb      	str	r3, [r7, #12]
 800229c:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 800229e:	2302      	movs	r3, #2
 80022a0:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022a2:	2302      	movs	r3, #2
 80022a4:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022a6:	2300      	movs	r3, #0
 80022a8:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80022aa:	2300      	movs	r3, #0
 80022ac:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80022ae:	2305      	movs	r3, #5
 80022b0:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022b2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80022b6:	4619      	mov	r1, r3
 80022b8:	4827      	ldr	r0, [pc, #156]	; (8002358 <HAL_I2S_MspInit+0x21c>)
 80022ba:	f000 fe23 	bl	8002f04 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80022be:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80022c2:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022c4:	2302      	movs	r3, #2
 80022c6:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022c8:	2300      	movs	r3, #0
 80022ca:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80022cc:	2300      	movs	r3, #0
 80022ce:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80022d0:	2305      	movs	r3, #5
 80022d2:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022d4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80022d8:	4619      	mov	r1, r3
 80022da:	4823      	ldr	r0, [pc, #140]	; (8002368 <HAL_I2S_MspInit+0x22c>)
 80022dc:	f000 fe12 	bl	8002f04 <HAL_GPIO_Init>
    hdma_spi2_rx.Instance = DMA1_Stream3;
 80022e0:	4b22      	ldr	r3, [pc, #136]	; (800236c <HAL_I2S_MspInit+0x230>)
 80022e2:	4a23      	ldr	r2, [pc, #140]	; (8002370 <HAL_I2S_MspInit+0x234>)
 80022e4:	601a      	str	r2, [r3, #0]
    hdma_spi2_rx.Init.Channel = DMA_CHANNEL_0;
 80022e6:	4b21      	ldr	r3, [pc, #132]	; (800236c <HAL_I2S_MspInit+0x230>)
 80022e8:	2200      	movs	r2, #0
 80022ea:	605a      	str	r2, [r3, #4]
    hdma_spi2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80022ec:	4b1f      	ldr	r3, [pc, #124]	; (800236c <HAL_I2S_MspInit+0x230>)
 80022ee:	2200      	movs	r2, #0
 80022f0:	609a      	str	r2, [r3, #8]
    hdma_spi2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80022f2:	4b1e      	ldr	r3, [pc, #120]	; (800236c <HAL_I2S_MspInit+0x230>)
 80022f4:	2200      	movs	r2, #0
 80022f6:	60da      	str	r2, [r3, #12]
    hdma_spi2_rx.Init.MemInc = DMA_MINC_ENABLE;
 80022f8:	4b1c      	ldr	r3, [pc, #112]	; (800236c <HAL_I2S_MspInit+0x230>)
 80022fa:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80022fe:	611a      	str	r2, [r3, #16]
    hdma_spi2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8002300:	4b1a      	ldr	r3, [pc, #104]	; (800236c <HAL_I2S_MspInit+0x230>)
 8002302:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002306:	615a      	str	r2, [r3, #20]
    hdma_spi2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8002308:	4b18      	ldr	r3, [pc, #96]	; (800236c <HAL_I2S_MspInit+0x230>)
 800230a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800230e:	619a      	str	r2, [r3, #24]
    hdma_spi2_rx.Init.Mode = DMA_CIRCULAR;
 8002310:	4b16      	ldr	r3, [pc, #88]	; (800236c <HAL_I2S_MspInit+0x230>)
 8002312:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002316:	61da      	str	r2, [r3, #28]
    hdma_spi2_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8002318:	4b14      	ldr	r3, [pc, #80]	; (800236c <HAL_I2S_MspInit+0x230>)
 800231a:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 800231e:	621a      	str	r2, [r3, #32]
    hdma_spi2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002320:	4b12      	ldr	r3, [pc, #72]	; (800236c <HAL_I2S_MspInit+0x230>)
 8002322:	2200      	movs	r2, #0
 8002324:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi2_rx) != HAL_OK)
 8002326:	4811      	ldr	r0, [pc, #68]	; (800236c <HAL_I2S_MspInit+0x230>)
 8002328:	f000 fa74 	bl	8002814 <HAL_DMA_Init>
 800232c:	4603      	mov	r3, r0
 800232e:	2b00      	cmp	r3, #0
 8002330:	d001      	beq.n	8002336 <HAL_I2S_MspInit+0x1fa>
      Error_Handler();
 8002332:	f7ff fe7b 	bl	800202c <Error_Handler>
    __HAL_LINKDMA(hi2s,hdmarx,hdma_spi2_rx);
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	4a0c      	ldr	r2, [pc, #48]	; (800236c <HAL_I2S_MspInit+0x230>)
 800233a:	635a      	str	r2, [r3, #52]	; 0x34
 800233c:	4a0b      	ldr	r2, [pc, #44]	; (800236c <HAL_I2S_MspInit+0x230>)
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	6393      	str	r3, [r2, #56]	; 0x38
}
 8002342:	bf00      	nop
 8002344:	3738      	adds	r7, #56	; 0x38
 8002346:	46bd      	mov	sp, r7
 8002348:	bd80      	pop	{r7, pc}
 800234a:	bf00      	nop
 800234c:	40013000 	.word	0x40013000
 8002350:	40023800 	.word	0x40023800
 8002354:	40020000 	.word	0x40020000
 8002358:	40020800 	.word	0x40020800
 800235c:	200003b0 	.word	0x200003b0
 8002360:	40026458 	.word	0x40026458
 8002364:	40003800 	.word	0x40003800
 8002368:	40020400 	.word	0x40020400
 800236c:	20000410 	.word	0x20000410
 8002370:	40026058 	.word	0x40026058

08002374 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002374:	b480      	push	{r7}
 8002376:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002378:	e7fe      	b.n	8002378 <NMI_Handler+0x4>

0800237a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800237a:	b480      	push	{r7}
 800237c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800237e:	e7fe      	b.n	800237e <HardFault_Handler+0x4>

08002380 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002380:	b480      	push	{r7}
 8002382:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002384:	e7fe      	b.n	8002384 <MemManage_Handler+0x4>

08002386 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002386:	b480      	push	{r7}
 8002388:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800238a:	e7fe      	b.n	800238a <BusFault_Handler+0x4>

0800238c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800238c:	b480      	push	{r7}
 800238e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002390:	e7fe      	b.n	8002390 <UsageFault_Handler+0x4>

08002392 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002392:	b480      	push	{r7}
 8002394:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002396:	bf00      	nop
 8002398:	46bd      	mov	sp, r7
 800239a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800239e:	4770      	bx	lr

080023a0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80023a0:	b480      	push	{r7}
 80023a2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80023a4:	bf00      	nop
 80023a6:	46bd      	mov	sp, r7
 80023a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ac:	4770      	bx	lr

080023ae <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80023ae:	b480      	push	{r7}
 80023b0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80023b2:	bf00      	nop
 80023b4:	46bd      	mov	sp, r7
 80023b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ba:	4770      	bx	lr

080023bc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80023bc:	b580      	push	{r7, lr}
 80023be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80023c0:	f000 f8d2 	bl	8002568 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80023c4:	bf00      	nop
 80023c6:	bd80      	pop	{r7, pc}

080023c8 <DMA1_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA1 stream3 global interrupt.
  */
void DMA1_Stream3_IRQHandler(void)
{
 80023c8:	b580      	push	{r7, lr}
 80023ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */

  /* USER CODE END DMA1_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_rx);
 80023cc:	4802      	ldr	r0, [pc, #8]	; (80023d8 <DMA1_Stream3_IRQHandler+0x10>)
 80023ce:	f000 fb2f 	bl	8002a30 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */

  /* USER CODE END DMA1_Stream3_IRQn 1 */
}
 80023d2:	bf00      	nop
 80023d4:	bd80      	pop	{r7, pc}
 80023d6:	bf00      	nop
 80023d8:	20000410 	.word	0x20000410

080023dc <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 80023dc:	b580      	push	{r7, lr}
 80023de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(RotEncoderInA_Pin);
 80023e0:	2040      	movs	r0, #64	; 0x40
 80023e2:	f000 ff5d 	bl	80032a0 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(RotEncoderInB_Pin);
 80023e6:	2080      	movs	r0, #128	; 0x80
 80023e8:	f000 ff5a 	bl	80032a0 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(RotEncoderButton_Pin);
 80023ec:	f44f 7080 	mov.w	r0, #256	; 0x100
 80023f0:	f000 ff56 	bl	80032a0 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 80023f4:	bf00      	nop
 80023f6:	bd80      	pop	{r7, pc}

080023f8 <DMA2_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA2 stream3 global interrupt.
  */
void DMA2_Stream3_IRQHandler(void)
{
 80023f8:	b580      	push	{r7, lr}
 80023fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */

  /* USER CODE END DMA2_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_tx);
 80023fc:	4802      	ldr	r0, [pc, #8]	; (8002408 <DMA2_Stream3_IRQHandler+0x10>)
 80023fe:	f000 fb17 	bl	8002a30 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */

  /* USER CODE END DMA2_Stream3_IRQn 1 */
}
 8002402:	bf00      	nop
 8002404:	bd80      	pop	{r7, pc}
 8002406:	bf00      	nop
 8002408:	200003b0 	.word	0x200003b0

0800240c <_sbrk>:
 800240c:	b580      	push	{r7, lr}
 800240e:	b086      	sub	sp, #24
 8002410:	af00      	add	r7, sp, #0
 8002412:	6078      	str	r0, [r7, #4]
 8002414:	4a14      	ldr	r2, [pc, #80]	; (8002468 <_sbrk+0x5c>)
 8002416:	4b15      	ldr	r3, [pc, #84]	; (800246c <_sbrk+0x60>)
 8002418:	1ad3      	subs	r3, r2, r3
 800241a:	617b      	str	r3, [r7, #20]
 800241c:	697b      	ldr	r3, [r7, #20]
 800241e:	613b      	str	r3, [r7, #16]
 8002420:	4b13      	ldr	r3, [pc, #76]	; (8002470 <_sbrk+0x64>)
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	2b00      	cmp	r3, #0
 8002426:	d102      	bne.n	800242e <_sbrk+0x22>
 8002428:	4b11      	ldr	r3, [pc, #68]	; (8002470 <_sbrk+0x64>)
 800242a:	4a12      	ldr	r2, [pc, #72]	; (8002474 <_sbrk+0x68>)
 800242c:	601a      	str	r2, [r3, #0]
 800242e:	4b10      	ldr	r3, [pc, #64]	; (8002470 <_sbrk+0x64>)
 8002430:	681a      	ldr	r2, [r3, #0]
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	4413      	add	r3, r2
 8002436:	693a      	ldr	r2, [r7, #16]
 8002438:	429a      	cmp	r2, r3
 800243a:	d207      	bcs.n	800244c <_sbrk+0x40>
 800243c:	f002 ffdc 	bl	80053f8 <__errno>
 8002440:	4603      	mov	r3, r0
 8002442:	220c      	movs	r2, #12
 8002444:	601a      	str	r2, [r3, #0]
 8002446:	f04f 33ff 	mov.w	r3, #4294967295
 800244a:	e009      	b.n	8002460 <_sbrk+0x54>
 800244c:	4b08      	ldr	r3, [pc, #32]	; (8002470 <_sbrk+0x64>)
 800244e:	681b      	ldr	r3, [r3, #0]
 8002450:	60fb      	str	r3, [r7, #12]
 8002452:	4b07      	ldr	r3, [pc, #28]	; (8002470 <_sbrk+0x64>)
 8002454:	681a      	ldr	r2, [r3, #0]
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	4413      	add	r3, r2
 800245a:	4a05      	ldr	r2, [pc, #20]	; (8002470 <_sbrk+0x64>)
 800245c:	6013      	str	r3, [r2, #0]
 800245e:	68fb      	ldr	r3, [r7, #12]
 8002460:	4618      	mov	r0, r3
 8002462:	3718      	adds	r7, #24
 8002464:	46bd      	mov	sp, r7
 8002466:	bd80      	pop	{r7, pc}
 8002468:	20040000 	.word	0x20040000
 800246c:	00000400 	.word	0x00000400
 8002470:	20000474 	.word	0x20000474
 8002474:	200005c8 	.word	0x200005c8

08002478 <SystemInit>:
 8002478:	b480      	push	{r7}
 800247a:	af00      	add	r7, sp, #0
 800247c:	4b06      	ldr	r3, [pc, #24]	; (8002498 <SystemInit+0x20>)
 800247e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002482:	4a05      	ldr	r2, [pc, #20]	; (8002498 <SystemInit+0x20>)
 8002484:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002488:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800248c:	bf00      	nop
 800248e:	46bd      	mov	sp, r7
 8002490:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002494:	4770      	bx	lr
 8002496:	bf00      	nop
 8002498:	e000ed00 	.word	0xe000ed00

0800249c <Reset_Handler>:
 800249c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80024d4 <LoopFillZerobss+0x12>
 80024a0:	480d      	ldr	r0, [pc, #52]	; (80024d8 <LoopFillZerobss+0x16>)
 80024a2:	490e      	ldr	r1, [pc, #56]	; (80024dc <LoopFillZerobss+0x1a>)
 80024a4:	4a0e      	ldr	r2, [pc, #56]	; (80024e0 <LoopFillZerobss+0x1e>)
 80024a6:	2300      	movs	r3, #0
 80024a8:	e002      	b.n	80024b0 <LoopCopyDataInit>

080024aa <CopyDataInit>:
 80024aa:	58d4      	ldr	r4, [r2, r3]
 80024ac:	50c4      	str	r4, [r0, r3]
 80024ae:	3304      	adds	r3, #4

080024b0 <LoopCopyDataInit>:
 80024b0:	18c4      	adds	r4, r0, r3
 80024b2:	428c      	cmp	r4, r1
 80024b4:	d3f9      	bcc.n	80024aa <CopyDataInit>
 80024b6:	4a0b      	ldr	r2, [pc, #44]	; (80024e4 <LoopFillZerobss+0x22>)
 80024b8:	4c0b      	ldr	r4, [pc, #44]	; (80024e8 <LoopFillZerobss+0x26>)
 80024ba:	2300      	movs	r3, #0
 80024bc:	e001      	b.n	80024c2 <LoopFillZerobss>

080024be <FillZerobss>:
 80024be:	6013      	str	r3, [r2, #0]
 80024c0:	3204      	adds	r2, #4

080024c2 <LoopFillZerobss>:
 80024c2:	42a2      	cmp	r2, r4
 80024c4:	d3fb      	bcc.n	80024be <FillZerobss>
 80024c6:	f7ff ffd7 	bl	8002478 <SystemInit>
 80024ca:	f002 ff9b 	bl	8005404 <__libc_init_array>
 80024ce:	f7ff fb5f 	bl	8001b90 <main>
 80024d2:	4770      	bx	lr
 80024d4:	20040000 	.word	0x20040000
 80024d8:	20000000 	.word	0x20000000
 80024dc:	200000b0 	.word	0x200000b0
 80024e0:	08006700 	.word	0x08006700
 80024e4:	200000b0 	.word	0x200000b0
 80024e8:	200005c4 	.word	0x200005c4

080024ec <ADC_IRQHandler>:
 80024ec:	e7fe      	b.n	80024ec <ADC_IRQHandler>

080024ee <HAL_Init>:
 80024ee:	b580      	push	{r7, lr}
 80024f0:	af00      	add	r7, sp, #0
 80024f2:	2003      	movs	r0, #3
 80024f4:	f000 f94c 	bl	8002790 <HAL_NVIC_SetPriorityGrouping>
 80024f8:	200f      	movs	r0, #15
 80024fa:	f000 f805 	bl	8002508 <HAL_InitTick>
 80024fe:	f7ff fd9b 	bl	8002038 <HAL_MspInit>
 8002502:	2300      	movs	r3, #0
 8002504:	4618      	mov	r0, r3
 8002506:	bd80      	pop	{r7, pc}

08002508 <HAL_InitTick>:
 8002508:	b580      	push	{r7, lr}
 800250a:	b082      	sub	sp, #8
 800250c:	af00      	add	r7, sp, #0
 800250e:	6078      	str	r0, [r7, #4]
 8002510:	4b12      	ldr	r3, [pc, #72]	; (800255c <HAL_InitTick+0x54>)
 8002512:	681a      	ldr	r2, [r3, #0]
 8002514:	4b12      	ldr	r3, [pc, #72]	; (8002560 <HAL_InitTick+0x58>)
 8002516:	781b      	ldrb	r3, [r3, #0]
 8002518:	4619      	mov	r1, r3
 800251a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800251e:	fbb3 f3f1 	udiv	r3, r3, r1
 8002522:	fbb2 f3f3 	udiv	r3, r2, r3
 8002526:	4618      	mov	r0, r3
 8002528:	f000 f967 	bl	80027fa <HAL_SYSTICK_Config>
 800252c:	4603      	mov	r3, r0
 800252e:	2b00      	cmp	r3, #0
 8002530:	d001      	beq.n	8002536 <HAL_InitTick+0x2e>
 8002532:	2301      	movs	r3, #1
 8002534:	e00e      	b.n	8002554 <HAL_InitTick+0x4c>
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	2b0f      	cmp	r3, #15
 800253a:	d80a      	bhi.n	8002552 <HAL_InitTick+0x4a>
 800253c:	2200      	movs	r2, #0
 800253e:	6879      	ldr	r1, [r7, #4]
 8002540:	f04f 30ff 	mov.w	r0, #4294967295
 8002544:	f000 f92f 	bl	80027a6 <HAL_NVIC_SetPriority>
 8002548:	4a06      	ldr	r2, [pc, #24]	; (8002564 <HAL_InitTick+0x5c>)
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	6013      	str	r3, [r2, #0]
 800254e:	2300      	movs	r3, #0
 8002550:	e000      	b.n	8002554 <HAL_InitTick+0x4c>
 8002552:	2301      	movs	r3, #1
 8002554:	4618      	mov	r0, r3
 8002556:	3708      	adds	r7, #8
 8002558:	46bd      	mov	sp, r7
 800255a:	bd80      	pop	{r7, pc}
 800255c:	20000054 	.word	0x20000054
 8002560:	2000005c 	.word	0x2000005c
 8002564:	20000058 	.word	0x20000058

08002568 <HAL_IncTick>:
 8002568:	b480      	push	{r7}
 800256a:	af00      	add	r7, sp, #0
 800256c:	4b06      	ldr	r3, [pc, #24]	; (8002588 <HAL_IncTick+0x20>)
 800256e:	781b      	ldrb	r3, [r3, #0]
 8002570:	461a      	mov	r2, r3
 8002572:	4b06      	ldr	r3, [pc, #24]	; (800258c <HAL_IncTick+0x24>)
 8002574:	681b      	ldr	r3, [r3, #0]
 8002576:	4413      	add	r3, r2
 8002578:	4a04      	ldr	r2, [pc, #16]	; (800258c <HAL_IncTick+0x24>)
 800257a:	6013      	str	r3, [r2, #0]
 800257c:	bf00      	nop
 800257e:	46bd      	mov	sp, r7
 8002580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002584:	4770      	bx	lr
 8002586:	bf00      	nop
 8002588:	2000005c 	.word	0x2000005c
 800258c:	20000478 	.word	0x20000478

08002590 <HAL_GetTick>:
 8002590:	b480      	push	{r7}
 8002592:	af00      	add	r7, sp, #0
 8002594:	4b03      	ldr	r3, [pc, #12]	; (80025a4 <HAL_GetTick+0x14>)
 8002596:	681b      	ldr	r3, [r3, #0]
 8002598:	4618      	mov	r0, r3
 800259a:	46bd      	mov	sp, r7
 800259c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025a0:	4770      	bx	lr
 80025a2:	bf00      	nop
 80025a4:	20000478 	.word	0x20000478

080025a8 <HAL_Delay>:
 80025a8:	b580      	push	{r7, lr}
 80025aa:	b084      	sub	sp, #16
 80025ac:	af00      	add	r7, sp, #0
 80025ae:	6078      	str	r0, [r7, #4]
 80025b0:	f7ff ffee 	bl	8002590 <HAL_GetTick>
 80025b4:	60b8      	str	r0, [r7, #8]
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	60fb      	str	r3, [r7, #12]
 80025ba:	68fb      	ldr	r3, [r7, #12]
 80025bc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80025c0:	d005      	beq.n	80025ce <HAL_Delay+0x26>
 80025c2:	4b0a      	ldr	r3, [pc, #40]	; (80025ec <HAL_Delay+0x44>)
 80025c4:	781b      	ldrb	r3, [r3, #0]
 80025c6:	461a      	mov	r2, r3
 80025c8:	68fb      	ldr	r3, [r7, #12]
 80025ca:	4413      	add	r3, r2
 80025cc:	60fb      	str	r3, [r7, #12]
 80025ce:	bf00      	nop
 80025d0:	f7ff ffde 	bl	8002590 <HAL_GetTick>
 80025d4:	4602      	mov	r2, r0
 80025d6:	68bb      	ldr	r3, [r7, #8]
 80025d8:	1ad3      	subs	r3, r2, r3
 80025da:	68fa      	ldr	r2, [r7, #12]
 80025dc:	429a      	cmp	r2, r3
 80025de:	d8f7      	bhi.n	80025d0 <HAL_Delay+0x28>
 80025e0:	bf00      	nop
 80025e2:	bf00      	nop
 80025e4:	3710      	adds	r7, #16
 80025e6:	46bd      	mov	sp, r7
 80025e8:	bd80      	pop	{r7, pc}
 80025ea:	bf00      	nop
 80025ec:	2000005c 	.word	0x2000005c

080025f0 <__NVIC_SetPriorityGrouping>:
 80025f0:	b480      	push	{r7}
 80025f2:	b085      	sub	sp, #20
 80025f4:	af00      	add	r7, sp, #0
 80025f6:	6078      	str	r0, [r7, #4]
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	f003 0307 	and.w	r3, r3, #7
 80025fe:	60fb      	str	r3, [r7, #12]
 8002600:	4b0b      	ldr	r3, [pc, #44]	; (8002630 <__NVIC_SetPriorityGrouping+0x40>)
 8002602:	68db      	ldr	r3, [r3, #12]
 8002604:	60bb      	str	r3, [r7, #8]
 8002606:	68ba      	ldr	r2, [r7, #8]
 8002608:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800260c:	4013      	ands	r3, r2
 800260e:	60bb      	str	r3, [r7, #8]
 8002610:	68fb      	ldr	r3, [r7, #12]
 8002612:	021a      	lsls	r2, r3, #8
 8002614:	68bb      	ldr	r3, [r7, #8]
 8002616:	431a      	orrs	r2, r3
 8002618:	4b06      	ldr	r3, [pc, #24]	; (8002634 <__NVIC_SetPriorityGrouping+0x44>)
 800261a:	4313      	orrs	r3, r2
 800261c:	60bb      	str	r3, [r7, #8]
 800261e:	4a04      	ldr	r2, [pc, #16]	; (8002630 <__NVIC_SetPriorityGrouping+0x40>)
 8002620:	68bb      	ldr	r3, [r7, #8]
 8002622:	60d3      	str	r3, [r2, #12]
 8002624:	bf00      	nop
 8002626:	3714      	adds	r7, #20
 8002628:	46bd      	mov	sp, r7
 800262a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800262e:	4770      	bx	lr
 8002630:	e000ed00 	.word	0xe000ed00
 8002634:	05fa0000 	.word	0x05fa0000

08002638 <__NVIC_GetPriorityGrouping>:
 8002638:	b480      	push	{r7}
 800263a:	af00      	add	r7, sp, #0
 800263c:	4b04      	ldr	r3, [pc, #16]	; (8002650 <__NVIC_GetPriorityGrouping+0x18>)
 800263e:	68db      	ldr	r3, [r3, #12]
 8002640:	0a1b      	lsrs	r3, r3, #8
 8002642:	f003 0307 	and.w	r3, r3, #7
 8002646:	4618      	mov	r0, r3
 8002648:	46bd      	mov	sp, r7
 800264a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800264e:	4770      	bx	lr
 8002650:	e000ed00 	.word	0xe000ed00

08002654 <__NVIC_EnableIRQ>:
 8002654:	b480      	push	{r7}
 8002656:	b083      	sub	sp, #12
 8002658:	af00      	add	r7, sp, #0
 800265a:	4603      	mov	r3, r0
 800265c:	71fb      	strb	r3, [r7, #7]
 800265e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002662:	2b00      	cmp	r3, #0
 8002664:	db0b      	blt.n	800267e <__NVIC_EnableIRQ+0x2a>
 8002666:	79fb      	ldrb	r3, [r7, #7]
 8002668:	f003 021f 	and.w	r2, r3, #31
 800266c:	4907      	ldr	r1, [pc, #28]	; (800268c <__NVIC_EnableIRQ+0x38>)
 800266e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002672:	095b      	lsrs	r3, r3, #5
 8002674:	2001      	movs	r0, #1
 8002676:	fa00 f202 	lsl.w	r2, r0, r2
 800267a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800267e:	bf00      	nop
 8002680:	370c      	adds	r7, #12
 8002682:	46bd      	mov	sp, r7
 8002684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002688:	4770      	bx	lr
 800268a:	bf00      	nop
 800268c:	e000e100 	.word	0xe000e100

08002690 <__NVIC_SetPriority>:
 8002690:	b480      	push	{r7}
 8002692:	b083      	sub	sp, #12
 8002694:	af00      	add	r7, sp, #0
 8002696:	4603      	mov	r3, r0
 8002698:	6039      	str	r1, [r7, #0]
 800269a:	71fb      	strb	r3, [r7, #7]
 800269c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80026a0:	2b00      	cmp	r3, #0
 80026a2:	db0a      	blt.n	80026ba <__NVIC_SetPriority+0x2a>
 80026a4:	683b      	ldr	r3, [r7, #0]
 80026a6:	b2da      	uxtb	r2, r3
 80026a8:	490c      	ldr	r1, [pc, #48]	; (80026dc <__NVIC_SetPriority+0x4c>)
 80026aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80026ae:	0112      	lsls	r2, r2, #4
 80026b0:	b2d2      	uxtb	r2, r2
 80026b2:	440b      	add	r3, r1
 80026b4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80026b8:	e00a      	b.n	80026d0 <__NVIC_SetPriority+0x40>
 80026ba:	683b      	ldr	r3, [r7, #0]
 80026bc:	b2da      	uxtb	r2, r3
 80026be:	4908      	ldr	r1, [pc, #32]	; (80026e0 <__NVIC_SetPriority+0x50>)
 80026c0:	79fb      	ldrb	r3, [r7, #7]
 80026c2:	f003 030f 	and.w	r3, r3, #15
 80026c6:	3b04      	subs	r3, #4
 80026c8:	0112      	lsls	r2, r2, #4
 80026ca:	b2d2      	uxtb	r2, r2
 80026cc:	440b      	add	r3, r1
 80026ce:	761a      	strb	r2, [r3, #24]
 80026d0:	bf00      	nop
 80026d2:	370c      	adds	r7, #12
 80026d4:	46bd      	mov	sp, r7
 80026d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026da:	4770      	bx	lr
 80026dc:	e000e100 	.word	0xe000e100
 80026e0:	e000ed00 	.word	0xe000ed00

080026e4 <NVIC_EncodePriority>:
 80026e4:	b480      	push	{r7}
 80026e6:	b089      	sub	sp, #36	; 0x24
 80026e8:	af00      	add	r7, sp, #0
 80026ea:	60f8      	str	r0, [r7, #12]
 80026ec:	60b9      	str	r1, [r7, #8]
 80026ee:	607a      	str	r2, [r7, #4]
 80026f0:	68fb      	ldr	r3, [r7, #12]
 80026f2:	f003 0307 	and.w	r3, r3, #7
 80026f6:	61fb      	str	r3, [r7, #28]
 80026f8:	69fb      	ldr	r3, [r7, #28]
 80026fa:	f1c3 0307 	rsb	r3, r3, #7
 80026fe:	2b04      	cmp	r3, #4
 8002700:	bf28      	it	cs
 8002702:	2304      	movcs	r3, #4
 8002704:	61bb      	str	r3, [r7, #24]
 8002706:	69fb      	ldr	r3, [r7, #28]
 8002708:	3304      	adds	r3, #4
 800270a:	2b06      	cmp	r3, #6
 800270c:	d902      	bls.n	8002714 <NVIC_EncodePriority+0x30>
 800270e:	69fb      	ldr	r3, [r7, #28]
 8002710:	3b03      	subs	r3, #3
 8002712:	e000      	b.n	8002716 <NVIC_EncodePriority+0x32>
 8002714:	2300      	movs	r3, #0
 8002716:	617b      	str	r3, [r7, #20]
 8002718:	f04f 32ff 	mov.w	r2, #4294967295
 800271c:	69bb      	ldr	r3, [r7, #24]
 800271e:	fa02 f303 	lsl.w	r3, r2, r3
 8002722:	43da      	mvns	r2, r3
 8002724:	68bb      	ldr	r3, [r7, #8]
 8002726:	401a      	ands	r2, r3
 8002728:	697b      	ldr	r3, [r7, #20]
 800272a:	409a      	lsls	r2, r3
 800272c:	f04f 31ff 	mov.w	r1, #4294967295
 8002730:	697b      	ldr	r3, [r7, #20]
 8002732:	fa01 f303 	lsl.w	r3, r1, r3
 8002736:	43d9      	mvns	r1, r3
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	400b      	ands	r3, r1
 800273c:	4313      	orrs	r3, r2
 800273e:	4618      	mov	r0, r3
 8002740:	3724      	adds	r7, #36	; 0x24
 8002742:	46bd      	mov	sp, r7
 8002744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002748:	4770      	bx	lr
	...

0800274c <SysTick_Config>:
 800274c:	b580      	push	{r7, lr}
 800274e:	b082      	sub	sp, #8
 8002750:	af00      	add	r7, sp, #0
 8002752:	6078      	str	r0, [r7, #4]
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	3b01      	subs	r3, #1
 8002758:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800275c:	d301      	bcc.n	8002762 <SysTick_Config+0x16>
 800275e:	2301      	movs	r3, #1
 8002760:	e00f      	b.n	8002782 <SysTick_Config+0x36>
 8002762:	4a0a      	ldr	r2, [pc, #40]	; (800278c <SysTick_Config+0x40>)
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	3b01      	subs	r3, #1
 8002768:	6053      	str	r3, [r2, #4]
 800276a:	210f      	movs	r1, #15
 800276c:	f04f 30ff 	mov.w	r0, #4294967295
 8002770:	f7ff ff8e 	bl	8002690 <__NVIC_SetPriority>
 8002774:	4b05      	ldr	r3, [pc, #20]	; (800278c <SysTick_Config+0x40>)
 8002776:	2200      	movs	r2, #0
 8002778:	609a      	str	r2, [r3, #8]
 800277a:	4b04      	ldr	r3, [pc, #16]	; (800278c <SysTick_Config+0x40>)
 800277c:	2207      	movs	r2, #7
 800277e:	601a      	str	r2, [r3, #0]
 8002780:	2300      	movs	r3, #0
 8002782:	4618      	mov	r0, r3
 8002784:	3708      	adds	r7, #8
 8002786:	46bd      	mov	sp, r7
 8002788:	bd80      	pop	{r7, pc}
 800278a:	bf00      	nop
 800278c:	e000e010 	.word	0xe000e010

08002790 <HAL_NVIC_SetPriorityGrouping>:
 8002790:	b580      	push	{r7, lr}
 8002792:	b082      	sub	sp, #8
 8002794:	af00      	add	r7, sp, #0
 8002796:	6078      	str	r0, [r7, #4]
 8002798:	6878      	ldr	r0, [r7, #4]
 800279a:	f7ff ff29 	bl	80025f0 <__NVIC_SetPriorityGrouping>
 800279e:	bf00      	nop
 80027a0:	3708      	adds	r7, #8
 80027a2:	46bd      	mov	sp, r7
 80027a4:	bd80      	pop	{r7, pc}

080027a6 <HAL_NVIC_SetPriority>:
 80027a6:	b580      	push	{r7, lr}
 80027a8:	b086      	sub	sp, #24
 80027aa:	af00      	add	r7, sp, #0
 80027ac:	4603      	mov	r3, r0
 80027ae:	60b9      	str	r1, [r7, #8]
 80027b0:	607a      	str	r2, [r7, #4]
 80027b2:	73fb      	strb	r3, [r7, #15]
 80027b4:	2300      	movs	r3, #0
 80027b6:	617b      	str	r3, [r7, #20]
 80027b8:	f7ff ff3e 	bl	8002638 <__NVIC_GetPriorityGrouping>
 80027bc:	6178      	str	r0, [r7, #20]
 80027be:	687a      	ldr	r2, [r7, #4]
 80027c0:	68b9      	ldr	r1, [r7, #8]
 80027c2:	6978      	ldr	r0, [r7, #20]
 80027c4:	f7ff ff8e 	bl	80026e4 <NVIC_EncodePriority>
 80027c8:	4602      	mov	r2, r0
 80027ca:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80027ce:	4611      	mov	r1, r2
 80027d0:	4618      	mov	r0, r3
 80027d2:	f7ff ff5d 	bl	8002690 <__NVIC_SetPriority>
 80027d6:	bf00      	nop
 80027d8:	3718      	adds	r7, #24
 80027da:	46bd      	mov	sp, r7
 80027dc:	bd80      	pop	{r7, pc}

080027de <HAL_NVIC_EnableIRQ>:
 80027de:	b580      	push	{r7, lr}
 80027e0:	b082      	sub	sp, #8
 80027e2:	af00      	add	r7, sp, #0
 80027e4:	4603      	mov	r3, r0
 80027e6:	71fb      	strb	r3, [r7, #7]
 80027e8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80027ec:	4618      	mov	r0, r3
 80027ee:	f7ff ff31 	bl	8002654 <__NVIC_EnableIRQ>
 80027f2:	bf00      	nop
 80027f4:	3708      	adds	r7, #8
 80027f6:	46bd      	mov	sp, r7
 80027f8:	bd80      	pop	{r7, pc}

080027fa <HAL_SYSTICK_Config>:
 80027fa:	b580      	push	{r7, lr}
 80027fc:	b082      	sub	sp, #8
 80027fe:	af00      	add	r7, sp, #0
 8002800:	6078      	str	r0, [r7, #4]
 8002802:	6878      	ldr	r0, [r7, #4]
 8002804:	f7ff ffa2 	bl	800274c <SysTick_Config>
 8002808:	4603      	mov	r3, r0
 800280a:	4618      	mov	r0, r3
 800280c:	3708      	adds	r7, #8
 800280e:	46bd      	mov	sp, r7
 8002810:	bd80      	pop	{r7, pc}
	...

08002814 <HAL_DMA_Init>:
 8002814:	b580      	push	{r7, lr}
 8002816:	b086      	sub	sp, #24
 8002818:	af00      	add	r7, sp, #0
 800281a:	6078      	str	r0, [r7, #4]
 800281c:	2300      	movs	r3, #0
 800281e:	617b      	str	r3, [r7, #20]
 8002820:	f7ff feb6 	bl	8002590 <HAL_GetTick>
 8002824:	6138      	str	r0, [r7, #16]
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	2b00      	cmp	r3, #0
 800282a:	d101      	bne.n	8002830 <HAL_DMA_Init+0x1c>
 800282c:	2301      	movs	r3, #1
 800282e:	e099      	b.n	8002964 <HAL_DMA_Init+0x150>
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	2202      	movs	r2, #2
 8002834:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	2200      	movs	r2, #0
 800283c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	681b      	ldr	r3, [r3, #0]
 8002844:	681a      	ldr	r2, [r3, #0]
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	f022 0201 	bic.w	r2, r2, #1
 800284e:	601a      	str	r2, [r3, #0]
 8002850:	e00f      	b.n	8002872 <HAL_DMA_Init+0x5e>
 8002852:	f7ff fe9d 	bl	8002590 <HAL_GetTick>
 8002856:	4602      	mov	r2, r0
 8002858:	693b      	ldr	r3, [r7, #16]
 800285a:	1ad3      	subs	r3, r2, r3
 800285c:	2b05      	cmp	r3, #5
 800285e:	d908      	bls.n	8002872 <HAL_DMA_Init+0x5e>
 8002860:	687b      	ldr	r3, [r7, #4]
 8002862:	2220      	movs	r2, #32
 8002864:	655a      	str	r2, [r3, #84]	; 0x54
 8002866:	687b      	ldr	r3, [r7, #4]
 8002868:	2203      	movs	r2, #3
 800286a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800286e:	2303      	movs	r3, #3
 8002870:	e078      	b.n	8002964 <HAL_DMA_Init+0x150>
 8002872:	687b      	ldr	r3, [r7, #4]
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	f003 0301 	and.w	r3, r3, #1
 800287c:	2b00      	cmp	r3, #0
 800287e:	d1e8      	bne.n	8002852 <HAL_DMA_Init+0x3e>
 8002880:	687b      	ldr	r3, [r7, #4]
 8002882:	681b      	ldr	r3, [r3, #0]
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	617b      	str	r3, [r7, #20]
 8002888:	697a      	ldr	r2, [r7, #20]
 800288a:	4b38      	ldr	r3, [pc, #224]	; (800296c <HAL_DMA_Init+0x158>)
 800288c:	4013      	ands	r3, r2
 800288e:	617b      	str	r3, [r7, #20]
 8002890:	687b      	ldr	r3, [r7, #4]
 8002892:	685a      	ldr	r2, [r3, #4]
 8002894:	687b      	ldr	r3, [r7, #4]
 8002896:	689b      	ldr	r3, [r3, #8]
 8002898:	431a      	orrs	r2, r3
 800289a:	687b      	ldr	r3, [r7, #4]
 800289c:	68db      	ldr	r3, [r3, #12]
 800289e:	431a      	orrs	r2, r3
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	691b      	ldr	r3, [r3, #16]
 80028a4:	431a      	orrs	r2, r3
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	695b      	ldr	r3, [r3, #20]
 80028aa:	431a      	orrs	r2, r3
 80028ac:	687b      	ldr	r3, [r7, #4]
 80028ae:	699b      	ldr	r3, [r3, #24]
 80028b0:	431a      	orrs	r2, r3
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	69db      	ldr	r3, [r3, #28]
 80028b6:	431a      	orrs	r2, r3
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	6a1b      	ldr	r3, [r3, #32]
 80028bc:	4313      	orrs	r3, r2
 80028be:	697a      	ldr	r2, [r7, #20]
 80028c0:	4313      	orrs	r3, r2
 80028c2:	617b      	str	r3, [r7, #20]
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028c8:	2b04      	cmp	r3, #4
 80028ca:	d107      	bne.n	80028dc <HAL_DMA_Init+0xc8>
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028d4:	4313      	orrs	r3, r2
 80028d6:	697a      	ldr	r2, [r7, #20]
 80028d8:	4313      	orrs	r3, r2
 80028da:	617b      	str	r3, [r7, #20]
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	681b      	ldr	r3, [r3, #0]
 80028e0:	697a      	ldr	r2, [r7, #20]
 80028e2:	601a      	str	r2, [r3, #0]
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	695b      	ldr	r3, [r3, #20]
 80028ea:	617b      	str	r3, [r7, #20]
 80028ec:	697b      	ldr	r3, [r7, #20]
 80028ee:	f023 0307 	bic.w	r3, r3, #7
 80028f2:	617b      	str	r3, [r7, #20]
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028f8:	697a      	ldr	r2, [r7, #20]
 80028fa:	4313      	orrs	r3, r2
 80028fc:	617b      	str	r3, [r7, #20]
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002902:	2b04      	cmp	r3, #4
 8002904:	d117      	bne.n	8002936 <HAL_DMA_Init+0x122>
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800290a:	697a      	ldr	r2, [r7, #20]
 800290c:	4313      	orrs	r3, r2
 800290e:	617b      	str	r3, [r7, #20]
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002914:	2b00      	cmp	r3, #0
 8002916:	d00e      	beq.n	8002936 <HAL_DMA_Init+0x122>
 8002918:	6878      	ldr	r0, [r7, #4]
 800291a:	f000 fa77 	bl	8002e0c <DMA_CheckFifoParam>
 800291e:	4603      	mov	r3, r0
 8002920:	2b00      	cmp	r3, #0
 8002922:	d008      	beq.n	8002936 <HAL_DMA_Init+0x122>
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	2240      	movs	r2, #64	; 0x40
 8002928:	655a      	str	r2, [r3, #84]	; 0x54
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	2201      	movs	r2, #1
 800292e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002932:	2301      	movs	r3, #1
 8002934:	e016      	b.n	8002964 <HAL_DMA_Init+0x150>
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	681b      	ldr	r3, [r3, #0]
 800293a:	697a      	ldr	r2, [r7, #20]
 800293c:	615a      	str	r2, [r3, #20]
 800293e:	6878      	ldr	r0, [r7, #4]
 8002940:	f000 fa2e 	bl	8002da0 <DMA_CalcBaseAndBitshift>
 8002944:	4603      	mov	r3, r0
 8002946:	60fb      	str	r3, [r7, #12]
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800294c:	223f      	movs	r2, #63	; 0x3f
 800294e:	409a      	lsls	r2, r3
 8002950:	68fb      	ldr	r3, [r7, #12]
 8002952:	609a      	str	r2, [r3, #8]
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	2200      	movs	r2, #0
 8002958:	655a      	str	r2, [r3, #84]	; 0x54
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	2201      	movs	r2, #1
 800295e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002962:	2300      	movs	r3, #0
 8002964:	4618      	mov	r0, r3
 8002966:	3718      	adds	r7, #24
 8002968:	46bd      	mov	sp, r7
 800296a:	bd80      	pop	{r7, pc}
 800296c:	e010803f 	.word	0xe010803f

08002970 <HAL_DMA_Start_IT>:
 8002970:	b580      	push	{r7, lr}
 8002972:	b086      	sub	sp, #24
 8002974:	af00      	add	r7, sp, #0
 8002976:	60f8      	str	r0, [r7, #12]
 8002978:	60b9      	str	r1, [r7, #8]
 800297a:	607a      	str	r2, [r7, #4]
 800297c:	603b      	str	r3, [r7, #0]
 800297e:	2300      	movs	r3, #0
 8002980:	75fb      	strb	r3, [r7, #23]
 8002982:	68fb      	ldr	r3, [r7, #12]
 8002984:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002986:	613b      	str	r3, [r7, #16]
 8002988:	68fb      	ldr	r3, [r7, #12]
 800298a:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800298e:	2b01      	cmp	r3, #1
 8002990:	d101      	bne.n	8002996 <HAL_DMA_Start_IT+0x26>
 8002992:	2302      	movs	r3, #2
 8002994:	e048      	b.n	8002a28 <HAL_DMA_Start_IT+0xb8>
 8002996:	68fb      	ldr	r3, [r7, #12]
 8002998:	2201      	movs	r2, #1
 800299a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800299e:	68fb      	ldr	r3, [r7, #12]
 80029a0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80029a4:	b2db      	uxtb	r3, r3
 80029a6:	2b01      	cmp	r3, #1
 80029a8:	d137      	bne.n	8002a1a <HAL_DMA_Start_IT+0xaa>
 80029aa:	68fb      	ldr	r3, [r7, #12]
 80029ac:	2202      	movs	r2, #2
 80029ae:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80029b2:	68fb      	ldr	r3, [r7, #12]
 80029b4:	2200      	movs	r2, #0
 80029b6:	655a      	str	r2, [r3, #84]	; 0x54
 80029b8:	683b      	ldr	r3, [r7, #0]
 80029ba:	687a      	ldr	r2, [r7, #4]
 80029bc:	68b9      	ldr	r1, [r7, #8]
 80029be:	68f8      	ldr	r0, [r7, #12]
 80029c0:	f000 f9c0 	bl	8002d44 <DMA_SetConfig>
 80029c4:	68fb      	ldr	r3, [r7, #12]
 80029c6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80029c8:	223f      	movs	r2, #63	; 0x3f
 80029ca:	409a      	lsls	r2, r3
 80029cc:	693b      	ldr	r3, [r7, #16]
 80029ce:	609a      	str	r2, [r3, #8]
 80029d0:	68fb      	ldr	r3, [r7, #12]
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	681a      	ldr	r2, [r3, #0]
 80029d6:	68fb      	ldr	r3, [r7, #12]
 80029d8:	681b      	ldr	r3, [r3, #0]
 80029da:	f042 0216 	orr.w	r2, r2, #22
 80029de:	601a      	str	r2, [r3, #0]
 80029e0:	68fb      	ldr	r3, [r7, #12]
 80029e2:	681b      	ldr	r3, [r3, #0]
 80029e4:	695a      	ldr	r2, [r3, #20]
 80029e6:	68fb      	ldr	r3, [r7, #12]
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80029ee:	615a      	str	r2, [r3, #20]
 80029f0:	68fb      	ldr	r3, [r7, #12]
 80029f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	d007      	beq.n	8002a08 <HAL_DMA_Start_IT+0x98>
 80029f8:	68fb      	ldr	r3, [r7, #12]
 80029fa:	681b      	ldr	r3, [r3, #0]
 80029fc:	681a      	ldr	r2, [r3, #0]
 80029fe:	68fb      	ldr	r3, [r7, #12]
 8002a00:	681b      	ldr	r3, [r3, #0]
 8002a02:	f042 0208 	orr.w	r2, r2, #8
 8002a06:	601a      	str	r2, [r3, #0]
 8002a08:	68fb      	ldr	r3, [r7, #12]
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	681a      	ldr	r2, [r3, #0]
 8002a0e:	68fb      	ldr	r3, [r7, #12]
 8002a10:	681b      	ldr	r3, [r3, #0]
 8002a12:	f042 0201 	orr.w	r2, r2, #1
 8002a16:	601a      	str	r2, [r3, #0]
 8002a18:	e005      	b.n	8002a26 <HAL_DMA_Start_IT+0xb6>
 8002a1a:	68fb      	ldr	r3, [r7, #12]
 8002a1c:	2200      	movs	r2, #0
 8002a1e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002a22:	2302      	movs	r3, #2
 8002a24:	75fb      	strb	r3, [r7, #23]
 8002a26:	7dfb      	ldrb	r3, [r7, #23]
 8002a28:	4618      	mov	r0, r3
 8002a2a:	3718      	adds	r7, #24
 8002a2c:	46bd      	mov	sp, r7
 8002a2e:	bd80      	pop	{r7, pc}

08002a30 <HAL_DMA_IRQHandler>:
 8002a30:	b580      	push	{r7, lr}
 8002a32:	b086      	sub	sp, #24
 8002a34:	af00      	add	r7, sp, #0
 8002a36:	6078      	str	r0, [r7, #4]
 8002a38:	2300      	movs	r3, #0
 8002a3a:	60bb      	str	r3, [r7, #8]
 8002a3c:	4b8e      	ldr	r3, [pc, #568]	; (8002c78 <HAL_DMA_IRQHandler+0x248>)
 8002a3e:	681b      	ldr	r3, [r3, #0]
 8002a40:	4a8e      	ldr	r2, [pc, #568]	; (8002c7c <HAL_DMA_IRQHandler+0x24c>)
 8002a42:	fba2 2303 	umull	r2, r3, r2, r3
 8002a46:	0a9b      	lsrs	r3, r3, #10
 8002a48:	617b      	str	r3, [r7, #20]
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002a4e:	613b      	str	r3, [r7, #16]
 8002a50:	693b      	ldr	r3, [r7, #16]
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	60fb      	str	r3, [r7, #12]
 8002a56:	687b      	ldr	r3, [r7, #4]
 8002a58:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002a5a:	2208      	movs	r2, #8
 8002a5c:	409a      	lsls	r2, r3
 8002a5e:	68fb      	ldr	r3, [r7, #12]
 8002a60:	4013      	ands	r3, r2
 8002a62:	2b00      	cmp	r3, #0
 8002a64:	d01a      	beq.n	8002a9c <HAL_DMA_IRQHandler+0x6c>
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	681b      	ldr	r3, [r3, #0]
 8002a6c:	f003 0304 	and.w	r3, r3, #4
 8002a70:	2b00      	cmp	r3, #0
 8002a72:	d013      	beq.n	8002a9c <HAL_DMA_IRQHandler+0x6c>
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	681b      	ldr	r3, [r3, #0]
 8002a78:	681a      	ldr	r2, [r3, #0]
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	681b      	ldr	r3, [r3, #0]
 8002a7e:	f022 0204 	bic.w	r2, r2, #4
 8002a82:	601a      	str	r2, [r3, #0]
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002a88:	2208      	movs	r2, #8
 8002a8a:	409a      	lsls	r2, r3
 8002a8c:	693b      	ldr	r3, [r7, #16]
 8002a8e:	609a      	str	r2, [r3, #8]
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002a94:	f043 0201 	orr.w	r2, r3, #1
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	655a      	str	r2, [r3, #84]	; 0x54
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002aa0:	2201      	movs	r2, #1
 8002aa2:	409a      	lsls	r2, r3
 8002aa4:	68fb      	ldr	r3, [r7, #12]
 8002aa6:	4013      	ands	r3, r2
 8002aa8:	2b00      	cmp	r3, #0
 8002aaa:	d012      	beq.n	8002ad2 <HAL_DMA_IRQHandler+0xa2>
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	695b      	ldr	r3, [r3, #20]
 8002ab2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d00b      	beq.n	8002ad2 <HAL_DMA_IRQHandler+0xa2>
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002abe:	2201      	movs	r2, #1
 8002ac0:	409a      	lsls	r2, r3
 8002ac2:	693b      	ldr	r3, [r7, #16]
 8002ac4:	609a      	str	r2, [r3, #8]
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002aca:	f043 0202 	orr.w	r2, r3, #2
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	655a      	str	r2, [r3, #84]	; 0x54
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002ad6:	2204      	movs	r2, #4
 8002ad8:	409a      	lsls	r2, r3
 8002ada:	68fb      	ldr	r3, [r7, #12]
 8002adc:	4013      	ands	r3, r2
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d012      	beq.n	8002b08 <HAL_DMA_IRQHandler+0xd8>
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	681b      	ldr	r3, [r3, #0]
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	f003 0302 	and.w	r3, r3, #2
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d00b      	beq.n	8002b08 <HAL_DMA_IRQHandler+0xd8>
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002af4:	2204      	movs	r2, #4
 8002af6:	409a      	lsls	r2, r3
 8002af8:	693b      	ldr	r3, [r7, #16]
 8002afa:	609a      	str	r2, [r3, #8]
 8002afc:	687b      	ldr	r3, [r7, #4]
 8002afe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002b00:	f043 0204 	orr.w	r2, r3, #4
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	655a      	str	r2, [r3, #84]	; 0x54
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002b0c:	2210      	movs	r2, #16
 8002b0e:	409a      	lsls	r2, r3
 8002b10:	68fb      	ldr	r3, [r7, #12]
 8002b12:	4013      	ands	r3, r2
 8002b14:	2b00      	cmp	r3, #0
 8002b16:	d043      	beq.n	8002ba0 <HAL_DMA_IRQHandler+0x170>
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f003 0308 	and.w	r3, r3, #8
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d03c      	beq.n	8002ba0 <HAL_DMA_IRQHandler+0x170>
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002b2a:	2210      	movs	r2, #16
 8002b2c:	409a      	lsls	r2, r3
 8002b2e:	693b      	ldr	r3, [r7, #16]
 8002b30:	609a      	str	r2, [r3, #8]
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	681b      	ldr	r3, [r3, #0]
 8002b38:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002b3c:	2b00      	cmp	r3, #0
 8002b3e:	d018      	beq.n	8002b72 <HAL_DMA_IRQHandler+0x142>
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	681b      	ldr	r3, [r3, #0]
 8002b46:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	d108      	bne.n	8002b60 <HAL_DMA_IRQHandler+0x130>
 8002b4e:	687b      	ldr	r3, [r7, #4]
 8002b50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b52:	2b00      	cmp	r3, #0
 8002b54:	d024      	beq.n	8002ba0 <HAL_DMA_IRQHandler+0x170>
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b5a:	6878      	ldr	r0, [r7, #4]
 8002b5c:	4798      	blx	r3
 8002b5e:	e01f      	b.n	8002ba0 <HAL_DMA_IRQHandler+0x170>
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002b64:	2b00      	cmp	r3, #0
 8002b66:	d01b      	beq.n	8002ba0 <HAL_DMA_IRQHandler+0x170>
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002b6c:	6878      	ldr	r0, [r7, #4]
 8002b6e:	4798      	blx	r3
 8002b70:	e016      	b.n	8002ba0 <HAL_DMA_IRQHandler+0x170>
 8002b72:	687b      	ldr	r3, [r7, #4]
 8002b74:	681b      	ldr	r3, [r3, #0]
 8002b76:	681b      	ldr	r3, [r3, #0]
 8002b78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002b7c:	2b00      	cmp	r3, #0
 8002b7e:	d107      	bne.n	8002b90 <HAL_DMA_IRQHandler+0x160>
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	681a      	ldr	r2, [r3, #0]
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	f022 0208 	bic.w	r2, r2, #8
 8002b8e:	601a      	str	r2, [r3, #0]
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d003      	beq.n	8002ba0 <HAL_DMA_IRQHandler+0x170>
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b9c:	6878      	ldr	r0, [r7, #4]
 8002b9e:	4798      	blx	r3
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002ba4:	2220      	movs	r2, #32
 8002ba6:	409a      	lsls	r2, r3
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	4013      	ands	r3, r2
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	f000 808f 	beq.w	8002cd0 <HAL_DMA_IRQHandler+0x2a0>
 8002bb2:	687b      	ldr	r3, [r7, #4]
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	f003 0310 	and.w	r3, r3, #16
 8002bbc:	2b00      	cmp	r3, #0
 8002bbe:	f000 8087 	beq.w	8002cd0 <HAL_DMA_IRQHandler+0x2a0>
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002bc6:	2220      	movs	r2, #32
 8002bc8:	409a      	lsls	r2, r3
 8002bca:	693b      	ldr	r3, [r7, #16]
 8002bcc:	609a      	str	r2, [r3, #8]
 8002bce:	687b      	ldr	r3, [r7, #4]
 8002bd0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002bd4:	b2db      	uxtb	r3, r3
 8002bd6:	2b05      	cmp	r3, #5
 8002bd8:	d136      	bne.n	8002c48 <HAL_DMA_IRQHandler+0x218>
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	681a      	ldr	r2, [r3, #0]
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	f022 0216 	bic.w	r2, r2, #22
 8002be8:	601a      	str	r2, [r3, #0]
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	695a      	ldr	r2, [r3, #20]
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002bf8:	615a      	str	r2, [r3, #20]
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bfe:	2b00      	cmp	r3, #0
 8002c00:	d103      	bne.n	8002c0a <HAL_DMA_IRQHandler+0x1da>
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002c06:	2b00      	cmp	r3, #0
 8002c08:	d007      	beq.n	8002c1a <HAL_DMA_IRQHandler+0x1ea>
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	681b      	ldr	r3, [r3, #0]
 8002c0e:	681a      	ldr	r2, [r3, #0]
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	f022 0208 	bic.w	r2, r2, #8
 8002c18:	601a      	str	r2, [r3, #0]
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002c1e:	223f      	movs	r2, #63	; 0x3f
 8002c20:	409a      	lsls	r2, r3
 8002c22:	693b      	ldr	r3, [r7, #16]
 8002c24:	609a      	str	r2, [r3, #8]
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	2201      	movs	r2, #1
 8002c2a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	2200      	movs	r2, #0
 8002c32:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d07e      	beq.n	8002d3c <HAL_DMA_IRQHandler+0x30c>
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002c42:	6878      	ldr	r0, [r7, #4]
 8002c44:	4798      	blx	r3
 8002c46:	e079      	b.n	8002d3c <HAL_DMA_IRQHandler+0x30c>
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002c52:	2b00      	cmp	r3, #0
 8002c54:	d01d      	beq.n	8002c92 <HAL_DMA_IRQHandler+0x262>
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002c60:	2b00      	cmp	r3, #0
 8002c62:	d10d      	bne.n	8002c80 <HAL_DMA_IRQHandler+0x250>
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c68:	2b00      	cmp	r3, #0
 8002c6a:	d031      	beq.n	8002cd0 <HAL_DMA_IRQHandler+0x2a0>
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c70:	6878      	ldr	r0, [r7, #4]
 8002c72:	4798      	blx	r3
 8002c74:	e02c      	b.n	8002cd0 <HAL_DMA_IRQHandler+0x2a0>
 8002c76:	bf00      	nop
 8002c78:	20000054 	.word	0x20000054
 8002c7c:	1b4e81b5 	.word	0x1b4e81b5
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c84:	2b00      	cmp	r3, #0
 8002c86:	d023      	beq.n	8002cd0 <HAL_DMA_IRQHandler+0x2a0>
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c8c:	6878      	ldr	r0, [r7, #4]
 8002c8e:	4798      	blx	r3
 8002c90:	e01e      	b.n	8002cd0 <HAL_DMA_IRQHandler+0x2a0>
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	681b      	ldr	r3, [r3, #0]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002c9c:	2b00      	cmp	r3, #0
 8002c9e:	d10f      	bne.n	8002cc0 <HAL_DMA_IRQHandler+0x290>
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	681a      	ldr	r2, [r3, #0]
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	681b      	ldr	r3, [r3, #0]
 8002caa:	f022 0210 	bic.w	r2, r2, #16
 8002cae:	601a      	str	r2, [r3, #0]
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	2201      	movs	r2, #1
 8002cb4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	2200      	movs	r2, #0
 8002cbc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002cc4:	2b00      	cmp	r3, #0
 8002cc6:	d003      	beq.n	8002cd0 <HAL_DMA_IRQHandler+0x2a0>
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002ccc:	6878      	ldr	r0, [r7, #4]
 8002cce:	4798      	blx	r3
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002cd4:	2b00      	cmp	r3, #0
 8002cd6:	d032      	beq.n	8002d3e <HAL_DMA_IRQHandler+0x30e>
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002cdc:	f003 0301 	and.w	r3, r3, #1
 8002ce0:	2b00      	cmp	r3, #0
 8002ce2:	d022      	beq.n	8002d2a <HAL_DMA_IRQHandler+0x2fa>
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	2205      	movs	r2, #5
 8002ce8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	681a      	ldr	r2, [r3, #0]
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	f022 0201 	bic.w	r2, r2, #1
 8002cfa:	601a      	str	r2, [r3, #0]
 8002cfc:	68bb      	ldr	r3, [r7, #8]
 8002cfe:	3301      	adds	r3, #1
 8002d00:	60bb      	str	r3, [r7, #8]
 8002d02:	697a      	ldr	r2, [r7, #20]
 8002d04:	429a      	cmp	r2, r3
 8002d06:	d307      	bcc.n	8002d18 <HAL_DMA_IRQHandler+0x2e8>
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	f003 0301 	and.w	r3, r3, #1
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	d1f2      	bne.n	8002cfc <HAL_DMA_IRQHandler+0x2cc>
 8002d16:	e000      	b.n	8002d1a <HAL_DMA_IRQHandler+0x2ea>
 8002d18:	bf00      	nop
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	2201      	movs	r2, #1
 8002d1e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	2200      	movs	r2, #0
 8002d26:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002d2a:	687b      	ldr	r3, [r7, #4]
 8002d2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002d2e:	2b00      	cmp	r3, #0
 8002d30:	d005      	beq.n	8002d3e <HAL_DMA_IRQHandler+0x30e>
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002d36:	6878      	ldr	r0, [r7, #4]
 8002d38:	4798      	blx	r3
 8002d3a:	e000      	b.n	8002d3e <HAL_DMA_IRQHandler+0x30e>
 8002d3c:	bf00      	nop
 8002d3e:	3718      	adds	r7, #24
 8002d40:	46bd      	mov	sp, r7
 8002d42:	bd80      	pop	{r7, pc}

08002d44 <DMA_SetConfig>:
 8002d44:	b480      	push	{r7}
 8002d46:	b085      	sub	sp, #20
 8002d48:	af00      	add	r7, sp, #0
 8002d4a:	60f8      	str	r0, [r7, #12]
 8002d4c:	60b9      	str	r1, [r7, #8]
 8002d4e:	607a      	str	r2, [r7, #4]
 8002d50:	603b      	str	r3, [r7, #0]
 8002d52:	68fb      	ldr	r3, [r7, #12]
 8002d54:	681b      	ldr	r3, [r3, #0]
 8002d56:	681a      	ldr	r2, [r3, #0]
 8002d58:	68fb      	ldr	r3, [r7, #12]
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002d60:	601a      	str	r2, [r3, #0]
 8002d62:	68fb      	ldr	r3, [r7, #12]
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	683a      	ldr	r2, [r7, #0]
 8002d68:	605a      	str	r2, [r3, #4]
 8002d6a:	68fb      	ldr	r3, [r7, #12]
 8002d6c:	689b      	ldr	r3, [r3, #8]
 8002d6e:	2b40      	cmp	r3, #64	; 0x40
 8002d70:	d108      	bne.n	8002d84 <DMA_SetConfig+0x40>
 8002d72:	68fb      	ldr	r3, [r7, #12]
 8002d74:	681b      	ldr	r3, [r3, #0]
 8002d76:	687a      	ldr	r2, [r7, #4]
 8002d78:	609a      	str	r2, [r3, #8]
 8002d7a:	68fb      	ldr	r3, [r7, #12]
 8002d7c:	681b      	ldr	r3, [r3, #0]
 8002d7e:	68ba      	ldr	r2, [r7, #8]
 8002d80:	60da      	str	r2, [r3, #12]
 8002d82:	e007      	b.n	8002d94 <DMA_SetConfig+0x50>
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	68ba      	ldr	r2, [r7, #8]
 8002d8a:	609a      	str	r2, [r3, #8]
 8002d8c:	68fb      	ldr	r3, [r7, #12]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	687a      	ldr	r2, [r7, #4]
 8002d92:	60da      	str	r2, [r3, #12]
 8002d94:	bf00      	nop
 8002d96:	3714      	adds	r7, #20
 8002d98:	46bd      	mov	sp, r7
 8002d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d9e:	4770      	bx	lr

08002da0 <DMA_CalcBaseAndBitshift>:
 8002da0:	b480      	push	{r7}
 8002da2:	b085      	sub	sp, #20
 8002da4:	af00      	add	r7, sp, #0
 8002da6:	6078      	str	r0, [r7, #4]
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	b2db      	uxtb	r3, r3
 8002dae:	3b10      	subs	r3, #16
 8002db0:	4a13      	ldr	r2, [pc, #76]	; (8002e00 <DMA_CalcBaseAndBitshift+0x60>)
 8002db2:	fba2 2303 	umull	r2, r3, r2, r3
 8002db6:	091b      	lsrs	r3, r3, #4
 8002db8:	60fb      	str	r3, [r7, #12]
 8002dba:	4a12      	ldr	r2, [pc, #72]	; (8002e04 <DMA_CalcBaseAndBitshift+0x64>)
 8002dbc:	68fb      	ldr	r3, [r7, #12]
 8002dbe:	4413      	add	r3, r2
 8002dc0:	781b      	ldrb	r3, [r3, #0]
 8002dc2:	461a      	mov	r2, r3
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	65da      	str	r2, [r3, #92]	; 0x5c
 8002dc8:	68fb      	ldr	r3, [r7, #12]
 8002dca:	2b03      	cmp	r3, #3
 8002dcc:	d908      	bls.n	8002de0 <DMA_CalcBaseAndBitshift+0x40>
 8002dce:	687b      	ldr	r3, [r7, #4]
 8002dd0:	681b      	ldr	r3, [r3, #0]
 8002dd2:	461a      	mov	r2, r3
 8002dd4:	4b0c      	ldr	r3, [pc, #48]	; (8002e08 <DMA_CalcBaseAndBitshift+0x68>)
 8002dd6:	4013      	ands	r3, r2
 8002dd8:	1d1a      	adds	r2, r3, #4
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	659a      	str	r2, [r3, #88]	; 0x58
 8002dde:	e006      	b.n	8002dee <DMA_CalcBaseAndBitshift+0x4e>
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	461a      	mov	r2, r3
 8002de6:	4b08      	ldr	r3, [pc, #32]	; (8002e08 <DMA_CalcBaseAndBitshift+0x68>)
 8002de8:	4013      	ands	r3, r2
 8002dea:	687a      	ldr	r2, [r7, #4]
 8002dec:	6593      	str	r3, [r2, #88]	; 0x58
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002df2:	4618      	mov	r0, r3
 8002df4:	3714      	adds	r7, #20
 8002df6:	46bd      	mov	sp, r7
 8002df8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dfc:	4770      	bx	lr
 8002dfe:	bf00      	nop
 8002e00:	aaaaaaab 	.word	0xaaaaaaab
 8002e04:	08006510 	.word	0x08006510
 8002e08:	fffffc00 	.word	0xfffffc00

08002e0c <DMA_CheckFifoParam>:
 8002e0c:	b480      	push	{r7}
 8002e0e:	b085      	sub	sp, #20
 8002e10:	af00      	add	r7, sp, #0
 8002e12:	6078      	str	r0, [r7, #4]
 8002e14:	2300      	movs	r3, #0
 8002e16:	73fb      	strb	r3, [r7, #15]
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002e1c:	60bb      	str	r3, [r7, #8]
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	699b      	ldr	r3, [r3, #24]
 8002e22:	2b00      	cmp	r3, #0
 8002e24:	d11f      	bne.n	8002e66 <DMA_CheckFifoParam+0x5a>
 8002e26:	68bb      	ldr	r3, [r7, #8]
 8002e28:	2b03      	cmp	r3, #3
 8002e2a:	d856      	bhi.n	8002eda <DMA_CheckFifoParam+0xce>
 8002e2c:	a201      	add	r2, pc, #4	; (adr r2, 8002e34 <DMA_CheckFifoParam+0x28>)
 8002e2e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002e32:	bf00      	nop
 8002e34:	08002e45 	.word	0x08002e45
 8002e38:	08002e57 	.word	0x08002e57
 8002e3c:	08002e45 	.word	0x08002e45
 8002e40:	08002edb 	.word	0x08002edb
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e48:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002e4c:	2b00      	cmp	r3, #0
 8002e4e:	d046      	beq.n	8002ede <DMA_CheckFifoParam+0xd2>
 8002e50:	2301      	movs	r3, #1
 8002e52:	73fb      	strb	r3, [r7, #15]
 8002e54:	e043      	b.n	8002ede <DMA_CheckFifoParam+0xd2>
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e5a:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8002e5e:	d140      	bne.n	8002ee2 <DMA_CheckFifoParam+0xd6>
 8002e60:	2301      	movs	r3, #1
 8002e62:	73fb      	strb	r3, [r7, #15]
 8002e64:	e03d      	b.n	8002ee2 <DMA_CheckFifoParam+0xd6>
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	699b      	ldr	r3, [r3, #24]
 8002e6a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002e6e:	d121      	bne.n	8002eb4 <DMA_CheckFifoParam+0xa8>
 8002e70:	68bb      	ldr	r3, [r7, #8]
 8002e72:	2b03      	cmp	r3, #3
 8002e74:	d837      	bhi.n	8002ee6 <DMA_CheckFifoParam+0xda>
 8002e76:	a201      	add	r2, pc, #4	; (adr r2, 8002e7c <DMA_CheckFifoParam+0x70>)
 8002e78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002e7c:	08002e8d 	.word	0x08002e8d
 8002e80:	08002e93 	.word	0x08002e93
 8002e84:	08002e8d 	.word	0x08002e8d
 8002e88:	08002ea5 	.word	0x08002ea5
 8002e8c:	2301      	movs	r3, #1
 8002e8e:	73fb      	strb	r3, [r7, #15]
 8002e90:	e030      	b.n	8002ef4 <DMA_CheckFifoParam+0xe8>
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e96:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002e9a:	2b00      	cmp	r3, #0
 8002e9c:	d025      	beq.n	8002eea <DMA_CheckFifoParam+0xde>
 8002e9e:	2301      	movs	r3, #1
 8002ea0:	73fb      	strb	r3, [r7, #15]
 8002ea2:	e022      	b.n	8002eea <DMA_CheckFifoParam+0xde>
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002ea8:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8002eac:	d11f      	bne.n	8002eee <DMA_CheckFifoParam+0xe2>
 8002eae:	2301      	movs	r3, #1
 8002eb0:	73fb      	strb	r3, [r7, #15]
 8002eb2:	e01c      	b.n	8002eee <DMA_CheckFifoParam+0xe2>
 8002eb4:	68bb      	ldr	r3, [r7, #8]
 8002eb6:	2b02      	cmp	r3, #2
 8002eb8:	d903      	bls.n	8002ec2 <DMA_CheckFifoParam+0xb6>
 8002eba:	68bb      	ldr	r3, [r7, #8]
 8002ebc:	2b03      	cmp	r3, #3
 8002ebe:	d003      	beq.n	8002ec8 <DMA_CheckFifoParam+0xbc>
 8002ec0:	e018      	b.n	8002ef4 <DMA_CheckFifoParam+0xe8>
 8002ec2:	2301      	movs	r3, #1
 8002ec4:	73fb      	strb	r3, [r7, #15]
 8002ec6:	e015      	b.n	8002ef4 <DMA_CheckFifoParam+0xe8>
 8002ec8:	687b      	ldr	r3, [r7, #4]
 8002eca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002ecc:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d00e      	beq.n	8002ef2 <DMA_CheckFifoParam+0xe6>
 8002ed4:	2301      	movs	r3, #1
 8002ed6:	73fb      	strb	r3, [r7, #15]
 8002ed8:	e00b      	b.n	8002ef2 <DMA_CheckFifoParam+0xe6>
 8002eda:	bf00      	nop
 8002edc:	e00a      	b.n	8002ef4 <DMA_CheckFifoParam+0xe8>
 8002ede:	bf00      	nop
 8002ee0:	e008      	b.n	8002ef4 <DMA_CheckFifoParam+0xe8>
 8002ee2:	bf00      	nop
 8002ee4:	e006      	b.n	8002ef4 <DMA_CheckFifoParam+0xe8>
 8002ee6:	bf00      	nop
 8002ee8:	e004      	b.n	8002ef4 <DMA_CheckFifoParam+0xe8>
 8002eea:	bf00      	nop
 8002eec:	e002      	b.n	8002ef4 <DMA_CheckFifoParam+0xe8>
 8002eee:	bf00      	nop
 8002ef0:	e000      	b.n	8002ef4 <DMA_CheckFifoParam+0xe8>
 8002ef2:	bf00      	nop
 8002ef4:	7bfb      	ldrb	r3, [r7, #15]
 8002ef6:	4618      	mov	r0, r3
 8002ef8:	3714      	adds	r7, #20
 8002efa:	46bd      	mov	sp, r7
 8002efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f00:	4770      	bx	lr
 8002f02:	bf00      	nop

08002f04 <HAL_GPIO_Init>:
 8002f04:	b480      	push	{r7}
 8002f06:	b089      	sub	sp, #36	; 0x24
 8002f08:	af00      	add	r7, sp, #0
 8002f0a:	6078      	str	r0, [r7, #4]
 8002f0c:	6039      	str	r1, [r7, #0]
 8002f0e:	2300      	movs	r3, #0
 8002f10:	61fb      	str	r3, [r7, #28]
 8002f12:	2300      	movs	r3, #0
 8002f14:	617b      	str	r3, [r7, #20]
 8002f16:	2300      	movs	r3, #0
 8002f18:	613b      	str	r3, [r7, #16]
 8002f1a:	2300      	movs	r3, #0
 8002f1c:	61bb      	str	r3, [r7, #24]
 8002f1e:	2300      	movs	r3, #0
 8002f20:	61fb      	str	r3, [r7, #28]
 8002f22:	e169      	b.n	80031f8 <HAL_GPIO_Init+0x2f4>
 8002f24:	2201      	movs	r2, #1
 8002f26:	69fb      	ldr	r3, [r7, #28]
 8002f28:	fa02 f303 	lsl.w	r3, r2, r3
 8002f2c:	617b      	str	r3, [r7, #20]
 8002f2e:	683b      	ldr	r3, [r7, #0]
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	697a      	ldr	r2, [r7, #20]
 8002f34:	4013      	ands	r3, r2
 8002f36:	613b      	str	r3, [r7, #16]
 8002f38:	693a      	ldr	r2, [r7, #16]
 8002f3a:	697b      	ldr	r3, [r7, #20]
 8002f3c:	429a      	cmp	r2, r3
 8002f3e:	f040 8158 	bne.w	80031f2 <HAL_GPIO_Init+0x2ee>
 8002f42:	683b      	ldr	r3, [r7, #0]
 8002f44:	685b      	ldr	r3, [r3, #4]
 8002f46:	f003 0303 	and.w	r3, r3, #3
 8002f4a:	2b01      	cmp	r3, #1
 8002f4c:	d005      	beq.n	8002f5a <HAL_GPIO_Init+0x56>
 8002f4e:	683b      	ldr	r3, [r7, #0]
 8002f50:	685b      	ldr	r3, [r3, #4]
 8002f52:	f003 0303 	and.w	r3, r3, #3
 8002f56:	2b02      	cmp	r3, #2
 8002f58:	d130      	bne.n	8002fbc <HAL_GPIO_Init+0xb8>
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	689b      	ldr	r3, [r3, #8]
 8002f5e:	61bb      	str	r3, [r7, #24]
 8002f60:	69fb      	ldr	r3, [r7, #28]
 8002f62:	005b      	lsls	r3, r3, #1
 8002f64:	2203      	movs	r2, #3
 8002f66:	fa02 f303 	lsl.w	r3, r2, r3
 8002f6a:	43db      	mvns	r3, r3
 8002f6c:	69ba      	ldr	r2, [r7, #24]
 8002f6e:	4013      	ands	r3, r2
 8002f70:	61bb      	str	r3, [r7, #24]
 8002f72:	683b      	ldr	r3, [r7, #0]
 8002f74:	68da      	ldr	r2, [r3, #12]
 8002f76:	69fb      	ldr	r3, [r7, #28]
 8002f78:	005b      	lsls	r3, r3, #1
 8002f7a:	fa02 f303 	lsl.w	r3, r2, r3
 8002f7e:	69ba      	ldr	r2, [r7, #24]
 8002f80:	4313      	orrs	r3, r2
 8002f82:	61bb      	str	r3, [r7, #24]
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	69ba      	ldr	r2, [r7, #24]
 8002f88:	609a      	str	r2, [r3, #8]
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	685b      	ldr	r3, [r3, #4]
 8002f8e:	61bb      	str	r3, [r7, #24]
 8002f90:	2201      	movs	r2, #1
 8002f92:	69fb      	ldr	r3, [r7, #28]
 8002f94:	fa02 f303 	lsl.w	r3, r2, r3
 8002f98:	43db      	mvns	r3, r3
 8002f9a:	69ba      	ldr	r2, [r7, #24]
 8002f9c:	4013      	ands	r3, r2
 8002f9e:	61bb      	str	r3, [r7, #24]
 8002fa0:	683b      	ldr	r3, [r7, #0]
 8002fa2:	685b      	ldr	r3, [r3, #4]
 8002fa4:	091b      	lsrs	r3, r3, #4
 8002fa6:	f003 0201 	and.w	r2, r3, #1
 8002faa:	69fb      	ldr	r3, [r7, #28]
 8002fac:	fa02 f303 	lsl.w	r3, r2, r3
 8002fb0:	69ba      	ldr	r2, [r7, #24]
 8002fb2:	4313      	orrs	r3, r2
 8002fb4:	61bb      	str	r3, [r7, #24]
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	69ba      	ldr	r2, [r7, #24]
 8002fba:	605a      	str	r2, [r3, #4]
 8002fbc:	683b      	ldr	r3, [r7, #0]
 8002fbe:	685b      	ldr	r3, [r3, #4]
 8002fc0:	f003 0303 	and.w	r3, r3, #3
 8002fc4:	2b03      	cmp	r3, #3
 8002fc6:	d017      	beq.n	8002ff8 <HAL_GPIO_Init+0xf4>
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	68db      	ldr	r3, [r3, #12]
 8002fcc:	61bb      	str	r3, [r7, #24]
 8002fce:	69fb      	ldr	r3, [r7, #28]
 8002fd0:	005b      	lsls	r3, r3, #1
 8002fd2:	2203      	movs	r2, #3
 8002fd4:	fa02 f303 	lsl.w	r3, r2, r3
 8002fd8:	43db      	mvns	r3, r3
 8002fda:	69ba      	ldr	r2, [r7, #24]
 8002fdc:	4013      	ands	r3, r2
 8002fde:	61bb      	str	r3, [r7, #24]
 8002fe0:	683b      	ldr	r3, [r7, #0]
 8002fe2:	689a      	ldr	r2, [r3, #8]
 8002fe4:	69fb      	ldr	r3, [r7, #28]
 8002fe6:	005b      	lsls	r3, r3, #1
 8002fe8:	fa02 f303 	lsl.w	r3, r2, r3
 8002fec:	69ba      	ldr	r2, [r7, #24]
 8002fee:	4313      	orrs	r3, r2
 8002ff0:	61bb      	str	r3, [r7, #24]
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	69ba      	ldr	r2, [r7, #24]
 8002ff6:	60da      	str	r2, [r3, #12]
 8002ff8:	683b      	ldr	r3, [r7, #0]
 8002ffa:	685b      	ldr	r3, [r3, #4]
 8002ffc:	f003 0303 	and.w	r3, r3, #3
 8003000:	2b02      	cmp	r3, #2
 8003002:	d123      	bne.n	800304c <HAL_GPIO_Init+0x148>
 8003004:	69fb      	ldr	r3, [r7, #28]
 8003006:	08da      	lsrs	r2, r3, #3
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	3208      	adds	r2, #8
 800300c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003010:	61bb      	str	r3, [r7, #24]
 8003012:	69fb      	ldr	r3, [r7, #28]
 8003014:	f003 0307 	and.w	r3, r3, #7
 8003018:	009b      	lsls	r3, r3, #2
 800301a:	220f      	movs	r2, #15
 800301c:	fa02 f303 	lsl.w	r3, r2, r3
 8003020:	43db      	mvns	r3, r3
 8003022:	69ba      	ldr	r2, [r7, #24]
 8003024:	4013      	ands	r3, r2
 8003026:	61bb      	str	r3, [r7, #24]
 8003028:	683b      	ldr	r3, [r7, #0]
 800302a:	691a      	ldr	r2, [r3, #16]
 800302c:	69fb      	ldr	r3, [r7, #28]
 800302e:	f003 0307 	and.w	r3, r3, #7
 8003032:	009b      	lsls	r3, r3, #2
 8003034:	fa02 f303 	lsl.w	r3, r2, r3
 8003038:	69ba      	ldr	r2, [r7, #24]
 800303a:	4313      	orrs	r3, r2
 800303c:	61bb      	str	r3, [r7, #24]
 800303e:	69fb      	ldr	r3, [r7, #28]
 8003040:	08da      	lsrs	r2, r3, #3
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	3208      	adds	r2, #8
 8003046:	69b9      	ldr	r1, [r7, #24]
 8003048:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	61bb      	str	r3, [r7, #24]
 8003052:	69fb      	ldr	r3, [r7, #28]
 8003054:	005b      	lsls	r3, r3, #1
 8003056:	2203      	movs	r2, #3
 8003058:	fa02 f303 	lsl.w	r3, r2, r3
 800305c:	43db      	mvns	r3, r3
 800305e:	69ba      	ldr	r2, [r7, #24]
 8003060:	4013      	ands	r3, r2
 8003062:	61bb      	str	r3, [r7, #24]
 8003064:	683b      	ldr	r3, [r7, #0]
 8003066:	685b      	ldr	r3, [r3, #4]
 8003068:	f003 0203 	and.w	r2, r3, #3
 800306c:	69fb      	ldr	r3, [r7, #28]
 800306e:	005b      	lsls	r3, r3, #1
 8003070:	fa02 f303 	lsl.w	r3, r2, r3
 8003074:	69ba      	ldr	r2, [r7, #24]
 8003076:	4313      	orrs	r3, r2
 8003078:	61bb      	str	r3, [r7, #24]
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	69ba      	ldr	r2, [r7, #24]
 800307e:	601a      	str	r2, [r3, #0]
 8003080:	683b      	ldr	r3, [r7, #0]
 8003082:	685b      	ldr	r3, [r3, #4]
 8003084:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003088:	2b00      	cmp	r3, #0
 800308a:	f000 80b2 	beq.w	80031f2 <HAL_GPIO_Init+0x2ee>
 800308e:	4b60      	ldr	r3, [pc, #384]	; (8003210 <HAL_GPIO_Init+0x30c>)
 8003090:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003092:	4a5f      	ldr	r2, [pc, #380]	; (8003210 <HAL_GPIO_Init+0x30c>)
 8003094:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003098:	6453      	str	r3, [r2, #68]	; 0x44
 800309a:	4b5d      	ldr	r3, [pc, #372]	; (8003210 <HAL_GPIO_Init+0x30c>)
 800309c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800309e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80030a2:	60fb      	str	r3, [r7, #12]
 80030a4:	68fb      	ldr	r3, [r7, #12]
 80030a6:	4a5b      	ldr	r2, [pc, #364]	; (8003214 <HAL_GPIO_Init+0x310>)
 80030a8:	69fb      	ldr	r3, [r7, #28]
 80030aa:	089b      	lsrs	r3, r3, #2
 80030ac:	3302      	adds	r3, #2
 80030ae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80030b2:	61bb      	str	r3, [r7, #24]
 80030b4:	69fb      	ldr	r3, [r7, #28]
 80030b6:	f003 0303 	and.w	r3, r3, #3
 80030ba:	009b      	lsls	r3, r3, #2
 80030bc:	220f      	movs	r2, #15
 80030be:	fa02 f303 	lsl.w	r3, r2, r3
 80030c2:	43db      	mvns	r3, r3
 80030c4:	69ba      	ldr	r2, [r7, #24]
 80030c6:	4013      	ands	r3, r2
 80030c8:	61bb      	str	r3, [r7, #24]
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	4a52      	ldr	r2, [pc, #328]	; (8003218 <HAL_GPIO_Init+0x314>)
 80030ce:	4293      	cmp	r3, r2
 80030d0:	d02b      	beq.n	800312a <HAL_GPIO_Init+0x226>
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	4a51      	ldr	r2, [pc, #324]	; (800321c <HAL_GPIO_Init+0x318>)
 80030d6:	4293      	cmp	r3, r2
 80030d8:	d025      	beq.n	8003126 <HAL_GPIO_Init+0x222>
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	4a50      	ldr	r2, [pc, #320]	; (8003220 <HAL_GPIO_Init+0x31c>)
 80030de:	4293      	cmp	r3, r2
 80030e0:	d01f      	beq.n	8003122 <HAL_GPIO_Init+0x21e>
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	4a4f      	ldr	r2, [pc, #316]	; (8003224 <HAL_GPIO_Init+0x320>)
 80030e6:	4293      	cmp	r3, r2
 80030e8:	d019      	beq.n	800311e <HAL_GPIO_Init+0x21a>
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	4a4e      	ldr	r2, [pc, #312]	; (8003228 <HAL_GPIO_Init+0x324>)
 80030ee:	4293      	cmp	r3, r2
 80030f0:	d013      	beq.n	800311a <HAL_GPIO_Init+0x216>
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	4a4d      	ldr	r2, [pc, #308]	; (800322c <HAL_GPIO_Init+0x328>)
 80030f6:	4293      	cmp	r3, r2
 80030f8:	d00d      	beq.n	8003116 <HAL_GPIO_Init+0x212>
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	4a4c      	ldr	r2, [pc, #304]	; (8003230 <HAL_GPIO_Init+0x32c>)
 80030fe:	4293      	cmp	r3, r2
 8003100:	d007      	beq.n	8003112 <HAL_GPIO_Init+0x20e>
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	4a4b      	ldr	r2, [pc, #300]	; (8003234 <HAL_GPIO_Init+0x330>)
 8003106:	4293      	cmp	r3, r2
 8003108:	d101      	bne.n	800310e <HAL_GPIO_Init+0x20a>
 800310a:	2307      	movs	r3, #7
 800310c:	e00e      	b.n	800312c <HAL_GPIO_Init+0x228>
 800310e:	2308      	movs	r3, #8
 8003110:	e00c      	b.n	800312c <HAL_GPIO_Init+0x228>
 8003112:	2306      	movs	r3, #6
 8003114:	e00a      	b.n	800312c <HAL_GPIO_Init+0x228>
 8003116:	2305      	movs	r3, #5
 8003118:	e008      	b.n	800312c <HAL_GPIO_Init+0x228>
 800311a:	2304      	movs	r3, #4
 800311c:	e006      	b.n	800312c <HAL_GPIO_Init+0x228>
 800311e:	2303      	movs	r3, #3
 8003120:	e004      	b.n	800312c <HAL_GPIO_Init+0x228>
 8003122:	2302      	movs	r3, #2
 8003124:	e002      	b.n	800312c <HAL_GPIO_Init+0x228>
 8003126:	2301      	movs	r3, #1
 8003128:	e000      	b.n	800312c <HAL_GPIO_Init+0x228>
 800312a:	2300      	movs	r3, #0
 800312c:	69fa      	ldr	r2, [r7, #28]
 800312e:	f002 0203 	and.w	r2, r2, #3
 8003132:	0092      	lsls	r2, r2, #2
 8003134:	4093      	lsls	r3, r2
 8003136:	69ba      	ldr	r2, [r7, #24]
 8003138:	4313      	orrs	r3, r2
 800313a:	61bb      	str	r3, [r7, #24]
 800313c:	4935      	ldr	r1, [pc, #212]	; (8003214 <HAL_GPIO_Init+0x310>)
 800313e:	69fb      	ldr	r3, [r7, #28]
 8003140:	089b      	lsrs	r3, r3, #2
 8003142:	3302      	adds	r3, #2
 8003144:	69ba      	ldr	r2, [r7, #24]
 8003146:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800314a:	4b3b      	ldr	r3, [pc, #236]	; (8003238 <HAL_GPIO_Init+0x334>)
 800314c:	689b      	ldr	r3, [r3, #8]
 800314e:	61bb      	str	r3, [r7, #24]
 8003150:	693b      	ldr	r3, [r7, #16]
 8003152:	43db      	mvns	r3, r3
 8003154:	69ba      	ldr	r2, [r7, #24]
 8003156:	4013      	ands	r3, r2
 8003158:	61bb      	str	r3, [r7, #24]
 800315a:	683b      	ldr	r3, [r7, #0]
 800315c:	685b      	ldr	r3, [r3, #4]
 800315e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003162:	2b00      	cmp	r3, #0
 8003164:	d003      	beq.n	800316e <HAL_GPIO_Init+0x26a>
 8003166:	69ba      	ldr	r2, [r7, #24]
 8003168:	693b      	ldr	r3, [r7, #16]
 800316a:	4313      	orrs	r3, r2
 800316c:	61bb      	str	r3, [r7, #24]
 800316e:	4a32      	ldr	r2, [pc, #200]	; (8003238 <HAL_GPIO_Init+0x334>)
 8003170:	69bb      	ldr	r3, [r7, #24]
 8003172:	6093      	str	r3, [r2, #8]
 8003174:	4b30      	ldr	r3, [pc, #192]	; (8003238 <HAL_GPIO_Init+0x334>)
 8003176:	68db      	ldr	r3, [r3, #12]
 8003178:	61bb      	str	r3, [r7, #24]
 800317a:	693b      	ldr	r3, [r7, #16]
 800317c:	43db      	mvns	r3, r3
 800317e:	69ba      	ldr	r2, [r7, #24]
 8003180:	4013      	ands	r3, r2
 8003182:	61bb      	str	r3, [r7, #24]
 8003184:	683b      	ldr	r3, [r7, #0]
 8003186:	685b      	ldr	r3, [r3, #4]
 8003188:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800318c:	2b00      	cmp	r3, #0
 800318e:	d003      	beq.n	8003198 <HAL_GPIO_Init+0x294>
 8003190:	69ba      	ldr	r2, [r7, #24]
 8003192:	693b      	ldr	r3, [r7, #16]
 8003194:	4313      	orrs	r3, r2
 8003196:	61bb      	str	r3, [r7, #24]
 8003198:	4a27      	ldr	r2, [pc, #156]	; (8003238 <HAL_GPIO_Init+0x334>)
 800319a:	69bb      	ldr	r3, [r7, #24]
 800319c:	60d3      	str	r3, [r2, #12]
 800319e:	4b26      	ldr	r3, [pc, #152]	; (8003238 <HAL_GPIO_Init+0x334>)
 80031a0:	685b      	ldr	r3, [r3, #4]
 80031a2:	61bb      	str	r3, [r7, #24]
 80031a4:	693b      	ldr	r3, [r7, #16]
 80031a6:	43db      	mvns	r3, r3
 80031a8:	69ba      	ldr	r2, [r7, #24]
 80031aa:	4013      	ands	r3, r2
 80031ac:	61bb      	str	r3, [r7, #24]
 80031ae:	683b      	ldr	r3, [r7, #0]
 80031b0:	685b      	ldr	r3, [r3, #4]
 80031b2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80031b6:	2b00      	cmp	r3, #0
 80031b8:	d003      	beq.n	80031c2 <HAL_GPIO_Init+0x2be>
 80031ba:	69ba      	ldr	r2, [r7, #24]
 80031bc:	693b      	ldr	r3, [r7, #16]
 80031be:	4313      	orrs	r3, r2
 80031c0:	61bb      	str	r3, [r7, #24]
 80031c2:	4a1d      	ldr	r2, [pc, #116]	; (8003238 <HAL_GPIO_Init+0x334>)
 80031c4:	69bb      	ldr	r3, [r7, #24]
 80031c6:	6053      	str	r3, [r2, #4]
 80031c8:	4b1b      	ldr	r3, [pc, #108]	; (8003238 <HAL_GPIO_Init+0x334>)
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	61bb      	str	r3, [r7, #24]
 80031ce:	693b      	ldr	r3, [r7, #16]
 80031d0:	43db      	mvns	r3, r3
 80031d2:	69ba      	ldr	r2, [r7, #24]
 80031d4:	4013      	ands	r3, r2
 80031d6:	61bb      	str	r3, [r7, #24]
 80031d8:	683b      	ldr	r3, [r7, #0]
 80031da:	685b      	ldr	r3, [r3, #4]
 80031dc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80031e0:	2b00      	cmp	r3, #0
 80031e2:	d003      	beq.n	80031ec <HAL_GPIO_Init+0x2e8>
 80031e4:	69ba      	ldr	r2, [r7, #24]
 80031e6:	693b      	ldr	r3, [r7, #16]
 80031e8:	4313      	orrs	r3, r2
 80031ea:	61bb      	str	r3, [r7, #24]
 80031ec:	4a12      	ldr	r2, [pc, #72]	; (8003238 <HAL_GPIO_Init+0x334>)
 80031ee:	69bb      	ldr	r3, [r7, #24]
 80031f0:	6013      	str	r3, [r2, #0]
 80031f2:	69fb      	ldr	r3, [r7, #28]
 80031f4:	3301      	adds	r3, #1
 80031f6:	61fb      	str	r3, [r7, #28]
 80031f8:	69fb      	ldr	r3, [r7, #28]
 80031fa:	2b0f      	cmp	r3, #15
 80031fc:	f67f ae92 	bls.w	8002f24 <HAL_GPIO_Init+0x20>
 8003200:	bf00      	nop
 8003202:	bf00      	nop
 8003204:	3724      	adds	r7, #36	; 0x24
 8003206:	46bd      	mov	sp, r7
 8003208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800320c:	4770      	bx	lr
 800320e:	bf00      	nop
 8003210:	40023800 	.word	0x40023800
 8003214:	40013800 	.word	0x40013800
 8003218:	40020000 	.word	0x40020000
 800321c:	40020400 	.word	0x40020400
 8003220:	40020800 	.word	0x40020800
 8003224:	40020c00 	.word	0x40020c00
 8003228:	40021000 	.word	0x40021000
 800322c:	40021400 	.word	0x40021400
 8003230:	40021800 	.word	0x40021800
 8003234:	40021c00 	.word	0x40021c00
 8003238:	40013c00 	.word	0x40013c00

0800323c <HAL_GPIO_ReadPin>:
 800323c:	b480      	push	{r7}
 800323e:	b085      	sub	sp, #20
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
 8003244:	460b      	mov	r3, r1
 8003246:	807b      	strh	r3, [r7, #2]
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	691a      	ldr	r2, [r3, #16]
 800324c:	887b      	ldrh	r3, [r7, #2]
 800324e:	4013      	ands	r3, r2
 8003250:	2b00      	cmp	r3, #0
 8003252:	d002      	beq.n	800325a <HAL_GPIO_ReadPin+0x1e>
 8003254:	2301      	movs	r3, #1
 8003256:	73fb      	strb	r3, [r7, #15]
 8003258:	e001      	b.n	800325e <HAL_GPIO_ReadPin+0x22>
 800325a:	2300      	movs	r3, #0
 800325c:	73fb      	strb	r3, [r7, #15]
 800325e:	7bfb      	ldrb	r3, [r7, #15]
 8003260:	4618      	mov	r0, r3
 8003262:	3714      	adds	r7, #20
 8003264:	46bd      	mov	sp, r7
 8003266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800326a:	4770      	bx	lr

0800326c <HAL_GPIO_WritePin>:
 800326c:	b480      	push	{r7}
 800326e:	b083      	sub	sp, #12
 8003270:	af00      	add	r7, sp, #0
 8003272:	6078      	str	r0, [r7, #4]
 8003274:	460b      	mov	r3, r1
 8003276:	807b      	strh	r3, [r7, #2]
 8003278:	4613      	mov	r3, r2
 800327a:	707b      	strb	r3, [r7, #1]
 800327c:	787b      	ldrb	r3, [r7, #1]
 800327e:	2b00      	cmp	r3, #0
 8003280:	d003      	beq.n	800328a <HAL_GPIO_WritePin+0x1e>
 8003282:	887a      	ldrh	r2, [r7, #2]
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	619a      	str	r2, [r3, #24]
 8003288:	e003      	b.n	8003292 <HAL_GPIO_WritePin+0x26>
 800328a:	887b      	ldrh	r3, [r7, #2]
 800328c:	041a      	lsls	r2, r3, #16
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	619a      	str	r2, [r3, #24]
 8003292:	bf00      	nop
 8003294:	370c      	adds	r7, #12
 8003296:	46bd      	mov	sp, r7
 8003298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800329c:	4770      	bx	lr
	...

080032a0 <HAL_GPIO_EXTI_IRQHandler>:
 80032a0:	b580      	push	{r7, lr}
 80032a2:	b082      	sub	sp, #8
 80032a4:	af00      	add	r7, sp, #0
 80032a6:	4603      	mov	r3, r0
 80032a8:	80fb      	strh	r3, [r7, #6]
 80032aa:	4b08      	ldr	r3, [pc, #32]	; (80032cc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80032ac:	695a      	ldr	r2, [r3, #20]
 80032ae:	88fb      	ldrh	r3, [r7, #6]
 80032b0:	4013      	ands	r3, r2
 80032b2:	2b00      	cmp	r3, #0
 80032b4:	d006      	beq.n	80032c4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80032b6:	4a05      	ldr	r2, [pc, #20]	; (80032cc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80032b8:	88fb      	ldrh	r3, [r7, #6]
 80032ba:	6153      	str	r3, [r2, #20]
 80032bc:	88fb      	ldrh	r3, [r7, #6]
 80032be:	4618      	mov	r0, r3
 80032c0:	f7fe fe8e 	bl	8001fe0 <HAL_GPIO_EXTI_Callback>
 80032c4:	bf00      	nop
 80032c6:	3708      	adds	r7, #8
 80032c8:	46bd      	mov	sp, r7
 80032ca:	bd80      	pop	{r7, pc}
 80032cc:	40013c00 	.word	0x40013c00

080032d0 <HAL_I2C_Init>:
 80032d0:	b580      	push	{r7, lr}
 80032d2:	b082      	sub	sp, #8
 80032d4:	af00      	add	r7, sp, #0
 80032d6:	6078      	str	r0, [r7, #4]
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	2b00      	cmp	r3, #0
 80032dc:	d101      	bne.n	80032e2 <HAL_I2C_Init+0x12>
 80032de:	2301      	movs	r3, #1
 80032e0:	e07f      	b.n	80033e2 <HAL_I2C_Init+0x112>
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80032e8:	b2db      	uxtb	r3, r3
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d106      	bne.n	80032fc <HAL_I2C_Init+0x2c>
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	2200      	movs	r2, #0
 80032f2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80032f6:	6878      	ldr	r0, [r7, #4]
 80032f8:	f7fe fec2 	bl	8002080 <HAL_I2C_MspInit>
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	2224      	movs	r2, #36	; 0x24
 8003300:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	681a      	ldr	r2, [r3, #0]
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	f022 0201 	bic.w	r2, r2, #1
 8003312:	601a      	str	r2, [r3, #0]
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	685a      	ldr	r2, [r3, #4]
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8003320:	611a      	str	r2, [r3, #16]
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	689a      	ldr	r2, [r3, #8]
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003330:	609a      	str	r2, [r3, #8]
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	68db      	ldr	r3, [r3, #12]
 8003336:	2b01      	cmp	r3, #1
 8003338:	d107      	bne.n	800334a <HAL_I2C_Init+0x7a>
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	689a      	ldr	r2, [r3, #8]
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003346:	609a      	str	r2, [r3, #8]
 8003348:	e006      	b.n	8003358 <HAL_I2C_Init+0x88>
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	689a      	ldr	r2, [r3, #8]
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8003356:	609a      	str	r2, [r3, #8]
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	68db      	ldr	r3, [r3, #12]
 800335c:	2b02      	cmp	r3, #2
 800335e:	d104      	bne.n	800336a <HAL_I2C_Init+0x9a>
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	681b      	ldr	r3, [r3, #0]
 8003364:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003368:	605a      	str	r2, [r3, #4]
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	681b      	ldr	r3, [r3, #0]
 800336e:	6859      	ldr	r1, [r3, #4]
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	681a      	ldr	r2, [r3, #0]
 8003374:	4b1d      	ldr	r3, [pc, #116]	; (80033ec <HAL_I2C_Init+0x11c>)
 8003376:	430b      	orrs	r3, r1
 8003378:	6053      	str	r3, [r2, #4]
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	68da      	ldr	r2, [r3, #12]
 8003380:	687b      	ldr	r3, [r7, #4]
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003388:	60da      	str	r2, [r3, #12]
 800338a:	687b      	ldr	r3, [r7, #4]
 800338c:	691a      	ldr	r2, [r3, #16]
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	695b      	ldr	r3, [r3, #20]
 8003392:	ea42 0103 	orr.w	r1, r2, r3
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	699b      	ldr	r3, [r3, #24]
 800339a:	021a      	lsls	r2, r3, #8
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	430a      	orrs	r2, r1
 80033a2:	60da      	str	r2, [r3, #12]
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	69d9      	ldr	r1, [r3, #28]
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	6a1a      	ldr	r2, [r3, #32]
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	430a      	orrs	r2, r1
 80033b2:	601a      	str	r2, [r3, #0]
 80033b4:	687b      	ldr	r3, [r7, #4]
 80033b6:	681b      	ldr	r3, [r3, #0]
 80033b8:	681a      	ldr	r2, [r3, #0]
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	f042 0201 	orr.w	r2, r2, #1
 80033c2:	601a      	str	r2, [r3, #0]
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	2200      	movs	r2, #0
 80033c8:	645a      	str	r2, [r3, #68]	; 0x44
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	2220      	movs	r2, #32
 80033ce:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	2200      	movs	r2, #0
 80033d6:	631a      	str	r2, [r3, #48]	; 0x30
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	2200      	movs	r2, #0
 80033dc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80033e0:	2300      	movs	r3, #0
 80033e2:	4618      	mov	r0, r3
 80033e4:	3708      	adds	r7, #8
 80033e6:	46bd      	mov	sp, r7
 80033e8:	bd80      	pop	{r7, pc}
 80033ea:	bf00      	nop
 80033ec:	02008000 	.word	0x02008000

080033f0 <HAL_I2C_Mem_Write>:
 80033f0:	b580      	push	{r7, lr}
 80033f2:	b088      	sub	sp, #32
 80033f4:	af02      	add	r7, sp, #8
 80033f6:	60f8      	str	r0, [r7, #12]
 80033f8:	4608      	mov	r0, r1
 80033fa:	4611      	mov	r1, r2
 80033fc:	461a      	mov	r2, r3
 80033fe:	4603      	mov	r3, r0
 8003400:	817b      	strh	r3, [r7, #10]
 8003402:	460b      	mov	r3, r1
 8003404:	813b      	strh	r3, [r7, #8]
 8003406:	4613      	mov	r3, r2
 8003408:	80fb      	strh	r3, [r7, #6]
 800340a:	68fb      	ldr	r3, [r7, #12]
 800340c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003410:	b2db      	uxtb	r3, r3
 8003412:	2b20      	cmp	r3, #32
 8003414:	f040 80f9 	bne.w	800360a <HAL_I2C_Mem_Write+0x21a>
 8003418:	6a3b      	ldr	r3, [r7, #32]
 800341a:	2b00      	cmp	r3, #0
 800341c:	d002      	beq.n	8003424 <HAL_I2C_Mem_Write+0x34>
 800341e:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003420:	2b00      	cmp	r3, #0
 8003422:	d105      	bne.n	8003430 <HAL_I2C_Mem_Write+0x40>
 8003424:	68fb      	ldr	r3, [r7, #12]
 8003426:	f44f 7200 	mov.w	r2, #512	; 0x200
 800342a:	645a      	str	r2, [r3, #68]	; 0x44
 800342c:	2301      	movs	r3, #1
 800342e:	e0ed      	b.n	800360c <HAL_I2C_Mem_Write+0x21c>
 8003430:	68fb      	ldr	r3, [r7, #12]
 8003432:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003436:	2b01      	cmp	r3, #1
 8003438:	d101      	bne.n	800343e <HAL_I2C_Mem_Write+0x4e>
 800343a:	2302      	movs	r3, #2
 800343c:	e0e6      	b.n	800360c <HAL_I2C_Mem_Write+0x21c>
 800343e:	68fb      	ldr	r3, [r7, #12]
 8003440:	2201      	movs	r2, #1
 8003442:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003446:	f7ff f8a3 	bl	8002590 <HAL_GetTick>
 800344a:	6178      	str	r0, [r7, #20]
 800344c:	697b      	ldr	r3, [r7, #20]
 800344e:	9300      	str	r3, [sp, #0]
 8003450:	2319      	movs	r3, #25
 8003452:	2201      	movs	r2, #1
 8003454:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003458:	68f8      	ldr	r0, [r7, #12]
 800345a:	f000 f955 	bl	8003708 <I2C_WaitOnFlagUntilTimeout>
 800345e:	4603      	mov	r3, r0
 8003460:	2b00      	cmp	r3, #0
 8003462:	d001      	beq.n	8003468 <HAL_I2C_Mem_Write+0x78>
 8003464:	2301      	movs	r3, #1
 8003466:	e0d1      	b.n	800360c <HAL_I2C_Mem_Write+0x21c>
 8003468:	68fb      	ldr	r3, [r7, #12]
 800346a:	2221      	movs	r2, #33	; 0x21
 800346c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	2240      	movs	r2, #64	; 0x40
 8003474:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	2200      	movs	r2, #0
 800347c:	645a      	str	r2, [r3, #68]	; 0x44
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	6a3a      	ldr	r2, [r7, #32]
 8003482:	625a      	str	r2, [r3, #36]	; 0x24
 8003484:	68fb      	ldr	r3, [r7, #12]
 8003486:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8003488:	855a      	strh	r2, [r3, #42]	; 0x2a
 800348a:	68fb      	ldr	r3, [r7, #12]
 800348c:	2200      	movs	r2, #0
 800348e:	635a      	str	r2, [r3, #52]	; 0x34
 8003490:	88f8      	ldrh	r0, [r7, #6]
 8003492:	893a      	ldrh	r2, [r7, #8]
 8003494:	8979      	ldrh	r1, [r7, #10]
 8003496:	697b      	ldr	r3, [r7, #20]
 8003498:	9301      	str	r3, [sp, #4]
 800349a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800349c:	9300      	str	r3, [sp, #0]
 800349e:	4603      	mov	r3, r0
 80034a0:	68f8      	ldr	r0, [r7, #12]
 80034a2:	f000 f8b9 	bl	8003618 <I2C_RequestMemoryWrite>
 80034a6:	4603      	mov	r3, r0
 80034a8:	2b00      	cmp	r3, #0
 80034aa:	d005      	beq.n	80034b8 <HAL_I2C_Mem_Write+0xc8>
 80034ac:	68fb      	ldr	r3, [r7, #12]
 80034ae:	2200      	movs	r2, #0
 80034b0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80034b4:	2301      	movs	r3, #1
 80034b6:	e0a9      	b.n	800360c <HAL_I2C_Mem_Write+0x21c>
 80034b8:	68fb      	ldr	r3, [r7, #12]
 80034ba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80034bc:	b29b      	uxth	r3, r3
 80034be:	2bff      	cmp	r3, #255	; 0xff
 80034c0:	d90e      	bls.n	80034e0 <HAL_I2C_Mem_Write+0xf0>
 80034c2:	68fb      	ldr	r3, [r7, #12]
 80034c4:	22ff      	movs	r2, #255	; 0xff
 80034c6:	851a      	strh	r2, [r3, #40]	; 0x28
 80034c8:	68fb      	ldr	r3, [r7, #12]
 80034ca:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80034cc:	b2da      	uxtb	r2, r3
 80034ce:	8979      	ldrh	r1, [r7, #10]
 80034d0:	2300      	movs	r3, #0
 80034d2:	9300      	str	r3, [sp, #0]
 80034d4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80034d8:	68f8      	ldr	r0, [r7, #12]
 80034da:	f000 fab1 	bl	8003a40 <I2C_TransferConfig>
 80034de:	e00f      	b.n	8003500 <HAL_I2C_Mem_Write+0x110>
 80034e0:	68fb      	ldr	r3, [r7, #12]
 80034e2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80034e4:	b29a      	uxth	r2, r3
 80034e6:	68fb      	ldr	r3, [r7, #12]
 80034e8:	851a      	strh	r2, [r3, #40]	; 0x28
 80034ea:	68fb      	ldr	r3, [r7, #12]
 80034ec:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80034ee:	b2da      	uxtb	r2, r3
 80034f0:	8979      	ldrh	r1, [r7, #10]
 80034f2:	2300      	movs	r3, #0
 80034f4:	9300      	str	r3, [sp, #0]
 80034f6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80034fa:	68f8      	ldr	r0, [r7, #12]
 80034fc:	f000 faa0 	bl	8003a40 <I2C_TransferConfig>
 8003500:	697a      	ldr	r2, [r7, #20]
 8003502:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003504:	68f8      	ldr	r0, [r7, #12]
 8003506:	f000 f93f 	bl	8003788 <I2C_WaitOnTXISFlagUntilTimeout>
 800350a:	4603      	mov	r3, r0
 800350c:	2b00      	cmp	r3, #0
 800350e:	d001      	beq.n	8003514 <HAL_I2C_Mem_Write+0x124>
 8003510:	2301      	movs	r3, #1
 8003512:	e07b      	b.n	800360c <HAL_I2C_Mem_Write+0x21c>
 8003514:	68fb      	ldr	r3, [r7, #12]
 8003516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003518:	781a      	ldrb	r2, [r3, #0]
 800351a:	68fb      	ldr	r3, [r7, #12]
 800351c:	681b      	ldr	r3, [r3, #0]
 800351e:	629a      	str	r2, [r3, #40]	; 0x28
 8003520:	68fb      	ldr	r3, [r7, #12]
 8003522:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003524:	1c5a      	adds	r2, r3, #1
 8003526:	68fb      	ldr	r3, [r7, #12]
 8003528:	625a      	str	r2, [r3, #36]	; 0x24
 800352a:	68fb      	ldr	r3, [r7, #12]
 800352c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800352e:	b29b      	uxth	r3, r3
 8003530:	3b01      	subs	r3, #1
 8003532:	b29a      	uxth	r2, r3
 8003534:	68fb      	ldr	r3, [r7, #12]
 8003536:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003538:	68fb      	ldr	r3, [r7, #12]
 800353a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800353c:	3b01      	subs	r3, #1
 800353e:	b29a      	uxth	r2, r3
 8003540:	68fb      	ldr	r3, [r7, #12]
 8003542:	851a      	strh	r2, [r3, #40]	; 0x28
 8003544:	68fb      	ldr	r3, [r7, #12]
 8003546:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003548:	b29b      	uxth	r3, r3
 800354a:	2b00      	cmp	r3, #0
 800354c:	d034      	beq.n	80035b8 <HAL_I2C_Mem_Write+0x1c8>
 800354e:	68fb      	ldr	r3, [r7, #12]
 8003550:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003552:	2b00      	cmp	r3, #0
 8003554:	d130      	bne.n	80035b8 <HAL_I2C_Mem_Write+0x1c8>
 8003556:	697b      	ldr	r3, [r7, #20]
 8003558:	9300      	str	r3, [sp, #0]
 800355a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800355c:	2200      	movs	r2, #0
 800355e:	2180      	movs	r1, #128	; 0x80
 8003560:	68f8      	ldr	r0, [r7, #12]
 8003562:	f000 f8d1 	bl	8003708 <I2C_WaitOnFlagUntilTimeout>
 8003566:	4603      	mov	r3, r0
 8003568:	2b00      	cmp	r3, #0
 800356a:	d001      	beq.n	8003570 <HAL_I2C_Mem_Write+0x180>
 800356c:	2301      	movs	r3, #1
 800356e:	e04d      	b.n	800360c <HAL_I2C_Mem_Write+0x21c>
 8003570:	68fb      	ldr	r3, [r7, #12]
 8003572:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003574:	b29b      	uxth	r3, r3
 8003576:	2bff      	cmp	r3, #255	; 0xff
 8003578:	d90e      	bls.n	8003598 <HAL_I2C_Mem_Write+0x1a8>
 800357a:	68fb      	ldr	r3, [r7, #12]
 800357c:	22ff      	movs	r2, #255	; 0xff
 800357e:	851a      	strh	r2, [r3, #40]	; 0x28
 8003580:	68fb      	ldr	r3, [r7, #12]
 8003582:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003584:	b2da      	uxtb	r2, r3
 8003586:	8979      	ldrh	r1, [r7, #10]
 8003588:	2300      	movs	r3, #0
 800358a:	9300      	str	r3, [sp, #0]
 800358c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003590:	68f8      	ldr	r0, [r7, #12]
 8003592:	f000 fa55 	bl	8003a40 <I2C_TransferConfig>
 8003596:	e00f      	b.n	80035b8 <HAL_I2C_Mem_Write+0x1c8>
 8003598:	68fb      	ldr	r3, [r7, #12]
 800359a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800359c:	b29a      	uxth	r2, r3
 800359e:	68fb      	ldr	r3, [r7, #12]
 80035a0:	851a      	strh	r2, [r3, #40]	; 0x28
 80035a2:	68fb      	ldr	r3, [r7, #12]
 80035a4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80035a6:	b2da      	uxtb	r2, r3
 80035a8:	8979      	ldrh	r1, [r7, #10]
 80035aa:	2300      	movs	r3, #0
 80035ac:	9300      	str	r3, [sp, #0]
 80035ae:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80035b2:	68f8      	ldr	r0, [r7, #12]
 80035b4:	f000 fa44 	bl	8003a40 <I2C_TransferConfig>
 80035b8:	68fb      	ldr	r3, [r7, #12]
 80035ba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80035bc:	b29b      	uxth	r3, r3
 80035be:	2b00      	cmp	r3, #0
 80035c0:	d19e      	bne.n	8003500 <HAL_I2C_Mem_Write+0x110>
 80035c2:	697a      	ldr	r2, [r7, #20]
 80035c4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80035c6:	68f8      	ldr	r0, [r7, #12]
 80035c8:	f000 f91e 	bl	8003808 <I2C_WaitOnSTOPFlagUntilTimeout>
 80035cc:	4603      	mov	r3, r0
 80035ce:	2b00      	cmp	r3, #0
 80035d0:	d001      	beq.n	80035d6 <HAL_I2C_Mem_Write+0x1e6>
 80035d2:	2301      	movs	r3, #1
 80035d4:	e01a      	b.n	800360c <HAL_I2C_Mem_Write+0x21c>
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	2220      	movs	r2, #32
 80035dc:	61da      	str	r2, [r3, #28]
 80035de:	68fb      	ldr	r3, [r7, #12]
 80035e0:	681b      	ldr	r3, [r3, #0]
 80035e2:	6859      	ldr	r1, [r3, #4]
 80035e4:	68fb      	ldr	r3, [r7, #12]
 80035e6:	681a      	ldr	r2, [r3, #0]
 80035e8:	4b0a      	ldr	r3, [pc, #40]	; (8003614 <HAL_I2C_Mem_Write+0x224>)
 80035ea:	400b      	ands	r3, r1
 80035ec:	6053      	str	r3, [r2, #4]
 80035ee:	68fb      	ldr	r3, [r7, #12]
 80035f0:	2220      	movs	r2, #32
 80035f2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	2200      	movs	r2, #0
 80035fa:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	2200      	movs	r2, #0
 8003602:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003606:	2300      	movs	r3, #0
 8003608:	e000      	b.n	800360c <HAL_I2C_Mem_Write+0x21c>
 800360a:	2302      	movs	r3, #2
 800360c:	4618      	mov	r0, r3
 800360e:	3718      	adds	r7, #24
 8003610:	46bd      	mov	sp, r7
 8003612:	bd80      	pop	{r7, pc}
 8003614:	fe00e800 	.word	0xfe00e800

08003618 <I2C_RequestMemoryWrite>:
 8003618:	b580      	push	{r7, lr}
 800361a:	b086      	sub	sp, #24
 800361c:	af02      	add	r7, sp, #8
 800361e:	60f8      	str	r0, [r7, #12]
 8003620:	4608      	mov	r0, r1
 8003622:	4611      	mov	r1, r2
 8003624:	461a      	mov	r2, r3
 8003626:	4603      	mov	r3, r0
 8003628:	817b      	strh	r3, [r7, #10]
 800362a:	460b      	mov	r3, r1
 800362c:	813b      	strh	r3, [r7, #8]
 800362e:	4613      	mov	r3, r2
 8003630:	80fb      	strh	r3, [r7, #6]
 8003632:	88fb      	ldrh	r3, [r7, #6]
 8003634:	b2da      	uxtb	r2, r3
 8003636:	8979      	ldrh	r1, [r7, #10]
 8003638:	4b20      	ldr	r3, [pc, #128]	; (80036bc <I2C_RequestMemoryWrite+0xa4>)
 800363a:	9300      	str	r3, [sp, #0]
 800363c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003640:	68f8      	ldr	r0, [r7, #12]
 8003642:	f000 f9fd 	bl	8003a40 <I2C_TransferConfig>
 8003646:	69fa      	ldr	r2, [r7, #28]
 8003648:	69b9      	ldr	r1, [r7, #24]
 800364a:	68f8      	ldr	r0, [r7, #12]
 800364c:	f000 f89c 	bl	8003788 <I2C_WaitOnTXISFlagUntilTimeout>
 8003650:	4603      	mov	r3, r0
 8003652:	2b00      	cmp	r3, #0
 8003654:	d001      	beq.n	800365a <I2C_RequestMemoryWrite+0x42>
 8003656:	2301      	movs	r3, #1
 8003658:	e02c      	b.n	80036b4 <I2C_RequestMemoryWrite+0x9c>
 800365a:	88fb      	ldrh	r3, [r7, #6]
 800365c:	2b01      	cmp	r3, #1
 800365e:	d105      	bne.n	800366c <I2C_RequestMemoryWrite+0x54>
 8003660:	893b      	ldrh	r3, [r7, #8]
 8003662:	b2da      	uxtb	r2, r3
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	629a      	str	r2, [r3, #40]	; 0x28
 800366a:	e015      	b.n	8003698 <I2C_RequestMemoryWrite+0x80>
 800366c:	893b      	ldrh	r3, [r7, #8]
 800366e:	0a1b      	lsrs	r3, r3, #8
 8003670:	b29b      	uxth	r3, r3
 8003672:	b2da      	uxtb	r2, r3
 8003674:	68fb      	ldr	r3, [r7, #12]
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	629a      	str	r2, [r3, #40]	; 0x28
 800367a:	69fa      	ldr	r2, [r7, #28]
 800367c:	69b9      	ldr	r1, [r7, #24]
 800367e:	68f8      	ldr	r0, [r7, #12]
 8003680:	f000 f882 	bl	8003788 <I2C_WaitOnTXISFlagUntilTimeout>
 8003684:	4603      	mov	r3, r0
 8003686:	2b00      	cmp	r3, #0
 8003688:	d001      	beq.n	800368e <I2C_RequestMemoryWrite+0x76>
 800368a:	2301      	movs	r3, #1
 800368c:	e012      	b.n	80036b4 <I2C_RequestMemoryWrite+0x9c>
 800368e:	893b      	ldrh	r3, [r7, #8]
 8003690:	b2da      	uxtb	r2, r3
 8003692:	68fb      	ldr	r3, [r7, #12]
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	629a      	str	r2, [r3, #40]	; 0x28
 8003698:	69fb      	ldr	r3, [r7, #28]
 800369a:	9300      	str	r3, [sp, #0]
 800369c:	69bb      	ldr	r3, [r7, #24]
 800369e:	2200      	movs	r2, #0
 80036a0:	2180      	movs	r1, #128	; 0x80
 80036a2:	68f8      	ldr	r0, [r7, #12]
 80036a4:	f000 f830 	bl	8003708 <I2C_WaitOnFlagUntilTimeout>
 80036a8:	4603      	mov	r3, r0
 80036aa:	2b00      	cmp	r3, #0
 80036ac:	d001      	beq.n	80036b2 <I2C_RequestMemoryWrite+0x9a>
 80036ae:	2301      	movs	r3, #1
 80036b0:	e000      	b.n	80036b4 <I2C_RequestMemoryWrite+0x9c>
 80036b2:	2300      	movs	r3, #0
 80036b4:	4618      	mov	r0, r3
 80036b6:	3710      	adds	r7, #16
 80036b8:	46bd      	mov	sp, r7
 80036ba:	bd80      	pop	{r7, pc}
 80036bc:	80002000 	.word	0x80002000

080036c0 <I2C_Flush_TXDR>:
 80036c0:	b480      	push	{r7}
 80036c2:	b083      	sub	sp, #12
 80036c4:	af00      	add	r7, sp, #0
 80036c6:	6078      	str	r0, [r7, #4]
 80036c8:	687b      	ldr	r3, [r7, #4]
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	699b      	ldr	r3, [r3, #24]
 80036ce:	f003 0302 	and.w	r3, r3, #2
 80036d2:	2b02      	cmp	r3, #2
 80036d4:	d103      	bne.n	80036de <I2C_Flush_TXDR+0x1e>
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	681b      	ldr	r3, [r3, #0]
 80036da:	2200      	movs	r2, #0
 80036dc:	629a      	str	r2, [r3, #40]	; 0x28
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	681b      	ldr	r3, [r3, #0]
 80036e2:	699b      	ldr	r3, [r3, #24]
 80036e4:	f003 0301 	and.w	r3, r3, #1
 80036e8:	2b01      	cmp	r3, #1
 80036ea:	d007      	beq.n	80036fc <I2C_Flush_TXDR+0x3c>
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	699a      	ldr	r2, [r3, #24]
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	681b      	ldr	r3, [r3, #0]
 80036f6:	f042 0201 	orr.w	r2, r2, #1
 80036fa:	619a      	str	r2, [r3, #24]
 80036fc:	bf00      	nop
 80036fe:	370c      	adds	r7, #12
 8003700:	46bd      	mov	sp, r7
 8003702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003706:	4770      	bx	lr

08003708 <I2C_WaitOnFlagUntilTimeout>:
 8003708:	b580      	push	{r7, lr}
 800370a:	b084      	sub	sp, #16
 800370c:	af00      	add	r7, sp, #0
 800370e:	60f8      	str	r0, [r7, #12]
 8003710:	60b9      	str	r1, [r7, #8]
 8003712:	603b      	str	r3, [r7, #0]
 8003714:	4613      	mov	r3, r2
 8003716:	71fb      	strb	r3, [r7, #7]
 8003718:	e022      	b.n	8003760 <I2C_WaitOnFlagUntilTimeout+0x58>
 800371a:	683b      	ldr	r3, [r7, #0]
 800371c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003720:	d01e      	beq.n	8003760 <I2C_WaitOnFlagUntilTimeout+0x58>
 8003722:	f7fe ff35 	bl	8002590 <HAL_GetTick>
 8003726:	4602      	mov	r2, r0
 8003728:	69bb      	ldr	r3, [r7, #24]
 800372a:	1ad3      	subs	r3, r2, r3
 800372c:	683a      	ldr	r2, [r7, #0]
 800372e:	429a      	cmp	r2, r3
 8003730:	d302      	bcc.n	8003738 <I2C_WaitOnFlagUntilTimeout+0x30>
 8003732:	683b      	ldr	r3, [r7, #0]
 8003734:	2b00      	cmp	r3, #0
 8003736:	d113      	bne.n	8003760 <I2C_WaitOnFlagUntilTimeout+0x58>
 8003738:	68fb      	ldr	r3, [r7, #12]
 800373a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800373c:	f043 0220 	orr.w	r2, r3, #32
 8003740:	68fb      	ldr	r3, [r7, #12]
 8003742:	645a      	str	r2, [r3, #68]	; 0x44
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	2220      	movs	r2, #32
 8003748:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800374c:	68fb      	ldr	r3, [r7, #12]
 800374e:	2200      	movs	r2, #0
 8003750:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003754:	68fb      	ldr	r3, [r7, #12]
 8003756:	2200      	movs	r2, #0
 8003758:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800375c:	2301      	movs	r3, #1
 800375e:	e00f      	b.n	8003780 <I2C_WaitOnFlagUntilTimeout+0x78>
 8003760:	68fb      	ldr	r3, [r7, #12]
 8003762:	681b      	ldr	r3, [r3, #0]
 8003764:	699a      	ldr	r2, [r3, #24]
 8003766:	68bb      	ldr	r3, [r7, #8]
 8003768:	4013      	ands	r3, r2
 800376a:	68ba      	ldr	r2, [r7, #8]
 800376c:	429a      	cmp	r2, r3
 800376e:	bf0c      	ite	eq
 8003770:	2301      	moveq	r3, #1
 8003772:	2300      	movne	r3, #0
 8003774:	b2db      	uxtb	r3, r3
 8003776:	461a      	mov	r2, r3
 8003778:	79fb      	ldrb	r3, [r7, #7]
 800377a:	429a      	cmp	r2, r3
 800377c:	d0cd      	beq.n	800371a <I2C_WaitOnFlagUntilTimeout+0x12>
 800377e:	2300      	movs	r3, #0
 8003780:	4618      	mov	r0, r3
 8003782:	3710      	adds	r7, #16
 8003784:	46bd      	mov	sp, r7
 8003786:	bd80      	pop	{r7, pc}

08003788 <I2C_WaitOnTXISFlagUntilTimeout>:
 8003788:	b580      	push	{r7, lr}
 800378a:	b084      	sub	sp, #16
 800378c:	af00      	add	r7, sp, #0
 800378e:	60f8      	str	r0, [r7, #12]
 8003790:	60b9      	str	r1, [r7, #8]
 8003792:	607a      	str	r2, [r7, #4]
 8003794:	e02c      	b.n	80037f0 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8003796:	687a      	ldr	r2, [r7, #4]
 8003798:	68b9      	ldr	r1, [r7, #8]
 800379a:	68f8      	ldr	r0, [r7, #12]
 800379c:	f000 f870 	bl	8003880 <I2C_IsErrorOccurred>
 80037a0:	4603      	mov	r3, r0
 80037a2:	2b00      	cmp	r3, #0
 80037a4:	d001      	beq.n	80037aa <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 80037a6:	2301      	movs	r3, #1
 80037a8:	e02a      	b.n	8003800 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 80037aa:	68bb      	ldr	r3, [r7, #8]
 80037ac:	f1b3 3fff 	cmp.w	r3, #4294967295
 80037b0:	d01e      	beq.n	80037f0 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 80037b2:	f7fe feed 	bl	8002590 <HAL_GetTick>
 80037b6:	4602      	mov	r2, r0
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	1ad3      	subs	r3, r2, r3
 80037bc:	68ba      	ldr	r2, [r7, #8]
 80037be:	429a      	cmp	r2, r3
 80037c0:	d302      	bcc.n	80037c8 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 80037c2:	68bb      	ldr	r3, [r7, #8]
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	d113      	bne.n	80037f0 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 80037c8:	68fb      	ldr	r3, [r7, #12]
 80037ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80037cc:	f043 0220 	orr.w	r2, r3, #32
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	645a      	str	r2, [r3, #68]	; 0x44
 80037d4:	68fb      	ldr	r3, [r7, #12]
 80037d6:	2220      	movs	r2, #32
 80037d8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80037dc:	68fb      	ldr	r3, [r7, #12]
 80037de:	2200      	movs	r2, #0
 80037e0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	2200      	movs	r2, #0
 80037e8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80037ec:	2301      	movs	r3, #1
 80037ee:	e007      	b.n	8003800 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	699b      	ldr	r3, [r3, #24]
 80037f6:	f003 0302 	and.w	r3, r3, #2
 80037fa:	2b02      	cmp	r3, #2
 80037fc:	d1cb      	bne.n	8003796 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 80037fe:	2300      	movs	r3, #0
 8003800:	4618      	mov	r0, r3
 8003802:	3710      	adds	r7, #16
 8003804:	46bd      	mov	sp, r7
 8003806:	bd80      	pop	{r7, pc}

08003808 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8003808:	b580      	push	{r7, lr}
 800380a:	b084      	sub	sp, #16
 800380c:	af00      	add	r7, sp, #0
 800380e:	60f8      	str	r0, [r7, #12]
 8003810:	60b9      	str	r1, [r7, #8]
 8003812:	607a      	str	r2, [r7, #4]
 8003814:	e028      	b.n	8003868 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8003816:	687a      	ldr	r2, [r7, #4]
 8003818:	68b9      	ldr	r1, [r7, #8]
 800381a:	68f8      	ldr	r0, [r7, #12]
 800381c:	f000 f830 	bl	8003880 <I2C_IsErrorOccurred>
 8003820:	4603      	mov	r3, r0
 8003822:	2b00      	cmp	r3, #0
 8003824:	d001      	beq.n	800382a <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8003826:	2301      	movs	r3, #1
 8003828:	e026      	b.n	8003878 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 800382a:	f7fe feb1 	bl	8002590 <HAL_GetTick>
 800382e:	4602      	mov	r2, r0
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	1ad3      	subs	r3, r2, r3
 8003834:	68ba      	ldr	r2, [r7, #8]
 8003836:	429a      	cmp	r2, r3
 8003838:	d302      	bcc.n	8003840 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 800383a:	68bb      	ldr	r3, [r7, #8]
 800383c:	2b00      	cmp	r3, #0
 800383e:	d113      	bne.n	8003868 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003844:	f043 0220 	orr.w	r2, r3, #32
 8003848:	68fb      	ldr	r3, [r7, #12]
 800384a:	645a      	str	r2, [r3, #68]	; 0x44
 800384c:	68fb      	ldr	r3, [r7, #12]
 800384e:	2220      	movs	r2, #32
 8003850:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003854:	68fb      	ldr	r3, [r7, #12]
 8003856:	2200      	movs	r2, #0
 8003858:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800385c:	68fb      	ldr	r3, [r7, #12]
 800385e:	2200      	movs	r2, #0
 8003860:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003864:	2301      	movs	r3, #1
 8003866:	e007      	b.n	8003878 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8003868:	68fb      	ldr	r3, [r7, #12]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	699b      	ldr	r3, [r3, #24]
 800386e:	f003 0320 	and.w	r3, r3, #32
 8003872:	2b20      	cmp	r3, #32
 8003874:	d1cf      	bne.n	8003816 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 8003876:	2300      	movs	r3, #0
 8003878:	4618      	mov	r0, r3
 800387a:	3710      	adds	r7, #16
 800387c:	46bd      	mov	sp, r7
 800387e:	bd80      	pop	{r7, pc}

08003880 <I2C_IsErrorOccurred>:
 8003880:	b580      	push	{r7, lr}
 8003882:	b08a      	sub	sp, #40	; 0x28
 8003884:	af00      	add	r7, sp, #0
 8003886:	60f8      	str	r0, [r7, #12]
 8003888:	60b9      	str	r1, [r7, #8]
 800388a:	607a      	str	r2, [r7, #4]
 800388c:	2300      	movs	r3, #0
 800388e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	699b      	ldr	r3, [r3, #24]
 8003898:	61bb      	str	r3, [r7, #24]
 800389a:	2300      	movs	r3, #0
 800389c:	623b      	str	r3, [r7, #32]
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	61fb      	str	r3, [r7, #28]
 80038a2:	69bb      	ldr	r3, [r7, #24]
 80038a4:	f003 0310 	and.w	r3, r3, #16
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	d068      	beq.n	800397e <I2C_IsErrorOccurred+0xfe>
 80038ac:	68fb      	ldr	r3, [r7, #12]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	2210      	movs	r2, #16
 80038b2:	61da      	str	r2, [r3, #28]
 80038b4:	e049      	b.n	800394a <I2C_IsErrorOccurred+0xca>
 80038b6:	68bb      	ldr	r3, [r7, #8]
 80038b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80038bc:	d045      	beq.n	800394a <I2C_IsErrorOccurred+0xca>
 80038be:	f7fe fe67 	bl	8002590 <HAL_GetTick>
 80038c2:	4602      	mov	r2, r0
 80038c4:	69fb      	ldr	r3, [r7, #28]
 80038c6:	1ad3      	subs	r3, r2, r3
 80038c8:	68ba      	ldr	r2, [r7, #8]
 80038ca:	429a      	cmp	r2, r3
 80038cc:	d302      	bcc.n	80038d4 <I2C_IsErrorOccurred+0x54>
 80038ce:	68bb      	ldr	r3, [r7, #8]
 80038d0:	2b00      	cmp	r3, #0
 80038d2:	d13a      	bne.n	800394a <I2C_IsErrorOccurred+0xca>
 80038d4:	68fb      	ldr	r3, [r7, #12]
 80038d6:	681b      	ldr	r3, [r3, #0]
 80038d8:	685b      	ldr	r3, [r3, #4]
 80038da:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80038de:	617b      	str	r3, [r7, #20]
 80038e0:	68fb      	ldr	r3, [r7, #12]
 80038e2:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 80038e6:	74fb      	strb	r3, [r7, #19]
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	699b      	ldr	r3, [r3, #24]
 80038ee:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80038f2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80038f6:	d121      	bne.n	800393c <I2C_IsErrorOccurred+0xbc>
 80038f8:	697b      	ldr	r3, [r7, #20]
 80038fa:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80038fe:	d01d      	beq.n	800393c <I2C_IsErrorOccurred+0xbc>
 8003900:	7cfb      	ldrb	r3, [r7, #19]
 8003902:	2b20      	cmp	r3, #32
 8003904:	d01a      	beq.n	800393c <I2C_IsErrorOccurred+0xbc>
 8003906:	68fb      	ldr	r3, [r7, #12]
 8003908:	681b      	ldr	r3, [r3, #0]
 800390a:	685a      	ldr	r2, [r3, #4]
 800390c:	68fb      	ldr	r3, [r7, #12]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003914:	605a      	str	r2, [r3, #4]
 8003916:	f7fe fe3b 	bl	8002590 <HAL_GetTick>
 800391a:	61f8      	str	r0, [r7, #28]
 800391c:	e00e      	b.n	800393c <I2C_IsErrorOccurred+0xbc>
 800391e:	f7fe fe37 	bl	8002590 <HAL_GetTick>
 8003922:	4602      	mov	r2, r0
 8003924:	69fb      	ldr	r3, [r7, #28]
 8003926:	1ad3      	subs	r3, r2, r3
 8003928:	2b19      	cmp	r3, #25
 800392a:	d907      	bls.n	800393c <I2C_IsErrorOccurred+0xbc>
 800392c:	6a3b      	ldr	r3, [r7, #32]
 800392e:	f043 0320 	orr.w	r3, r3, #32
 8003932:	623b      	str	r3, [r7, #32]
 8003934:	2301      	movs	r3, #1
 8003936:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800393a:	e006      	b.n	800394a <I2C_IsErrorOccurred+0xca>
 800393c:	68fb      	ldr	r3, [r7, #12]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	699b      	ldr	r3, [r3, #24]
 8003942:	f003 0320 	and.w	r3, r3, #32
 8003946:	2b20      	cmp	r3, #32
 8003948:	d1e9      	bne.n	800391e <I2C_IsErrorOccurred+0x9e>
 800394a:	68fb      	ldr	r3, [r7, #12]
 800394c:	681b      	ldr	r3, [r3, #0]
 800394e:	699b      	ldr	r3, [r3, #24]
 8003950:	f003 0320 	and.w	r3, r3, #32
 8003954:	2b20      	cmp	r3, #32
 8003956:	d003      	beq.n	8003960 <I2C_IsErrorOccurred+0xe0>
 8003958:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800395c:	2b00      	cmp	r3, #0
 800395e:	d0aa      	beq.n	80038b6 <I2C_IsErrorOccurred+0x36>
 8003960:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003964:	2b00      	cmp	r3, #0
 8003966:	d103      	bne.n	8003970 <I2C_IsErrorOccurred+0xf0>
 8003968:	68fb      	ldr	r3, [r7, #12]
 800396a:	681b      	ldr	r3, [r3, #0]
 800396c:	2220      	movs	r2, #32
 800396e:	61da      	str	r2, [r3, #28]
 8003970:	6a3b      	ldr	r3, [r7, #32]
 8003972:	f043 0304 	orr.w	r3, r3, #4
 8003976:	623b      	str	r3, [r7, #32]
 8003978:	2301      	movs	r3, #1
 800397a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800397e:	68fb      	ldr	r3, [r7, #12]
 8003980:	681b      	ldr	r3, [r3, #0]
 8003982:	699b      	ldr	r3, [r3, #24]
 8003984:	61bb      	str	r3, [r7, #24]
 8003986:	69bb      	ldr	r3, [r7, #24]
 8003988:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800398c:	2b00      	cmp	r3, #0
 800398e:	d00b      	beq.n	80039a8 <I2C_IsErrorOccurred+0x128>
 8003990:	6a3b      	ldr	r3, [r7, #32]
 8003992:	f043 0301 	orr.w	r3, r3, #1
 8003996:	623b      	str	r3, [r7, #32]
 8003998:	68fb      	ldr	r3, [r7, #12]
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	f44f 7280 	mov.w	r2, #256	; 0x100
 80039a0:	61da      	str	r2, [r3, #28]
 80039a2:	2301      	movs	r3, #1
 80039a4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80039a8:	69bb      	ldr	r3, [r7, #24]
 80039aa:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	d00b      	beq.n	80039ca <I2C_IsErrorOccurred+0x14a>
 80039b2:	6a3b      	ldr	r3, [r7, #32]
 80039b4:	f043 0308 	orr.w	r3, r3, #8
 80039b8:	623b      	str	r3, [r7, #32]
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80039c2:	61da      	str	r2, [r3, #28]
 80039c4:	2301      	movs	r3, #1
 80039c6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80039ca:	69bb      	ldr	r3, [r7, #24]
 80039cc:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80039d0:	2b00      	cmp	r3, #0
 80039d2:	d00b      	beq.n	80039ec <I2C_IsErrorOccurred+0x16c>
 80039d4:	6a3b      	ldr	r3, [r7, #32]
 80039d6:	f043 0302 	orr.w	r3, r3, #2
 80039da:	623b      	str	r3, [r7, #32]
 80039dc:	68fb      	ldr	r3, [r7, #12]
 80039de:	681b      	ldr	r3, [r3, #0]
 80039e0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80039e4:	61da      	str	r2, [r3, #28]
 80039e6:	2301      	movs	r3, #1
 80039e8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80039ec:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	d01c      	beq.n	8003a2e <I2C_IsErrorOccurred+0x1ae>
 80039f4:	68f8      	ldr	r0, [r7, #12]
 80039f6:	f7ff fe63 	bl	80036c0 <I2C_Flush_TXDR>
 80039fa:	68fb      	ldr	r3, [r7, #12]
 80039fc:	681b      	ldr	r3, [r3, #0]
 80039fe:	6859      	ldr	r1, [r3, #4]
 8003a00:	68fb      	ldr	r3, [r7, #12]
 8003a02:	681a      	ldr	r2, [r3, #0]
 8003a04:	4b0d      	ldr	r3, [pc, #52]	; (8003a3c <I2C_IsErrorOccurred+0x1bc>)
 8003a06:	400b      	ands	r3, r1
 8003a08:	6053      	str	r3, [r2, #4]
 8003a0a:	68fb      	ldr	r3, [r7, #12]
 8003a0c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003a0e:	6a3b      	ldr	r3, [r7, #32]
 8003a10:	431a      	orrs	r2, r3
 8003a12:	68fb      	ldr	r3, [r7, #12]
 8003a14:	645a      	str	r2, [r3, #68]	; 0x44
 8003a16:	68fb      	ldr	r3, [r7, #12]
 8003a18:	2220      	movs	r2, #32
 8003a1a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	2200      	movs	r2, #0
 8003a22:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003a26:	68fb      	ldr	r3, [r7, #12]
 8003a28:	2200      	movs	r2, #0
 8003a2a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003a2e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003a32:	4618      	mov	r0, r3
 8003a34:	3728      	adds	r7, #40	; 0x28
 8003a36:	46bd      	mov	sp, r7
 8003a38:	bd80      	pop	{r7, pc}
 8003a3a:	bf00      	nop
 8003a3c:	fe00e800 	.word	0xfe00e800

08003a40 <I2C_TransferConfig>:
 8003a40:	b480      	push	{r7}
 8003a42:	b087      	sub	sp, #28
 8003a44:	af00      	add	r7, sp, #0
 8003a46:	60f8      	str	r0, [r7, #12]
 8003a48:	607b      	str	r3, [r7, #4]
 8003a4a:	460b      	mov	r3, r1
 8003a4c:	817b      	strh	r3, [r7, #10]
 8003a4e:	4613      	mov	r3, r2
 8003a50:	727b      	strb	r3, [r7, #9]
 8003a52:	897b      	ldrh	r3, [r7, #10]
 8003a54:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8003a58:	7a7b      	ldrb	r3, [r7, #9]
 8003a5a:	041b      	lsls	r3, r3, #16
 8003a5c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8003a60:	431a      	orrs	r2, r3
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	431a      	orrs	r2, r3
 8003a66:	6a3b      	ldr	r3, [r7, #32]
 8003a68:	4313      	orrs	r3, r2
 8003a6a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003a6e:	617b      	str	r3, [r7, #20]
 8003a70:	68fb      	ldr	r3, [r7, #12]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	685a      	ldr	r2, [r3, #4]
 8003a76:	6a3b      	ldr	r3, [r7, #32]
 8003a78:	0d5b      	lsrs	r3, r3, #21
 8003a7a:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8003a7e:	4b08      	ldr	r3, [pc, #32]	; (8003aa0 <I2C_TransferConfig+0x60>)
 8003a80:	430b      	orrs	r3, r1
 8003a82:	43db      	mvns	r3, r3
 8003a84:	ea02 0103 	and.w	r1, r2, r3
 8003a88:	68fb      	ldr	r3, [r7, #12]
 8003a8a:	681b      	ldr	r3, [r3, #0]
 8003a8c:	697a      	ldr	r2, [r7, #20]
 8003a8e:	430a      	orrs	r2, r1
 8003a90:	605a      	str	r2, [r3, #4]
 8003a92:	bf00      	nop
 8003a94:	371c      	adds	r7, #28
 8003a96:	46bd      	mov	sp, r7
 8003a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a9c:	4770      	bx	lr
 8003a9e:	bf00      	nop
 8003aa0:	03ff63ff 	.word	0x03ff63ff

08003aa4 <HAL_I2CEx_ConfigAnalogFilter>:
 8003aa4:	b480      	push	{r7}
 8003aa6:	b083      	sub	sp, #12
 8003aa8:	af00      	add	r7, sp, #0
 8003aaa:	6078      	str	r0, [r7, #4]
 8003aac:	6039      	str	r1, [r7, #0]
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003ab4:	b2db      	uxtb	r3, r3
 8003ab6:	2b20      	cmp	r3, #32
 8003ab8:	d138      	bne.n	8003b2c <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003ac0:	2b01      	cmp	r3, #1
 8003ac2:	d101      	bne.n	8003ac8 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8003ac4:	2302      	movs	r3, #2
 8003ac6:	e032      	b.n	8003b2e <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	2201      	movs	r2, #1
 8003acc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	2224      	movs	r2, #36	; 0x24
 8003ad4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	681a      	ldr	r2, [r3, #0]
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	681b      	ldr	r3, [r3, #0]
 8003ae2:	f022 0201 	bic.w	r2, r2, #1
 8003ae6:	601a      	str	r2, [r3, #0]
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	681b      	ldr	r3, [r3, #0]
 8003aec:	681a      	ldr	r2, [r3, #0]
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003af6:	601a      	str	r2, [r3, #0]
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	6819      	ldr	r1, [r3, #0]
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	683a      	ldr	r2, [r7, #0]
 8003b04:	430a      	orrs	r2, r1
 8003b06:	601a      	str	r2, [r3, #0]
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	681b      	ldr	r3, [r3, #0]
 8003b0c:	681a      	ldr	r2, [r3, #0]
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	681b      	ldr	r3, [r3, #0]
 8003b12:	f042 0201 	orr.w	r2, r2, #1
 8003b16:	601a      	str	r2, [r3, #0]
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	2220      	movs	r2, #32
 8003b1c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	2200      	movs	r2, #0
 8003b24:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003b28:	2300      	movs	r3, #0
 8003b2a:	e000      	b.n	8003b2e <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003b2c:	2302      	movs	r3, #2
 8003b2e:	4618      	mov	r0, r3
 8003b30:	370c      	adds	r7, #12
 8003b32:	46bd      	mov	sp, r7
 8003b34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b38:	4770      	bx	lr

08003b3a <HAL_I2CEx_ConfigDigitalFilter>:
 8003b3a:	b480      	push	{r7}
 8003b3c:	b085      	sub	sp, #20
 8003b3e:	af00      	add	r7, sp, #0
 8003b40:	6078      	str	r0, [r7, #4]
 8003b42:	6039      	str	r1, [r7, #0]
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003b4a:	b2db      	uxtb	r3, r3
 8003b4c:	2b20      	cmp	r3, #32
 8003b4e:	d139      	bne.n	8003bc4 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003b56:	2b01      	cmp	r3, #1
 8003b58:	d101      	bne.n	8003b5e <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8003b5a:	2302      	movs	r3, #2
 8003b5c:	e033      	b.n	8003bc6 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	2201      	movs	r2, #1
 8003b62:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	2224      	movs	r2, #36	; 0x24
 8003b6a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	681a      	ldr	r2, [r3, #0]
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	f022 0201 	bic.w	r2, r2, #1
 8003b7c:	601a      	str	r2, [r3, #0]
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	60fb      	str	r3, [r7, #12]
 8003b86:	68fb      	ldr	r3, [r7, #12]
 8003b88:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8003b8c:	60fb      	str	r3, [r7, #12]
 8003b8e:	683b      	ldr	r3, [r7, #0]
 8003b90:	021b      	lsls	r3, r3, #8
 8003b92:	68fa      	ldr	r2, [r7, #12]
 8003b94:	4313      	orrs	r3, r2
 8003b96:	60fb      	str	r3, [r7, #12]
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	68fa      	ldr	r2, [r7, #12]
 8003b9e:	601a      	str	r2, [r3, #0]
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	681a      	ldr	r2, [r3, #0]
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	f042 0201 	orr.w	r2, r2, #1
 8003bae:	601a      	str	r2, [r3, #0]
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	2220      	movs	r2, #32
 8003bb4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	2200      	movs	r2, #0
 8003bbc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003bc0:	2300      	movs	r3, #0
 8003bc2:	e000      	b.n	8003bc6 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003bc4:	2302      	movs	r3, #2
 8003bc6:	4618      	mov	r0, r3
 8003bc8:	3714      	adds	r7, #20
 8003bca:	46bd      	mov	sp, r7
 8003bcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bd0:	4770      	bx	lr
	...

08003bd4 <HAL_I2S_Init>:
 8003bd4:	b580      	push	{r7, lr}
 8003bd6:	b088      	sub	sp, #32
 8003bd8:	af00      	add	r7, sp, #0
 8003bda:	6078      	str	r0, [r7, #4]
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	d101      	bne.n	8003be6 <HAL_I2S_Init+0x12>
 8003be2:	2301      	movs	r3, #1
 8003be4:	e0d2      	b.n	8003d8c <HAL_I2S_Init+0x1b8>
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8003bec:	b2db      	uxtb	r3, r3
 8003bee:	2b00      	cmp	r3, #0
 8003bf0:	d106      	bne.n	8003c00 <HAL_I2S_Init+0x2c>
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	2200      	movs	r2, #0
 8003bf6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003bfa:	6878      	ldr	r0, [r7, #4]
 8003bfc:	f7fe fa9e 	bl	800213c <HAL_I2S_MspInit>
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	2202      	movs	r2, #2
 8003c04:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	69d9      	ldr	r1, [r3, #28]
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	681a      	ldr	r2, [r3, #0]
 8003c12:	4b60      	ldr	r3, [pc, #384]	; (8003d94 <HAL_I2S_Init+0x1c0>)
 8003c14:	400b      	ands	r3, r1
 8003c16:	61d3      	str	r3, [r2, #28]
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	2202      	movs	r2, #2
 8003c1e:	621a      	str	r2, [r3, #32]
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	695b      	ldr	r3, [r3, #20]
 8003c24:	2b02      	cmp	r3, #2
 8003c26:	d067      	beq.n	8003cf8 <HAL_I2S_Init+0x124>
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	68db      	ldr	r3, [r3, #12]
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d102      	bne.n	8003c36 <HAL_I2S_Init+0x62>
 8003c30:	2310      	movs	r3, #16
 8003c32:	617b      	str	r3, [r7, #20]
 8003c34:	e001      	b.n	8003c3a <HAL_I2S_Init+0x66>
 8003c36:	2320      	movs	r3, #32
 8003c38:	617b      	str	r3, [r7, #20]
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	689b      	ldr	r3, [r3, #8]
 8003c3e:	2b20      	cmp	r3, #32
 8003c40:	d802      	bhi.n	8003c48 <HAL_I2S_Init+0x74>
 8003c42:	697b      	ldr	r3, [r7, #20]
 8003c44:	005b      	lsls	r3, r3, #1
 8003c46:	617b      	str	r3, [r7, #20]
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	69db      	ldr	r3, [r3, #28]
 8003c4c:	2b01      	cmp	r3, #1
 8003c4e:	d102      	bne.n	8003c56 <HAL_I2S_Init+0x82>
 8003c50:	4b51      	ldr	r3, [pc, #324]	; (8003d98 <HAL_I2S_Init+0x1c4>)
 8003c52:	60fb      	str	r3, [r7, #12]
 8003c54:	e003      	b.n	8003c5e <HAL_I2S_Init+0x8a>
 8003c56:	6878      	ldr	r0, [r7, #4]
 8003c58:	f000 fa24 	bl	80040a4 <I2S_GetClockFreq>
 8003c5c:	60f8      	str	r0, [r7, #12]
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	691b      	ldr	r3, [r3, #16]
 8003c62:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003c66:	d125      	bne.n	8003cb4 <HAL_I2S_Init+0xe0>
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	68db      	ldr	r3, [r3, #12]
 8003c6c:	2b00      	cmp	r3, #0
 8003c6e:	d010      	beq.n	8003c92 <HAL_I2S_Init+0xbe>
 8003c70:	697b      	ldr	r3, [r7, #20]
 8003c72:	009b      	lsls	r3, r3, #2
 8003c74:	68fa      	ldr	r2, [r7, #12]
 8003c76:	fbb2 f2f3 	udiv	r2, r2, r3
 8003c7a:	4613      	mov	r3, r2
 8003c7c:	009b      	lsls	r3, r3, #2
 8003c7e:	4413      	add	r3, r2
 8003c80:	005b      	lsls	r3, r3, #1
 8003c82:	461a      	mov	r2, r3
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	695b      	ldr	r3, [r3, #20]
 8003c88:	fbb2 f3f3 	udiv	r3, r2, r3
 8003c8c:	3305      	adds	r3, #5
 8003c8e:	613b      	str	r3, [r7, #16]
 8003c90:	e01f      	b.n	8003cd2 <HAL_I2S_Init+0xfe>
 8003c92:	697b      	ldr	r3, [r7, #20]
 8003c94:	00db      	lsls	r3, r3, #3
 8003c96:	68fa      	ldr	r2, [r7, #12]
 8003c98:	fbb2 f2f3 	udiv	r2, r2, r3
 8003c9c:	4613      	mov	r3, r2
 8003c9e:	009b      	lsls	r3, r3, #2
 8003ca0:	4413      	add	r3, r2
 8003ca2:	005b      	lsls	r3, r3, #1
 8003ca4:	461a      	mov	r2, r3
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	695b      	ldr	r3, [r3, #20]
 8003caa:	fbb2 f3f3 	udiv	r3, r2, r3
 8003cae:	3305      	adds	r3, #5
 8003cb0:	613b      	str	r3, [r7, #16]
 8003cb2:	e00e      	b.n	8003cd2 <HAL_I2S_Init+0xfe>
 8003cb4:	68fa      	ldr	r2, [r7, #12]
 8003cb6:	697b      	ldr	r3, [r7, #20]
 8003cb8:	fbb2 f2f3 	udiv	r2, r2, r3
 8003cbc:	4613      	mov	r3, r2
 8003cbe:	009b      	lsls	r3, r3, #2
 8003cc0:	4413      	add	r3, r2
 8003cc2:	005b      	lsls	r3, r3, #1
 8003cc4:	461a      	mov	r2, r3
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	695b      	ldr	r3, [r3, #20]
 8003cca:	fbb2 f3f3 	udiv	r3, r2, r3
 8003cce:	3305      	adds	r3, #5
 8003cd0:	613b      	str	r3, [r7, #16]
 8003cd2:	693b      	ldr	r3, [r7, #16]
 8003cd4:	4a31      	ldr	r2, [pc, #196]	; (8003d9c <HAL_I2S_Init+0x1c8>)
 8003cd6:	fba2 2303 	umull	r2, r3, r2, r3
 8003cda:	08db      	lsrs	r3, r3, #3
 8003cdc:	613b      	str	r3, [r7, #16]
 8003cde:	693b      	ldr	r3, [r7, #16]
 8003ce0:	f003 0301 	and.w	r3, r3, #1
 8003ce4:	61bb      	str	r3, [r7, #24]
 8003ce6:	693a      	ldr	r2, [r7, #16]
 8003ce8:	69bb      	ldr	r3, [r7, #24]
 8003cea:	1ad3      	subs	r3, r2, r3
 8003cec:	085b      	lsrs	r3, r3, #1
 8003cee:	61fb      	str	r3, [r7, #28]
 8003cf0:	69bb      	ldr	r3, [r7, #24]
 8003cf2:	021b      	lsls	r3, r3, #8
 8003cf4:	61bb      	str	r3, [r7, #24]
 8003cf6:	e003      	b.n	8003d00 <HAL_I2S_Init+0x12c>
 8003cf8:	2302      	movs	r3, #2
 8003cfa:	61fb      	str	r3, [r7, #28]
 8003cfc:	2300      	movs	r3, #0
 8003cfe:	61bb      	str	r3, [r7, #24]
 8003d00:	69fb      	ldr	r3, [r7, #28]
 8003d02:	2b01      	cmp	r3, #1
 8003d04:	d902      	bls.n	8003d0c <HAL_I2S_Init+0x138>
 8003d06:	69fb      	ldr	r3, [r7, #28]
 8003d08:	2bff      	cmp	r3, #255	; 0xff
 8003d0a:	d907      	bls.n	8003d1c <HAL_I2S_Init+0x148>
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003d10:	f043 0210 	orr.w	r2, r3, #16
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	63da      	str	r2, [r3, #60]	; 0x3c
 8003d18:	2301      	movs	r3, #1
 8003d1a:	e037      	b.n	8003d8c <HAL_I2S_Init+0x1b8>
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	691a      	ldr	r2, [r3, #16]
 8003d20:	69bb      	ldr	r3, [r7, #24]
 8003d22:	ea42 0103 	orr.w	r1, r2, r3
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	681b      	ldr	r3, [r3, #0]
 8003d2a:	69fa      	ldr	r2, [r7, #28]
 8003d2c:	430a      	orrs	r2, r1
 8003d2e:	621a      	str	r2, [r3, #32]
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	681b      	ldr	r3, [r3, #0]
 8003d34:	69da      	ldr	r2, [r3, #28]
 8003d36:	4b17      	ldr	r3, [pc, #92]	; (8003d94 <HAL_I2S_Init+0x1c0>)
 8003d38:	4013      	ands	r3, r2
 8003d3a:	687a      	ldr	r2, [r7, #4]
 8003d3c:	6851      	ldr	r1, [r2, #4]
 8003d3e:	687a      	ldr	r2, [r7, #4]
 8003d40:	6892      	ldr	r2, [r2, #8]
 8003d42:	4311      	orrs	r1, r2
 8003d44:	687a      	ldr	r2, [r7, #4]
 8003d46:	68d2      	ldr	r2, [r2, #12]
 8003d48:	4311      	orrs	r1, r2
 8003d4a:	687a      	ldr	r2, [r7, #4]
 8003d4c:	6992      	ldr	r2, [r2, #24]
 8003d4e:	430a      	orrs	r2, r1
 8003d50:	431a      	orrs	r2, r3
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003d5a:	61da      	str	r2, [r3, #28]
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	689b      	ldr	r3, [r3, #8]
 8003d60:	2b30      	cmp	r3, #48	; 0x30
 8003d62:	d003      	beq.n	8003d6c <HAL_I2S_Init+0x198>
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	689b      	ldr	r3, [r3, #8]
 8003d68:	2bb0      	cmp	r3, #176	; 0xb0
 8003d6a:	d107      	bne.n	8003d7c <HAL_I2S_Init+0x1a8>
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	69da      	ldr	r2, [r3, #28]
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8003d7a:	61da      	str	r2, [r3, #28]
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	2200      	movs	r2, #0
 8003d80:	63da      	str	r2, [r3, #60]	; 0x3c
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	2201      	movs	r2, #1
 8003d86:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003d8a:	2300      	movs	r3, #0
 8003d8c:	4618      	mov	r0, r3
 8003d8e:	3720      	adds	r7, #32
 8003d90:	46bd      	mov	sp, r7
 8003d92:	bd80      	pop	{r7, pc}
 8003d94:	fffff040 	.word	0xfffff040
 8003d98:	00bb8000 	.word	0x00bb8000
 8003d9c:	cccccccd 	.word	0xcccccccd

08003da0 <HAL_I2S_Transmit_DMA>:
 8003da0:	b580      	push	{r7, lr}
 8003da2:	b086      	sub	sp, #24
 8003da4:	af00      	add	r7, sp, #0
 8003da6:	60f8      	str	r0, [r7, #12]
 8003da8:	60b9      	str	r1, [r7, #8]
 8003daa:	4613      	mov	r3, r2
 8003dac:	80fb      	strh	r3, [r7, #6]
 8003dae:	68bb      	ldr	r3, [r7, #8]
 8003db0:	2b00      	cmp	r3, #0
 8003db2:	d002      	beq.n	8003dba <HAL_I2S_Transmit_DMA+0x1a>
 8003db4:	88fb      	ldrh	r3, [r7, #6]
 8003db6:	2b00      	cmp	r3, #0
 8003db8:	d101      	bne.n	8003dbe <HAL_I2S_Transmit_DMA+0x1e>
 8003dba:	2301      	movs	r3, #1
 8003dbc:	e08e      	b.n	8003edc <HAL_I2S_Transmit_DMA+0x13c>
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003dc4:	b2db      	uxtb	r3, r3
 8003dc6:	2b01      	cmp	r3, #1
 8003dc8:	d101      	bne.n	8003dce <HAL_I2S_Transmit_DMA+0x2e>
 8003dca:	2302      	movs	r3, #2
 8003dcc:	e086      	b.n	8003edc <HAL_I2S_Transmit_DMA+0x13c>
 8003dce:	68fb      	ldr	r3, [r7, #12]
 8003dd0:	2201      	movs	r2, #1
 8003dd2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8003ddc:	b2db      	uxtb	r3, r3
 8003dde:	2b01      	cmp	r3, #1
 8003de0:	d005      	beq.n	8003dee <HAL_I2S_Transmit_DMA+0x4e>
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	2200      	movs	r2, #0
 8003de6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003dea:	2302      	movs	r3, #2
 8003dec:	e076      	b.n	8003edc <HAL_I2S_Transmit_DMA+0x13c>
 8003dee:	68fb      	ldr	r3, [r7, #12]
 8003df0:	2203      	movs	r2, #3
 8003df2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003df6:	68fb      	ldr	r3, [r7, #12]
 8003df8:	2200      	movs	r2, #0
 8003dfa:	63da      	str	r2, [r3, #60]	; 0x3c
 8003dfc:	68fb      	ldr	r3, [r7, #12]
 8003dfe:	68ba      	ldr	r2, [r7, #8]
 8003e00:	621a      	str	r2, [r3, #32]
 8003e02:	68fb      	ldr	r3, [r7, #12]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	69db      	ldr	r3, [r3, #28]
 8003e08:	f003 0307 	and.w	r3, r3, #7
 8003e0c:	617b      	str	r3, [r7, #20]
 8003e0e:	697b      	ldr	r3, [r7, #20]
 8003e10:	2b03      	cmp	r3, #3
 8003e12:	d002      	beq.n	8003e1a <HAL_I2S_Transmit_DMA+0x7a>
 8003e14:	697b      	ldr	r3, [r7, #20]
 8003e16:	2b05      	cmp	r3, #5
 8003e18:	d10a      	bne.n	8003e30 <HAL_I2S_Transmit_DMA+0x90>
 8003e1a:	88fb      	ldrh	r3, [r7, #6]
 8003e1c:	005b      	lsls	r3, r3, #1
 8003e1e:	b29a      	uxth	r2, r3
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	849a      	strh	r2, [r3, #36]	; 0x24
 8003e24:	88fb      	ldrh	r3, [r7, #6]
 8003e26:	005b      	lsls	r3, r3, #1
 8003e28:	b29a      	uxth	r2, r3
 8003e2a:	68fb      	ldr	r3, [r7, #12]
 8003e2c:	84da      	strh	r2, [r3, #38]	; 0x26
 8003e2e:	e005      	b.n	8003e3c <HAL_I2S_Transmit_DMA+0x9c>
 8003e30:	68fb      	ldr	r3, [r7, #12]
 8003e32:	88fa      	ldrh	r2, [r7, #6]
 8003e34:	849a      	strh	r2, [r3, #36]	; 0x24
 8003e36:	68fb      	ldr	r3, [r7, #12]
 8003e38:	88fa      	ldrh	r2, [r7, #6]
 8003e3a:	84da      	strh	r2, [r3, #38]	; 0x26
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e40:	4a28      	ldr	r2, [pc, #160]	; (8003ee4 <HAL_I2S_Transmit_DMA+0x144>)
 8003e42:	641a      	str	r2, [r3, #64]	; 0x40
 8003e44:	68fb      	ldr	r3, [r7, #12]
 8003e46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e48:	4a27      	ldr	r2, [pc, #156]	; (8003ee8 <HAL_I2S_Transmit_DMA+0x148>)
 8003e4a:	63da      	str	r2, [r3, #60]	; 0x3c
 8003e4c:	68fb      	ldr	r3, [r7, #12]
 8003e4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e50:	4a26      	ldr	r2, [pc, #152]	; (8003eec <HAL_I2S_Transmit_DMA+0x14c>)
 8003e52:	64da      	str	r2, [r3, #76]	; 0x4c
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8003e58:	68fb      	ldr	r3, [r7, #12]
 8003e5a:	6a1b      	ldr	r3, [r3, #32]
 8003e5c:	4619      	mov	r1, r3
 8003e5e:	68fb      	ldr	r3, [r7, #12]
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	330c      	adds	r3, #12
 8003e64:	461a      	mov	r2, r3
 8003e66:	68fb      	ldr	r3, [r7, #12]
 8003e68:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8003e6a:	b29b      	uxth	r3, r3
 8003e6c:	f7fe fd80 	bl	8002970 <HAL_DMA_Start_IT>
 8003e70:	4603      	mov	r3, r0
 8003e72:	2b00      	cmp	r3, #0
 8003e74:	d00f      	beq.n	8003e96 <HAL_I2S_Transmit_DMA+0xf6>
 8003e76:	68fb      	ldr	r3, [r7, #12]
 8003e78:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003e7a:	f043 0208 	orr.w	r2, r3, #8
 8003e7e:	68fb      	ldr	r3, [r7, #12]
 8003e80:	63da      	str	r2, [r3, #60]	; 0x3c
 8003e82:	68fb      	ldr	r3, [r7, #12]
 8003e84:	2201      	movs	r2, #1
 8003e86:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003e8a:	68fb      	ldr	r3, [r7, #12]
 8003e8c:	2200      	movs	r2, #0
 8003e8e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003e92:	2301      	movs	r3, #1
 8003e94:	e022      	b.n	8003edc <HAL_I2S_Transmit_DMA+0x13c>
 8003e96:	68fb      	ldr	r3, [r7, #12]
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	69db      	ldr	r3, [r3, #28]
 8003e9c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	d107      	bne.n	8003eb4 <HAL_I2S_Transmit_DMA+0x114>
 8003ea4:	68fb      	ldr	r3, [r7, #12]
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	69da      	ldr	r2, [r3, #28]
 8003eaa:	68fb      	ldr	r3, [r7, #12]
 8003eac:	681b      	ldr	r3, [r3, #0]
 8003eae:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003eb2:	61da      	str	r2, [r3, #28]
 8003eb4:	68fb      	ldr	r3, [r7, #12]
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	685b      	ldr	r3, [r3, #4]
 8003eba:	f003 0302 	and.w	r3, r3, #2
 8003ebe:	2b00      	cmp	r3, #0
 8003ec0:	d107      	bne.n	8003ed2 <HAL_I2S_Transmit_DMA+0x132>
 8003ec2:	68fb      	ldr	r3, [r7, #12]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	685a      	ldr	r2, [r3, #4]
 8003ec8:	68fb      	ldr	r3, [r7, #12]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	f042 0202 	orr.w	r2, r2, #2
 8003ed0:	605a      	str	r2, [r3, #4]
 8003ed2:	68fb      	ldr	r3, [r7, #12]
 8003ed4:	2200      	movs	r2, #0
 8003ed6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003eda:	2300      	movs	r3, #0
 8003edc:	4618      	mov	r0, r3
 8003ede:	3718      	adds	r7, #24
 8003ee0:	46bd      	mov	sp, r7
 8003ee2:	bd80      	pop	{r7, pc}
 8003ee4:	0800417f 	.word	0x0800417f
 8003ee8:	0800413d 	.word	0x0800413d
 8003eec:	080041f9 	.word	0x080041f9

08003ef0 <HAL_I2S_Receive_DMA>:
 8003ef0:	b580      	push	{r7, lr}
 8003ef2:	b086      	sub	sp, #24
 8003ef4:	af00      	add	r7, sp, #0
 8003ef6:	60f8      	str	r0, [r7, #12]
 8003ef8:	60b9      	str	r1, [r7, #8]
 8003efa:	4613      	mov	r3, r2
 8003efc:	80fb      	strh	r3, [r7, #6]
 8003efe:	68bb      	ldr	r3, [r7, #8]
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d002      	beq.n	8003f0a <HAL_I2S_Receive_DMA+0x1a>
 8003f04:	88fb      	ldrh	r3, [r7, #6]
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d101      	bne.n	8003f0e <HAL_I2S_Receive_DMA+0x1e>
 8003f0a:	2301      	movs	r3, #1
 8003f0c:	e0a1      	b.n	8004052 <HAL_I2S_Receive_DMA+0x162>
 8003f0e:	68fb      	ldr	r3, [r7, #12]
 8003f10:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003f14:	b2db      	uxtb	r3, r3
 8003f16:	2b01      	cmp	r3, #1
 8003f18:	d101      	bne.n	8003f1e <HAL_I2S_Receive_DMA+0x2e>
 8003f1a:	2302      	movs	r3, #2
 8003f1c:	e099      	b.n	8004052 <HAL_I2S_Receive_DMA+0x162>
 8003f1e:	68fb      	ldr	r3, [r7, #12]
 8003f20:	2201      	movs	r2, #1
 8003f22:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003f26:	68fb      	ldr	r3, [r7, #12]
 8003f28:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8003f2c:	b2db      	uxtb	r3, r3
 8003f2e:	2b01      	cmp	r3, #1
 8003f30:	d005      	beq.n	8003f3e <HAL_I2S_Receive_DMA+0x4e>
 8003f32:	68fb      	ldr	r3, [r7, #12]
 8003f34:	2200      	movs	r2, #0
 8003f36:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003f3a:	2302      	movs	r3, #2
 8003f3c:	e089      	b.n	8004052 <HAL_I2S_Receive_DMA+0x162>
 8003f3e:	68fb      	ldr	r3, [r7, #12]
 8003f40:	2204      	movs	r2, #4
 8003f42:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003f46:	68fb      	ldr	r3, [r7, #12]
 8003f48:	2200      	movs	r2, #0
 8003f4a:	63da      	str	r2, [r3, #60]	; 0x3c
 8003f4c:	68fb      	ldr	r3, [r7, #12]
 8003f4e:	68ba      	ldr	r2, [r7, #8]
 8003f50:	629a      	str	r2, [r3, #40]	; 0x28
 8003f52:	68fb      	ldr	r3, [r7, #12]
 8003f54:	681b      	ldr	r3, [r3, #0]
 8003f56:	69db      	ldr	r3, [r3, #28]
 8003f58:	f003 0307 	and.w	r3, r3, #7
 8003f5c:	617b      	str	r3, [r7, #20]
 8003f5e:	697b      	ldr	r3, [r7, #20]
 8003f60:	2b03      	cmp	r3, #3
 8003f62:	d002      	beq.n	8003f6a <HAL_I2S_Receive_DMA+0x7a>
 8003f64:	697b      	ldr	r3, [r7, #20]
 8003f66:	2b05      	cmp	r3, #5
 8003f68:	d10a      	bne.n	8003f80 <HAL_I2S_Receive_DMA+0x90>
 8003f6a:	88fb      	ldrh	r3, [r7, #6]
 8003f6c:	005b      	lsls	r3, r3, #1
 8003f6e:	b29a      	uxth	r2, r3
 8003f70:	68fb      	ldr	r3, [r7, #12]
 8003f72:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003f74:	88fb      	ldrh	r3, [r7, #6]
 8003f76:	005b      	lsls	r3, r3, #1
 8003f78:	b29a      	uxth	r2, r3
 8003f7a:	68fb      	ldr	r3, [r7, #12]
 8003f7c:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003f7e:	e005      	b.n	8003f8c <HAL_I2S_Receive_DMA+0x9c>
 8003f80:	68fb      	ldr	r3, [r7, #12]
 8003f82:	88fa      	ldrh	r2, [r7, #6]
 8003f84:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003f86:	68fb      	ldr	r3, [r7, #12]
 8003f88:	88fa      	ldrh	r2, [r7, #6]
 8003f8a:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003f90:	4a32      	ldr	r2, [pc, #200]	; (800405c <HAL_I2S_Receive_DMA+0x16c>)
 8003f92:	641a      	str	r2, [r3, #64]	; 0x40
 8003f94:	68fb      	ldr	r3, [r7, #12]
 8003f96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003f98:	4a31      	ldr	r2, [pc, #196]	; (8004060 <HAL_I2S_Receive_DMA+0x170>)
 8003f9a:	63da      	str	r2, [r3, #60]	; 0x3c
 8003f9c:	68fb      	ldr	r3, [r7, #12]
 8003f9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003fa0:	4a30      	ldr	r2, [pc, #192]	; (8004064 <HAL_I2S_Receive_DMA+0x174>)
 8003fa2:	64da      	str	r2, [r3, #76]	; 0x4c
 8003fa4:	68fb      	ldr	r3, [r7, #12]
 8003fa6:	681b      	ldr	r3, [r3, #0]
 8003fa8:	69db      	ldr	r3, [r3, #28]
 8003faa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003fae:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8003fb2:	d10a      	bne.n	8003fca <HAL_I2S_Receive_DMA+0xda>
 8003fb4:	2300      	movs	r3, #0
 8003fb6:	613b      	str	r3, [r7, #16]
 8003fb8:	68fb      	ldr	r3, [r7, #12]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	68db      	ldr	r3, [r3, #12]
 8003fbe:	613b      	str	r3, [r7, #16]
 8003fc0:	68fb      	ldr	r3, [r7, #12]
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	689b      	ldr	r3, [r3, #8]
 8003fc6:	613b      	str	r3, [r7, #16]
 8003fc8:	693b      	ldr	r3, [r7, #16]
 8003fca:	68fb      	ldr	r3, [r7, #12]
 8003fcc:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	330c      	adds	r3, #12
 8003fd4:	4619      	mov	r1, r3
 8003fd6:	68fb      	ldr	r3, [r7, #12]
 8003fd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003fda:	461a      	mov	r2, r3
 8003fdc:	68fb      	ldr	r3, [r7, #12]
 8003fde:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003fe0:	b29b      	uxth	r3, r3
 8003fe2:	f7fe fcc5 	bl	8002970 <HAL_DMA_Start_IT>
 8003fe6:	4603      	mov	r3, r0
 8003fe8:	2b00      	cmp	r3, #0
 8003fea:	d00f      	beq.n	800400c <HAL_I2S_Receive_DMA+0x11c>
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003ff0:	f043 0208 	orr.w	r2, r3, #8
 8003ff4:	68fb      	ldr	r3, [r7, #12]
 8003ff6:	63da      	str	r2, [r3, #60]	; 0x3c
 8003ff8:	68fb      	ldr	r3, [r7, #12]
 8003ffa:	2201      	movs	r2, #1
 8003ffc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004000:	68fb      	ldr	r3, [r7, #12]
 8004002:	2200      	movs	r2, #0
 8004004:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004008:	2301      	movs	r3, #1
 800400a:	e022      	b.n	8004052 <HAL_I2S_Receive_DMA+0x162>
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	69db      	ldr	r3, [r3, #28]
 8004012:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004016:	2b00      	cmp	r3, #0
 8004018:	d107      	bne.n	800402a <HAL_I2S_Receive_DMA+0x13a>
 800401a:	68fb      	ldr	r3, [r7, #12]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	69da      	ldr	r2, [r3, #28]
 8004020:	68fb      	ldr	r3, [r7, #12]
 8004022:	681b      	ldr	r3, [r3, #0]
 8004024:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004028:	61da      	str	r2, [r3, #28]
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	685b      	ldr	r3, [r3, #4]
 8004030:	f003 0301 	and.w	r3, r3, #1
 8004034:	2b00      	cmp	r3, #0
 8004036:	d107      	bne.n	8004048 <HAL_I2S_Receive_DMA+0x158>
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	681b      	ldr	r3, [r3, #0]
 800403c:	685a      	ldr	r2, [r3, #4]
 800403e:	68fb      	ldr	r3, [r7, #12]
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	f042 0201 	orr.w	r2, r2, #1
 8004046:	605a      	str	r2, [r3, #4]
 8004048:	68fb      	ldr	r3, [r7, #12]
 800404a:	2200      	movs	r2, #0
 800404c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004050:	2300      	movs	r3, #0
 8004052:	4618      	mov	r0, r3
 8004054:	3718      	adds	r7, #24
 8004056:	46bd      	mov	sp, r7
 8004058:	bd80      	pop	{r7, pc}
 800405a:	bf00      	nop
 800405c:	080041dd 	.word	0x080041dd
 8004060:	0800419b 	.word	0x0800419b
 8004064:	080041f9 	.word	0x080041f9

08004068 <HAL_I2S_TxHalfCpltCallback>:
 8004068:	b480      	push	{r7}
 800406a:	b083      	sub	sp, #12
 800406c:	af00      	add	r7, sp, #0
 800406e:	6078      	str	r0, [r7, #4]
 8004070:	bf00      	nop
 8004072:	370c      	adds	r7, #12
 8004074:	46bd      	mov	sp, r7
 8004076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800407a:	4770      	bx	lr

0800407c <HAL_I2S_TxCpltCallback>:
 800407c:	b480      	push	{r7}
 800407e:	b083      	sub	sp, #12
 8004080:	af00      	add	r7, sp, #0
 8004082:	6078      	str	r0, [r7, #4]
 8004084:	bf00      	nop
 8004086:	370c      	adds	r7, #12
 8004088:	46bd      	mov	sp, r7
 800408a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800408e:	4770      	bx	lr

08004090 <HAL_I2S_ErrorCallback>:
 8004090:	b480      	push	{r7}
 8004092:	b083      	sub	sp, #12
 8004094:	af00      	add	r7, sp, #0
 8004096:	6078      	str	r0, [r7, #4]
 8004098:	bf00      	nop
 800409a:	370c      	adds	r7, #12
 800409c:	46bd      	mov	sp, r7
 800409e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040a2:	4770      	bx	lr

080040a4 <I2S_GetClockFreq>:
 80040a4:	b480      	push	{r7}
 80040a6:	b087      	sub	sp, #28
 80040a8:	af00      	add	r7, sp, #0
 80040aa:	6078      	str	r0, [r7, #4]
 80040ac:	687b      	ldr	r3, [r7, #4]
 80040ae:	69db      	ldr	r3, [r3, #28]
 80040b0:	2b01      	cmp	r3, #1
 80040b2:	d02d      	beq.n	8004110 <I2S_GetClockFreq+0x6c>
 80040b4:	2b02      	cmp	r3, #2
 80040b6:	d12e      	bne.n	8004116 <I2S_GetClockFreq+0x72>
 80040b8:	4b1c      	ldr	r3, [pc, #112]	; (800412c <I2S_GetClockFreq+0x88>)
 80040ba:	685b      	ldr	r3, [r3, #4]
 80040bc:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80040c0:	2b00      	cmp	r3, #0
 80040c2:	d108      	bne.n	80040d6 <I2S_GetClockFreq+0x32>
 80040c4:	4b19      	ldr	r3, [pc, #100]	; (800412c <I2S_GetClockFreq+0x88>)
 80040c6:	685b      	ldr	r3, [r3, #4]
 80040c8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80040cc:	4a18      	ldr	r2, [pc, #96]	; (8004130 <I2S_GetClockFreq+0x8c>)
 80040ce:	fbb2 f3f3 	udiv	r3, r2, r3
 80040d2:	617b      	str	r3, [r7, #20]
 80040d4:	e007      	b.n	80040e6 <I2S_GetClockFreq+0x42>
 80040d6:	4b15      	ldr	r3, [pc, #84]	; (800412c <I2S_GetClockFreq+0x88>)
 80040d8:	685b      	ldr	r3, [r3, #4]
 80040da:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80040de:	4a15      	ldr	r2, [pc, #84]	; (8004134 <I2S_GetClockFreq+0x90>)
 80040e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80040e4:	617b      	str	r3, [r7, #20]
 80040e6:	4b11      	ldr	r3, [pc, #68]	; (800412c <I2S_GetClockFreq+0x88>)
 80040e8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80040ec:	0f1b      	lsrs	r3, r3, #28
 80040ee:	f003 0307 	and.w	r3, r3, #7
 80040f2:	60fb      	str	r3, [r7, #12]
 80040f4:	4b0d      	ldr	r3, [pc, #52]	; (800412c <I2S_GetClockFreq+0x88>)
 80040f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80040fa:	099b      	lsrs	r3, r3, #6
 80040fc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004100:	697a      	ldr	r2, [r7, #20]
 8004102:	fb03 f202 	mul.w	r2, r3, r2
 8004106:	68fb      	ldr	r3, [r7, #12]
 8004108:	fbb2 f3f3 	udiv	r3, r2, r3
 800410c:	613b      	str	r3, [r7, #16]
 800410e:	e005      	b.n	800411c <I2S_GetClockFreq+0x78>
 8004110:	4b09      	ldr	r3, [pc, #36]	; (8004138 <I2S_GetClockFreq+0x94>)
 8004112:	613b      	str	r3, [r7, #16]
 8004114:	e002      	b.n	800411c <I2S_GetClockFreq+0x78>
 8004116:	2300      	movs	r3, #0
 8004118:	613b      	str	r3, [r7, #16]
 800411a:	bf00      	nop
 800411c:	693b      	ldr	r3, [r7, #16]
 800411e:	4618      	mov	r0, r3
 8004120:	371c      	adds	r7, #28
 8004122:	46bd      	mov	sp, r7
 8004124:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004128:	4770      	bx	lr
 800412a:	bf00      	nop
 800412c:	40023800 	.word	0x40023800
 8004130:	00f42400 	.word	0x00f42400
 8004134:	017d7840 	.word	0x017d7840
 8004138:	00bb8000 	.word	0x00bb8000

0800413c <I2S_DMATxCplt>:
 800413c:	b580      	push	{r7, lr}
 800413e:	b084      	sub	sp, #16
 8004140:	af00      	add	r7, sp, #0
 8004142:	6078      	str	r0, [r7, #4]
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004148:	60fb      	str	r3, [r7, #12]
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	69db      	ldr	r3, [r3, #28]
 800414e:	2b00      	cmp	r3, #0
 8004150:	d10e      	bne.n	8004170 <I2S_DMATxCplt+0x34>
 8004152:	68fb      	ldr	r3, [r7, #12]
 8004154:	681b      	ldr	r3, [r3, #0]
 8004156:	685a      	ldr	r2, [r3, #4]
 8004158:	68fb      	ldr	r3, [r7, #12]
 800415a:	681b      	ldr	r3, [r3, #0]
 800415c:	f022 0202 	bic.w	r2, r2, #2
 8004160:	605a      	str	r2, [r3, #4]
 8004162:	68fb      	ldr	r3, [r7, #12]
 8004164:	2200      	movs	r2, #0
 8004166:	84da      	strh	r2, [r3, #38]	; 0x26
 8004168:	68fb      	ldr	r3, [r7, #12]
 800416a:	2201      	movs	r2, #1
 800416c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004170:	68f8      	ldr	r0, [r7, #12]
 8004172:	f7ff ff83 	bl	800407c <HAL_I2S_TxCpltCallback>
 8004176:	bf00      	nop
 8004178:	3710      	adds	r7, #16
 800417a:	46bd      	mov	sp, r7
 800417c:	bd80      	pop	{r7, pc}

0800417e <I2S_DMATxHalfCplt>:
 800417e:	b580      	push	{r7, lr}
 8004180:	b084      	sub	sp, #16
 8004182:	af00      	add	r7, sp, #0
 8004184:	6078      	str	r0, [r7, #4]
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800418a:	60fb      	str	r3, [r7, #12]
 800418c:	68f8      	ldr	r0, [r7, #12]
 800418e:	f7ff ff6b 	bl	8004068 <HAL_I2S_TxHalfCpltCallback>
 8004192:	bf00      	nop
 8004194:	3710      	adds	r7, #16
 8004196:	46bd      	mov	sp, r7
 8004198:	bd80      	pop	{r7, pc}

0800419a <I2S_DMARxCplt>:
 800419a:	b580      	push	{r7, lr}
 800419c:	b084      	sub	sp, #16
 800419e:	af00      	add	r7, sp, #0
 80041a0:	6078      	str	r0, [r7, #4]
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80041a6:	60fb      	str	r3, [r7, #12]
 80041a8:	687b      	ldr	r3, [r7, #4]
 80041aa:	69db      	ldr	r3, [r3, #28]
 80041ac:	2b00      	cmp	r3, #0
 80041ae:	d10e      	bne.n	80041ce <I2S_DMARxCplt+0x34>
 80041b0:	68fb      	ldr	r3, [r7, #12]
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	685a      	ldr	r2, [r3, #4]
 80041b6:	68fb      	ldr	r3, [r7, #12]
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	f022 0201 	bic.w	r2, r2, #1
 80041be:	605a      	str	r2, [r3, #4]
 80041c0:	68fb      	ldr	r3, [r7, #12]
 80041c2:	2200      	movs	r2, #0
 80041c4:	85da      	strh	r2, [r3, #46]	; 0x2e
 80041c6:	68fb      	ldr	r3, [r7, #12]
 80041c8:	2201      	movs	r2, #1
 80041ca:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80041ce:	68f8      	ldr	r0, [r7, #12]
 80041d0:	f7fc ff74 	bl	80010bc <HAL_I2S_RxCpltCallback>
 80041d4:	bf00      	nop
 80041d6:	3710      	adds	r7, #16
 80041d8:	46bd      	mov	sp, r7
 80041da:	bd80      	pop	{r7, pc}

080041dc <I2S_DMARxHalfCplt>:
 80041dc:	b580      	push	{r7, lr}
 80041de:	b084      	sub	sp, #16
 80041e0:	af00      	add	r7, sp, #0
 80041e2:	6078      	str	r0, [r7, #4]
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80041e8:	60fb      	str	r3, [r7, #12]
 80041ea:	68f8      	ldr	r0, [r7, #12]
 80041ec:	f7fc ff48 	bl	8001080 <HAL_I2S_RxHalfCpltCallback>
 80041f0:	bf00      	nop
 80041f2:	3710      	adds	r7, #16
 80041f4:	46bd      	mov	sp, r7
 80041f6:	bd80      	pop	{r7, pc}

080041f8 <I2S_DMAError>:
 80041f8:	b580      	push	{r7, lr}
 80041fa:	b084      	sub	sp, #16
 80041fc:	af00      	add	r7, sp, #0
 80041fe:	6078      	str	r0, [r7, #4]
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004204:	60fb      	str	r3, [r7, #12]
 8004206:	68fb      	ldr	r3, [r7, #12]
 8004208:	681b      	ldr	r3, [r3, #0]
 800420a:	685a      	ldr	r2, [r3, #4]
 800420c:	68fb      	ldr	r3, [r7, #12]
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	f022 0203 	bic.w	r2, r2, #3
 8004214:	605a      	str	r2, [r3, #4]
 8004216:	68fb      	ldr	r3, [r7, #12]
 8004218:	2200      	movs	r2, #0
 800421a:	84da      	strh	r2, [r3, #38]	; 0x26
 800421c:	68fb      	ldr	r3, [r7, #12]
 800421e:	2200      	movs	r2, #0
 8004220:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004222:	68fb      	ldr	r3, [r7, #12]
 8004224:	2201      	movs	r2, #1
 8004226:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800422a:	68fb      	ldr	r3, [r7, #12]
 800422c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800422e:	f043 0208 	orr.w	r2, r3, #8
 8004232:	68fb      	ldr	r3, [r7, #12]
 8004234:	63da      	str	r2, [r3, #60]	; 0x3c
 8004236:	68f8      	ldr	r0, [r7, #12]
 8004238:	f7ff ff2a 	bl	8004090 <HAL_I2S_ErrorCallback>
 800423c:	bf00      	nop
 800423e:	3710      	adds	r7, #16
 8004240:	46bd      	mov	sp, r7
 8004242:	bd80      	pop	{r7, pc}

08004244 <HAL_PWREx_EnableOverDrive>:
 8004244:	b580      	push	{r7, lr}
 8004246:	b082      	sub	sp, #8
 8004248:	af00      	add	r7, sp, #0
 800424a:	2300      	movs	r3, #0
 800424c:	607b      	str	r3, [r7, #4]
 800424e:	4b23      	ldr	r3, [pc, #140]	; (80042dc <HAL_PWREx_EnableOverDrive+0x98>)
 8004250:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004252:	4a22      	ldr	r2, [pc, #136]	; (80042dc <HAL_PWREx_EnableOverDrive+0x98>)
 8004254:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004258:	6413      	str	r3, [r2, #64]	; 0x40
 800425a:	4b20      	ldr	r3, [pc, #128]	; (80042dc <HAL_PWREx_EnableOverDrive+0x98>)
 800425c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800425e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004262:	603b      	str	r3, [r7, #0]
 8004264:	683b      	ldr	r3, [r7, #0]
 8004266:	4b1e      	ldr	r3, [pc, #120]	; (80042e0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004268:	681b      	ldr	r3, [r3, #0]
 800426a:	4a1d      	ldr	r2, [pc, #116]	; (80042e0 <HAL_PWREx_EnableOverDrive+0x9c>)
 800426c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004270:	6013      	str	r3, [r2, #0]
 8004272:	f7fe f98d 	bl	8002590 <HAL_GetTick>
 8004276:	6078      	str	r0, [r7, #4]
 8004278:	e009      	b.n	800428e <HAL_PWREx_EnableOverDrive+0x4a>
 800427a:	f7fe f989 	bl	8002590 <HAL_GetTick>
 800427e:	4602      	mov	r2, r0
 8004280:	687b      	ldr	r3, [r7, #4]
 8004282:	1ad3      	subs	r3, r2, r3
 8004284:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004288:	d901      	bls.n	800428e <HAL_PWREx_EnableOverDrive+0x4a>
 800428a:	2303      	movs	r3, #3
 800428c:	e022      	b.n	80042d4 <HAL_PWREx_EnableOverDrive+0x90>
 800428e:	4b14      	ldr	r3, [pc, #80]	; (80042e0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004290:	685b      	ldr	r3, [r3, #4]
 8004292:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004296:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800429a:	d1ee      	bne.n	800427a <HAL_PWREx_EnableOverDrive+0x36>
 800429c:	4b10      	ldr	r3, [pc, #64]	; (80042e0 <HAL_PWREx_EnableOverDrive+0x9c>)
 800429e:	681b      	ldr	r3, [r3, #0]
 80042a0:	4a0f      	ldr	r2, [pc, #60]	; (80042e0 <HAL_PWREx_EnableOverDrive+0x9c>)
 80042a2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80042a6:	6013      	str	r3, [r2, #0]
 80042a8:	f7fe f972 	bl	8002590 <HAL_GetTick>
 80042ac:	6078      	str	r0, [r7, #4]
 80042ae:	e009      	b.n	80042c4 <HAL_PWREx_EnableOverDrive+0x80>
 80042b0:	f7fe f96e 	bl	8002590 <HAL_GetTick>
 80042b4:	4602      	mov	r2, r0
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	1ad3      	subs	r3, r2, r3
 80042ba:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80042be:	d901      	bls.n	80042c4 <HAL_PWREx_EnableOverDrive+0x80>
 80042c0:	2303      	movs	r3, #3
 80042c2:	e007      	b.n	80042d4 <HAL_PWREx_EnableOverDrive+0x90>
 80042c4:	4b06      	ldr	r3, [pc, #24]	; (80042e0 <HAL_PWREx_EnableOverDrive+0x9c>)
 80042c6:	685b      	ldr	r3, [r3, #4]
 80042c8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80042cc:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80042d0:	d1ee      	bne.n	80042b0 <HAL_PWREx_EnableOverDrive+0x6c>
 80042d2:	2300      	movs	r3, #0
 80042d4:	4618      	mov	r0, r3
 80042d6:	3708      	adds	r7, #8
 80042d8:	46bd      	mov	sp, r7
 80042da:	bd80      	pop	{r7, pc}
 80042dc:	40023800 	.word	0x40023800
 80042e0:	40007000 	.word	0x40007000

080042e4 <HAL_RCC_OscConfig>:
 80042e4:	b580      	push	{r7, lr}
 80042e6:	b086      	sub	sp, #24
 80042e8:	af00      	add	r7, sp, #0
 80042ea:	6078      	str	r0, [r7, #4]
 80042ec:	2300      	movs	r3, #0
 80042ee:	75fb      	strb	r3, [r7, #23]
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d101      	bne.n	80042fa <HAL_RCC_OscConfig+0x16>
 80042f6:	2301      	movs	r3, #1
 80042f8:	e291      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	681b      	ldr	r3, [r3, #0]
 80042fe:	f003 0301 	and.w	r3, r3, #1
 8004302:	2b00      	cmp	r3, #0
 8004304:	f000 8087 	beq.w	8004416 <HAL_RCC_OscConfig+0x132>
 8004308:	4b96      	ldr	r3, [pc, #600]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 800430a:	689b      	ldr	r3, [r3, #8]
 800430c:	f003 030c 	and.w	r3, r3, #12
 8004310:	2b04      	cmp	r3, #4
 8004312:	d00c      	beq.n	800432e <HAL_RCC_OscConfig+0x4a>
 8004314:	4b93      	ldr	r3, [pc, #588]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004316:	689b      	ldr	r3, [r3, #8]
 8004318:	f003 030c 	and.w	r3, r3, #12
 800431c:	2b08      	cmp	r3, #8
 800431e:	d112      	bne.n	8004346 <HAL_RCC_OscConfig+0x62>
 8004320:	4b90      	ldr	r3, [pc, #576]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004322:	685b      	ldr	r3, [r3, #4]
 8004324:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004328:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800432c:	d10b      	bne.n	8004346 <HAL_RCC_OscConfig+0x62>
 800432e:	4b8d      	ldr	r3, [pc, #564]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004336:	2b00      	cmp	r3, #0
 8004338:	d06c      	beq.n	8004414 <HAL_RCC_OscConfig+0x130>
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	685b      	ldr	r3, [r3, #4]
 800433e:	2b00      	cmp	r3, #0
 8004340:	d168      	bne.n	8004414 <HAL_RCC_OscConfig+0x130>
 8004342:	2301      	movs	r3, #1
 8004344:	e26b      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	685b      	ldr	r3, [r3, #4]
 800434a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800434e:	d106      	bne.n	800435e <HAL_RCC_OscConfig+0x7a>
 8004350:	4b84      	ldr	r3, [pc, #528]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	4a83      	ldr	r2, [pc, #524]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004356:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800435a:	6013      	str	r3, [r2, #0]
 800435c:	e02e      	b.n	80043bc <HAL_RCC_OscConfig+0xd8>
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	685b      	ldr	r3, [r3, #4]
 8004362:	2b00      	cmp	r3, #0
 8004364:	d10c      	bne.n	8004380 <HAL_RCC_OscConfig+0x9c>
 8004366:	4b7f      	ldr	r3, [pc, #508]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004368:	681b      	ldr	r3, [r3, #0]
 800436a:	4a7e      	ldr	r2, [pc, #504]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 800436c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004370:	6013      	str	r3, [r2, #0]
 8004372:	4b7c      	ldr	r3, [pc, #496]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004374:	681b      	ldr	r3, [r3, #0]
 8004376:	4a7b      	ldr	r2, [pc, #492]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004378:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800437c:	6013      	str	r3, [r2, #0]
 800437e:	e01d      	b.n	80043bc <HAL_RCC_OscConfig+0xd8>
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	685b      	ldr	r3, [r3, #4]
 8004384:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004388:	d10c      	bne.n	80043a4 <HAL_RCC_OscConfig+0xc0>
 800438a:	4b76      	ldr	r3, [pc, #472]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	4a75      	ldr	r2, [pc, #468]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004390:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004394:	6013      	str	r3, [r2, #0]
 8004396:	4b73      	ldr	r3, [pc, #460]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	4a72      	ldr	r2, [pc, #456]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 800439c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80043a0:	6013      	str	r3, [r2, #0]
 80043a2:	e00b      	b.n	80043bc <HAL_RCC_OscConfig+0xd8>
 80043a4:	4b6f      	ldr	r3, [pc, #444]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	4a6e      	ldr	r2, [pc, #440]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80043aa:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80043ae:	6013      	str	r3, [r2, #0]
 80043b0:	4b6c      	ldr	r3, [pc, #432]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80043b2:	681b      	ldr	r3, [r3, #0]
 80043b4:	4a6b      	ldr	r2, [pc, #428]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80043b6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80043ba:	6013      	str	r3, [r2, #0]
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	685b      	ldr	r3, [r3, #4]
 80043c0:	2b00      	cmp	r3, #0
 80043c2:	d013      	beq.n	80043ec <HAL_RCC_OscConfig+0x108>
 80043c4:	f7fe f8e4 	bl	8002590 <HAL_GetTick>
 80043c8:	6138      	str	r0, [r7, #16]
 80043ca:	e008      	b.n	80043de <HAL_RCC_OscConfig+0xfa>
 80043cc:	f7fe f8e0 	bl	8002590 <HAL_GetTick>
 80043d0:	4602      	mov	r2, r0
 80043d2:	693b      	ldr	r3, [r7, #16]
 80043d4:	1ad3      	subs	r3, r2, r3
 80043d6:	2b64      	cmp	r3, #100	; 0x64
 80043d8:	d901      	bls.n	80043de <HAL_RCC_OscConfig+0xfa>
 80043da:	2303      	movs	r3, #3
 80043dc:	e21f      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 80043de:	4b61      	ldr	r3, [pc, #388]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d0f0      	beq.n	80043cc <HAL_RCC_OscConfig+0xe8>
 80043ea:	e014      	b.n	8004416 <HAL_RCC_OscConfig+0x132>
 80043ec:	f7fe f8d0 	bl	8002590 <HAL_GetTick>
 80043f0:	6138      	str	r0, [r7, #16]
 80043f2:	e008      	b.n	8004406 <HAL_RCC_OscConfig+0x122>
 80043f4:	f7fe f8cc 	bl	8002590 <HAL_GetTick>
 80043f8:	4602      	mov	r2, r0
 80043fa:	693b      	ldr	r3, [r7, #16]
 80043fc:	1ad3      	subs	r3, r2, r3
 80043fe:	2b64      	cmp	r3, #100	; 0x64
 8004400:	d901      	bls.n	8004406 <HAL_RCC_OscConfig+0x122>
 8004402:	2303      	movs	r3, #3
 8004404:	e20b      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 8004406:	4b57      	ldr	r3, [pc, #348]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800440e:	2b00      	cmp	r3, #0
 8004410:	d1f0      	bne.n	80043f4 <HAL_RCC_OscConfig+0x110>
 8004412:	e000      	b.n	8004416 <HAL_RCC_OscConfig+0x132>
 8004414:	bf00      	nop
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	f003 0302 	and.w	r3, r3, #2
 800441e:	2b00      	cmp	r3, #0
 8004420:	d069      	beq.n	80044f6 <HAL_RCC_OscConfig+0x212>
 8004422:	4b50      	ldr	r3, [pc, #320]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004424:	689b      	ldr	r3, [r3, #8]
 8004426:	f003 030c 	and.w	r3, r3, #12
 800442a:	2b00      	cmp	r3, #0
 800442c:	d00b      	beq.n	8004446 <HAL_RCC_OscConfig+0x162>
 800442e:	4b4d      	ldr	r3, [pc, #308]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004430:	689b      	ldr	r3, [r3, #8]
 8004432:	f003 030c 	and.w	r3, r3, #12
 8004436:	2b08      	cmp	r3, #8
 8004438:	d11c      	bne.n	8004474 <HAL_RCC_OscConfig+0x190>
 800443a:	4b4a      	ldr	r3, [pc, #296]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 800443c:	685b      	ldr	r3, [r3, #4]
 800443e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004442:	2b00      	cmp	r3, #0
 8004444:	d116      	bne.n	8004474 <HAL_RCC_OscConfig+0x190>
 8004446:	4b47      	ldr	r3, [pc, #284]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004448:	681b      	ldr	r3, [r3, #0]
 800444a:	f003 0302 	and.w	r3, r3, #2
 800444e:	2b00      	cmp	r3, #0
 8004450:	d005      	beq.n	800445e <HAL_RCC_OscConfig+0x17a>
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	68db      	ldr	r3, [r3, #12]
 8004456:	2b01      	cmp	r3, #1
 8004458:	d001      	beq.n	800445e <HAL_RCC_OscConfig+0x17a>
 800445a:	2301      	movs	r3, #1
 800445c:	e1df      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 800445e:	4b41      	ldr	r3, [pc, #260]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004460:	681b      	ldr	r3, [r3, #0]
 8004462:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	691b      	ldr	r3, [r3, #16]
 800446a:	00db      	lsls	r3, r3, #3
 800446c:	493d      	ldr	r1, [pc, #244]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 800446e:	4313      	orrs	r3, r2
 8004470:	600b      	str	r3, [r1, #0]
 8004472:	e040      	b.n	80044f6 <HAL_RCC_OscConfig+0x212>
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	68db      	ldr	r3, [r3, #12]
 8004478:	2b00      	cmp	r3, #0
 800447a:	d023      	beq.n	80044c4 <HAL_RCC_OscConfig+0x1e0>
 800447c:	4b39      	ldr	r3, [pc, #228]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	4a38      	ldr	r2, [pc, #224]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004482:	f043 0301 	orr.w	r3, r3, #1
 8004486:	6013      	str	r3, [r2, #0]
 8004488:	f7fe f882 	bl	8002590 <HAL_GetTick>
 800448c:	6138      	str	r0, [r7, #16]
 800448e:	e008      	b.n	80044a2 <HAL_RCC_OscConfig+0x1be>
 8004490:	f7fe f87e 	bl	8002590 <HAL_GetTick>
 8004494:	4602      	mov	r2, r0
 8004496:	693b      	ldr	r3, [r7, #16]
 8004498:	1ad3      	subs	r3, r2, r3
 800449a:	2b02      	cmp	r3, #2
 800449c:	d901      	bls.n	80044a2 <HAL_RCC_OscConfig+0x1be>
 800449e:	2303      	movs	r3, #3
 80044a0:	e1bd      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 80044a2:	4b30      	ldr	r3, [pc, #192]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	f003 0302 	and.w	r3, r3, #2
 80044aa:	2b00      	cmp	r3, #0
 80044ac:	d0f0      	beq.n	8004490 <HAL_RCC_OscConfig+0x1ac>
 80044ae:	4b2d      	ldr	r3, [pc, #180]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80044b6:	687b      	ldr	r3, [r7, #4]
 80044b8:	691b      	ldr	r3, [r3, #16]
 80044ba:	00db      	lsls	r3, r3, #3
 80044bc:	4929      	ldr	r1, [pc, #164]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80044be:	4313      	orrs	r3, r2
 80044c0:	600b      	str	r3, [r1, #0]
 80044c2:	e018      	b.n	80044f6 <HAL_RCC_OscConfig+0x212>
 80044c4:	4b27      	ldr	r3, [pc, #156]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80044c6:	681b      	ldr	r3, [r3, #0]
 80044c8:	4a26      	ldr	r2, [pc, #152]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80044ca:	f023 0301 	bic.w	r3, r3, #1
 80044ce:	6013      	str	r3, [r2, #0]
 80044d0:	f7fe f85e 	bl	8002590 <HAL_GetTick>
 80044d4:	6138      	str	r0, [r7, #16]
 80044d6:	e008      	b.n	80044ea <HAL_RCC_OscConfig+0x206>
 80044d8:	f7fe f85a 	bl	8002590 <HAL_GetTick>
 80044dc:	4602      	mov	r2, r0
 80044de:	693b      	ldr	r3, [r7, #16]
 80044e0:	1ad3      	subs	r3, r2, r3
 80044e2:	2b02      	cmp	r3, #2
 80044e4:	d901      	bls.n	80044ea <HAL_RCC_OscConfig+0x206>
 80044e6:	2303      	movs	r3, #3
 80044e8:	e199      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 80044ea:	4b1e      	ldr	r3, [pc, #120]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 80044ec:	681b      	ldr	r3, [r3, #0]
 80044ee:	f003 0302 	and.w	r3, r3, #2
 80044f2:	2b00      	cmp	r3, #0
 80044f4:	d1f0      	bne.n	80044d8 <HAL_RCC_OscConfig+0x1f4>
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	681b      	ldr	r3, [r3, #0]
 80044fa:	f003 0308 	and.w	r3, r3, #8
 80044fe:	2b00      	cmp	r3, #0
 8004500:	d038      	beq.n	8004574 <HAL_RCC_OscConfig+0x290>
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	695b      	ldr	r3, [r3, #20]
 8004506:	2b00      	cmp	r3, #0
 8004508:	d019      	beq.n	800453e <HAL_RCC_OscConfig+0x25a>
 800450a:	4b16      	ldr	r3, [pc, #88]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 800450c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800450e:	4a15      	ldr	r2, [pc, #84]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004510:	f043 0301 	orr.w	r3, r3, #1
 8004514:	6753      	str	r3, [r2, #116]	; 0x74
 8004516:	f7fe f83b 	bl	8002590 <HAL_GetTick>
 800451a:	6138      	str	r0, [r7, #16]
 800451c:	e008      	b.n	8004530 <HAL_RCC_OscConfig+0x24c>
 800451e:	f7fe f837 	bl	8002590 <HAL_GetTick>
 8004522:	4602      	mov	r2, r0
 8004524:	693b      	ldr	r3, [r7, #16]
 8004526:	1ad3      	subs	r3, r2, r3
 8004528:	2b02      	cmp	r3, #2
 800452a:	d901      	bls.n	8004530 <HAL_RCC_OscConfig+0x24c>
 800452c:	2303      	movs	r3, #3
 800452e:	e176      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 8004530:	4b0c      	ldr	r3, [pc, #48]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004532:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004534:	f003 0302 	and.w	r3, r3, #2
 8004538:	2b00      	cmp	r3, #0
 800453a:	d0f0      	beq.n	800451e <HAL_RCC_OscConfig+0x23a>
 800453c:	e01a      	b.n	8004574 <HAL_RCC_OscConfig+0x290>
 800453e:	4b09      	ldr	r3, [pc, #36]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004540:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004542:	4a08      	ldr	r2, [pc, #32]	; (8004564 <HAL_RCC_OscConfig+0x280>)
 8004544:	f023 0301 	bic.w	r3, r3, #1
 8004548:	6753      	str	r3, [r2, #116]	; 0x74
 800454a:	f7fe f821 	bl	8002590 <HAL_GetTick>
 800454e:	6138      	str	r0, [r7, #16]
 8004550:	e00a      	b.n	8004568 <HAL_RCC_OscConfig+0x284>
 8004552:	f7fe f81d 	bl	8002590 <HAL_GetTick>
 8004556:	4602      	mov	r2, r0
 8004558:	693b      	ldr	r3, [r7, #16]
 800455a:	1ad3      	subs	r3, r2, r3
 800455c:	2b02      	cmp	r3, #2
 800455e:	d903      	bls.n	8004568 <HAL_RCC_OscConfig+0x284>
 8004560:	2303      	movs	r3, #3
 8004562:	e15c      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 8004564:	40023800 	.word	0x40023800
 8004568:	4b91      	ldr	r3, [pc, #580]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 800456a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800456c:	f003 0302 	and.w	r3, r3, #2
 8004570:	2b00      	cmp	r3, #0
 8004572:	d1ee      	bne.n	8004552 <HAL_RCC_OscConfig+0x26e>
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	681b      	ldr	r3, [r3, #0]
 8004578:	f003 0304 	and.w	r3, r3, #4
 800457c:	2b00      	cmp	r3, #0
 800457e:	f000 80a4 	beq.w	80046ca <HAL_RCC_OscConfig+0x3e6>
 8004582:	4b8b      	ldr	r3, [pc, #556]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004584:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004586:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800458a:	2b00      	cmp	r3, #0
 800458c:	d10d      	bne.n	80045aa <HAL_RCC_OscConfig+0x2c6>
 800458e:	4b88      	ldr	r3, [pc, #544]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004590:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004592:	4a87      	ldr	r2, [pc, #540]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004594:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004598:	6413      	str	r3, [r2, #64]	; 0x40
 800459a:	4b85      	ldr	r3, [pc, #532]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 800459c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800459e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80045a2:	60bb      	str	r3, [r7, #8]
 80045a4:	68bb      	ldr	r3, [r7, #8]
 80045a6:	2301      	movs	r3, #1
 80045a8:	75fb      	strb	r3, [r7, #23]
 80045aa:	4b82      	ldr	r3, [pc, #520]	; (80047b4 <HAL_RCC_OscConfig+0x4d0>)
 80045ac:	681b      	ldr	r3, [r3, #0]
 80045ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80045b2:	2b00      	cmp	r3, #0
 80045b4:	d118      	bne.n	80045e8 <HAL_RCC_OscConfig+0x304>
 80045b6:	4b7f      	ldr	r3, [pc, #508]	; (80047b4 <HAL_RCC_OscConfig+0x4d0>)
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	4a7e      	ldr	r2, [pc, #504]	; (80047b4 <HAL_RCC_OscConfig+0x4d0>)
 80045bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80045c0:	6013      	str	r3, [r2, #0]
 80045c2:	f7fd ffe5 	bl	8002590 <HAL_GetTick>
 80045c6:	6138      	str	r0, [r7, #16]
 80045c8:	e008      	b.n	80045dc <HAL_RCC_OscConfig+0x2f8>
 80045ca:	f7fd ffe1 	bl	8002590 <HAL_GetTick>
 80045ce:	4602      	mov	r2, r0
 80045d0:	693b      	ldr	r3, [r7, #16]
 80045d2:	1ad3      	subs	r3, r2, r3
 80045d4:	2b64      	cmp	r3, #100	; 0x64
 80045d6:	d901      	bls.n	80045dc <HAL_RCC_OscConfig+0x2f8>
 80045d8:	2303      	movs	r3, #3
 80045da:	e120      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 80045dc:	4b75      	ldr	r3, [pc, #468]	; (80047b4 <HAL_RCC_OscConfig+0x4d0>)
 80045de:	681b      	ldr	r3, [r3, #0]
 80045e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d0f0      	beq.n	80045ca <HAL_RCC_OscConfig+0x2e6>
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	689b      	ldr	r3, [r3, #8]
 80045ec:	2b01      	cmp	r3, #1
 80045ee:	d106      	bne.n	80045fe <HAL_RCC_OscConfig+0x31a>
 80045f0:	4b6f      	ldr	r3, [pc, #444]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 80045f2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80045f4:	4a6e      	ldr	r2, [pc, #440]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 80045f6:	f043 0301 	orr.w	r3, r3, #1
 80045fa:	6713      	str	r3, [r2, #112]	; 0x70
 80045fc:	e02d      	b.n	800465a <HAL_RCC_OscConfig+0x376>
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	689b      	ldr	r3, [r3, #8]
 8004602:	2b00      	cmp	r3, #0
 8004604:	d10c      	bne.n	8004620 <HAL_RCC_OscConfig+0x33c>
 8004606:	4b6a      	ldr	r3, [pc, #424]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004608:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800460a:	4a69      	ldr	r2, [pc, #420]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 800460c:	f023 0301 	bic.w	r3, r3, #1
 8004610:	6713      	str	r3, [r2, #112]	; 0x70
 8004612:	4b67      	ldr	r3, [pc, #412]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004614:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004616:	4a66      	ldr	r2, [pc, #408]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004618:	f023 0304 	bic.w	r3, r3, #4
 800461c:	6713      	str	r3, [r2, #112]	; 0x70
 800461e:	e01c      	b.n	800465a <HAL_RCC_OscConfig+0x376>
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	689b      	ldr	r3, [r3, #8]
 8004624:	2b05      	cmp	r3, #5
 8004626:	d10c      	bne.n	8004642 <HAL_RCC_OscConfig+0x35e>
 8004628:	4b61      	ldr	r3, [pc, #388]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 800462a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800462c:	4a60      	ldr	r2, [pc, #384]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 800462e:	f043 0304 	orr.w	r3, r3, #4
 8004632:	6713      	str	r3, [r2, #112]	; 0x70
 8004634:	4b5e      	ldr	r3, [pc, #376]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004636:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004638:	4a5d      	ldr	r2, [pc, #372]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 800463a:	f043 0301 	orr.w	r3, r3, #1
 800463e:	6713      	str	r3, [r2, #112]	; 0x70
 8004640:	e00b      	b.n	800465a <HAL_RCC_OscConfig+0x376>
 8004642:	4b5b      	ldr	r3, [pc, #364]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004644:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004646:	4a5a      	ldr	r2, [pc, #360]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004648:	f023 0301 	bic.w	r3, r3, #1
 800464c:	6713      	str	r3, [r2, #112]	; 0x70
 800464e:	4b58      	ldr	r3, [pc, #352]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004650:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004652:	4a57      	ldr	r2, [pc, #348]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004654:	f023 0304 	bic.w	r3, r3, #4
 8004658:	6713      	str	r3, [r2, #112]	; 0x70
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	689b      	ldr	r3, [r3, #8]
 800465e:	2b00      	cmp	r3, #0
 8004660:	d015      	beq.n	800468e <HAL_RCC_OscConfig+0x3aa>
 8004662:	f7fd ff95 	bl	8002590 <HAL_GetTick>
 8004666:	6138      	str	r0, [r7, #16]
 8004668:	e00a      	b.n	8004680 <HAL_RCC_OscConfig+0x39c>
 800466a:	f7fd ff91 	bl	8002590 <HAL_GetTick>
 800466e:	4602      	mov	r2, r0
 8004670:	693b      	ldr	r3, [r7, #16]
 8004672:	1ad3      	subs	r3, r2, r3
 8004674:	f241 3288 	movw	r2, #5000	; 0x1388
 8004678:	4293      	cmp	r3, r2
 800467a:	d901      	bls.n	8004680 <HAL_RCC_OscConfig+0x39c>
 800467c:	2303      	movs	r3, #3
 800467e:	e0ce      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 8004680:	4b4b      	ldr	r3, [pc, #300]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004682:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004684:	f003 0302 	and.w	r3, r3, #2
 8004688:	2b00      	cmp	r3, #0
 800468a:	d0ee      	beq.n	800466a <HAL_RCC_OscConfig+0x386>
 800468c:	e014      	b.n	80046b8 <HAL_RCC_OscConfig+0x3d4>
 800468e:	f7fd ff7f 	bl	8002590 <HAL_GetTick>
 8004692:	6138      	str	r0, [r7, #16]
 8004694:	e00a      	b.n	80046ac <HAL_RCC_OscConfig+0x3c8>
 8004696:	f7fd ff7b 	bl	8002590 <HAL_GetTick>
 800469a:	4602      	mov	r2, r0
 800469c:	693b      	ldr	r3, [r7, #16]
 800469e:	1ad3      	subs	r3, r2, r3
 80046a0:	f241 3288 	movw	r2, #5000	; 0x1388
 80046a4:	4293      	cmp	r3, r2
 80046a6:	d901      	bls.n	80046ac <HAL_RCC_OscConfig+0x3c8>
 80046a8:	2303      	movs	r3, #3
 80046aa:	e0b8      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 80046ac:	4b40      	ldr	r3, [pc, #256]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 80046ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80046b0:	f003 0302 	and.w	r3, r3, #2
 80046b4:	2b00      	cmp	r3, #0
 80046b6:	d1ee      	bne.n	8004696 <HAL_RCC_OscConfig+0x3b2>
 80046b8:	7dfb      	ldrb	r3, [r7, #23]
 80046ba:	2b01      	cmp	r3, #1
 80046bc:	d105      	bne.n	80046ca <HAL_RCC_OscConfig+0x3e6>
 80046be:	4b3c      	ldr	r3, [pc, #240]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 80046c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046c2:	4a3b      	ldr	r2, [pc, #236]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 80046c4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80046c8:	6413      	str	r3, [r2, #64]	; 0x40
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	699b      	ldr	r3, [r3, #24]
 80046ce:	2b00      	cmp	r3, #0
 80046d0:	f000 80a4 	beq.w	800481c <HAL_RCC_OscConfig+0x538>
 80046d4:	4b36      	ldr	r3, [pc, #216]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 80046d6:	689b      	ldr	r3, [r3, #8]
 80046d8:	f003 030c 	and.w	r3, r3, #12
 80046dc:	2b08      	cmp	r3, #8
 80046de:	d06b      	beq.n	80047b8 <HAL_RCC_OscConfig+0x4d4>
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	699b      	ldr	r3, [r3, #24]
 80046e4:	2b02      	cmp	r3, #2
 80046e6:	d149      	bne.n	800477c <HAL_RCC_OscConfig+0x498>
 80046e8:	4b31      	ldr	r3, [pc, #196]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 80046ea:	681b      	ldr	r3, [r3, #0]
 80046ec:	4a30      	ldr	r2, [pc, #192]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 80046ee:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80046f2:	6013      	str	r3, [r2, #0]
 80046f4:	f7fd ff4c 	bl	8002590 <HAL_GetTick>
 80046f8:	6138      	str	r0, [r7, #16]
 80046fa:	e008      	b.n	800470e <HAL_RCC_OscConfig+0x42a>
 80046fc:	f7fd ff48 	bl	8002590 <HAL_GetTick>
 8004700:	4602      	mov	r2, r0
 8004702:	693b      	ldr	r3, [r7, #16]
 8004704:	1ad3      	subs	r3, r2, r3
 8004706:	2b02      	cmp	r3, #2
 8004708:	d901      	bls.n	800470e <HAL_RCC_OscConfig+0x42a>
 800470a:	2303      	movs	r3, #3
 800470c:	e087      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 800470e:	4b28      	ldr	r3, [pc, #160]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004710:	681b      	ldr	r3, [r3, #0]
 8004712:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004716:	2b00      	cmp	r3, #0
 8004718:	d1f0      	bne.n	80046fc <HAL_RCC_OscConfig+0x418>
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	69da      	ldr	r2, [r3, #28]
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	6a1b      	ldr	r3, [r3, #32]
 8004722:	431a      	orrs	r2, r3
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004728:	019b      	lsls	r3, r3, #6
 800472a:	431a      	orrs	r2, r3
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004730:	085b      	lsrs	r3, r3, #1
 8004732:	3b01      	subs	r3, #1
 8004734:	041b      	lsls	r3, r3, #16
 8004736:	431a      	orrs	r2, r3
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800473c:	061b      	lsls	r3, r3, #24
 800473e:	4313      	orrs	r3, r2
 8004740:	4a1b      	ldr	r2, [pc, #108]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004742:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8004746:	6053      	str	r3, [r2, #4]
 8004748:	4b19      	ldr	r3, [pc, #100]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	4a18      	ldr	r2, [pc, #96]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 800474e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004752:	6013      	str	r3, [r2, #0]
 8004754:	f7fd ff1c 	bl	8002590 <HAL_GetTick>
 8004758:	6138      	str	r0, [r7, #16]
 800475a:	e008      	b.n	800476e <HAL_RCC_OscConfig+0x48a>
 800475c:	f7fd ff18 	bl	8002590 <HAL_GetTick>
 8004760:	4602      	mov	r2, r0
 8004762:	693b      	ldr	r3, [r7, #16]
 8004764:	1ad3      	subs	r3, r2, r3
 8004766:	2b02      	cmp	r3, #2
 8004768:	d901      	bls.n	800476e <HAL_RCC_OscConfig+0x48a>
 800476a:	2303      	movs	r3, #3
 800476c:	e057      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 800476e:	4b10      	ldr	r3, [pc, #64]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004770:	681b      	ldr	r3, [r3, #0]
 8004772:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004776:	2b00      	cmp	r3, #0
 8004778:	d0f0      	beq.n	800475c <HAL_RCC_OscConfig+0x478>
 800477a:	e04f      	b.n	800481c <HAL_RCC_OscConfig+0x538>
 800477c:	4b0c      	ldr	r3, [pc, #48]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 800477e:	681b      	ldr	r3, [r3, #0]
 8004780:	4a0b      	ldr	r2, [pc, #44]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 8004782:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004786:	6013      	str	r3, [r2, #0]
 8004788:	f7fd ff02 	bl	8002590 <HAL_GetTick>
 800478c:	6138      	str	r0, [r7, #16]
 800478e:	e008      	b.n	80047a2 <HAL_RCC_OscConfig+0x4be>
 8004790:	f7fd fefe 	bl	8002590 <HAL_GetTick>
 8004794:	4602      	mov	r2, r0
 8004796:	693b      	ldr	r3, [r7, #16]
 8004798:	1ad3      	subs	r3, r2, r3
 800479a:	2b02      	cmp	r3, #2
 800479c:	d901      	bls.n	80047a2 <HAL_RCC_OscConfig+0x4be>
 800479e:	2303      	movs	r3, #3
 80047a0:	e03d      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 80047a2:	4b03      	ldr	r3, [pc, #12]	; (80047b0 <HAL_RCC_OscConfig+0x4cc>)
 80047a4:	681b      	ldr	r3, [r3, #0]
 80047a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80047aa:	2b00      	cmp	r3, #0
 80047ac:	d1f0      	bne.n	8004790 <HAL_RCC_OscConfig+0x4ac>
 80047ae:	e035      	b.n	800481c <HAL_RCC_OscConfig+0x538>
 80047b0:	40023800 	.word	0x40023800
 80047b4:	40007000 	.word	0x40007000
 80047b8:	4b1b      	ldr	r3, [pc, #108]	; (8004828 <HAL_RCC_OscConfig+0x544>)
 80047ba:	685b      	ldr	r3, [r3, #4]
 80047bc:	60fb      	str	r3, [r7, #12]
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	699b      	ldr	r3, [r3, #24]
 80047c2:	2b01      	cmp	r3, #1
 80047c4:	d028      	beq.n	8004818 <HAL_RCC_OscConfig+0x534>
 80047c6:	68fb      	ldr	r3, [r7, #12]
 80047c8:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80047cc:	687b      	ldr	r3, [r7, #4]
 80047ce:	69db      	ldr	r3, [r3, #28]
 80047d0:	429a      	cmp	r2, r3
 80047d2:	d121      	bne.n	8004818 <HAL_RCC_OscConfig+0x534>
 80047d4:	68fb      	ldr	r3, [r7, #12]
 80047d6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	6a1b      	ldr	r3, [r3, #32]
 80047de:	429a      	cmp	r2, r3
 80047e0:	d11a      	bne.n	8004818 <HAL_RCC_OscConfig+0x534>
 80047e2:	68fa      	ldr	r2, [r7, #12]
 80047e4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80047e8:	4013      	ands	r3, r2
 80047ea:	687a      	ldr	r2, [r7, #4]
 80047ec:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80047ee:	0192      	lsls	r2, r2, #6
 80047f0:	4293      	cmp	r3, r2
 80047f2:	d111      	bne.n	8004818 <HAL_RCC_OscConfig+0x534>
 80047f4:	68fb      	ldr	r3, [r7, #12]
 80047f6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80047fe:	085b      	lsrs	r3, r3, #1
 8004800:	3b01      	subs	r3, #1
 8004802:	041b      	lsls	r3, r3, #16
 8004804:	429a      	cmp	r2, r3
 8004806:	d107      	bne.n	8004818 <HAL_RCC_OscConfig+0x534>
 8004808:	68fb      	ldr	r3, [r7, #12]
 800480a:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004812:	061b      	lsls	r3, r3, #24
 8004814:	429a      	cmp	r2, r3
 8004816:	d001      	beq.n	800481c <HAL_RCC_OscConfig+0x538>
 8004818:	2301      	movs	r3, #1
 800481a:	e000      	b.n	800481e <HAL_RCC_OscConfig+0x53a>
 800481c:	2300      	movs	r3, #0
 800481e:	4618      	mov	r0, r3
 8004820:	3718      	adds	r7, #24
 8004822:	46bd      	mov	sp, r7
 8004824:	bd80      	pop	{r7, pc}
 8004826:	bf00      	nop
 8004828:	40023800 	.word	0x40023800

0800482c <HAL_RCC_ClockConfig>:
 800482c:	b580      	push	{r7, lr}
 800482e:	b084      	sub	sp, #16
 8004830:	af00      	add	r7, sp, #0
 8004832:	6078      	str	r0, [r7, #4]
 8004834:	6039      	str	r1, [r7, #0]
 8004836:	2300      	movs	r3, #0
 8004838:	60fb      	str	r3, [r7, #12]
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	2b00      	cmp	r3, #0
 800483e:	d101      	bne.n	8004844 <HAL_RCC_ClockConfig+0x18>
 8004840:	2301      	movs	r3, #1
 8004842:	e0d0      	b.n	80049e6 <HAL_RCC_ClockConfig+0x1ba>
 8004844:	4b6a      	ldr	r3, [pc, #424]	; (80049f0 <HAL_RCC_ClockConfig+0x1c4>)
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	f003 030f 	and.w	r3, r3, #15
 800484c:	683a      	ldr	r2, [r7, #0]
 800484e:	429a      	cmp	r2, r3
 8004850:	d910      	bls.n	8004874 <HAL_RCC_ClockConfig+0x48>
 8004852:	4b67      	ldr	r3, [pc, #412]	; (80049f0 <HAL_RCC_ClockConfig+0x1c4>)
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	f023 020f 	bic.w	r2, r3, #15
 800485a:	4965      	ldr	r1, [pc, #404]	; (80049f0 <HAL_RCC_ClockConfig+0x1c4>)
 800485c:	683b      	ldr	r3, [r7, #0]
 800485e:	4313      	orrs	r3, r2
 8004860:	600b      	str	r3, [r1, #0]
 8004862:	4b63      	ldr	r3, [pc, #396]	; (80049f0 <HAL_RCC_ClockConfig+0x1c4>)
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	f003 030f 	and.w	r3, r3, #15
 800486a:	683a      	ldr	r2, [r7, #0]
 800486c:	429a      	cmp	r2, r3
 800486e:	d001      	beq.n	8004874 <HAL_RCC_ClockConfig+0x48>
 8004870:	2301      	movs	r3, #1
 8004872:	e0b8      	b.n	80049e6 <HAL_RCC_ClockConfig+0x1ba>
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	681b      	ldr	r3, [r3, #0]
 8004878:	f003 0302 	and.w	r3, r3, #2
 800487c:	2b00      	cmp	r3, #0
 800487e:	d020      	beq.n	80048c2 <HAL_RCC_ClockConfig+0x96>
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	f003 0304 	and.w	r3, r3, #4
 8004888:	2b00      	cmp	r3, #0
 800488a:	d005      	beq.n	8004898 <HAL_RCC_ClockConfig+0x6c>
 800488c:	4b59      	ldr	r3, [pc, #356]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 800488e:	689b      	ldr	r3, [r3, #8]
 8004890:	4a58      	ldr	r2, [pc, #352]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 8004892:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8004896:	6093      	str	r3, [r2, #8]
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	f003 0308 	and.w	r3, r3, #8
 80048a0:	2b00      	cmp	r3, #0
 80048a2:	d005      	beq.n	80048b0 <HAL_RCC_ClockConfig+0x84>
 80048a4:	4b53      	ldr	r3, [pc, #332]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 80048a6:	689b      	ldr	r3, [r3, #8]
 80048a8:	4a52      	ldr	r2, [pc, #328]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 80048aa:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80048ae:	6093      	str	r3, [r2, #8]
 80048b0:	4b50      	ldr	r3, [pc, #320]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 80048b2:	689b      	ldr	r3, [r3, #8]
 80048b4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	689b      	ldr	r3, [r3, #8]
 80048bc:	494d      	ldr	r1, [pc, #308]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 80048be:	4313      	orrs	r3, r2
 80048c0:	608b      	str	r3, [r1, #8]
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	f003 0301 	and.w	r3, r3, #1
 80048ca:	2b00      	cmp	r3, #0
 80048cc:	d040      	beq.n	8004950 <HAL_RCC_ClockConfig+0x124>
 80048ce:	687b      	ldr	r3, [r7, #4]
 80048d0:	685b      	ldr	r3, [r3, #4]
 80048d2:	2b01      	cmp	r3, #1
 80048d4:	d107      	bne.n	80048e6 <HAL_RCC_ClockConfig+0xba>
 80048d6:	4b47      	ldr	r3, [pc, #284]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d115      	bne.n	800490e <HAL_RCC_ClockConfig+0xe2>
 80048e2:	2301      	movs	r3, #1
 80048e4:	e07f      	b.n	80049e6 <HAL_RCC_ClockConfig+0x1ba>
 80048e6:	687b      	ldr	r3, [r7, #4]
 80048e8:	685b      	ldr	r3, [r3, #4]
 80048ea:	2b02      	cmp	r3, #2
 80048ec:	d107      	bne.n	80048fe <HAL_RCC_ClockConfig+0xd2>
 80048ee:	4b41      	ldr	r3, [pc, #260]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80048f6:	2b00      	cmp	r3, #0
 80048f8:	d109      	bne.n	800490e <HAL_RCC_ClockConfig+0xe2>
 80048fa:	2301      	movs	r3, #1
 80048fc:	e073      	b.n	80049e6 <HAL_RCC_ClockConfig+0x1ba>
 80048fe:	4b3d      	ldr	r3, [pc, #244]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 8004900:	681b      	ldr	r3, [r3, #0]
 8004902:	f003 0302 	and.w	r3, r3, #2
 8004906:	2b00      	cmp	r3, #0
 8004908:	d101      	bne.n	800490e <HAL_RCC_ClockConfig+0xe2>
 800490a:	2301      	movs	r3, #1
 800490c:	e06b      	b.n	80049e6 <HAL_RCC_ClockConfig+0x1ba>
 800490e:	4b39      	ldr	r3, [pc, #228]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 8004910:	689b      	ldr	r3, [r3, #8]
 8004912:	f023 0203 	bic.w	r2, r3, #3
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	685b      	ldr	r3, [r3, #4]
 800491a:	4936      	ldr	r1, [pc, #216]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 800491c:	4313      	orrs	r3, r2
 800491e:	608b      	str	r3, [r1, #8]
 8004920:	f7fd fe36 	bl	8002590 <HAL_GetTick>
 8004924:	60f8      	str	r0, [r7, #12]
 8004926:	e00a      	b.n	800493e <HAL_RCC_ClockConfig+0x112>
 8004928:	f7fd fe32 	bl	8002590 <HAL_GetTick>
 800492c:	4602      	mov	r2, r0
 800492e:	68fb      	ldr	r3, [r7, #12]
 8004930:	1ad3      	subs	r3, r2, r3
 8004932:	f241 3288 	movw	r2, #5000	; 0x1388
 8004936:	4293      	cmp	r3, r2
 8004938:	d901      	bls.n	800493e <HAL_RCC_ClockConfig+0x112>
 800493a:	2303      	movs	r3, #3
 800493c:	e053      	b.n	80049e6 <HAL_RCC_ClockConfig+0x1ba>
 800493e:	4b2d      	ldr	r3, [pc, #180]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 8004940:	689b      	ldr	r3, [r3, #8]
 8004942:	f003 020c 	and.w	r2, r3, #12
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	685b      	ldr	r3, [r3, #4]
 800494a:	009b      	lsls	r3, r3, #2
 800494c:	429a      	cmp	r2, r3
 800494e:	d1eb      	bne.n	8004928 <HAL_RCC_ClockConfig+0xfc>
 8004950:	4b27      	ldr	r3, [pc, #156]	; (80049f0 <HAL_RCC_ClockConfig+0x1c4>)
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	f003 030f 	and.w	r3, r3, #15
 8004958:	683a      	ldr	r2, [r7, #0]
 800495a:	429a      	cmp	r2, r3
 800495c:	d210      	bcs.n	8004980 <HAL_RCC_ClockConfig+0x154>
 800495e:	4b24      	ldr	r3, [pc, #144]	; (80049f0 <HAL_RCC_ClockConfig+0x1c4>)
 8004960:	681b      	ldr	r3, [r3, #0]
 8004962:	f023 020f 	bic.w	r2, r3, #15
 8004966:	4922      	ldr	r1, [pc, #136]	; (80049f0 <HAL_RCC_ClockConfig+0x1c4>)
 8004968:	683b      	ldr	r3, [r7, #0]
 800496a:	4313      	orrs	r3, r2
 800496c:	600b      	str	r3, [r1, #0]
 800496e:	4b20      	ldr	r3, [pc, #128]	; (80049f0 <HAL_RCC_ClockConfig+0x1c4>)
 8004970:	681b      	ldr	r3, [r3, #0]
 8004972:	f003 030f 	and.w	r3, r3, #15
 8004976:	683a      	ldr	r2, [r7, #0]
 8004978:	429a      	cmp	r2, r3
 800497a:	d001      	beq.n	8004980 <HAL_RCC_ClockConfig+0x154>
 800497c:	2301      	movs	r3, #1
 800497e:	e032      	b.n	80049e6 <HAL_RCC_ClockConfig+0x1ba>
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	f003 0304 	and.w	r3, r3, #4
 8004988:	2b00      	cmp	r3, #0
 800498a:	d008      	beq.n	800499e <HAL_RCC_ClockConfig+0x172>
 800498c:	4b19      	ldr	r3, [pc, #100]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 800498e:	689b      	ldr	r3, [r3, #8]
 8004990:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	68db      	ldr	r3, [r3, #12]
 8004998:	4916      	ldr	r1, [pc, #88]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 800499a:	4313      	orrs	r3, r2
 800499c:	608b      	str	r3, [r1, #8]
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	681b      	ldr	r3, [r3, #0]
 80049a2:	f003 0308 	and.w	r3, r3, #8
 80049a6:	2b00      	cmp	r3, #0
 80049a8:	d009      	beq.n	80049be <HAL_RCC_ClockConfig+0x192>
 80049aa:	4b12      	ldr	r3, [pc, #72]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 80049ac:	689b      	ldr	r3, [r3, #8]
 80049ae:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	691b      	ldr	r3, [r3, #16]
 80049b6:	00db      	lsls	r3, r3, #3
 80049b8:	490e      	ldr	r1, [pc, #56]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 80049ba:	4313      	orrs	r3, r2
 80049bc:	608b      	str	r3, [r1, #8]
 80049be:	f000 f821 	bl	8004a04 <HAL_RCC_GetSysClockFreq>
 80049c2:	4602      	mov	r2, r0
 80049c4:	4b0b      	ldr	r3, [pc, #44]	; (80049f4 <HAL_RCC_ClockConfig+0x1c8>)
 80049c6:	689b      	ldr	r3, [r3, #8]
 80049c8:	091b      	lsrs	r3, r3, #4
 80049ca:	f003 030f 	and.w	r3, r3, #15
 80049ce:	490a      	ldr	r1, [pc, #40]	; (80049f8 <HAL_RCC_ClockConfig+0x1cc>)
 80049d0:	5ccb      	ldrb	r3, [r1, r3]
 80049d2:	fa22 f303 	lsr.w	r3, r2, r3
 80049d6:	4a09      	ldr	r2, [pc, #36]	; (80049fc <HAL_RCC_ClockConfig+0x1d0>)
 80049d8:	6013      	str	r3, [r2, #0]
 80049da:	4b09      	ldr	r3, [pc, #36]	; (8004a00 <HAL_RCC_ClockConfig+0x1d4>)
 80049dc:	681b      	ldr	r3, [r3, #0]
 80049de:	4618      	mov	r0, r3
 80049e0:	f7fd fd92 	bl	8002508 <HAL_InitTick>
 80049e4:	2300      	movs	r3, #0
 80049e6:	4618      	mov	r0, r3
 80049e8:	3710      	adds	r7, #16
 80049ea:	46bd      	mov	sp, r7
 80049ec:	bd80      	pop	{r7, pc}
 80049ee:	bf00      	nop
 80049f0:	40023c00 	.word	0x40023c00
 80049f4:	40023800 	.word	0x40023800
 80049f8:	08006500 	.word	0x08006500
 80049fc:	20000054 	.word	0x20000054
 8004a00:	20000058 	.word	0x20000058

08004a04 <HAL_RCC_GetSysClockFreq>:
 8004a04:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004a08:	b090      	sub	sp, #64	; 0x40
 8004a0a:	af00      	add	r7, sp, #0
 8004a0c:	2300      	movs	r3, #0
 8004a0e:	637b      	str	r3, [r7, #52]	; 0x34
 8004a10:	2300      	movs	r3, #0
 8004a12:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004a14:	2300      	movs	r3, #0
 8004a16:	633b      	str	r3, [r7, #48]	; 0x30
 8004a18:	2300      	movs	r3, #0
 8004a1a:	63bb      	str	r3, [r7, #56]	; 0x38
 8004a1c:	4b59      	ldr	r3, [pc, #356]	; (8004b84 <HAL_RCC_GetSysClockFreq+0x180>)
 8004a1e:	689b      	ldr	r3, [r3, #8]
 8004a20:	f003 030c 	and.w	r3, r3, #12
 8004a24:	2b08      	cmp	r3, #8
 8004a26:	d00d      	beq.n	8004a44 <HAL_RCC_GetSysClockFreq+0x40>
 8004a28:	2b08      	cmp	r3, #8
 8004a2a:	f200 80a1 	bhi.w	8004b70 <HAL_RCC_GetSysClockFreq+0x16c>
 8004a2e:	2b00      	cmp	r3, #0
 8004a30:	d002      	beq.n	8004a38 <HAL_RCC_GetSysClockFreq+0x34>
 8004a32:	2b04      	cmp	r3, #4
 8004a34:	d003      	beq.n	8004a3e <HAL_RCC_GetSysClockFreq+0x3a>
 8004a36:	e09b      	b.n	8004b70 <HAL_RCC_GetSysClockFreq+0x16c>
 8004a38:	4b53      	ldr	r3, [pc, #332]	; (8004b88 <HAL_RCC_GetSysClockFreq+0x184>)
 8004a3a:	63bb      	str	r3, [r7, #56]	; 0x38
 8004a3c:	e09b      	b.n	8004b76 <HAL_RCC_GetSysClockFreq+0x172>
 8004a3e:	4b53      	ldr	r3, [pc, #332]	; (8004b8c <HAL_RCC_GetSysClockFreq+0x188>)
 8004a40:	63bb      	str	r3, [r7, #56]	; 0x38
 8004a42:	e098      	b.n	8004b76 <HAL_RCC_GetSysClockFreq+0x172>
 8004a44:	4b4f      	ldr	r3, [pc, #316]	; (8004b84 <HAL_RCC_GetSysClockFreq+0x180>)
 8004a46:	685b      	ldr	r3, [r3, #4]
 8004a48:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004a4c:	637b      	str	r3, [r7, #52]	; 0x34
 8004a4e:	4b4d      	ldr	r3, [pc, #308]	; (8004b84 <HAL_RCC_GetSysClockFreq+0x180>)
 8004a50:	685b      	ldr	r3, [r3, #4]
 8004a52:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004a56:	2b00      	cmp	r3, #0
 8004a58:	d028      	beq.n	8004aac <HAL_RCC_GetSysClockFreq+0xa8>
 8004a5a:	4b4a      	ldr	r3, [pc, #296]	; (8004b84 <HAL_RCC_GetSysClockFreq+0x180>)
 8004a5c:	685b      	ldr	r3, [r3, #4]
 8004a5e:	099b      	lsrs	r3, r3, #6
 8004a60:	2200      	movs	r2, #0
 8004a62:	623b      	str	r3, [r7, #32]
 8004a64:	627a      	str	r2, [r7, #36]	; 0x24
 8004a66:	6a3b      	ldr	r3, [r7, #32]
 8004a68:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8004a6c:	2100      	movs	r1, #0
 8004a6e:	4b47      	ldr	r3, [pc, #284]	; (8004b8c <HAL_RCC_GetSysClockFreq+0x188>)
 8004a70:	fb03 f201 	mul.w	r2, r3, r1
 8004a74:	2300      	movs	r3, #0
 8004a76:	fb00 f303 	mul.w	r3, r0, r3
 8004a7a:	4413      	add	r3, r2
 8004a7c:	4a43      	ldr	r2, [pc, #268]	; (8004b8c <HAL_RCC_GetSysClockFreq+0x188>)
 8004a7e:	fba0 1202 	umull	r1, r2, r0, r2
 8004a82:	62fa      	str	r2, [r7, #44]	; 0x2c
 8004a84:	460a      	mov	r2, r1
 8004a86:	62ba      	str	r2, [r7, #40]	; 0x28
 8004a88:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8004a8a:	4413      	add	r3, r2
 8004a8c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004a8e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004a90:	2200      	movs	r2, #0
 8004a92:	61bb      	str	r3, [r7, #24]
 8004a94:	61fa      	str	r2, [r7, #28]
 8004a96:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004a9a:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8004a9e:	f7fc f83d 	bl	8000b1c <__aeabi_uldivmod>
 8004aa2:	4602      	mov	r2, r0
 8004aa4:	460b      	mov	r3, r1
 8004aa6:	4613      	mov	r3, r2
 8004aa8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004aaa:	e053      	b.n	8004b54 <HAL_RCC_GetSysClockFreq+0x150>
 8004aac:	4b35      	ldr	r3, [pc, #212]	; (8004b84 <HAL_RCC_GetSysClockFreq+0x180>)
 8004aae:	685b      	ldr	r3, [r3, #4]
 8004ab0:	099b      	lsrs	r3, r3, #6
 8004ab2:	2200      	movs	r2, #0
 8004ab4:	613b      	str	r3, [r7, #16]
 8004ab6:	617a      	str	r2, [r7, #20]
 8004ab8:	693b      	ldr	r3, [r7, #16]
 8004aba:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8004abe:	f04f 0b00 	mov.w	fp, #0
 8004ac2:	4652      	mov	r2, sl
 8004ac4:	465b      	mov	r3, fp
 8004ac6:	f04f 0000 	mov.w	r0, #0
 8004aca:	f04f 0100 	mov.w	r1, #0
 8004ace:	0159      	lsls	r1, r3, #5
 8004ad0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004ad4:	0150      	lsls	r0, r2, #5
 8004ad6:	4602      	mov	r2, r0
 8004ad8:	460b      	mov	r3, r1
 8004ada:	ebb2 080a 	subs.w	r8, r2, sl
 8004ade:	eb63 090b 	sbc.w	r9, r3, fp
 8004ae2:	f04f 0200 	mov.w	r2, #0
 8004ae6:	f04f 0300 	mov.w	r3, #0
 8004aea:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8004aee:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8004af2:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8004af6:	ebb2 0408 	subs.w	r4, r2, r8
 8004afa:	eb63 0509 	sbc.w	r5, r3, r9
 8004afe:	f04f 0200 	mov.w	r2, #0
 8004b02:	f04f 0300 	mov.w	r3, #0
 8004b06:	00eb      	lsls	r3, r5, #3
 8004b08:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004b0c:	00e2      	lsls	r2, r4, #3
 8004b0e:	4614      	mov	r4, r2
 8004b10:	461d      	mov	r5, r3
 8004b12:	eb14 030a 	adds.w	r3, r4, sl
 8004b16:	603b      	str	r3, [r7, #0]
 8004b18:	eb45 030b 	adc.w	r3, r5, fp
 8004b1c:	607b      	str	r3, [r7, #4]
 8004b1e:	f04f 0200 	mov.w	r2, #0
 8004b22:	f04f 0300 	mov.w	r3, #0
 8004b26:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004b2a:	4629      	mov	r1, r5
 8004b2c:	028b      	lsls	r3, r1, #10
 8004b2e:	4621      	mov	r1, r4
 8004b30:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004b34:	4621      	mov	r1, r4
 8004b36:	028a      	lsls	r2, r1, #10
 8004b38:	4610      	mov	r0, r2
 8004b3a:	4619      	mov	r1, r3
 8004b3c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004b3e:	2200      	movs	r2, #0
 8004b40:	60bb      	str	r3, [r7, #8]
 8004b42:	60fa      	str	r2, [r7, #12]
 8004b44:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004b48:	f7fb ffe8 	bl	8000b1c <__aeabi_uldivmod>
 8004b4c:	4602      	mov	r2, r0
 8004b4e:	460b      	mov	r3, r1
 8004b50:	4613      	mov	r3, r2
 8004b52:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004b54:	4b0b      	ldr	r3, [pc, #44]	; (8004b84 <HAL_RCC_GetSysClockFreq+0x180>)
 8004b56:	685b      	ldr	r3, [r3, #4]
 8004b58:	0c1b      	lsrs	r3, r3, #16
 8004b5a:	f003 0303 	and.w	r3, r3, #3
 8004b5e:	3301      	adds	r3, #1
 8004b60:	005b      	lsls	r3, r3, #1
 8004b62:	633b      	str	r3, [r7, #48]	; 0x30
 8004b64:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8004b66:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004b68:	fbb2 f3f3 	udiv	r3, r2, r3
 8004b6c:	63bb      	str	r3, [r7, #56]	; 0x38
 8004b6e:	e002      	b.n	8004b76 <HAL_RCC_GetSysClockFreq+0x172>
 8004b70:	4b05      	ldr	r3, [pc, #20]	; (8004b88 <HAL_RCC_GetSysClockFreq+0x184>)
 8004b72:	63bb      	str	r3, [r7, #56]	; 0x38
 8004b74:	bf00      	nop
 8004b76:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004b78:	4618      	mov	r0, r3
 8004b7a:	3740      	adds	r7, #64	; 0x40
 8004b7c:	46bd      	mov	sp, r7
 8004b7e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004b82:	bf00      	nop
 8004b84:	40023800 	.word	0x40023800
 8004b88:	00f42400 	.word	0x00f42400
 8004b8c:	017d7840 	.word	0x017d7840

08004b90 <HAL_RCCEx_PeriphCLKConfig>:
 8004b90:	b580      	push	{r7, lr}
 8004b92:	b088      	sub	sp, #32
 8004b94:	af00      	add	r7, sp, #0
 8004b96:	6078      	str	r0, [r7, #4]
 8004b98:	2300      	movs	r3, #0
 8004b9a:	617b      	str	r3, [r7, #20]
 8004b9c:	2300      	movs	r3, #0
 8004b9e:	613b      	str	r3, [r7, #16]
 8004ba0:	2300      	movs	r3, #0
 8004ba2:	61fb      	str	r3, [r7, #28]
 8004ba4:	2300      	movs	r3, #0
 8004ba6:	61bb      	str	r3, [r7, #24]
 8004ba8:	687b      	ldr	r3, [r7, #4]
 8004baa:	681b      	ldr	r3, [r3, #0]
 8004bac:	f003 0301 	and.w	r3, r3, #1
 8004bb0:	2b00      	cmp	r3, #0
 8004bb2:	d012      	beq.n	8004bda <HAL_RCCEx_PeriphCLKConfig+0x4a>
 8004bb4:	4b65      	ldr	r3, [pc, #404]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004bb6:	689b      	ldr	r3, [r3, #8]
 8004bb8:	4a64      	ldr	r2, [pc, #400]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004bba:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8004bbe:	6093      	str	r3, [r2, #8]
 8004bc0:	4b62      	ldr	r3, [pc, #392]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004bc2:	689a      	ldr	r2, [r3, #8]
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004bc8:	4960      	ldr	r1, [pc, #384]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004bca:	4313      	orrs	r3, r2
 8004bcc:	608b      	str	r3, [r1, #8]
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004bd2:	2b00      	cmp	r3, #0
 8004bd4:	d101      	bne.n	8004bda <HAL_RCCEx_PeriphCLKConfig+0x4a>
 8004bd6:	2301      	movs	r3, #1
 8004bd8:	61fb      	str	r3, [r7, #28]
 8004bda:	687b      	ldr	r3, [r7, #4]
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004be2:	2b00      	cmp	r3, #0
 8004be4:	d017      	beq.n	8004c16 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8004be6:	4b59      	ldr	r3, [pc, #356]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004be8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004bec:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004bf4:	4955      	ldr	r1, [pc, #340]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004bf6:	4313      	orrs	r3, r2
 8004bf8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004c00:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004c04:	d101      	bne.n	8004c0a <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8004c06:	2301      	movs	r3, #1
 8004c08:	61fb      	str	r3, [r7, #28]
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004c0e:	2b00      	cmp	r3, #0
 8004c10:	d101      	bne.n	8004c16 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8004c12:	2301      	movs	r3, #1
 8004c14:	61bb      	str	r3, [r7, #24]
 8004c16:	687b      	ldr	r3, [r7, #4]
 8004c18:	681b      	ldr	r3, [r3, #0]
 8004c1a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004c1e:	2b00      	cmp	r3, #0
 8004c20:	d017      	beq.n	8004c52 <HAL_RCCEx_PeriphCLKConfig+0xc2>
 8004c22:	4b4a      	ldr	r3, [pc, #296]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004c24:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004c28:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c30:	4946      	ldr	r1, [pc, #280]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004c32:	4313      	orrs	r3, r2
 8004c34:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c3c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004c40:	d101      	bne.n	8004c46 <HAL_RCCEx_PeriphCLKConfig+0xb6>
 8004c42:	2301      	movs	r3, #1
 8004c44:	61fb      	str	r3, [r7, #28]
 8004c46:	687b      	ldr	r3, [r7, #4]
 8004c48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c4a:	2b00      	cmp	r3, #0
 8004c4c:	d101      	bne.n	8004c52 <HAL_RCCEx_PeriphCLKConfig+0xc2>
 8004c4e:	2301      	movs	r3, #1
 8004c50:	61bb      	str	r3, [r7, #24]
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	681b      	ldr	r3, [r3, #0]
 8004c56:	f003 0320 	and.w	r3, r3, #32
 8004c5a:	2b00      	cmp	r3, #0
 8004c5c:	f000 808b 	beq.w	8004d76 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
 8004c60:	4b3a      	ldr	r3, [pc, #232]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004c62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c64:	4a39      	ldr	r2, [pc, #228]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004c66:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004c6a:	6413      	str	r3, [r2, #64]	; 0x40
 8004c6c:	4b37      	ldr	r3, [pc, #220]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004c6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c70:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004c74:	60fb      	str	r3, [r7, #12]
 8004c76:	68fb      	ldr	r3, [r7, #12]
 8004c78:	4b35      	ldr	r3, [pc, #212]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8004c7a:	681b      	ldr	r3, [r3, #0]
 8004c7c:	4a34      	ldr	r2, [pc, #208]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8004c7e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004c82:	6013      	str	r3, [r2, #0]
 8004c84:	f7fd fc84 	bl	8002590 <HAL_GetTick>
 8004c88:	6178      	str	r0, [r7, #20]
 8004c8a:	e008      	b.n	8004c9e <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8004c8c:	f7fd fc80 	bl	8002590 <HAL_GetTick>
 8004c90:	4602      	mov	r2, r0
 8004c92:	697b      	ldr	r3, [r7, #20]
 8004c94:	1ad3      	subs	r3, r2, r3
 8004c96:	2b64      	cmp	r3, #100	; 0x64
 8004c98:	d901      	bls.n	8004c9e <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8004c9a:	2303      	movs	r3, #3
 8004c9c:	e2bc      	b.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x688>
 8004c9e:	4b2c      	ldr	r3, [pc, #176]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8004ca0:	681b      	ldr	r3, [r3, #0]
 8004ca2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004ca6:	2b00      	cmp	r3, #0
 8004ca8:	d0f0      	beq.n	8004c8c <HAL_RCCEx_PeriphCLKConfig+0xfc>
 8004caa:	4b28      	ldr	r3, [pc, #160]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004cac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004cae:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004cb2:	613b      	str	r3, [r7, #16]
 8004cb4:	693b      	ldr	r3, [r7, #16]
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d035      	beq.n	8004d26 <HAL_RCCEx_PeriphCLKConfig+0x196>
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004cbe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004cc2:	693a      	ldr	r2, [r7, #16]
 8004cc4:	429a      	cmp	r2, r3
 8004cc6:	d02e      	beq.n	8004d26 <HAL_RCCEx_PeriphCLKConfig+0x196>
 8004cc8:	4b20      	ldr	r3, [pc, #128]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004cca:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ccc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004cd0:	613b      	str	r3, [r7, #16]
 8004cd2:	4b1e      	ldr	r3, [pc, #120]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004cd4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004cd6:	4a1d      	ldr	r2, [pc, #116]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004cd8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004cdc:	6713      	str	r3, [r2, #112]	; 0x70
 8004cde:	4b1b      	ldr	r3, [pc, #108]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004ce0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ce2:	4a1a      	ldr	r2, [pc, #104]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004ce4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004ce8:	6713      	str	r3, [r2, #112]	; 0x70
 8004cea:	4a18      	ldr	r2, [pc, #96]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004cec:	693b      	ldr	r3, [r7, #16]
 8004cee:	6713      	str	r3, [r2, #112]	; 0x70
 8004cf0:	4b16      	ldr	r3, [pc, #88]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004cf2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004cf4:	f003 0301 	and.w	r3, r3, #1
 8004cf8:	2b01      	cmp	r3, #1
 8004cfa:	d114      	bne.n	8004d26 <HAL_RCCEx_PeriphCLKConfig+0x196>
 8004cfc:	f7fd fc48 	bl	8002590 <HAL_GetTick>
 8004d00:	6178      	str	r0, [r7, #20]
 8004d02:	e00a      	b.n	8004d1a <HAL_RCCEx_PeriphCLKConfig+0x18a>
 8004d04:	f7fd fc44 	bl	8002590 <HAL_GetTick>
 8004d08:	4602      	mov	r2, r0
 8004d0a:	697b      	ldr	r3, [r7, #20]
 8004d0c:	1ad3      	subs	r3, r2, r3
 8004d0e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004d12:	4293      	cmp	r3, r2
 8004d14:	d901      	bls.n	8004d1a <HAL_RCCEx_PeriphCLKConfig+0x18a>
 8004d16:	2303      	movs	r3, #3
 8004d18:	e27e      	b.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x688>
 8004d1a:	4b0c      	ldr	r3, [pc, #48]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004d1c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004d1e:	f003 0302 	and.w	r3, r3, #2
 8004d22:	2b00      	cmp	r3, #0
 8004d24:	d0ee      	beq.n	8004d04 <HAL_RCCEx_PeriphCLKConfig+0x174>
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004d2a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004d2e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8004d32:	d111      	bne.n	8004d58 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 8004d34:	4b05      	ldr	r3, [pc, #20]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004d36:	689b      	ldr	r3, [r3, #8]
 8004d38:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8004d40:	4b04      	ldr	r3, [pc, #16]	; (8004d54 <HAL_RCCEx_PeriphCLKConfig+0x1c4>)
 8004d42:	400b      	ands	r3, r1
 8004d44:	4901      	ldr	r1, [pc, #4]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004d46:	4313      	orrs	r3, r2
 8004d48:	608b      	str	r3, [r1, #8]
 8004d4a:	e00b      	b.n	8004d64 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 8004d4c:	40023800 	.word	0x40023800
 8004d50:	40007000 	.word	0x40007000
 8004d54:	0ffffcff 	.word	0x0ffffcff
 8004d58:	4ba4      	ldr	r3, [pc, #656]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004d5a:	689b      	ldr	r3, [r3, #8]
 8004d5c:	4aa3      	ldr	r2, [pc, #652]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004d5e:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8004d62:	6093      	str	r3, [r2, #8]
 8004d64:	4ba1      	ldr	r3, [pc, #644]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004d66:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004d6c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004d70:	499e      	ldr	r1, [pc, #632]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004d72:	4313      	orrs	r3, r2
 8004d74:	670b      	str	r3, [r1, #112]	; 0x70
 8004d76:	687b      	ldr	r3, [r7, #4]
 8004d78:	681b      	ldr	r3, [r3, #0]
 8004d7a:	f003 0310 	and.w	r3, r3, #16
 8004d7e:	2b00      	cmp	r3, #0
 8004d80:	d010      	beq.n	8004da4 <HAL_RCCEx_PeriphCLKConfig+0x214>
 8004d82:	4b9a      	ldr	r3, [pc, #616]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004d84:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004d88:	4a98      	ldr	r2, [pc, #608]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004d8a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004d8e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8004d92:	4b96      	ldr	r3, [pc, #600]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004d94:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004d9c:	4993      	ldr	r1, [pc, #588]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004d9e:	4313      	orrs	r3, r2
 8004da0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	681b      	ldr	r3, [r3, #0]
 8004da8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004dac:	2b00      	cmp	r3, #0
 8004dae:	d00a      	beq.n	8004dc6 <HAL_RCCEx_PeriphCLKConfig+0x236>
 8004db0:	4b8e      	ldr	r3, [pc, #568]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004db2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004db6:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004dbe:	498b      	ldr	r1, [pc, #556]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004dc0:	4313      	orrs	r3, r2
 8004dc2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	681b      	ldr	r3, [r3, #0]
 8004dca:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	d00a      	beq.n	8004de8 <HAL_RCCEx_PeriphCLKConfig+0x258>
 8004dd2:	4b86      	ldr	r3, [pc, #536]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004dd4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004dd8:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004de0:	4982      	ldr	r1, [pc, #520]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004de2:	4313      	orrs	r3, r2
 8004de4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004df0:	2b00      	cmp	r3, #0
 8004df2:	d00a      	beq.n	8004e0a <HAL_RCCEx_PeriphCLKConfig+0x27a>
 8004df4:	4b7d      	ldr	r3, [pc, #500]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004df6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004dfa:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8004dfe:	687b      	ldr	r3, [r7, #4]
 8004e00:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004e02:	497a      	ldr	r1, [pc, #488]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004e04:	4313      	orrs	r3, r2
 8004e06:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004e0a:	687b      	ldr	r3, [r7, #4]
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004e12:	2b00      	cmp	r3, #0
 8004e14:	d00a      	beq.n	8004e2c <HAL_RCCEx_PeriphCLKConfig+0x29c>
 8004e16:	4b75      	ldr	r3, [pc, #468]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004e18:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004e1c:	f023 0203 	bic.w	r2, r3, #3
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004e24:	4971      	ldr	r1, [pc, #452]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004e26:	4313      	orrs	r3, r2
 8004e28:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004e34:	2b00      	cmp	r3, #0
 8004e36:	d00a      	beq.n	8004e4e <HAL_RCCEx_PeriphCLKConfig+0x2be>
 8004e38:	4b6c      	ldr	r3, [pc, #432]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004e3a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004e3e:	f023 020c 	bic.w	r2, r3, #12
 8004e42:	687b      	ldr	r3, [r7, #4]
 8004e44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e46:	4969      	ldr	r1, [pc, #420]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004e48:	4313      	orrs	r3, r2
 8004e4a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	681b      	ldr	r3, [r3, #0]
 8004e52:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004e56:	2b00      	cmp	r3, #0
 8004e58:	d00a      	beq.n	8004e70 <HAL_RCCEx_PeriphCLKConfig+0x2e0>
 8004e5a:	4b64      	ldr	r3, [pc, #400]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004e5c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004e60:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8004e64:	687b      	ldr	r3, [r7, #4]
 8004e66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004e68:	4960      	ldr	r1, [pc, #384]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004e6a:	4313      	orrs	r3, r2
 8004e6c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004e78:	2b00      	cmp	r3, #0
 8004e7a:	d00a      	beq.n	8004e92 <HAL_RCCEx_PeriphCLKConfig+0x302>
 8004e7c:	4b5b      	ldr	r3, [pc, #364]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004e7e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004e82:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004e8a:	4958      	ldr	r1, [pc, #352]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004e8c:	4313      	orrs	r3, r2
 8004e8e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004e9a:	2b00      	cmp	r3, #0
 8004e9c:	d00a      	beq.n	8004eb4 <HAL_RCCEx_PeriphCLKConfig+0x324>
 8004e9e:	4b53      	ldr	r3, [pc, #332]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004ea0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004ea4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8004ea8:	687b      	ldr	r3, [r7, #4]
 8004eaa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004eac:	494f      	ldr	r1, [pc, #316]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004eae:	4313      	orrs	r3, r2
 8004eb0:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	681b      	ldr	r3, [r3, #0]
 8004eb8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004ebc:	2b00      	cmp	r3, #0
 8004ebe:	d00a      	beq.n	8004ed6 <HAL_RCCEx_PeriphCLKConfig+0x346>
 8004ec0:	4b4a      	ldr	r3, [pc, #296]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004ec2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004ec6:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8004eca:	687b      	ldr	r3, [r7, #4]
 8004ecc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004ece:	4947      	ldr	r1, [pc, #284]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004ed0:	4313      	orrs	r3, r2
 8004ed2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	681b      	ldr	r3, [r3, #0]
 8004eda:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004ede:	2b00      	cmp	r3, #0
 8004ee0:	d00a      	beq.n	8004ef8 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8004ee2:	4b42      	ldr	r3, [pc, #264]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004ee4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004ee8:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8004eec:	687b      	ldr	r3, [r7, #4]
 8004eee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004ef0:	493e      	ldr	r1, [pc, #248]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004ef2:	4313      	orrs	r3, r2
 8004ef4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	681b      	ldr	r3, [r3, #0]
 8004efc:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8004f00:	2b00      	cmp	r3, #0
 8004f02:	d00a      	beq.n	8004f1a <HAL_RCCEx_PeriphCLKConfig+0x38a>
 8004f04:	4b39      	ldr	r3, [pc, #228]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004f06:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004f0a:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004f12:	4936      	ldr	r1, [pc, #216]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004f14:	4313      	orrs	r3, r2
 8004f16:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	681b      	ldr	r3, [r3, #0]
 8004f1e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	d011      	beq.n	8004f4a <HAL_RCCEx_PeriphCLKConfig+0x3ba>
 8004f26:	4b31      	ldr	r3, [pc, #196]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004f28:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004f2c:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8004f30:	687b      	ldr	r3, [r7, #4]
 8004f32:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004f34:	492d      	ldr	r1, [pc, #180]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004f36:	4313      	orrs	r3, r2
 8004f38:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004f40:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8004f44:	d101      	bne.n	8004f4a <HAL_RCCEx_PeriphCLKConfig+0x3ba>
 8004f46:	2301      	movs	r3, #1
 8004f48:	61bb      	str	r3, [r7, #24]
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d00a      	beq.n	8004f6c <HAL_RCCEx_PeriphCLKConfig+0x3dc>
 8004f56:	4b25      	ldr	r3, [pc, #148]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004f58:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004f5c:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004f64:	4921      	ldr	r1, [pc, #132]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004f66:	4313      	orrs	r3, r2
 8004f68:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	681b      	ldr	r3, [r3, #0]
 8004f70:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8004f74:	2b00      	cmp	r3, #0
 8004f76:	d00a      	beq.n	8004f8e <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 8004f78:	4b1c      	ldr	r3, [pc, #112]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004f7a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004f7e:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8004f86:	4919      	ldr	r1, [pc, #100]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004f88:	4313      	orrs	r3, r2
 8004f8a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8004f96:	2b00      	cmp	r3, #0
 8004f98:	d00a      	beq.n	8004fb0 <HAL_RCCEx_PeriphCLKConfig+0x420>
 8004f9a:	4b14      	ldr	r3, [pc, #80]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004f9c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004fa0:	f023 5200 	bic.w	r2, r3, #536870912	; 0x20000000
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8004fa8:	4910      	ldr	r1, [pc, #64]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004faa:	4313      	orrs	r3, r2
 8004fac:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004fb0:	69fb      	ldr	r3, [r7, #28]
 8004fb2:	2b01      	cmp	r3, #1
 8004fb4:	d006      	beq.n	8004fc4 <HAL_RCCEx_PeriphCLKConfig+0x434>
 8004fb6:	687b      	ldr	r3, [r7, #4]
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004fbe:	2b00      	cmp	r3, #0
 8004fc0:	f000 809d 	beq.w	80050fe <HAL_RCCEx_PeriphCLKConfig+0x56e>
 8004fc4:	4b09      	ldr	r3, [pc, #36]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004fc6:	681b      	ldr	r3, [r3, #0]
 8004fc8:	4a08      	ldr	r2, [pc, #32]	; (8004fec <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004fca:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8004fce:	6013      	str	r3, [r2, #0]
 8004fd0:	f7fd fade 	bl	8002590 <HAL_GetTick>
 8004fd4:	6178      	str	r0, [r7, #20]
 8004fd6:	e00b      	b.n	8004ff0 <HAL_RCCEx_PeriphCLKConfig+0x460>
 8004fd8:	f7fd fada 	bl	8002590 <HAL_GetTick>
 8004fdc:	4602      	mov	r2, r0
 8004fde:	697b      	ldr	r3, [r7, #20]
 8004fe0:	1ad3      	subs	r3, r2, r3
 8004fe2:	2b64      	cmp	r3, #100	; 0x64
 8004fe4:	d904      	bls.n	8004ff0 <HAL_RCCEx_PeriphCLKConfig+0x460>
 8004fe6:	2303      	movs	r3, #3
 8004fe8:	e116      	b.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x688>
 8004fea:	bf00      	nop
 8004fec:	40023800 	.word	0x40023800
 8004ff0:	4b8b      	ldr	r3, [pc, #556]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004ff2:	681b      	ldr	r3, [r3, #0]
 8004ff4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8004ff8:	2b00      	cmp	r3, #0
 8004ffa:	d1ed      	bne.n	8004fd8 <HAL_RCCEx_PeriphCLKConfig+0x448>
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	681b      	ldr	r3, [r3, #0]
 8005000:	f003 0301 	and.w	r3, r3, #1
 8005004:	2b00      	cmp	r3, #0
 8005006:	d017      	beq.n	8005038 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800500c:	2b00      	cmp	r3, #0
 800500e:	d113      	bne.n	8005038 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8005010:	4b83      	ldr	r3, [pc, #524]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005012:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005016:	0e1b      	lsrs	r3, r3, #24
 8005018:	f003 030f 	and.w	r3, r3, #15
 800501c:	613b      	str	r3, [r7, #16]
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	685b      	ldr	r3, [r3, #4]
 8005022:	019a      	lsls	r2, r3, #6
 8005024:	693b      	ldr	r3, [r7, #16]
 8005026:	061b      	lsls	r3, r3, #24
 8005028:	431a      	orrs	r2, r3
 800502a:	687b      	ldr	r3, [r7, #4]
 800502c:	689b      	ldr	r3, [r3, #8]
 800502e:	071b      	lsls	r3, r3, #28
 8005030:	497b      	ldr	r1, [pc, #492]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005032:	4313      	orrs	r3, r2
 8005034:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005040:	2b00      	cmp	r3, #0
 8005042:	d004      	beq.n	800504e <HAL_RCCEx_PeriphCLKConfig+0x4be>
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005048:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800504c:	d00a      	beq.n	8005064 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005056:	2b00      	cmp	r3, #0
 8005058:	d024      	beq.n	80050a4 <HAL_RCCEx_PeriphCLKConfig+0x514>
 800505a:	687b      	ldr	r3, [r7, #4]
 800505c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800505e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005062:	d11f      	bne.n	80050a4 <HAL_RCCEx_PeriphCLKConfig+0x514>
 8005064:	4b6e      	ldr	r3, [pc, #440]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005066:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800506a:	0f1b      	lsrs	r3, r3, #28
 800506c:	f003 0307 	and.w	r3, r3, #7
 8005070:	613b      	str	r3, [r7, #16]
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	685b      	ldr	r3, [r3, #4]
 8005076:	019a      	lsls	r2, r3, #6
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	68db      	ldr	r3, [r3, #12]
 800507c:	061b      	lsls	r3, r3, #24
 800507e:	431a      	orrs	r2, r3
 8005080:	693b      	ldr	r3, [r7, #16]
 8005082:	071b      	lsls	r3, r3, #28
 8005084:	4966      	ldr	r1, [pc, #408]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005086:	4313      	orrs	r3, r2
 8005088:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 800508c:	4b64      	ldr	r3, [pc, #400]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800508e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005092:	f023 021f 	bic.w	r2, r3, #31
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	69db      	ldr	r3, [r3, #28]
 800509a:	3b01      	subs	r3, #1
 800509c:	4960      	ldr	r1, [pc, #384]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800509e:	4313      	orrs	r3, r2
 80050a0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80050ac:	2b00      	cmp	r3, #0
 80050ae:	d00d      	beq.n	80050cc <HAL_RCCEx_PeriphCLKConfig+0x53c>
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	685b      	ldr	r3, [r3, #4]
 80050b4:	019a      	lsls	r2, r3, #6
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	68db      	ldr	r3, [r3, #12]
 80050ba:	061b      	lsls	r3, r3, #24
 80050bc:	431a      	orrs	r2, r3
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	689b      	ldr	r3, [r3, #8]
 80050c2:	071b      	lsls	r3, r3, #28
 80050c4:	4956      	ldr	r1, [pc, #344]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80050c6:	4313      	orrs	r3, r2
 80050c8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80050cc:	4b54      	ldr	r3, [pc, #336]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80050ce:	681b      	ldr	r3, [r3, #0]
 80050d0:	4a53      	ldr	r2, [pc, #332]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80050d2:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80050d6:	6013      	str	r3, [r2, #0]
 80050d8:	f7fd fa5a 	bl	8002590 <HAL_GetTick>
 80050dc:	6178      	str	r0, [r7, #20]
 80050de:	e008      	b.n	80050f2 <HAL_RCCEx_PeriphCLKConfig+0x562>
 80050e0:	f7fd fa56 	bl	8002590 <HAL_GetTick>
 80050e4:	4602      	mov	r2, r0
 80050e6:	697b      	ldr	r3, [r7, #20]
 80050e8:	1ad3      	subs	r3, r2, r3
 80050ea:	2b64      	cmp	r3, #100	; 0x64
 80050ec:	d901      	bls.n	80050f2 <HAL_RCCEx_PeriphCLKConfig+0x562>
 80050ee:	2303      	movs	r3, #3
 80050f0:	e092      	b.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x688>
 80050f2:	4b4b      	ldr	r3, [pc, #300]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80050fa:	2b00      	cmp	r3, #0
 80050fc:	d0f0      	beq.n	80050e0 <HAL_RCCEx_PeriphCLKConfig+0x550>
 80050fe:	69bb      	ldr	r3, [r7, #24]
 8005100:	2b01      	cmp	r3, #1
 8005102:	f040 8088 	bne.w	8005216 <HAL_RCCEx_PeriphCLKConfig+0x686>
 8005106:	4b46      	ldr	r3, [pc, #280]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005108:	681b      	ldr	r3, [r3, #0]
 800510a:	4a45      	ldr	r2, [pc, #276]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800510c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005110:	6013      	str	r3, [r2, #0]
 8005112:	f7fd fa3d 	bl	8002590 <HAL_GetTick>
 8005116:	6178      	str	r0, [r7, #20]
 8005118:	e008      	b.n	800512c <HAL_RCCEx_PeriphCLKConfig+0x59c>
 800511a:	f7fd fa39 	bl	8002590 <HAL_GetTick>
 800511e:	4602      	mov	r2, r0
 8005120:	697b      	ldr	r3, [r7, #20]
 8005122:	1ad3      	subs	r3, r2, r3
 8005124:	2b64      	cmp	r3, #100	; 0x64
 8005126:	d901      	bls.n	800512c <HAL_RCCEx_PeriphCLKConfig+0x59c>
 8005128:	2303      	movs	r3, #3
 800512a:	e075      	b.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x688>
 800512c:	4b3c      	ldr	r3, [pc, #240]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800512e:	681b      	ldr	r3, [r3, #0]
 8005130:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005134:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005138:	d0ef      	beq.n	800511a <HAL_RCCEx_PeriphCLKConfig+0x58a>
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	681b      	ldr	r3, [r3, #0]
 800513e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005142:	2b00      	cmp	r3, #0
 8005144:	d003      	beq.n	800514e <HAL_RCCEx_PeriphCLKConfig+0x5be>
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800514a:	2b00      	cmp	r3, #0
 800514c:	d009      	beq.n	8005162 <HAL_RCCEx_PeriphCLKConfig+0x5d2>
 800514e:	687b      	ldr	r3, [r7, #4]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005156:	2b00      	cmp	r3, #0
 8005158:	d024      	beq.n	80051a4 <HAL_RCCEx_PeriphCLKConfig+0x614>
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800515e:	2b00      	cmp	r3, #0
 8005160:	d120      	bne.n	80051a4 <HAL_RCCEx_PeriphCLKConfig+0x614>
 8005162:	4b2f      	ldr	r3, [pc, #188]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005164:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005168:	0c1b      	lsrs	r3, r3, #16
 800516a:	f003 0303 	and.w	r3, r3, #3
 800516e:	613b      	str	r3, [r7, #16]
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	691b      	ldr	r3, [r3, #16]
 8005174:	019a      	lsls	r2, r3, #6
 8005176:	693b      	ldr	r3, [r7, #16]
 8005178:	041b      	lsls	r3, r3, #16
 800517a:	431a      	orrs	r2, r3
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	695b      	ldr	r3, [r3, #20]
 8005180:	061b      	lsls	r3, r3, #24
 8005182:	4927      	ldr	r1, [pc, #156]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8005184:	4313      	orrs	r3, r2
 8005186:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800518a:	4b25      	ldr	r3, [pc, #148]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800518c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005190:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	6a1b      	ldr	r3, [r3, #32]
 8005198:	3b01      	subs	r3, #1
 800519a:	021b      	lsls	r3, r3, #8
 800519c:	4920      	ldr	r1, [pc, #128]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800519e:	4313      	orrs	r3, r2
 80051a0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80051ac:	2b00      	cmp	r3, #0
 80051ae:	d018      	beq.n	80051e2 <HAL_RCCEx_PeriphCLKConfig+0x652>
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80051b4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80051b8:	d113      	bne.n	80051e2 <HAL_RCCEx_PeriphCLKConfig+0x652>
 80051ba:	4b19      	ldr	r3, [pc, #100]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80051bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80051c0:	0e1b      	lsrs	r3, r3, #24
 80051c2:	f003 030f 	and.w	r3, r3, #15
 80051c6:	613b      	str	r3, [r7, #16]
 80051c8:	687b      	ldr	r3, [r7, #4]
 80051ca:	691b      	ldr	r3, [r3, #16]
 80051cc:	019a      	lsls	r2, r3, #6
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	699b      	ldr	r3, [r3, #24]
 80051d2:	041b      	lsls	r3, r3, #16
 80051d4:	431a      	orrs	r2, r3
 80051d6:	693b      	ldr	r3, [r7, #16]
 80051d8:	061b      	lsls	r3, r3, #24
 80051da:	4911      	ldr	r1, [pc, #68]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80051dc:	4313      	orrs	r3, r2
 80051de:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80051e2:	4b0f      	ldr	r3, [pc, #60]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	4a0e      	ldr	r2, [pc, #56]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80051e8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80051ec:	6013      	str	r3, [r2, #0]
 80051ee:	f7fd f9cf 	bl	8002590 <HAL_GetTick>
 80051f2:	6178      	str	r0, [r7, #20]
 80051f4:	e008      	b.n	8005208 <HAL_RCCEx_PeriphCLKConfig+0x678>
 80051f6:	f7fd f9cb 	bl	8002590 <HAL_GetTick>
 80051fa:	4602      	mov	r2, r0
 80051fc:	697b      	ldr	r3, [r7, #20]
 80051fe:	1ad3      	subs	r3, r2, r3
 8005200:	2b64      	cmp	r3, #100	; 0x64
 8005202:	d901      	bls.n	8005208 <HAL_RCCEx_PeriphCLKConfig+0x678>
 8005204:	2303      	movs	r3, #3
 8005206:	e007      	b.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x688>
 8005208:	4b05      	ldr	r3, [pc, #20]	; (8005220 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005210:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005214:	d1ef      	bne.n	80051f6 <HAL_RCCEx_PeriphCLKConfig+0x666>
 8005216:	2300      	movs	r3, #0
 8005218:	4618      	mov	r0, r3
 800521a:	3720      	adds	r7, #32
 800521c:	46bd      	mov	sp, r7
 800521e:	bd80      	pop	{r7, pc}
 8005220:	40023800 	.word	0x40023800

08005224 <calloc>:
 8005224:	4b02      	ldr	r3, [pc, #8]	; (8005230 <calloc+0xc>)
 8005226:	460a      	mov	r2, r1
 8005228:	4601      	mov	r1, r0
 800522a:	6818      	ldr	r0, [r3, #0]
 800522c:	f000 b802 	b.w	8005234 <_calloc_r>
 8005230:	200000ac 	.word	0x200000ac

08005234 <_calloc_r>:
 8005234:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005236:	fba1 2402 	umull	r2, r4, r1, r2
 800523a:	b94c      	cbnz	r4, 8005250 <_calloc_r+0x1c>
 800523c:	4611      	mov	r1, r2
 800523e:	9201      	str	r2, [sp, #4]
 8005240:	f000 f836 	bl	80052b0 <_malloc_r>
 8005244:	9a01      	ldr	r2, [sp, #4]
 8005246:	4605      	mov	r5, r0
 8005248:	b930      	cbnz	r0, 8005258 <_calloc_r+0x24>
 800524a:	4628      	mov	r0, r5
 800524c:	b003      	add	sp, #12
 800524e:	bd30      	pop	{r4, r5, pc}
 8005250:	220c      	movs	r2, #12
 8005252:	6002      	str	r2, [r0, #0]
 8005254:	2500      	movs	r5, #0
 8005256:	e7f8      	b.n	800524a <_calloc_r+0x16>
 8005258:	4621      	mov	r1, r4
 800525a:	f000 f8b5 	bl	80053c8 <memset>
 800525e:	e7f4      	b.n	800524a <_calloc_r+0x16>

08005260 <malloc>:
 8005260:	4b02      	ldr	r3, [pc, #8]	; (800526c <malloc+0xc>)
 8005262:	4601      	mov	r1, r0
 8005264:	6818      	ldr	r0, [r3, #0]
 8005266:	f000 b823 	b.w	80052b0 <_malloc_r>
 800526a:	bf00      	nop
 800526c:	200000ac 	.word	0x200000ac

08005270 <sbrk_aligned>:
 8005270:	b570      	push	{r4, r5, r6, lr}
 8005272:	4e0e      	ldr	r6, [pc, #56]	; (80052ac <sbrk_aligned+0x3c>)
 8005274:	460c      	mov	r4, r1
 8005276:	6831      	ldr	r1, [r6, #0]
 8005278:	4605      	mov	r5, r0
 800527a:	b911      	cbnz	r1, 8005282 <sbrk_aligned+0x12>
 800527c:	f000 f8ac 	bl	80053d8 <_sbrk_r>
 8005280:	6030      	str	r0, [r6, #0]
 8005282:	4621      	mov	r1, r4
 8005284:	4628      	mov	r0, r5
 8005286:	f000 f8a7 	bl	80053d8 <_sbrk_r>
 800528a:	1c43      	adds	r3, r0, #1
 800528c:	d00a      	beq.n	80052a4 <sbrk_aligned+0x34>
 800528e:	1cc4      	adds	r4, r0, #3
 8005290:	f024 0403 	bic.w	r4, r4, #3
 8005294:	42a0      	cmp	r0, r4
 8005296:	d007      	beq.n	80052a8 <sbrk_aligned+0x38>
 8005298:	1a21      	subs	r1, r4, r0
 800529a:	4628      	mov	r0, r5
 800529c:	f000 f89c 	bl	80053d8 <_sbrk_r>
 80052a0:	3001      	adds	r0, #1
 80052a2:	d101      	bne.n	80052a8 <sbrk_aligned+0x38>
 80052a4:	f04f 34ff 	mov.w	r4, #4294967295
 80052a8:	4620      	mov	r0, r4
 80052aa:	bd70      	pop	{r4, r5, r6, pc}
 80052ac:	20000480 	.word	0x20000480

080052b0 <_malloc_r>:
 80052b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80052b4:	1ccd      	adds	r5, r1, #3
 80052b6:	f025 0503 	bic.w	r5, r5, #3
 80052ba:	3508      	adds	r5, #8
 80052bc:	2d0c      	cmp	r5, #12
 80052be:	bf38      	it	cc
 80052c0:	250c      	movcc	r5, #12
 80052c2:	2d00      	cmp	r5, #0
 80052c4:	4607      	mov	r7, r0
 80052c6:	db01      	blt.n	80052cc <_malloc_r+0x1c>
 80052c8:	42a9      	cmp	r1, r5
 80052ca:	d905      	bls.n	80052d8 <_malloc_r+0x28>
 80052cc:	230c      	movs	r3, #12
 80052ce:	603b      	str	r3, [r7, #0]
 80052d0:	2600      	movs	r6, #0
 80052d2:	4630      	mov	r0, r6
 80052d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80052d8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80053ac <_malloc_r+0xfc>
 80052dc:	f000 f868 	bl	80053b0 <__malloc_lock>
 80052e0:	f8d8 3000 	ldr.w	r3, [r8]
 80052e4:	461c      	mov	r4, r3
 80052e6:	bb5c      	cbnz	r4, 8005340 <_malloc_r+0x90>
 80052e8:	4629      	mov	r1, r5
 80052ea:	4638      	mov	r0, r7
 80052ec:	f7ff ffc0 	bl	8005270 <sbrk_aligned>
 80052f0:	1c43      	adds	r3, r0, #1
 80052f2:	4604      	mov	r4, r0
 80052f4:	d155      	bne.n	80053a2 <_malloc_r+0xf2>
 80052f6:	f8d8 4000 	ldr.w	r4, [r8]
 80052fa:	4626      	mov	r6, r4
 80052fc:	2e00      	cmp	r6, #0
 80052fe:	d145      	bne.n	800538c <_malloc_r+0xdc>
 8005300:	2c00      	cmp	r4, #0
 8005302:	d048      	beq.n	8005396 <_malloc_r+0xe6>
 8005304:	6823      	ldr	r3, [r4, #0]
 8005306:	4631      	mov	r1, r6
 8005308:	4638      	mov	r0, r7
 800530a:	eb04 0903 	add.w	r9, r4, r3
 800530e:	f000 f863 	bl	80053d8 <_sbrk_r>
 8005312:	4581      	cmp	r9, r0
 8005314:	d13f      	bne.n	8005396 <_malloc_r+0xe6>
 8005316:	6821      	ldr	r1, [r4, #0]
 8005318:	1a6d      	subs	r5, r5, r1
 800531a:	4629      	mov	r1, r5
 800531c:	4638      	mov	r0, r7
 800531e:	f7ff ffa7 	bl	8005270 <sbrk_aligned>
 8005322:	3001      	adds	r0, #1
 8005324:	d037      	beq.n	8005396 <_malloc_r+0xe6>
 8005326:	6823      	ldr	r3, [r4, #0]
 8005328:	442b      	add	r3, r5
 800532a:	6023      	str	r3, [r4, #0]
 800532c:	f8d8 3000 	ldr.w	r3, [r8]
 8005330:	2b00      	cmp	r3, #0
 8005332:	d038      	beq.n	80053a6 <_malloc_r+0xf6>
 8005334:	685a      	ldr	r2, [r3, #4]
 8005336:	42a2      	cmp	r2, r4
 8005338:	d12b      	bne.n	8005392 <_malloc_r+0xe2>
 800533a:	2200      	movs	r2, #0
 800533c:	605a      	str	r2, [r3, #4]
 800533e:	e00f      	b.n	8005360 <_malloc_r+0xb0>
 8005340:	6822      	ldr	r2, [r4, #0]
 8005342:	1b52      	subs	r2, r2, r5
 8005344:	d41f      	bmi.n	8005386 <_malloc_r+0xd6>
 8005346:	2a0b      	cmp	r2, #11
 8005348:	d917      	bls.n	800537a <_malloc_r+0xca>
 800534a:	1961      	adds	r1, r4, r5
 800534c:	42a3      	cmp	r3, r4
 800534e:	6025      	str	r5, [r4, #0]
 8005350:	bf18      	it	ne
 8005352:	6059      	strne	r1, [r3, #4]
 8005354:	6863      	ldr	r3, [r4, #4]
 8005356:	bf08      	it	eq
 8005358:	f8c8 1000 	streq.w	r1, [r8]
 800535c:	5162      	str	r2, [r4, r5]
 800535e:	604b      	str	r3, [r1, #4]
 8005360:	4638      	mov	r0, r7
 8005362:	f104 060b 	add.w	r6, r4, #11
 8005366:	f000 f829 	bl	80053bc <__malloc_unlock>
 800536a:	f026 0607 	bic.w	r6, r6, #7
 800536e:	1d23      	adds	r3, r4, #4
 8005370:	1af2      	subs	r2, r6, r3
 8005372:	d0ae      	beq.n	80052d2 <_malloc_r+0x22>
 8005374:	1b9b      	subs	r3, r3, r6
 8005376:	50a3      	str	r3, [r4, r2]
 8005378:	e7ab      	b.n	80052d2 <_malloc_r+0x22>
 800537a:	42a3      	cmp	r3, r4
 800537c:	6862      	ldr	r2, [r4, #4]
 800537e:	d1dd      	bne.n	800533c <_malloc_r+0x8c>
 8005380:	f8c8 2000 	str.w	r2, [r8]
 8005384:	e7ec      	b.n	8005360 <_malloc_r+0xb0>
 8005386:	4623      	mov	r3, r4
 8005388:	6864      	ldr	r4, [r4, #4]
 800538a:	e7ac      	b.n	80052e6 <_malloc_r+0x36>
 800538c:	4634      	mov	r4, r6
 800538e:	6876      	ldr	r6, [r6, #4]
 8005390:	e7b4      	b.n	80052fc <_malloc_r+0x4c>
 8005392:	4613      	mov	r3, r2
 8005394:	e7cc      	b.n	8005330 <_malloc_r+0x80>
 8005396:	230c      	movs	r3, #12
 8005398:	603b      	str	r3, [r7, #0]
 800539a:	4638      	mov	r0, r7
 800539c:	f000 f80e 	bl	80053bc <__malloc_unlock>
 80053a0:	e797      	b.n	80052d2 <_malloc_r+0x22>
 80053a2:	6025      	str	r5, [r4, #0]
 80053a4:	e7dc      	b.n	8005360 <_malloc_r+0xb0>
 80053a6:	605b      	str	r3, [r3, #4]
 80053a8:	deff      	udf	#255	; 0xff
 80053aa:	bf00      	nop
 80053ac:	2000047c 	.word	0x2000047c

080053b0 <__malloc_lock>:
 80053b0:	4801      	ldr	r0, [pc, #4]	; (80053b8 <__malloc_lock+0x8>)
 80053b2:	f000 b84b 	b.w	800544c <__retarget_lock_acquire_recursive>
 80053b6:	bf00      	nop
 80053b8:	200005c0 	.word	0x200005c0

080053bc <__malloc_unlock>:
 80053bc:	4801      	ldr	r0, [pc, #4]	; (80053c4 <__malloc_unlock+0x8>)
 80053be:	f000 b846 	b.w	800544e <__retarget_lock_release_recursive>
 80053c2:	bf00      	nop
 80053c4:	200005c0 	.word	0x200005c0

080053c8 <memset>:
 80053c8:	4402      	add	r2, r0
 80053ca:	4603      	mov	r3, r0
 80053cc:	4293      	cmp	r3, r2
 80053ce:	d100      	bne.n	80053d2 <memset+0xa>
 80053d0:	4770      	bx	lr
 80053d2:	f803 1b01 	strb.w	r1, [r3], #1
 80053d6:	e7f9      	b.n	80053cc <memset+0x4>

080053d8 <_sbrk_r>:
 80053d8:	b538      	push	{r3, r4, r5, lr}
 80053da:	4d06      	ldr	r5, [pc, #24]	; (80053f4 <_sbrk_r+0x1c>)
 80053dc:	2300      	movs	r3, #0
 80053de:	4604      	mov	r4, r0
 80053e0:	4608      	mov	r0, r1
 80053e2:	602b      	str	r3, [r5, #0]
 80053e4:	f7fd f812 	bl	800240c <_sbrk>
 80053e8:	1c43      	adds	r3, r0, #1
 80053ea:	d102      	bne.n	80053f2 <_sbrk_r+0x1a>
 80053ec:	682b      	ldr	r3, [r5, #0]
 80053ee:	b103      	cbz	r3, 80053f2 <_sbrk_r+0x1a>
 80053f0:	6023      	str	r3, [r4, #0]
 80053f2:	bd38      	pop	{r3, r4, r5, pc}
 80053f4:	200005bc 	.word	0x200005bc

080053f8 <__errno>:
 80053f8:	4b01      	ldr	r3, [pc, #4]	; (8005400 <__errno+0x8>)
 80053fa:	6818      	ldr	r0, [r3, #0]
 80053fc:	4770      	bx	lr
 80053fe:	bf00      	nop
 8005400:	200000ac 	.word	0x200000ac

08005404 <__libc_init_array>:
 8005404:	b570      	push	{r4, r5, r6, lr}
 8005406:	4d0d      	ldr	r5, [pc, #52]	; (800543c <__libc_init_array+0x38>)
 8005408:	4c0d      	ldr	r4, [pc, #52]	; (8005440 <__libc_init_array+0x3c>)
 800540a:	1b64      	subs	r4, r4, r5
 800540c:	10a4      	asrs	r4, r4, #2
 800540e:	2600      	movs	r6, #0
 8005410:	42a6      	cmp	r6, r4
 8005412:	d109      	bne.n	8005428 <__libc_init_array+0x24>
 8005414:	4d0b      	ldr	r5, [pc, #44]	; (8005444 <__libc_init_array+0x40>)
 8005416:	4c0c      	ldr	r4, [pc, #48]	; (8005448 <__libc_init_array+0x44>)
 8005418:	f001 f856 	bl	80064c8 <_init>
 800541c:	1b64      	subs	r4, r4, r5
 800541e:	10a4      	asrs	r4, r4, #2
 8005420:	2600      	movs	r6, #0
 8005422:	42a6      	cmp	r6, r4
 8005424:	d105      	bne.n	8005432 <__libc_init_array+0x2e>
 8005426:	bd70      	pop	{r4, r5, r6, pc}
 8005428:	f855 3b04 	ldr.w	r3, [r5], #4
 800542c:	4798      	blx	r3
 800542e:	3601      	adds	r6, #1
 8005430:	e7ee      	b.n	8005410 <__libc_init_array+0xc>
 8005432:	f855 3b04 	ldr.w	r3, [r5], #4
 8005436:	4798      	blx	r3
 8005438:	3601      	adds	r6, #1
 800543a:	e7f2      	b.n	8005422 <__libc_init_array+0x1e>
 800543c:	080066f8 	.word	0x080066f8
 8005440:	080066f8 	.word	0x080066f8
 8005444:	080066f8 	.word	0x080066f8
 8005448:	080066fc 	.word	0x080066fc

0800544c <__retarget_lock_acquire_recursive>:
 800544c:	4770      	bx	lr

0800544e <__retarget_lock_release_recursive>:
 800544e:	4770      	bx	lr

08005450 <cos>:
 8005450:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005452:	ec53 2b10 	vmov	r2, r3, d0
 8005456:	4826      	ldr	r0, [pc, #152]	; (80054f0 <cos+0xa0>)
 8005458:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800545c:	4281      	cmp	r1, r0
 800545e:	dc06      	bgt.n	800546e <cos+0x1e>
 8005460:	ed9f 1b21 	vldr	d1, [pc, #132]	; 80054e8 <cos+0x98>
 8005464:	b005      	add	sp, #20
 8005466:	f85d eb04 	ldr.w	lr, [sp], #4
 800546a:	f000 b845 	b.w	80054f8 <__kernel_cos>
 800546e:	4821      	ldr	r0, [pc, #132]	; (80054f4 <cos+0xa4>)
 8005470:	4281      	cmp	r1, r0
 8005472:	dd09      	ble.n	8005488 <cos+0x38>
 8005474:	ee10 0a10 	vmov	r0, s0
 8005478:	4619      	mov	r1, r3
 800547a:	f7fa fed5 	bl	8000228 <__aeabi_dsub>
 800547e:	ec41 0b10 	vmov	d0, r0, r1
 8005482:	b005      	add	sp, #20
 8005484:	f85d fb04 	ldr.w	pc, [sp], #4
 8005488:	4668      	mov	r0, sp
 800548a:	f000 f9bd 	bl	8005808 <__ieee754_rem_pio2>
 800548e:	f000 0003 	and.w	r0, r0, #3
 8005492:	2801      	cmp	r0, #1
 8005494:	d00b      	beq.n	80054ae <cos+0x5e>
 8005496:	2802      	cmp	r0, #2
 8005498:	d016      	beq.n	80054c8 <cos+0x78>
 800549a:	b9e0      	cbnz	r0, 80054d6 <cos+0x86>
 800549c:	ed9d 1b02 	vldr	d1, [sp, #8]
 80054a0:	ed9d 0b00 	vldr	d0, [sp]
 80054a4:	f000 f828 	bl	80054f8 <__kernel_cos>
 80054a8:	ec51 0b10 	vmov	r0, r1, d0
 80054ac:	e7e7      	b.n	800547e <cos+0x2e>
 80054ae:	ed9d 1b02 	vldr	d1, [sp, #8]
 80054b2:	ed9d 0b00 	vldr	d0, [sp]
 80054b6:	f000 f8e7 	bl	8005688 <__kernel_sin>
 80054ba:	ec53 2b10 	vmov	r2, r3, d0
 80054be:	ee10 0a10 	vmov	r0, s0
 80054c2:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 80054c6:	e7da      	b.n	800547e <cos+0x2e>
 80054c8:	ed9d 1b02 	vldr	d1, [sp, #8]
 80054cc:	ed9d 0b00 	vldr	d0, [sp]
 80054d0:	f000 f812 	bl	80054f8 <__kernel_cos>
 80054d4:	e7f1      	b.n	80054ba <cos+0x6a>
 80054d6:	ed9d 1b02 	vldr	d1, [sp, #8]
 80054da:	ed9d 0b00 	vldr	d0, [sp]
 80054de:	2001      	movs	r0, #1
 80054e0:	f000 f8d2 	bl	8005688 <__kernel_sin>
 80054e4:	e7e0      	b.n	80054a8 <cos+0x58>
 80054e6:	bf00      	nop
	...
 80054f0:	3fe921fb 	.word	0x3fe921fb
 80054f4:	7fefffff 	.word	0x7fefffff

080054f8 <__kernel_cos>:
 80054f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054fc:	ec57 6b10 	vmov	r6, r7, d0
 8005500:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8005504:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8005508:	ed8d 1b00 	vstr	d1, [sp]
 800550c:	da07      	bge.n	800551e <__kernel_cos+0x26>
 800550e:	ee10 0a10 	vmov	r0, s0
 8005512:	4639      	mov	r1, r7
 8005514:	f7fb fada 	bl	8000acc <__aeabi_d2iz>
 8005518:	2800      	cmp	r0, #0
 800551a:	f000 8088 	beq.w	800562e <__kernel_cos+0x136>
 800551e:	4632      	mov	r2, r6
 8005520:	463b      	mov	r3, r7
 8005522:	4630      	mov	r0, r6
 8005524:	4639      	mov	r1, r7
 8005526:	f7fb f837 	bl	8000598 <__aeabi_dmul>
 800552a:	4b51      	ldr	r3, [pc, #324]	; (8005670 <__kernel_cos+0x178>)
 800552c:	2200      	movs	r2, #0
 800552e:	4604      	mov	r4, r0
 8005530:	460d      	mov	r5, r1
 8005532:	f7fb f831 	bl	8000598 <__aeabi_dmul>
 8005536:	a340      	add	r3, pc, #256	; (adr r3, 8005638 <__kernel_cos+0x140>)
 8005538:	e9d3 2300 	ldrd	r2, r3, [r3]
 800553c:	4682      	mov	sl, r0
 800553e:	468b      	mov	fp, r1
 8005540:	4620      	mov	r0, r4
 8005542:	4629      	mov	r1, r5
 8005544:	f7fb f828 	bl	8000598 <__aeabi_dmul>
 8005548:	a33d      	add	r3, pc, #244	; (adr r3, 8005640 <__kernel_cos+0x148>)
 800554a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800554e:	f7fa fe6d 	bl	800022c <__adddf3>
 8005552:	4622      	mov	r2, r4
 8005554:	462b      	mov	r3, r5
 8005556:	f7fb f81f 	bl	8000598 <__aeabi_dmul>
 800555a:	a33b      	add	r3, pc, #236	; (adr r3, 8005648 <__kernel_cos+0x150>)
 800555c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005560:	f7fa fe62 	bl	8000228 <__aeabi_dsub>
 8005564:	4622      	mov	r2, r4
 8005566:	462b      	mov	r3, r5
 8005568:	f7fb f816 	bl	8000598 <__aeabi_dmul>
 800556c:	a338      	add	r3, pc, #224	; (adr r3, 8005650 <__kernel_cos+0x158>)
 800556e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005572:	f7fa fe5b 	bl	800022c <__adddf3>
 8005576:	4622      	mov	r2, r4
 8005578:	462b      	mov	r3, r5
 800557a:	f7fb f80d 	bl	8000598 <__aeabi_dmul>
 800557e:	a336      	add	r3, pc, #216	; (adr r3, 8005658 <__kernel_cos+0x160>)
 8005580:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005584:	f7fa fe50 	bl	8000228 <__aeabi_dsub>
 8005588:	4622      	mov	r2, r4
 800558a:	462b      	mov	r3, r5
 800558c:	f7fb f804 	bl	8000598 <__aeabi_dmul>
 8005590:	a333      	add	r3, pc, #204	; (adr r3, 8005660 <__kernel_cos+0x168>)
 8005592:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005596:	f7fa fe49 	bl	800022c <__adddf3>
 800559a:	4622      	mov	r2, r4
 800559c:	462b      	mov	r3, r5
 800559e:	f7fa fffb 	bl	8000598 <__aeabi_dmul>
 80055a2:	4622      	mov	r2, r4
 80055a4:	462b      	mov	r3, r5
 80055a6:	f7fa fff7 	bl	8000598 <__aeabi_dmul>
 80055aa:	e9dd 2300 	ldrd	r2, r3, [sp]
 80055ae:	4604      	mov	r4, r0
 80055b0:	460d      	mov	r5, r1
 80055b2:	4630      	mov	r0, r6
 80055b4:	4639      	mov	r1, r7
 80055b6:	f7fa ffef 	bl	8000598 <__aeabi_dmul>
 80055ba:	460b      	mov	r3, r1
 80055bc:	4602      	mov	r2, r0
 80055be:	4629      	mov	r1, r5
 80055c0:	4620      	mov	r0, r4
 80055c2:	f7fa fe31 	bl	8000228 <__aeabi_dsub>
 80055c6:	4b2b      	ldr	r3, [pc, #172]	; (8005674 <__kernel_cos+0x17c>)
 80055c8:	4598      	cmp	r8, r3
 80055ca:	4606      	mov	r6, r0
 80055cc:	460f      	mov	r7, r1
 80055ce:	dc10      	bgt.n	80055f2 <__kernel_cos+0xfa>
 80055d0:	4602      	mov	r2, r0
 80055d2:	460b      	mov	r3, r1
 80055d4:	4650      	mov	r0, sl
 80055d6:	4659      	mov	r1, fp
 80055d8:	f7fa fe26 	bl	8000228 <__aeabi_dsub>
 80055dc:	460b      	mov	r3, r1
 80055de:	4926      	ldr	r1, [pc, #152]	; (8005678 <__kernel_cos+0x180>)
 80055e0:	4602      	mov	r2, r0
 80055e2:	2000      	movs	r0, #0
 80055e4:	f7fa fe20 	bl	8000228 <__aeabi_dsub>
 80055e8:	ec41 0b10 	vmov	d0, r0, r1
 80055ec:	b003      	add	sp, #12
 80055ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055f2:	4b22      	ldr	r3, [pc, #136]	; (800567c <__kernel_cos+0x184>)
 80055f4:	4920      	ldr	r1, [pc, #128]	; (8005678 <__kernel_cos+0x180>)
 80055f6:	4598      	cmp	r8, r3
 80055f8:	bfcc      	ite	gt
 80055fa:	4d21      	ldrgt	r5, [pc, #132]	; (8005680 <__kernel_cos+0x188>)
 80055fc:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8005600:	2400      	movs	r4, #0
 8005602:	4622      	mov	r2, r4
 8005604:	462b      	mov	r3, r5
 8005606:	2000      	movs	r0, #0
 8005608:	f7fa fe0e 	bl	8000228 <__aeabi_dsub>
 800560c:	4622      	mov	r2, r4
 800560e:	4680      	mov	r8, r0
 8005610:	4689      	mov	r9, r1
 8005612:	462b      	mov	r3, r5
 8005614:	4650      	mov	r0, sl
 8005616:	4659      	mov	r1, fp
 8005618:	f7fa fe06 	bl	8000228 <__aeabi_dsub>
 800561c:	4632      	mov	r2, r6
 800561e:	463b      	mov	r3, r7
 8005620:	f7fa fe02 	bl	8000228 <__aeabi_dsub>
 8005624:	4602      	mov	r2, r0
 8005626:	460b      	mov	r3, r1
 8005628:	4640      	mov	r0, r8
 800562a:	4649      	mov	r1, r9
 800562c:	e7da      	b.n	80055e4 <__kernel_cos+0xec>
 800562e:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8005668 <__kernel_cos+0x170>
 8005632:	e7db      	b.n	80055ec <__kernel_cos+0xf4>
 8005634:	f3af 8000 	nop.w
 8005638:	be8838d4 	.word	0xbe8838d4
 800563c:	bda8fae9 	.word	0xbda8fae9
 8005640:	bdb4b1c4 	.word	0xbdb4b1c4
 8005644:	3e21ee9e 	.word	0x3e21ee9e
 8005648:	809c52ad 	.word	0x809c52ad
 800564c:	3e927e4f 	.word	0x3e927e4f
 8005650:	19cb1590 	.word	0x19cb1590
 8005654:	3efa01a0 	.word	0x3efa01a0
 8005658:	16c15177 	.word	0x16c15177
 800565c:	3f56c16c 	.word	0x3f56c16c
 8005660:	5555554c 	.word	0x5555554c
 8005664:	3fa55555 	.word	0x3fa55555
 8005668:	00000000 	.word	0x00000000
 800566c:	3ff00000 	.word	0x3ff00000
 8005670:	3fe00000 	.word	0x3fe00000
 8005674:	3fd33332 	.word	0x3fd33332
 8005678:	3ff00000 	.word	0x3ff00000
 800567c:	3fe90000 	.word	0x3fe90000
 8005680:	3fd20000 	.word	0x3fd20000
 8005684:	00000000 	.word	0x00000000

08005688 <__kernel_sin>:
 8005688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800568c:	ed2d 8b04 	vpush	{d8-d9}
 8005690:	eeb0 8a41 	vmov.f32	s16, s2
 8005694:	eef0 8a61 	vmov.f32	s17, s3
 8005698:	ec55 4b10 	vmov	r4, r5, d0
 800569c:	b083      	sub	sp, #12
 800569e:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80056a2:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 80056a6:	9001      	str	r0, [sp, #4]
 80056a8:	da06      	bge.n	80056b8 <__kernel_sin+0x30>
 80056aa:	ee10 0a10 	vmov	r0, s0
 80056ae:	4629      	mov	r1, r5
 80056b0:	f7fb fa0c 	bl	8000acc <__aeabi_d2iz>
 80056b4:	2800      	cmp	r0, #0
 80056b6:	d051      	beq.n	800575c <__kernel_sin+0xd4>
 80056b8:	4622      	mov	r2, r4
 80056ba:	462b      	mov	r3, r5
 80056bc:	4620      	mov	r0, r4
 80056be:	4629      	mov	r1, r5
 80056c0:	f7fa ff6a 	bl	8000598 <__aeabi_dmul>
 80056c4:	4682      	mov	sl, r0
 80056c6:	468b      	mov	fp, r1
 80056c8:	4602      	mov	r2, r0
 80056ca:	460b      	mov	r3, r1
 80056cc:	4620      	mov	r0, r4
 80056ce:	4629      	mov	r1, r5
 80056d0:	f7fa ff62 	bl	8000598 <__aeabi_dmul>
 80056d4:	a341      	add	r3, pc, #260	; (adr r3, 80057dc <__kernel_sin+0x154>)
 80056d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056da:	4680      	mov	r8, r0
 80056dc:	4689      	mov	r9, r1
 80056de:	4650      	mov	r0, sl
 80056e0:	4659      	mov	r1, fp
 80056e2:	f7fa ff59 	bl	8000598 <__aeabi_dmul>
 80056e6:	a33f      	add	r3, pc, #252	; (adr r3, 80057e4 <__kernel_sin+0x15c>)
 80056e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056ec:	f7fa fd9c 	bl	8000228 <__aeabi_dsub>
 80056f0:	4652      	mov	r2, sl
 80056f2:	465b      	mov	r3, fp
 80056f4:	f7fa ff50 	bl	8000598 <__aeabi_dmul>
 80056f8:	a33c      	add	r3, pc, #240	; (adr r3, 80057ec <__kernel_sin+0x164>)
 80056fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056fe:	f7fa fd95 	bl	800022c <__adddf3>
 8005702:	4652      	mov	r2, sl
 8005704:	465b      	mov	r3, fp
 8005706:	f7fa ff47 	bl	8000598 <__aeabi_dmul>
 800570a:	a33a      	add	r3, pc, #232	; (adr r3, 80057f4 <__kernel_sin+0x16c>)
 800570c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005710:	f7fa fd8a 	bl	8000228 <__aeabi_dsub>
 8005714:	4652      	mov	r2, sl
 8005716:	465b      	mov	r3, fp
 8005718:	f7fa ff3e 	bl	8000598 <__aeabi_dmul>
 800571c:	a337      	add	r3, pc, #220	; (adr r3, 80057fc <__kernel_sin+0x174>)
 800571e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005722:	f7fa fd83 	bl	800022c <__adddf3>
 8005726:	9b01      	ldr	r3, [sp, #4]
 8005728:	4606      	mov	r6, r0
 800572a:	460f      	mov	r7, r1
 800572c:	b9eb      	cbnz	r3, 800576a <__kernel_sin+0xe2>
 800572e:	4602      	mov	r2, r0
 8005730:	460b      	mov	r3, r1
 8005732:	4650      	mov	r0, sl
 8005734:	4659      	mov	r1, fp
 8005736:	f7fa ff2f 	bl	8000598 <__aeabi_dmul>
 800573a:	a325      	add	r3, pc, #148	; (adr r3, 80057d0 <__kernel_sin+0x148>)
 800573c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005740:	f7fa fd72 	bl	8000228 <__aeabi_dsub>
 8005744:	4642      	mov	r2, r8
 8005746:	464b      	mov	r3, r9
 8005748:	f7fa ff26 	bl	8000598 <__aeabi_dmul>
 800574c:	4602      	mov	r2, r0
 800574e:	460b      	mov	r3, r1
 8005750:	4620      	mov	r0, r4
 8005752:	4629      	mov	r1, r5
 8005754:	f7fa fd6a 	bl	800022c <__adddf3>
 8005758:	4604      	mov	r4, r0
 800575a:	460d      	mov	r5, r1
 800575c:	ec45 4b10 	vmov	d0, r4, r5
 8005760:	b003      	add	sp, #12
 8005762:	ecbd 8b04 	vpop	{d8-d9}
 8005766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800576a:	4b1b      	ldr	r3, [pc, #108]	; (80057d8 <__kernel_sin+0x150>)
 800576c:	ec51 0b18 	vmov	r0, r1, d8
 8005770:	2200      	movs	r2, #0
 8005772:	f7fa ff11 	bl	8000598 <__aeabi_dmul>
 8005776:	4632      	mov	r2, r6
 8005778:	ec41 0b19 	vmov	d9, r0, r1
 800577c:	463b      	mov	r3, r7
 800577e:	4640      	mov	r0, r8
 8005780:	4649      	mov	r1, r9
 8005782:	f7fa ff09 	bl	8000598 <__aeabi_dmul>
 8005786:	4602      	mov	r2, r0
 8005788:	460b      	mov	r3, r1
 800578a:	ec51 0b19 	vmov	r0, r1, d9
 800578e:	f7fa fd4b 	bl	8000228 <__aeabi_dsub>
 8005792:	4652      	mov	r2, sl
 8005794:	465b      	mov	r3, fp
 8005796:	f7fa feff 	bl	8000598 <__aeabi_dmul>
 800579a:	ec53 2b18 	vmov	r2, r3, d8
 800579e:	f7fa fd43 	bl	8000228 <__aeabi_dsub>
 80057a2:	a30b      	add	r3, pc, #44	; (adr r3, 80057d0 <__kernel_sin+0x148>)
 80057a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80057a8:	4606      	mov	r6, r0
 80057aa:	460f      	mov	r7, r1
 80057ac:	4640      	mov	r0, r8
 80057ae:	4649      	mov	r1, r9
 80057b0:	f7fa fef2 	bl	8000598 <__aeabi_dmul>
 80057b4:	4602      	mov	r2, r0
 80057b6:	460b      	mov	r3, r1
 80057b8:	4630      	mov	r0, r6
 80057ba:	4639      	mov	r1, r7
 80057bc:	f7fa fd36 	bl	800022c <__adddf3>
 80057c0:	4602      	mov	r2, r0
 80057c2:	460b      	mov	r3, r1
 80057c4:	4620      	mov	r0, r4
 80057c6:	4629      	mov	r1, r5
 80057c8:	f7fa fd2e 	bl	8000228 <__aeabi_dsub>
 80057cc:	e7c4      	b.n	8005758 <__kernel_sin+0xd0>
 80057ce:	bf00      	nop
 80057d0:	55555549 	.word	0x55555549
 80057d4:	3fc55555 	.word	0x3fc55555
 80057d8:	3fe00000 	.word	0x3fe00000
 80057dc:	5acfd57c 	.word	0x5acfd57c
 80057e0:	3de5d93a 	.word	0x3de5d93a
 80057e4:	8a2b9ceb 	.word	0x8a2b9ceb
 80057e8:	3e5ae5e6 	.word	0x3e5ae5e6
 80057ec:	57b1fe7d 	.word	0x57b1fe7d
 80057f0:	3ec71de3 	.word	0x3ec71de3
 80057f4:	19c161d5 	.word	0x19c161d5
 80057f8:	3f2a01a0 	.word	0x3f2a01a0
 80057fc:	1110f8a6 	.word	0x1110f8a6
 8005800:	3f811111 	.word	0x3f811111
 8005804:	00000000 	.word	0x00000000

08005808 <__ieee754_rem_pio2>:
 8005808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800580c:	ed2d 8b02 	vpush	{d8}
 8005810:	ec55 4b10 	vmov	r4, r5, d0
 8005814:	4bca      	ldr	r3, [pc, #808]	; (8005b40 <__ieee754_rem_pio2+0x338>)
 8005816:	b08b      	sub	sp, #44	; 0x2c
 8005818:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 800581c:	4598      	cmp	r8, r3
 800581e:	4682      	mov	sl, r0
 8005820:	9502      	str	r5, [sp, #8]
 8005822:	dc08      	bgt.n	8005836 <__ieee754_rem_pio2+0x2e>
 8005824:	2200      	movs	r2, #0
 8005826:	2300      	movs	r3, #0
 8005828:	ed80 0b00 	vstr	d0, [r0]
 800582c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8005830:	f04f 0b00 	mov.w	fp, #0
 8005834:	e028      	b.n	8005888 <__ieee754_rem_pio2+0x80>
 8005836:	4bc3      	ldr	r3, [pc, #780]	; (8005b44 <__ieee754_rem_pio2+0x33c>)
 8005838:	4598      	cmp	r8, r3
 800583a:	dc78      	bgt.n	800592e <__ieee754_rem_pio2+0x126>
 800583c:	9b02      	ldr	r3, [sp, #8]
 800583e:	4ec2      	ldr	r6, [pc, #776]	; (8005b48 <__ieee754_rem_pio2+0x340>)
 8005840:	2b00      	cmp	r3, #0
 8005842:	ee10 0a10 	vmov	r0, s0
 8005846:	a3b0      	add	r3, pc, #704	; (adr r3, 8005b08 <__ieee754_rem_pio2+0x300>)
 8005848:	e9d3 2300 	ldrd	r2, r3, [r3]
 800584c:	4629      	mov	r1, r5
 800584e:	dd39      	ble.n	80058c4 <__ieee754_rem_pio2+0xbc>
 8005850:	f7fa fcea 	bl	8000228 <__aeabi_dsub>
 8005854:	45b0      	cmp	r8, r6
 8005856:	4604      	mov	r4, r0
 8005858:	460d      	mov	r5, r1
 800585a:	d01b      	beq.n	8005894 <__ieee754_rem_pio2+0x8c>
 800585c:	a3ac      	add	r3, pc, #688	; (adr r3, 8005b10 <__ieee754_rem_pio2+0x308>)
 800585e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005862:	f7fa fce1 	bl	8000228 <__aeabi_dsub>
 8005866:	4602      	mov	r2, r0
 8005868:	460b      	mov	r3, r1
 800586a:	e9ca 2300 	strd	r2, r3, [sl]
 800586e:	4620      	mov	r0, r4
 8005870:	4629      	mov	r1, r5
 8005872:	f7fa fcd9 	bl	8000228 <__aeabi_dsub>
 8005876:	a3a6      	add	r3, pc, #664	; (adr r3, 8005b10 <__ieee754_rem_pio2+0x308>)
 8005878:	e9d3 2300 	ldrd	r2, r3, [r3]
 800587c:	f7fa fcd4 	bl	8000228 <__aeabi_dsub>
 8005880:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8005884:	f04f 0b01 	mov.w	fp, #1
 8005888:	4658      	mov	r0, fp
 800588a:	b00b      	add	sp, #44	; 0x2c
 800588c:	ecbd 8b02 	vpop	{d8}
 8005890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005894:	a3a0      	add	r3, pc, #640	; (adr r3, 8005b18 <__ieee754_rem_pio2+0x310>)
 8005896:	e9d3 2300 	ldrd	r2, r3, [r3]
 800589a:	f7fa fcc5 	bl	8000228 <__aeabi_dsub>
 800589e:	a3a0      	add	r3, pc, #640	; (adr r3, 8005b20 <__ieee754_rem_pio2+0x318>)
 80058a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80058a4:	4604      	mov	r4, r0
 80058a6:	460d      	mov	r5, r1
 80058a8:	f7fa fcbe 	bl	8000228 <__aeabi_dsub>
 80058ac:	4602      	mov	r2, r0
 80058ae:	460b      	mov	r3, r1
 80058b0:	e9ca 2300 	strd	r2, r3, [sl]
 80058b4:	4620      	mov	r0, r4
 80058b6:	4629      	mov	r1, r5
 80058b8:	f7fa fcb6 	bl	8000228 <__aeabi_dsub>
 80058bc:	a398      	add	r3, pc, #608	; (adr r3, 8005b20 <__ieee754_rem_pio2+0x318>)
 80058be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80058c2:	e7db      	b.n	800587c <__ieee754_rem_pio2+0x74>
 80058c4:	f7fa fcb2 	bl	800022c <__adddf3>
 80058c8:	45b0      	cmp	r8, r6
 80058ca:	4604      	mov	r4, r0
 80058cc:	460d      	mov	r5, r1
 80058ce:	d016      	beq.n	80058fe <__ieee754_rem_pio2+0xf6>
 80058d0:	a38f      	add	r3, pc, #572	; (adr r3, 8005b10 <__ieee754_rem_pio2+0x308>)
 80058d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80058d6:	f7fa fca9 	bl	800022c <__adddf3>
 80058da:	4602      	mov	r2, r0
 80058dc:	460b      	mov	r3, r1
 80058de:	e9ca 2300 	strd	r2, r3, [sl]
 80058e2:	4620      	mov	r0, r4
 80058e4:	4629      	mov	r1, r5
 80058e6:	f7fa fc9f 	bl	8000228 <__aeabi_dsub>
 80058ea:	a389      	add	r3, pc, #548	; (adr r3, 8005b10 <__ieee754_rem_pio2+0x308>)
 80058ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80058f0:	f7fa fc9c 	bl	800022c <__adddf3>
 80058f4:	f04f 3bff 	mov.w	fp, #4294967295
 80058f8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80058fc:	e7c4      	b.n	8005888 <__ieee754_rem_pio2+0x80>
 80058fe:	a386      	add	r3, pc, #536	; (adr r3, 8005b18 <__ieee754_rem_pio2+0x310>)
 8005900:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005904:	f7fa fc92 	bl	800022c <__adddf3>
 8005908:	a385      	add	r3, pc, #532	; (adr r3, 8005b20 <__ieee754_rem_pio2+0x318>)
 800590a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800590e:	4604      	mov	r4, r0
 8005910:	460d      	mov	r5, r1
 8005912:	f7fa fc8b 	bl	800022c <__adddf3>
 8005916:	4602      	mov	r2, r0
 8005918:	460b      	mov	r3, r1
 800591a:	e9ca 2300 	strd	r2, r3, [sl]
 800591e:	4620      	mov	r0, r4
 8005920:	4629      	mov	r1, r5
 8005922:	f7fa fc81 	bl	8000228 <__aeabi_dsub>
 8005926:	a37e      	add	r3, pc, #504	; (adr r3, 8005b20 <__ieee754_rem_pio2+0x318>)
 8005928:	e9d3 2300 	ldrd	r2, r3, [r3]
 800592c:	e7e0      	b.n	80058f0 <__ieee754_rem_pio2+0xe8>
 800592e:	4b87      	ldr	r3, [pc, #540]	; (8005b4c <__ieee754_rem_pio2+0x344>)
 8005930:	4598      	cmp	r8, r3
 8005932:	f300 80d8 	bgt.w	8005ae6 <__ieee754_rem_pio2+0x2de>
 8005936:	f000 f96d 	bl	8005c14 <fabs>
 800593a:	ec55 4b10 	vmov	r4, r5, d0
 800593e:	ee10 0a10 	vmov	r0, s0
 8005942:	a379      	add	r3, pc, #484	; (adr r3, 8005b28 <__ieee754_rem_pio2+0x320>)
 8005944:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005948:	4629      	mov	r1, r5
 800594a:	f7fa fe25 	bl	8000598 <__aeabi_dmul>
 800594e:	4b80      	ldr	r3, [pc, #512]	; (8005b50 <__ieee754_rem_pio2+0x348>)
 8005950:	2200      	movs	r2, #0
 8005952:	f7fa fc6b 	bl	800022c <__adddf3>
 8005956:	f7fb f8b9 	bl	8000acc <__aeabi_d2iz>
 800595a:	4683      	mov	fp, r0
 800595c:	f7fa fdb2 	bl	80004c4 <__aeabi_i2d>
 8005960:	4602      	mov	r2, r0
 8005962:	460b      	mov	r3, r1
 8005964:	ec43 2b18 	vmov	d8, r2, r3
 8005968:	a367      	add	r3, pc, #412	; (adr r3, 8005b08 <__ieee754_rem_pio2+0x300>)
 800596a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800596e:	f7fa fe13 	bl	8000598 <__aeabi_dmul>
 8005972:	4602      	mov	r2, r0
 8005974:	460b      	mov	r3, r1
 8005976:	4620      	mov	r0, r4
 8005978:	4629      	mov	r1, r5
 800597a:	f7fa fc55 	bl	8000228 <__aeabi_dsub>
 800597e:	a364      	add	r3, pc, #400	; (adr r3, 8005b10 <__ieee754_rem_pio2+0x308>)
 8005980:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005984:	4606      	mov	r6, r0
 8005986:	460f      	mov	r7, r1
 8005988:	ec51 0b18 	vmov	r0, r1, d8
 800598c:	f7fa fe04 	bl	8000598 <__aeabi_dmul>
 8005990:	f1bb 0f1f 	cmp.w	fp, #31
 8005994:	4604      	mov	r4, r0
 8005996:	460d      	mov	r5, r1
 8005998:	dc0d      	bgt.n	80059b6 <__ieee754_rem_pio2+0x1ae>
 800599a:	4b6e      	ldr	r3, [pc, #440]	; (8005b54 <__ieee754_rem_pio2+0x34c>)
 800599c:	f10b 32ff 	add.w	r2, fp, #4294967295
 80059a0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80059a4:	4543      	cmp	r3, r8
 80059a6:	d006      	beq.n	80059b6 <__ieee754_rem_pio2+0x1ae>
 80059a8:	4622      	mov	r2, r4
 80059aa:	462b      	mov	r3, r5
 80059ac:	4630      	mov	r0, r6
 80059ae:	4639      	mov	r1, r7
 80059b0:	f7fa fc3a 	bl	8000228 <__aeabi_dsub>
 80059b4:	e00e      	b.n	80059d4 <__ieee754_rem_pio2+0x1cc>
 80059b6:	462b      	mov	r3, r5
 80059b8:	4622      	mov	r2, r4
 80059ba:	4630      	mov	r0, r6
 80059bc:	4639      	mov	r1, r7
 80059be:	f7fa fc33 	bl	8000228 <__aeabi_dsub>
 80059c2:	ea4f 5328 	mov.w	r3, r8, asr #20
 80059c6:	9303      	str	r3, [sp, #12]
 80059c8:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80059cc:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 80059d0:	2b10      	cmp	r3, #16
 80059d2:	dc02      	bgt.n	80059da <__ieee754_rem_pio2+0x1d2>
 80059d4:	e9ca 0100 	strd	r0, r1, [sl]
 80059d8:	e039      	b.n	8005a4e <__ieee754_rem_pio2+0x246>
 80059da:	a34f      	add	r3, pc, #316	; (adr r3, 8005b18 <__ieee754_rem_pio2+0x310>)
 80059dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80059e0:	ec51 0b18 	vmov	r0, r1, d8
 80059e4:	f7fa fdd8 	bl	8000598 <__aeabi_dmul>
 80059e8:	4604      	mov	r4, r0
 80059ea:	460d      	mov	r5, r1
 80059ec:	4602      	mov	r2, r0
 80059ee:	460b      	mov	r3, r1
 80059f0:	4630      	mov	r0, r6
 80059f2:	4639      	mov	r1, r7
 80059f4:	f7fa fc18 	bl	8000228 <__aeabi_dsub>
 80059f8:	4602      	mov	r2, r0
 80059fa:	460b      	mov	r3, r1
 80059fc:	4680      	mov	r8, r0
 80059fe:	4689      	mov	r9, r1
 8005a00:	4630      	mov	r0, r6
 8005a02:	4639      	mov	r1, r7
 8005a04:	f7fa fc10 	bl	8000228 <__aeabi_dsub>
 8005a08:	4622      	mov	r2, r4
 8005a0a:	462b      	mov	r3, r5
 8005a0c:	f7fa fc0c 	bl	8000228 <__aeabi_dsub>
 8005a10:	a343      	add	r3, pc, #268	; (adr r3, 8005b20 <__ieee754_rem_pio2+0x318>)
 8005a12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005a16:	4604      	mov	r4, r0
 8005a18:	460d      	mov	r5, r1
 8005a1a:	ec51 0b18 	vmov	r0, r1, d8
 8005a1e:	f7fa fdbb 	bl	8000598 <__aeabi_dmul>
 8005a22:	4622      	mov	r2, r4
 8005a24:	462b      	mov	r3, r5
 8005a26:	f7fa fbff 	bl	8000228 <__aeabi_dsub>
 8005a2a:	4602      	mov	r2, r0
 8005a2c:	460b      	mov	r3, r1
 8005a2e:	4604      	mov	r4, r0
 8005a30:	460d      	mov	r5, r1
 8005a32:	4640      	mov	r0, r8
 8005a34:	4649      	mov	r1, r9
 8005a36:	f7fa fbf7 	bl	8000228 <__aeabi_dsub>
 8005a3a:	9a03      	ldr	r2, [sp, #12]
 8005a3c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8005a40:	1ad3      	subs	r3, r2, r3
 8005a42:	2b31      	cmp	r3, #49	; 0x31
 8005a44:	dc24      	bgt.n	8005a90 <__ieee754_rem_pio2+0x288>
 8005a46:	e9ca 0100 	strd	r0, r1, [sl]
 8005a4a:	4646      	mov	r6, r8
 8005a4c:	464f      	mov	r7, r9
 8005a4e:	e9da 8900 	ldrd	r8, r9, [sl]
 8005a52:	4630      	mov	r0, r6
 8005a54:	4642      	mov	r2, r8
 8005a56:	464b      	mov	r3, r9
 8005a58:	4639      	mov	r1, r7
 8005a5a:	f7fa fbe5 	bl	8000228 <__aeabi_dsub>
 8005a5e:	462b      	mov	r3, r5
 8005a60:	4622      	mov	r2, r4
 8005a62:	f7fa fbe1 	bl	8000228 <__aeabi_dsub>
 8005a66:	9b02      	ldr	r3, [sp, #8]
 8005a68:	2b00      	cmp	r3, #0
 8005a6a:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8005a6e:	f6bf af0b 	bge.w	8005888 <__ieee754_rem_pio2+0x80>
 8005a72:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8005a76:	f8ca 3004 	str.w	r3, [sl, #4]
 8005a7a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005a7e:	f8ca 8000 	str.w	r8, [sl]
 8005a82:	f8ca 0008 	str.w	r0, [sl, #8]
 8005a86:	f8ca 300c 	str.w	r3, [sl, #12]
 8005a8a:	f1cb 0b00 	rsb	fp, fp, #0
 8005a8e:	e6fb      	b.n	8005888 <__ieee754_rem_pio2+0x80>
 8005a90:	a327      	add	r3, pc, #156	; (adr r3, 8005b30 <__ieee754_rem_pio2+0x328>)
 8005a92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005a96:	ec51 0b18 	vmov	r0, r1, d8
 8005a9a:	f7fa fd7d 	bl	8000598 <__aeabi_dmul>
 8005a9e:	4604      	mov	r4, r0
 8005aa0:	460d      	mov	r5, r1
 8005aa2:	4602      	mov	r2, r0
 8005aa4:	460b      	mov	r3, r1
 8005aa6:	4640      	mov	r0, r8
 8005aa8:	4649      	mov	r1, r9
 8005aaa:	f7fa fbbd 	bl	8000228 <__aeabi_dsub>
 8005aae:	4602      	mov	r2, r0
 8005ab0:	460b      	mov	r3, r1
 8005ab2:	4606      	mov	r6, r0
 8005ab4:	460f      	mov	r7, r1
 8005ab6:	4640      	mov	r0, r8
 8005ab8:	4649      	mov	r1, r9
 8005aba:	f7fa fbb5 	bl	8000228 <__aeabi_dsub>
 8005abe:	4622      	mov	r2, r4
 8005ac0:	462b      	mov	r3, r5
 8005ac2:	f7fa fbb1 	bl	8000228 <__aeabi_dsub>
 8005ac6:	a31c      	add	r3, pc, #112	; (adr r3, 8005b38 <__ieee754_rem_pio2+0x330>)
 8005ac8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005acc:	4604      	mov	r4, r0
 8005ace:	460d      	mov	r5, r1
 8005ad0:	ec51 0b18 	vmov	r0, r1, d8
 8005ad4:	f7fa fd60 	bl	8000598 <__aeabi_dmul>
 8005ad8:	4622      	mov	r2, r4
 8005ada:	462b      	mov	r3, r5
 8005adc:	f7fa fba4 	bl	8000228 <__aeabi_dsub>
 8005ae0:	4604      	mov	r4, r0
 8005ae2:	460d      	mov	r5, r1
 8005ae4:	e760      	b.n	80059a8 <__ieee754_rem_pio2+0x1a0>
 8005ae6:	4b1c      	ldr	r3, [pc, #112]	; (8005b58 <__ieee754_rem_pio2+0x350>)
 8005ae8:	4598      	cmp	r8, r3
 8005aea:	dd37      	ble.n	8005b5c <__ieee754_rem_pio2+0x354>
 8005aec:	ee10 2a10 	vmov	r2, s0
 8005af0:	462b      	mov	r3, r5
 8005af2:	4620      	mov	r0, r4
 8005af4:	4629      	mov	r1, r5
 8005af6:	f7fa fb97 	bl	8000228 <__aeabi_dsub>
 8005afa:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8005afe:	e9ca 0100 	strd	r0, r1, [sl]
 8005b02:	e695      	b.n	8005830 <__ieee754_rem_pio2+0x28>
 8005b04:	f3af 8000 	nop.w
 8005b08:	54400000 	.word	0x54400000
 8005b0c:	3ff921fb 	.word	0x3ff921fb
 8005b10:	1a626331 	.word	0x1a626331
 8005b14:	3dd0b461 	.word	0x3dd0b461
 8005b18:	1a600000 	.word	0x1a600000
 8005b1c:	3dd0b461 	.word	0x3dd0b461
 8005b20:	2e037073 	.word	0x2e037073
 8005b24:	3ba3198a 	.word	0x3ba3198a
 8005b28:	6dc9c883 	.word	0x6dc9c883
 8005b2c:	3fe45f30 	.word	0x3fe45f30
 8005b30:	2e000000 	.word	0x2e000000
 8005b34:	3ba3198a 	.word	0x3ba3198a
 8005b38:	252049c1 	.word	0x252049c1
 8005b3c:	397b839a 	.word	0x397b839a
 8005b40:	3fe921fb 	.word	0x3fe921fb
 8005b44:	4002d97b 	.word	0x4002d97b
 8005b48:	3ff921fb 	.word	0x3ff921fb
 8005b4c:	413921fb 	.word	0x413921fb
 8005b50:	3fe00000 	.word	0x3fe00000
 8005b54:	08006518 	.word	0x08006518
 8005b58:	7fefffff 	.word	0x7fefffff
 8005b5c:	ea4f 5628 	mov.w	r6, r8, asr #20
 8005b60:	f2a6 4616 	subw	r6, r6, #1046	; 0x416
 8005b64:	eba8 5106 	sub.w	r1, r8, r6, lsl #20
 8005b68:	4620      	mov	r0, r4
 8005b6a:	460d      	mov	r5, r1
 8005b6c:	f7fa ffae 	bl	8000acc <__aeabi_d2iz>
 8005b70:	f7fa fca8 	bl	80004c4 <__aeabi_i2d>
 8005b74:	4602      	mov	r2, r0
 8005b76:	460b      	mov	r3, r1
 8005b78:	4620      	mov	r0, r4
 8005b7a:	4629      	mov	r1, r5
 8005b7c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8005b80:	f7fa fb52 	bl	8000228 <__aeabi_dsub>
 8005b84:	4b21      	ldr	r3, [pc, #132]	; (8005c0c <__ieee754_rem_pio2+0x404>)
 8005b86:	2200      	movs	r2, #0
 8005b88:	f7fa fd06 	bl	8000598 <__aeabi_dmul>
 8005b8c:	460d      	mov	r5, r1
 8005b8e:	4604      	mov	r4, r0
 8005b90:	f7fa ff9c 	bl	8000acc <__aeabi_d2iz>
 8005b94:	f7fa fc96 	bl	80004c4 <__aeabi_i2d>
 8005b98:	4602      	mov	r2, r0
 8005b9a:	460b      	mov	r3, r1
 8005b9c:	4620      	mov	r0, r4
 8005b9e:	4629      	mov	r1, r5
 8005ba0:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8005ba4:	f7fa fb40 	bl	8000228 <__aeabi_dsub>
 8005ba8:	4b18      	ldr	r3, [pc, #96]	; (8005c0c <__ieee754_rem_pio2+0x404>)
 8005baa:	2200      	movs	r2, #0
 8005bac:	f7fa fcf4 	bl	8000598 <__aeabi_dmul>
 8005bb0:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8005bb4:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8005bb8:	2703      	movs	r7, #3
 8005bba:	2400      	movs	r4, #0
 8005bbc:	2500      	movs	r5, #0
 8005bbe:	e978 0102 	ldrd	r0, r1, [r8, #-8]!
 8005bc2:	4622      	mov	r2, r4
 8005bc4:	462b      	mov	r3, r5
 8005bc6:	46b9      	mov	r9, r7
 8005bc8:	3f01      	subs	r7, #1
 8005bca:	f7fa ff4d 	bl	8000a68 <__aeabi_dcmpeq>
 8005bce:	2800      	cmp	r0, #0
 8005bd0:	d1f5      	bne.n	8005bbe <__ieee754_rem_pio2+0x3b6>
 8005bd2:	4b0f      	ldr	r3, [pc, #60]	; (8005c10 <__ieee754_rem_pio2+0x408>)
 8005bd4:	9301      	str	r3, [sp, #4]
 8005bd6:	2302      	movs	r3, #2
 8005bd8:	9300      	str	r3, [sp, #0]
 8005bda:	4632      	mov	r2, r6
 8005bdc:	464b      	mov	r3, r9
 8005bde:	4651      	mov	r1, sl
 8005be0:	a804      	add	r0, sp, #16
 8005be2:	f000 f821 	bl	8005c28 <__kernel_rem_pio2>
 8005be6:	9b02      	ldr	r3, [sp, #8]
 8005be8:	2b00      	cmp	r3, #0
 8005bea:	4683      	mov	fp, r0
 8005bec:	f6bf ae4c 	bge.w	8005888 <__ieee754_rem_pio2+0x80>
 8005bf0:	e9da 2100 	ldrd	r2, r1, [sl]
 8005bf4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005bf8:	e9ca 2300 	strd	r2, r3, [sl]
 8005bfc:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 8005c00:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005c04:	e9ca 2302 	strd	r2, r3, [sl, #8]
 8005c08:	e73f      	b.n	8005a8a <__ieee754_rem_pio2+0x282>
 8005c0a:	bf00      	nop
 8005c0c:	41700000 	.word	0x41700000
 8005c10:	08006598 	.word	0x08006598

08005c14 <fabs>:
 8005c14:	ec51 0b10 	vmov	r0, r1, d0
 8005c18:	ee10 2a10 	vmov	r2, s0
 8005c1c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8005c20:	ec43 2b10 	vmov	d0, r2, r3
 8005c24:	4770      	bx	lr
	...

08005c28 <__kernel_rem_pio2>:
 8005c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c2c:	ed2d 8b02 	vpush	{d8}
 8005c30:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 8005c34:	f112 0f14 	cmn.w	r2, #20
 8005c38:	9306      	str	r3, [sp, #24]
 8005c3a:	9104      	str	r1, [sp, #16]
 8005c3c:	4bc2      	ldr	r3, [pc, #776]	; (8005f48 <__kernel_rem_pio2+0x320>)
 8005c3e:	99a4      	ldr	r1, [sp, #656]	; 0x290
 8005c40:	9009      	str	r0, [sp, #36]	; 0x24
 8005c42:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005c46:	9300      	str	r3, [sp, #0]
 8005c48:	9b06      	ldr	r3, [sp, #24]
 8005c4a:	f103 33ff 	add.w	r3, r3, #4294967295
 8005c4e:	bfa8      	it	ge
 8005c50:	1ed4      	subge	r4, r2, #3
 8005c52:	9305      	str	r3, [sp, #20]
 8005c54:	bfb2      	itee	lt
 8005c56:	2400      	movlt	r4, #0
 8005c58:	2318      	movge	r3, #24
 8005c5a:	fb94 f4f3 	sdivge	r4, r4, r3
 8005c5e:	f06f 0317 	mvn.w	r3, #23
 8005c62:	fb04 3303 	mla	r3, r4, r3, r3
 8005c66:	eb03 0a02 	add.w	sl, r3, r2
 8005c6a:	9b00      	ldr	r3, [sp, #0]
 8005c6c:	9a05      	ldr	r2, [sp, #20]
 8005c6e:	ed9f 8bb2 	vldr	d8, [pc, #712]	; 8005f38 <__kernel_rem_pio2+0x310>
 8005c72:	eb03 0802 	add.w	r8, r3, r2
 8005c76:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8005c78:	1aa7      	subs	r7, r4, r2
 8005c7a:	ae20      	add	r6, sp, #128	; 0x80
 8005c7c:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8005c80:	2500      	movs	r5, #0
 8005c82:	4545      	cmp	r5, r8
 8005c84:	dd13      	ble.n	8005cae <__kernel_rem_pio2+0x86>
 8005c86:	9b06      	ldr	r3, [sp, #24]
 8005c88:	aa20      	add	r2, sp, #128	; 0x80
 8005c8a:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8005c8e:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 8005c92:	f04f 0800 	mov.w	r8, #0
 8005c96:	9b00      	ldr	r3, [sp, #0]
 8005c98:	4598      	cmp	r8, r3
 8005c9a:	dc31      	bgt.n	8005d00 <__kernel_rem_pio2+0xd8>
 8005c9c:	ed9f 7ba6 	vldr	d7, [pc, #664]	; 8005f38 <__kernel_rem_pio2+0x310>
 8005ca0:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8005ca4:	ed8d 7b02 	vstr	d7, [sp, #8]
 8005ca8:	462f      	mov	r7, r5
 8005caa:	2600      	movs	r6, #0
 8005cac:	e01b      	b.n	8005ce6 <__kernel_rem_pio2+0xbe>
 8005cae:	42ef      	cmn	r7, r5
 8005cb0:	d407      	bmi.n	8005cc2 <__kernel_rem_pio2+0x9a>
 8005cb2:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8005cb6:	f7fa fc05 	bl	80004c4 <__aeabi_i2d>
 8005cba:	e8e6 0102 	strd	r0, r1, [r6], #8
 8005cbe:	3501      	adds	r5, #1
 8005cc0:	e7df      	b.n	8005c82 <__kernel_rem_pio2+0x5a>
 8005cc2:	ec51 0b18 	vmov	r0, r1, d8
 8005cc6:	e7f8      	b.n	8005cba <__kernel_rem_pio2+0x92>
 8005cc8:	e9d7 2300 	ldrd	r2, r3, [r7]
 8005ccc:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8005cd0:	f7fa fc62 	bl	8000598 <__aeabi_dmul>
 8005cd4:	4602      	mov	r2, r0
 8005cd6:	460b      	mov	r3, r1
 8005cd8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005cdc:	f7fa faa6 	bl	800022c <__adddf3>
 8005ce0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005ce4:	3601      	adds	r6, #1
 8005ce6:	9b05      	ldr	r3, [sp, #20]
 8005ce8:	429e      	cmp	r6, r3
 8005cea:	f1a7 0708 	sub.w	r7, r7, #8
 8005cee:	ddeb      	ble.n	8005cc8 <__kernel_rem_pio2+0xa0>
 8005cf0:	ed9d 7b02 	vldr	d7, [sp, #8]
 8005cf4:	f108 0801 	add.w	r8, r8, #1
 8005cf8:	ecab 7b02 	vstmia	fp!, {d7}
 8005cfc:	3508      	adds	r5, #8
 8005cfe:	e7ca      	b.n	8005c96 <__kernel_rem_pio2+0x6e>
 8005d00:	9b00      	ldr	r3, [sp, #0]
 8005d02:	aa0c      	add	r2, sp, #48	; 0x30
 8005d04:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8005d08:	930b      	str	r3, [sp, #44]	; 0x2c
 8005d0a:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8005d0c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8005d10:	9c00      	ldr	r4, [sp, #0]
 8005d12:	930a      	str	r3, [sp, #40]	; 0x28
 8005d14:	00e3      	lsls	r3, r4, #3
 8005d16:	9308      	str	r3, [sp, #32]
 8005d18:	ab98      	add	r3, sp, #608	; 0x260
 8005d1a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8005d1e:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 8005d22:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8005d26:	ab70      	add	r3, sp, #448	; 0x1c0
 8005d28:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 8005d2c:	46c3      	mov	fp, r8
 8005d2e:	46a1      	mov	r9, r4
 8005d30:	f1b9 0f00 	cmp.w	r9, #0
 8005d34:	f1a5 0508 	sub.w	r5, r5, #8
 8005d38:	dc77      	bgt.n	8005e2a <__kernel_rem_pio2+0x202>
 8005d3a:	ec47 6b10 	vmov	d0, r6, r7
 8005d3e:	4650      	mov	r0, sl
 8005d40:	f000 fac2 	bl	80062c8 <scalbn>
 8005d44:	ec57 6b10 	vmov	r6, r7, d0
 8005d48:	2200      	movs	r2, #0
 8005d4a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8005d4e:	ee10 0a10 	vmov	r0, s0
 8005d52:	4639      	mov	r1, r7
 8005d54:	f7fa fc20 	bl	8000598 <__aeabi_dmul>
 8005d58:	ec41 0b10 	vmov	d0, r0, r1
 8005d5c:	f000 fb34 	bl	80063c8 <floor>
 8005d60:	4b7a      	ldr	r3, [pc, #488]	; (8005f4c <__kernel_rem_pio2+0x324>)
 8005d62:	ec51 0b10 	vmov	r0, r1, d0
 8005d66:	2200      	movs	r2, #0
 8005d68:	f7fa fc16 	bl	8000598 <__aeabi_dmul>
 8005d6c:	4602      	mov	r2, r0
 8005d6e:	460b      	mov	r3, r1
 8005d70:	4630      	mov	r0, r6
 8005d72:	4639      	mov	r1, r7
 8005d74:	f7fa fa58 	bl	8000228 <__aeabi_dsub>
 8005d78:	460f      	mov	r7, r1
 8005d7a:	4606      	mov	r6, r0
 8005d7c:	f7fa fea6 	bl	8000acc <__aeabi_d2iz>
 8005d80:	9002      	str	r0, [sp, #8]
 8005d82:	f7fa fb9f 	bl	80004c4 <__aeabi_i2d>
 8005d86:	4602      	mov	r2, r0
 8005d88:	460b      	mov	r3, r1
 8005d8a:	4630      	mov	r0, r6
 8005d8c:	4639      	mov	r1, r7
 8005d8e:	f7fa fa4b 	bl	8000228 <__aeabi_dsub>
 8005d92:	f1ba 0f00 	cmp.w	sl, #0
 8005d96:	4606      	mov	r6, r0
 8005d98:	460f      	mov	r7, r1
 8005d9a:	dd6d      	ble.n	8005e78 <__kernel_rem_pio2+0x250>
 8005d9c:	1e61      	subs	r1, r4, #1
 8005d9e:	ab0c      	add	r3, sp, #48	; 0x30
 8005da0:	9d02      	ldr	r5, [sp, #8]
 8005da2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005da6:	f1ca 0018 	rsb	r0, sl, #24
 8005daa:	fa43 f200 	asr.w	r2, r3, r0
 8005dae:	4415      	add	r5, r2
 8005db0:	4082      	lsls	r2, r0
 8005db2:	1a9b      	subs	r3, r3, r2
 8005db4:	aa0c      	add	r2, sp, #48	; 0x30
 8005db6:	9502      	str	r5, [sp, #8]
 8005db8:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8005dbc:	f1ca 0217 	rsb	r2, sl, #23
 8005dc0:	fa43 fb02 	asr.w	fp, r3, r2
 8005dc4:	f1bb 0f00 	cmp.w	fp, #0
 8005dc8:	dd65      	ble.n	8005e96 <__kernel_rem_pio2+0x26e>
 8005dca:	9b02      	ldr	r3, [sp, #8]
 8005dcc:	2200      	movs	r2, #0
 8005dce:	3301      	adds	r3, #1
 8005dd0:	9302      	str	r3, [sp, #8]
 8005dd2:	4615      	mov	r5, r2
 8005dd4:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8005dd8:	4294      	cmp	r4, r2
 8005dda:	f300 809f 	bgt.w	8005f1c <__kernel_rem_pio2+0x2f4>
 8005dde:	f1ba 0f00 	cmp.w	sl, #0
 8005de2:	dd07      	ble.n	8005df4 <__kernel_rem_pio2+0x1cc>
 8005de4:	f1ba 0f01 	cmp.w	sl, #1
 8005de8:	f000 80c1 	beq.w	8005f6e <__kernel_rem_pio2+0x346>
 8005dec:	f1ba 0f02 	cmp.w	sl, #2
 8005df0:	f000 80c7 	beq.w	8005f82 <__kernel_rem_pio2+0x35a>
 8005df4:	f1bb 0f02 	cmp.w	fp, #2
 8005df8:	d14d      	bne.n	8005e96 <__kernel_rem_pio2+0x26e>
 8005dfa:	4632      	mov	r2, r6
 8005dfc:	463b      	mov	r3, r7
 8005dfe:	4954      	ldr	r1, [pc, #336]	; (8005f50 <__kernel_rem_pio2+0x328>)
 8005e00:	2000      	movs	r0, #0
 8005e02:	f7fa fa11 	bl	8000228 <__aeabi_dsub>
 8005e06:	4606      	mov	r6, r0
 8005e08:	460f      	mov	r7, r1
 8005e0a:	2d00      	cmp	r5, #0
 8005e0c:	d043      	beq.n	8005e96 <__kernel_rem_pio2+0x26e>
 8005e0e:	4650      	mov	r0, sl
 8005e10:	ed9f 0b4b 	vldr	d0, [pc, #300]	; 8005f40 <__kernel_rem_pio2+0x318>
 8005e14:	f000 fa58 	bl	80062c8 <scalbn>
 8005e18:	4630      	mov	r0, r6
 8005e1a:	4639      	mov	r1, r7
 8005e1c:	ec53 2b10 	vmov	r2, r3, d0
 8005e20:	f7fa fa02 	bl	8000228 <__aeabi_dsub>
 8005e24:	4606      	mov	r6, r0
 8005e26:	460f      	mov	r7, r1
 8005e28:	e035      	b.n	8005e96 <__kernel_rem_pio2+0x26e>
 8005e2a:	4b4a      	ldr	r3, [pc, #296]	; (8005f54 <__kernel_rem_pio2+0x32c>)
 8005e2c:	2200      	movs	r2, #0
 8005e2e:	4630      	mov	r0, r6
 8005e30:	4639      	mov	r1, r7
 8005e32:	f7fa fbb1 	bl	8000598 <__aeabi_dmul>
 8005e36:	f7fa fe49 	bl	8000acc <__aeabi_d2iz>
 8005e3a:	f7fa fb43 	bl	80004c4 <__aeabi_i2d>
 8005e3e:	4602      	mov	r2, r0
 8005e40:	460b      	mov	r3, r1
 8005e42:	ec43 2b18 	vmov	d8, r2, r3
 8005e46:	4b44      	ldr	r3, [pc, #272]	; (8005f58 <__kernel_rem_pio2+0x330>)
 8005e48:	2200      	movs	r2, #0
 8005e4a:	f7fa fba5 	bl	8000598 <__aeabi_dmul>
 8005e4e:	4602      	mov	r2, r0
 8005e50:	460b      	mov	r3, r1
 8005e52:	4630      	mov	r0, r6
 8005e54:	4639      	mov	r1, r7
 8005e56:	f7fa f9e7 	bl	8000228 <__aeabi_dsub>
 8005e5a:	f7fa fe37 	bl	8000acc <__aeabi_d2iz>
 8005e5e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8005e62:	f84b 0b04 	str.w	r0, [fp], #4
 8005e66:	ec51 0b18 	vmov	r0, r1, d8
 8005e6a:	f7fa f9df 	bl	800022c <__adddf3>
 8005e6e:	f109 39ff 	add.w	r9, r9, #4294967295
 8005e72:	4606      	mov	r6, r0
 8005e74:	460f      	mov	r7, r1
 8005e76:	e75b      	b.n	8005d30 <__kernel_rem_pio2+0x108>
 8005e78:	d106      	bne.n	8005e88 <__kernel_rem_pio2+0x260>
 8005e7a:	1e63      	subs	r3, r4, #1
 8005e7c:	aa0c      	add	r2, sp, #48	; 0x30
 8005e7e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005e82:	ea4f 5be3 	mov.w	fp, r3, asr #23
 8005e86:	e79d      	b.n	8005dc4 <__kernel_rem_pio2+0x19c>
 8005e88:	4b34      	ldr	r3, [pc, #208]	; (8005f5c <__kernel_rem_pio2+0x334>)
 8005e8a:	2200      	movs	r2, #0
 8005e8c:	f7fa fe0a 	bl	8000aa4 <__aeabi_dcmpge>
 8005e90:	2800      	cmp	r0, #0
 8005e92:	d140      	bne.n	8005f16 <__kernel_rem_pio2+0x2ee>
 8005e94:	4683      	mov	fp, r0
 8005e96:	2200      	movs	r2, #0
 8005e98:	2300      	movs	r3, #0
 8005e9a:	4630      	mov	r0, r6
 8005e9c:	4639      	mov	r1, r7
 8005e9e:	f7fa fde3 	bl	8000a68 <__aeabi_dcmpeq>
 8005ea2:	2800      	cmp	r0, #0
 8005ea4:	f000 80c1 	beq.w	800602a <__kernel_rem_pio2+0x402>
 8005ea8:	1e65      	subs	r5, r4, #1
 8005eaa:	462b      	mov	r3, r5
 8005eac:	2200      	movs	r2, #0
 8005eae:	9900      	ldr	r1, [sp, #0]
 8005eb0:	428b      	cmp	r3, r1
 8005eb2:	da6d      	bge.n	8005f90 <__kernel_rem_pio2+0x368>
 8005eb4:	2a00      	cmp	r2, #0
 8005eb6:	f000 808a 	beq.w	8005fce <__kernel_rem_pio2+0x3a6>
 8005eba:	ab0c      	add	r3, sp, #48	; 0x30
 8005ebc:	f1aa 0a18 	sub.w	sl, sl, #24
 8005ec0:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8005ec4:	2b00      	cmp	r3, #0
 8005ec6:	f000 80ae 	beq.w	8006026 <__kernel_rem_pio2+0x3fe>
 8005eca:	4650      	mov	r0, sl
 8005ecc:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 8005f40 <__kernel_rem_pio2+0x318>
 8005ed0:	f000 f9fa 	bl	80062c8 <scalbn>
 8005ed4:	1c6b      	adds	r3, r5, #1
 8005ed6:	00da      	lsls	r2, r3, #3
 8005ed8:	9205      	str	r2, [sp, #20]
 8005eda:	ec57 6b10 	vmov	r6, r7, d0
 8005ede:	aa70      	add	r2, sp, #448	; 0x1c0
 8005ee0:	f8df 9070 	ldr.w	r9, [pc, #112]	; 8005f54 <__kernel_rem_pio2+0x32c>
 8005ee4:	eb02 0ac3 	add.w	sl, r2, r3, lsl #3
 8005ee8:	462c      	mov	r4, r5
 8005eea:	f04f 0800 	mov.w	r8, #0
 8005eee:	2c00      	cmp	r4, #0
 8005ef0:	f280 80d4 	bge.w	800609c <__kernel_rem_pio2+0x474>
 8005ef4:	462c      	mov	r4, r5
 8005ef6:	2c00      	cmp	r4, #0
 8005ef8:	f2c0 8102 	blt.w	8006100 <__kernel_rem_pio2+0x4d8>
 8005efc:	4b18      	ldr	r3, [pc, #96]	; (8005f60 <__kernel_rem_pio2+0x338>)
 8005efe:	461e      	mov	r6, r3
 8005f00:	ab70      	add	r3, sp, #448	; 0x1c0
 8005f02:	eb03 08c4 	add.w	r8, r3, r4, lsl #3
 8005f06:	1b2b      	subs	r3, r5, r4
 8005f08:	f04f 0900 	mov.w	r9, #0
 8005f0c:	f04f 0a00 	mov.w	sl, #0
 8005f10:	2700      	movs	r7, #0
 8005f12:	9306      	str	r3, [sp, #24]
 8005f14:	e0e6      	b.n	80060e4 <__kernel_rem_pio2+0x4bc>
 8005f16:	f04f 0b02 	mov.w	fp, #2
 8005f1a:	e756      	b.n	8005dca <__kernel_rem_pio2+0x1a2>
 8005f1c:	f8d8 3000 	ldr.w	r3, [r8]
 8005f20:	bb05      	cbnz	r5, 8005f64 <__kernel_rem_pio2+0x33c>
 8005f22:	b123      	cbz	r3, 8005f2e <__kernel_rem_pio2+0x306>
 8005f24:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8005f28:	f8c8 3000 	str.w	r3, [r8]
 8005f2c:	2301      	movs	r3, #1
 8005f2e:	3201      	adds	r2, #1
 8005f30:	f108 0804 	add.w	r8, r8, #4
 8005f34:	461d      	mov	r5, r3
 8005f36:	e74f      	b.n	8005dd8 <__kernel_rem_pio2+0x1b0>
	...
 8005f44:	3ff00000 	.word	0x3ff00000
 8005f48:	080066e0 	.word	0x080066e0
 8005f4c:	40200000 	.word	0x40200000
 8005f50:	3ff00000 	.word	0x3ff00000
 8005f54:	3e700000 	.word	0x3e700000
 8005f58:	41700000 	.word	0x41700000
 8005f5c:	3fe00000 	.word	0x3fe00000
 8005f60:	080066a0 	.word	0x080066a0
 8005f64:	1acb      	subs	r3, r1, r3
 8005f66:	f8c8 3000 	str.w	r3, [r8]
 8005f6a:	462b      	mov	r3, r5
 8005f6c:	e7df      	b.n	8005f2e <__kernel_rem_pio2+0x306>
 8005f6e:	1e62      	subs	r2, r4, #1
 8005f70:	ab0c      	add	r3, sp, #48	; 0x30
 8005f72:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005f76:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8005f7a:	a90c      	add	r1, sp, #48	; 0x30
 8005f7c:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8005f80:	e738      	b.n	8005df4 <__kernel_rem_pio2+0x1cc>
 8005f82:	1e62      	subs	r2, r4, #1
 8005f84:	ab0c      	add	r3, sp, #48	; 0x30
 8005f86:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005f8a:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8005f8e:	e7f4      	b.n	8005f7a <__kernel_rem_pio2+0x352>
 8005f90:	a90c      	add	r1, sp, #48	; 0x30
 8005f92:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8005f96:	3b01      	subs	r3, #1
 8005f98:	430a      	orrs	r2, r1
 8005f9a:	e788      	b.n	8005eae <__kernel_rem_pio2+0x286>
 8005f9c:	3301      	adds	r3, #1
 8005f9e:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8005fa2:	2900      	cmp	r1, #0
 8005fa4:	d0fa      	beq.n	8005f9c <__kernel_rem_pio2+0x374>
 8005fa6:	9a08      	ldr	r2, [sp, #32]
 8005fa8:	f502 7218 	add.w	r2, r2, #608	; 0x260
 8005fac:	446a      	add	r2, sp
 8005fae:	3a98      	subs	r2, #152	; 0x98
 8005fb0:	9208      	str	r2, [sp, #32]
 8005fb2:	9a06      	ldr	r2, [sp, #24]
 8005fb4:	a920      	add	r1, sp, #128	; 0x80
 8005fb6:	18a2      	adds	r2, r4, r2
 8005fb8:	18e3      	adds	r3, r4, r3
 8005fba:	f104 0801 	add.w	r8, r4, #1
 8005fbe:	eb01 05c2 	add.w	r5, r1, r2, lsl #3
 8005fc2:	9302      	str	r3, [sp, #8]
 8005fc4:	9b02      	ldr	r3, [sp, #8]
 8005fc6:	4543      	cmp	r3, r8
 8005fc8:	da04      	bge.n	8005fd4 <__kernel_rem_pio2+0x3ac>
 8005fca:	461c      	mov	r4, r3
 8005fcc:	e6a2      	b.n	8005d14 <__kernel_rem_pio2+0xec>
 8005fce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005fd0:	2301      	movs	r3, #1
 8005fd2:	e7e4      	b.n	8005f9e <__kernel_rem_pio2+0x376>
 8005fd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005fd6:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8005fda:	f7fa fa73 	bl	80004c4 <__aeabi_i2d>
 8005fde:	e8e5 0102 	strd	r0, r1, [r5], #8
 8005fe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005fe4:	46ab      	mov	fp, r5
 8005fe6:	461c      	mov	r4, r3
 8005fe8:	f04f 0900 	mov.w	r9, #0
 8005fec:	2600      	movs	r6, #0
 8005fee:	2700      	movs	r7, #0
 8005ff0:	9b05      	ldr	r3, [sp, #20]
 8005ff2:	4599      	cmp	r9, r3
 8005ff4:	dd06      	ble.n	8006004 <__kernel_rem_pio2+0x3dc>
 8005ff6:	9b08      	ldr	r3, [sp, #32]
 8005ff8:	e8e3 6702 	strd	r6, r7, [r3], #8
 8005ffc:	f108 0801 	add.w	r8, r8, #1
 8006000:	9308      	str	r3, [sp, #32]
 8006002:	e7df      	b.n	8005fc4 <__kernel_rem_pio2+0x39c>
 8006004:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8006008:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 800600c:	f7fa fac4 	bl	8000598 <__aeabi_dmul>
 8006010:	4602      	mov	r2, r0
 8006012:	460b      	mov	r3, r1
 8006014:	4630      	mov	r0, r6
 8006016:	4639      	mov	r1, r7
 8006018:	f7fa f908 	bl	800022c <__adddf3>
 800601c:	f109 0901 	add.w	r9, r9, #1
 8006020:	4606      	mov	r6, r0
 8006022:	460f      	mov	r7, r1
 8006024:	e7e4      	b.n	8005ff0 <__kernel_rem_pio2+0x3c8>
 8006026:	3d01      	subs	r5, #1
 8006028:	e747      	b.n	8005eba <__kernel_rem_pio2+0x292>
 800602a:	ec47 6b10 	vmov	d0, r6, r7
 800602e:	f1ca 0000 	rsb	r0, sl, #0
 8006032:	f000 f949 	bl	80062c8 <scalbn>
 8006036:	ec57 6b10 	vmov	r6, r7, d0
 800603a:	4ba0      	ldr	r3, [pc, #640]	; (80062bc <__kernel_rem_pio2+0x694>)
 800603c:	ee10 0a10 	vmov	r0, s0
 8006040:	2200      	movs	r2, #0
 8006042:	4639      	mov	r1, r7
 8006044:	f7fa fd2e 	bl	8000aa4 <__aeabi_dcmpge>
 8006048:	b1f8      	cbz	r0, 800608a <__kernel_rem_pio2+0x462>
 800604a:	4b9d      	ldr	r3, [pc, #628]	; (80062c0 <__kernel_rem_pio2+0x698>)
 800604c:	2200      	movs	r2, #0
 800604e:	4630      	mov	r0, r6
 8006050:	4639      	mov	r1, r7
 8006052:	f7fa faa1 	bl	8000598 <__aeabi_dmul>
 8006056:	f7fa fd39 	bl	8000acc <__aeabi_d2iz>
 800605a:	4680      	mov	r8, r0
 800605c:	f7fa fa32 	bl	80004c4 <__aeabi_i2d>
 8006060:	4b96      	ldr	r3, [pc, #600]	; (80062bc <__kernel_rem_pio2+0x694>)
 8006062:	2200      	movs	r2, #0
 8006064:	f7fa fa98 	bl	8000598 <__aeabi_dmul>
 8006068:	460b      	mov	r3, r1
 800606a:	4602      	mov	r2, r0
 800606c:	4639      	mov	r1, r7
 800606e:	4630      	mov	r0, r6
 8006070:	f7fa f8da 	bl	8000228 <__aeabi_dsub>
 8006074:	f7fa fd2a 	bl	8000acc <__aeabi_d2iz>
 8006078:	1c65      	adds	r5, r4, #1
 800607a:	ab0c      	add	r3, sp, #48	; 0x30
 800607c:	f10a 0a18 	add.w	sl, sl, #24
 8006080:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8006084:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 8006088:	e71f      	b.n	8005eca <__kernel_rem_pio2+0x2a2>
 800608a:	4630      	mov	r0, r6
 800608c:	4639      	mov	r1, r7
 800608e:	f7fa fd1d 	bl	8000acc <__aeabi_d2iz>
 8006092:	ab0c      	add	r3, sp, #48	; 0x30
 8006094:	4625      	mov	r5, r4
 8006096:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800609a:	e716      	b.n	8005eca <__kernel_rem_pio2+0x2a2>
 800609c:	ab0c      	add	r3, sp, #48	; 0x30
 800609e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80060a2:	f7fa fa0f 	bl	80004c4 <__aeabi_i2d>
 80060a6:	4632      	mov	r2, r6
 80060a8:	463b      	mov	r3, r7
 80060aa:	f7fa fa75 	bl	8000598 <__aeabi_dmul>
 80060ae:	4642      	mov	r2, r8
 80060b0:	e96a 0102 	strd	r0, r1, [sl, #-8]!
 80060b4:	464b      	mov	r3, r9
 80060b6:	4630      	mov	r0, r6
 80060b8:	4639      	mov	r1, r7
 80060ba:	f7fa fa6d 	bl	8000598 <__aeabi_dmul>
 80060be:	3c01      	subs	r4, #1
 80060c0:	4606      	mov	r6, r0
 80060c2:	460f      	mov	r7, r1
 80060c4:	e713      	b.n	8005eee <__kernel_rem_pio2+0x2c6>
 80060c6:	e8f8 2302 	ldrd	r2, r3, [r8], #8
 80060ca:	e8f6 0102 	ldrd	r0, r1, [r6], #8
 80060ce:	f7fa fa63 	bl	8000598 <__aeabi_dmul>
 80060d2:	4602      	mov	r2, r0
 80060d4:	460b      	mov	r3, r1
 80060d6:	4648      	mov	r0, r9
 80060d8:	4651      	mov	r1, sl
 80060da:	f7fa f8a7 	bl	800022c <__adddf3>
 80060de:	3701      	adds	r7, #1
 80060e0:	4681      	mov	r9, r0
 80060e2:	468a      	mov	sl, r1
 80060e4:	9b00      	ldr	r3, [sp, #0]
 80060e6:	429f      	cmp	r7, r3
 80060e8:	dc02      	bgt.n	80060f0 <__kernel_rem_pio2+0x4c8>
 80060ea:	9b06      	ldr	r3, [sp, #24]
 80060ec:	429f      	cmp	r7, r3
 80060ee:	ddea      	ble.n	80060c6 <__kernel_rem_pio2+0x49e>
 80060f0:	9a06      	ldr	r2, [sp, #24]
 80060f2:	ab48      	add	r3, sp, #288	; 0x120
 80060f4:	eb03 06c2 	add.w	r6, r3, r2, lsl #3
 80060f8:	e9c6 9a00 	strd	r9, sl, [r6]
 80060fc:	3c01      	subs	r4, #1
 80060fe:	e6fa      	b.n	8005ef6 <__kernel_rem_pio2+0x2ce>
 8006100:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8006102:	2b02      	cmp	r3, #2
 8006104:	dc0b      	bgt.n	800611e <__kernel_rem_pio2+0x4f6>
 8006106:	2b00      	cmp	r3, #0
 8006108:	dc39      	bgt.n	800617e <__kernel_rem_pio2+0x556>
 800610a:	d05d      	beq.n	80061c8 <__kernel_rem_pio2+0x5a0>
 800610c:	9b02      	ldr	r3, [sp, #8]
 800610e:	f003 0007 	and.w	r0, r3, #7
 8006112:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 8006116:	ecbd 8b02 	vpop	{d8}
 800611a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800611e:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8006120:	2b03      	cmp	r3, #3
 8006122:	d1f3      	bne.n	800610c <__kernel_rem_pio2+0x4e4>
 8006124:	9b05      	ldr	r3, [sp, #20]
 8006126:	9500      	str	r5, [sp, #0]
 8006128:	f503 7318 	add.w	r3, r3, #608	; 0x260
 800612c:	eb0d 0403 	add.w	r4, sp, r3
 8006130:	f5a4 74a4 	sub.w	r4, r4, #328	; 0x148
 8006134:	46a2      	mov	sl, r4
 8006136:	9b00      	ldr	r3, [sp, #0]
 8006138:	2b00      	cmp	r3, #0
 800613a:	f1aa 0a08 	sub.w	sl, sl, #8
 800613e:	dc69      	bgt.n	8006214 <__kernel_rem_pio2+0x5ec>
 8006140:	46aa      	mov	sl, r5
 8006142:	f1ba 0f01 	cmp.w	sl, #1
 8006146:	f1a4 0408 	sub.w	r4, r4, #8
 800614a:	f300 8083 	bgt.w	8006254 <__kernel_rem_pio2+0x62c>
 800614e:	9c05      	ldr	r4, [sp, #20]
 8006150:	ab48      	add	r3, sp, #288	; 0x120
 8006152:	441c      	add	r4, r3
 8006154:	2000      	movs	r0, #0
 8006156:	2100      	movs	r1, #0
 8006158:	2d01      	cmp	r5, #1
 800615a:	f300 809a 	bgt.w	8006292 <__kernel_rem_pio2+0x66a>
 800615e:	e9dd 7848 	ldrd	r7, r8, [sp, #288]	; 0x120
 8006162:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 8006166:	f1bb 0f00 	cmp.w	fp, #0
 800616a:	f040 8098 	bne.w	800629e <__kernel_rem_pio2+0x676>
 800616e:	9b04      	ldr	r3, [sp, #16]
 8006170:	e9c3 7800 	strd	r7, r8, [r3]
 8006174:	e9c3 5602 	strd	r5, r6, [r3, #8]
 8006178:	e9c3 0104 	strd	r0, r1, [r3, #16]
 800617c:	e7c6      	b.n	800610c <__kernel_rem_pio2+0x4e4>
 800617e:	9e05      	ldr	r6, [sp, #20]
 8006180:	ab48      	add	r3, sp, #288	; 0x120
 8006182:	441e      	add	r6, r3
 8006184:	462c      	mov	r4, r5
 8006186:	2000      	movs	r0, #0
 8006188:	2100      	movs	r1, #0
 800618a:	2c00      	cmp	r4, #0
 800618c:	da33      	bge.n	80061f6 <__kernel_rem_pio2+0x5ce>
 800618e:	f1bb 0f00 	cmp.w	fp, #0
 8006192:	d036      	beq.n	8006202 <__kernel_rem_pio2+0x5da>
 8006194:	4602      	mov	r2, r0
 8006196:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800619a:	9c04      	ldr	r4, [sp, #16]
 800619c:	e9c4 2300 	strd	r2, r3, [r4]
 80061a0:	4602      	mov	r2, r0
 80061a2:	460b      	mov	r3, r1
 80061a4:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 80061a8:	f7fa f83e 	bl	8000228 <__aeabi_dsub>
 80061ac:	ae4a      	add	r6, sp, #296	; 0x128
 80061ae:	2401      	movs	r4, #1
 80061b0:	42a5      	cmp	r5, r4
 80061b2:	da29      	bge.n	8006208 <__kernel_rem_pio2+0x5e0>
 80061b4:	f1bb 0f00 	cmp.w	fp, #0
 80061b8:	d002      	beq.n	80061c0 <__kernel_rem_pio2+0x598>
 80061ba:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80061be:	4619      	mov	r1, r3
 80061c0:	9b04      	ldr	r3, [sp, #16]
 80061c2:	e9c3 0102 	strd	r0, r1, [r3, #8]
 80061c6:	e7a1      	b.n	800610c <__kernel_rem_pio2+0x4e4>
 80061c8:	9c05      	ldr	r4, [sp, #20]
 80061ca:	ab48      	add	r3, sp, #288	; 0x120
 80061cc:	441c      	add	r4, r3
 80061ce:	2000      	movs	r0, #0
 80061d0:	2100      	movs	r1, #0
 80061d2:	2d00      	cmp	r5, #0
 80061d4:	da09      	bge.n	80061ea <__kernel_rem_pio2+0x5c2>
 80061d6:	f1bb 0f00 	cmp.w	fp, #0
 80061da:	d002      	beq.n	80061e2 <__kernel_rem_pio2+0x5ba>
 80061dc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80061e0:	4619      	mov	r1, r3
 80061e2:	9b04      	ldr	r3, [sp, #16]
 80061e4:	e9c3 0100 	strd	r0, r1, [r3]
 80061e8:	e790      	b.n	800610c <__kernel_rem_pio2+0x4e4>
 80061ea:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80061ee:	f7fa f81d 	bl	800022c <__adddf3>
 80061f2:	3d01      	subs	r5, #1
 80061f4:	e7ed      	b.n	80061d2 <__kernel_rem_pio2+0x5aa>
 80061f6:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
 80061fa:	f7fa f817 	bl	800022c <__adddf3>
 80061fe:	3c01      	subs	r4, #1
 8006200:	e7c3      	b.n	800618a <__kernel_rem_pio2+0x562>
 8006202:	4602      	mov	r2, r0
 8006204:	460b      	mov	r3, r1
 8006206:	e7c8      	b.n	800619a <__kernel_rem_pio2+0x572>
 8006208:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 800620c:	f7fa f80e 	bl	800022c <__adddf3>
 8006210:	3401      	adds	r4, #1
 8006212:	e7cd      	b.n	80061b0 <__kernel_rem_pio2+0x588>
 8006214:	e9da 8900 	ldrd	r8, r9, [sl]
 8006218:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 800621c:	9b00      	ldr	r3, [sp, #0]
 800621e:	3b01      	subs	r3, #1
 8006220:	9300      	str	r3, [sp, #0]
 8006222:	4632      	mov	r2, r6
 8006224:	463b      	mov	r3, r7
 8006226:	4640      	mov	r0, r8
 8006228:	4649      	mov	r1, r9
 800622a:	f7f9 ffff 	bl	800022c <__adddf3>
 800622e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8006232:	4602      	mov	r2, r0
 8006234:	460b      	mov	r3, r1
 8006236:	4640      	mov	r0, r8
 8006238:	4649      	mov	r1, r9
 800623a:	f7f9 fff5 	bl	8000228 <__aeabi_dsub>
 800623e:	4632      	mov	r2, r6
 8006240:	463b      	mov	r3, r7
 8006242:	f7f9 fff3 	bl	800022c <__adddf3>
 8006246:	ed9d 7b06 	vldr	d7, [sp, #24]
 800624a:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800624e:	ed8a 7b00 	vstr	d7, [sl]
 8006252:	e770      	b.n	8006136 <__kernel_rem_pio2+0x50e>
 8006254:	e9d4 8900 	ldrd	r8, r9, [r4]
 8006258:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 800625c:	4640      	mov	r0, r8
 800625e:	4632      	mov	r2, r6
 8006260:	463b      	mov	r3, r7
 8006262:	4649      	mov	r1, r9
 8006264:	f7f9 ffe2 	bl	800022c <__adddf3>
 8006268:	e9cd 0100 	strd	r0, r1, [sp]
 800626c:	4602      	mov	r2, r0
 800626e:	460b      	mov	r3, r1
 8006270:	4640      	mov	r0, r8
 8006272:	4649      	mov	r1, r9
 8006274:	f7f9 ffd8 	bl	8000228 <__aeabi_dsub>
 8006278:	4632      	mov	r2, r6
 800627a:	463b      	mov	r3, r7
 800627c:	f7f9 ffd6 	bl	800022c <__adddf3>
 8006280:	ed9d 7b00 	vldr	d7, [sp]
 8006284:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8006288:	ed84 7b00 	vstr	d7, [r4]
 800628c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8006290:	e757      	b.n	8006142 <__kernel_rem_pio2+0x51a>
 8006292:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8006296:	f7f9 ffc9 	bl	800022c <__adddf3>
 800629a:	3d01      	subs	r5, #1
 800629c:	e75c      	b.n	8006158 <__kernel_rem_pio2+0x530>
 800629e:	9b04      	ldr	r3, [sp, #16]
 80062a0:	9a04      	ldr	r2, [sp, #16]
 80062a2:	601f      	str	r7, [r3, #0]
 80062a4:	f108 4400 	add.w	r4, r8, #2147483648	; 0x80000000
 80062a8:	605c      	str	r4, [r3, #4]
 80062aa:	609d      	str	r5, [r3, #8]
 80062ac:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 80062b0:	60d3      	str	r3, [r2, #12]
 80062b2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80062b6:	6110      	str	r0, [r2, #16]
 80062b8:	6153      	str	r3, [r2, #20]
 80062ba:	e727      	b.n	800610c <__kernel_rem_pio2+0x4e4>
 80062bc:	41700000 	.word	0x41700000
 80062c0:	3e700000 	.word	0x3e700000
 80062c4:	00000000 	.word	0x00000000

080062c8 <scalbn>:
 80062c8:	b570      	push	{r4, r5, r6, lr}
 80062ca:	ec55 4b10 	vmov	r4, r5, d0
 80062ce:	f3c5 510a 	ubfx	r1, r5, #20, #11
 80062d2:	4606      	mov	r6, r0
 80062d4:	462b      	mov	r3, r5
 80062d6:	b999      	cbnz	r1, 8006300 <scalbn+0x38>
 80062d8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80062dc:	4323      	orrs	r3, r4
 80062de:	d03f      	beq.n	8006360 <scalbn+0x98>
 80062e0:	4b35      	ldr	r3, [pc, #212]	; (80063b8 <scalbn+0xf0>)
 80062e2:	4629      	mov	r1, r5
 80062e4:	ee10 0a10 	vmov	r0, s0
 80062e8:	2200      	movs	r2, #0
 80062ea:	f7fa f955 	bl	8000598 <__aeabi_dmul>
 80062ee:	4b33      	ldr	r3, [pc, #204]	; (80063bc <scalbn+0xf4>)
 80062f0:	429e      	cmp	r6, r3
 80062f2:	4604      	mov	r4, r0
 80062f4:	460d      	mov	r5, r1
 80062f6:	da10      	bge.n	800631a <scalbn+0x52>
 80062f8:	a327      	add	r3, pc, #156	; (adr r3, 8006398 <scalbn+0xd0>)
 80062fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062fe:	e01f      	b.n	8006340 <scalbn+0x78>
 8006300:	f240 72ff 	movw	r2, #2047	; 0x7ff
 8006304:	4291      	cmp	r1, r2
 8006306:	d10c      	bne.n	8006322 <scalbn+0x5a>
 8006308:	ee10 2a10 	vmov	r2, s0
 800630c:	4620      	mov	r0, r4
 800630e:	4629      	mov	r1, r5
 8006310:	f7f9 ff8c 	bl	800022c <__adddf3>
 8006314:	4604      	mov	r4, r0
 8006316:	460d      	mov	r5, r1
 8006318:	e022      	b.n	8006360 <scalbn+0x98>
 800631a:	460b      	mov	r3, r1
 800631c:	f3c1 510a 	ubfx	r1, r1, #20, #11
 8006320:	3936      	subs	r1, #54	; 0x36
 8006322:	f24c 3250 	movw	r2, #50000	; 0xc350
 8006326:	4296      	cmp	r6, r2
 8006328:	dd0d      	ble.n	8006346 <scalbn+0x7e>
 800632a:	2d00      	cmp	r5, #0
 800632c:	a11c      	add	r1, pc, #112	; (adr r1, 80063a0 <scalbn+0xd8>)
 800632e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006332:	da02      	bge.n	800633a <scalbn+0x72>
 8006334:	a11c      	add	r1, pc, #112	; (adr r1, 80063a8 <scalbn+0xe0>)
 8006336:	e9d1 0100 	ldrd	r0, r1, [r1]
 800633a:	a319      	add	r3, pc, #100	; (adr r3, 80063a0 <scalbn+0xd8>)
 800633c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006340:	f7fa f92a 	bl	8000598 <__aeabi_dmul>
 8006344:	e7e6      	b.n	8006314 <scalbn+0x4c>
 8006346:	1872      	adds	r2, r6, r1
 8006348:	f240 71fe 	movw	r1, #2046	; 0x7fe
 800634c:	428a      	cmp	r2, r1
 800634e:	dcec      	bgt.n	800632a <scalbn+0x62>
 8006350:	2a00      	cmp	r2, #0
 8006352:	dd08      	ble.n	8006366 <scalbn+0x9e>
 8006354:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8006358:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800635c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8006360:	ec45 4b10 	vmov	d0, r4, r5
 8006364:	bd70      	pop	{r4, r5, r6, pc}
 8006366:	f112 0f35 	cmn.w	r2, #53	; 0x35
 800636a:	da08      	bge.n	800637e <scalbn+0xb6>
 800636c:	2d00      	cmp	r5, #0
 800636e:	a10a      	add	r1, pc, #40	; (adr r1, 8006398 <scalbn+0xd0>)
 8006370:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006374:	dac0      	bge.n	80062f8 <scalbn+0x30>
 8006376:	a10e      	add	r1, pc, #56	; (adr r1, 80063b0 <scalbn+0xe8>)
 8006378:	e9d1 0100 	ldrd	r0, r1, [r1]
 800637c:	e7bc      	b.n	80062f8 <scalbn+0x30>
 800637e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8006382:	3236      	adds	r2, #54	; 0x36
 8006384:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8006388:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 800638c:	4620      	mov	r0, r4
 800638e:	4b0c      	ldr	r3, [pc, #48]	; (80063c0 <scalbn+0xf8>)
 8006390:	2200      	movs	r2, #0
 8006392:	e7d5      	b.n	8006340 <scalbn+0x78>
 8006394:	f3af 8000 	nop.w
 8006398:	c2f8f359 	.word	0xc2f8f359
 800639c:	01a56e1f 	.word	0x01a56e1f
 80063a0:	8800759c 	.word	0x8800759c
 80063a4:	7e37e43c 	.word	0x7e37e43c
 80063a8:	8800759c 	.word	0x8800759c
 80063ac:	fe37e43c 	.word	0xfe37e43c
 80063b0:	c2f8f359 	.word	0xc2f8f359
 80063b4:	81a56e1f 	.word	0x81a56e1f
 80063b8:	43500000 	.word	0x43500000
 80063bc:	ffff3cb0 	.word	0xffff3cb0
 80063c0:	3c900000 	.word	0x3c900000
 80063c4:	00000000 	.word	0x00000000

080063c8 <floor>:
 80063c8:	ec51 0b10 	vmov	r0, r1, d0
 80063cc:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80063d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80063d4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
 80063d8:	2e13      	cmp	r6, #19
 80063da:	ee10 5a10 	vmov	r5, s0
 80063de:	ee10 8a10 	vmov	r8, s0
 80063e2:	460c      	mov	r4, r1
 80063e4:	dc31      	bgt.n	800644a <floor+0x82>
 80063e6:	2e00      	cmp	r6, #0
 80063e8:	da14      	bge.n	8006414 <floor+0x4c>
 80063ea:	a333      	add	r3, pc, #204	; (adr r3, 80064b8 <floor+0xf0>)
 80063ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063f0:	f7f9 ff1c 	bl	800022c <__adddf3>
 80063f4:	2200      	movs	r2, #0
 80063f6:	2300      	movs	r3, #0
 80063f8:	f7fa fb5e 	bl	8000ab8 <__aeabi_dcmpgt>
 80063fc:	b138      	cbz	r0, 800640e <floor+0x46>
 80063fe:	2c00      	cmp	r4, #0
 8006400:	da53      	bge.n	80064aa <floor+0xe2>
 8006402:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 8006406:	4325      	orrs	r5, r4
 8006408:	d052      	beq.n	80064b0 <floor+0xe8>
 800640a:	4c2d      	ldr	r4, [pc, #180]	; (80064c0 <floor+0xf8>)
 800640c:	2500      	movs	r5, #0
 800640e:	4621      	mov	r1, r4
 8006410:	4628      	mov	r0, r5
 8006412:	e024      	b.n	800645e <floor+0x96>
 8006414:	4f2b      	ldr	r7, [pc, #172]	; (80064c4 <floor+0xfc>)
 8006416:	4137      	asrs	r7, r6
 8006418:	ea01 0307 	and.w	r3, r1, r7
 800641c:	4303      	orrs	r3, r0
 800641e:	d01e      	beq.n	800645e <floor+0x96>
 8006420:	a325      	add	r3, pc, #148	; (adr r3, 80064b8 <floor+0xf0>)
 8006422:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006426:	f7f9 ff01 	bl	800022c <__adddf3>
 800642a:	2200      	movs	r2, #0
 800642c:	2300      	movs	r3, #0
 800642e:	f7fa fb43 	bl	8000ab8 <__aeabi_dcmpgt>
 8006432:	2800      	cmp	r0, #0
 8006434:	d0eb      	beq.n	800640e <floor+0x46>
 8006436:	2c00      	cmp	r4, #0
 8006438:	bfbe      	ittt	lt
 800643a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 800643e:	4133      	asrlt	r3, r6
 8006440:	18e4      	addlt	r4, r4, r3
 8006442:	ea24 0407 	bic.w	r4, r4, r7
 8006446:	2500      	movs	r5, #0
 8006448:	e7e1      	b.n	800640e <floor+0x46>
 800644a:	2e33      	cmp	r6, #51	; 0x33
 800644c:	dd0b      	ble.n	8006466 <floor+0x9e>
 800644e:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8006452:	d104      	bne.n	800645e <floor+0x96>
 8006454:	ee10 2a10 	vmov	r2, s0
 8006458:	460b      	mov	r3, r1
 800645a:	f7f9 fee7 	bl	800022c <__adddf3>
 800645e:	ec41 0b10 	vmov	d0, r0, r1
 8006462:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006466:	f2a3 4313 	subw	r3, r3, #1043	; 0x413
 800646a:	f04f 37ff 	mov.w	r7, #4294967295
 800646e:	40df      	lsrs	r7, r3
 8006470:	4238      	tst	r0, r7
 8006472:	d0f4      	beq.n	800645e <floor+0x96>
 8006474:	a310      	add	r3, pc, #64	; (adr r3, 80064b8 <floor+0xf0>)
 8006476:	e9d3 2300 	ldrd	r2, r3, [r3]
 800647a:	f7f9 fed7 	bl	800022c <__adddf3>
 800647e:	2200      	movs	r2, #0
 8006480:	2300      	movs	r3, #0
 8006482:	f7fa fb19 	bl	8000ab8 <__aeabi_dcmpgt>
 8006486:	2800      	cmp	r0, #0
 8006488:	d0c1      	beq.n	800640e <floor+0x46>
 800648a:	2c00      	cmp	r4, #0
 800648c:	da0a      	bge.n	80064a4 <floor+0xdc>
 800648e:	2e14      	cmp	r6, #20
 8006490:	d101      	bne.n	8006496 <floor+0xce>
 8006492:	3401      	adds	r4, #1
 8006494:	e006      	b.n	80064a4 <floor+0xdc>
 8006496:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 800649a:	2301      	movs	r3, #1
 800649c:	40b3      	lsls	r3, r6
 800649e:	441d      	add	r5, r3
 80064a0:	45a8      	cmp	r8, r5
 80064a2:	d8f6      	bhi.n	8006492 <floor+0xca>
 80064a4:	ea25 0507 	bic.w	r5, r5, r7
 80064a8:	e7b1      	b.n	800640e <floor+0x46>
 80064aa:	2500      	movs	r5, #0
 80064ac:	462c      	mov	r4, r5
 80064ae:	e7ae      	b.n	800640e <floor+0x46>
 80064b0:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 80064b4:	e7ab      	b.n	800640e <floor+0x46>
 80064b6:	bf00      	nop
 80064b8:	8800759c 	.word	0x8800759c
 80064bc:	7e37e43c 	.word	0x7e37e43c
 80064c0:	bff00000 	.word	0xbff00000
 80064c4:	000fffff 	.word	0x000fffff

080064c8 <_init>:
 80064c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80064ca:	bf00      	nop
 80064cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80064ce:	bc08      	pop	{r3}
 80064d0:	469e      	mov	lr, r3
 80064d2:	4770      	bx	lr

080064d4 <_fini>:
 80064d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80064d6:	bf00      	nop
 80064d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80064da:	bc08      	pop	{r3}
 80064dc:	469e      	mov	lr, r3
 80064de:	4770      	bx	lr
