
SEAG_F.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000470c  080001e0  080001e0  000101e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000050  080048ec  080048ec  000148ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800493c  0800493c  000200b0  2**0
                  CONTENTS
  4 .ARM          00000008  0800493c  0800493c  0001493c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004944  08004944  000200b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004944  08004944  00014944  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004948  08004948  00014948  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000b0  20000000  0800494c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000718  200000b0  080049fc  000200b0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200007c8  080049fc  000207c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200b0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000200e0  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000d3e9  00000000  00000000  00020123  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002cf1  00000000  00000000  0002d50c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000bc0  00000000  00000000  00030200  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000008b1  00000000  00000000  00030dc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00023c30  00000000  00000000  00031671  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00013467  00000000  00000000  000552a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000d0415  00000000  00000000  00068708  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00002f40  00000000  00000000  00138b20  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000073  00000000  00000000  0013ba60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	; (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	; (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	; (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	200000b0 	.word	0x200000b0
 80001fc:	00000000 	.word	0x00000000
 8000200:	080048d4 	.word	0x080048d4

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	; (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	; (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	; (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	200000b4 	.word	0x200000b4
 800021c:	080048d4 	.word	0x080048d4

08000220 <__aeabi_uldivmod>:
 8000220:	b953      	cbnz	r3, 8000238 <__aeabi_uldivmod+0x18>
 8000222:	b94a      	cbnz	r2, 8000238 <__aeabi_uldivmod+0x18>
 8000224:	2900      	cmp	r1, #0
 8000226:	bf08      	it	eq
 8000228:	2800      	cmpeq	r0, #0
 800022a:	bf1c      	itt	ne
 800022c:	f04f 31ff 	movne.w	r1, #4294967295
 8000230:	f04f 30ff 	movne.w	r0, #4294967295
 8000234:	f000 b970 	b.w	8000518 <__aeabi_idiv0>
 8000238:	f1ad 0c08 	sub.w	ip, sp, #8
 800023c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000240:	f000 f806 	bl	8000250 <__udivmoddi4>
 8000244:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000248:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800024c:	b004      	add	sp, #16
 800024e:	4770      	bx	lr

08000250 <__udivmoddi4>:
 8000250:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000254:	9e08      	ldr	r6, [sp, #32]
 8000256:	460d      	mov	r5, r1
 8000258:	4604      	mov	r4, r0
 800025a:	460f      	mov	r7, r1
 800025c:	2b00      	cmp	r3, #0
 800025e:	d14a      	bne.n	80002f6 <__udivmoddi4+0xa6>
 8000260:	428a      	cmp	r2, r1
 8000262:	4694      	mov	ip, r2
 8000264:	d965      	bls.n	8000332 <__udivmoddi4+0xe2>
 8000266:	fab2 f382 	clz	r3, r2
 800026a:	b143      	cbz	r3, 800027e <__udivmoddi4+0x2e>
 800026c:	fa02 fc03 	lsl.w	ip, r2, r3
 8000270:	f1c3 0220 	rsb	r2, r3, #32
 8000274:	409f      	lsls	r7, r3
 8000276:	fa20 f202 	lsr.w	r2, r0, r2
 800027a:	4317      	orrs	r7, r2
 800027c:	409c      	lsls	r4, r3
 800027e:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000282:	fa1f f58c 	uxth.w	r5, ip
 8000286:	fbb7 f1fe 	udiv	r1, r7, lr
 800028a:	0c22      	lsrs	r2, r4, #16
 800028c:	fb0e 7711 	mls	r7, lr, r1, r7
 8000290:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000294:	fb01 f005 	mul.w	r0, r1, r5
 8000298:	4290      	cmp	r0, r2
 800029a:	d90a      	bls.n	80002b2 <__udivmoddi4+0x62>
 800029c:	eb1c 0202 	adds.w	r2, ip, r2
 80002a0:	f101 37ff 	add.w	r7, r1, #4294967295
 80002a4:	f080 811c 	bcs.w	80004e0 <__udivmoddi4+0x290>
 80002a8:	4290      	cmp	r0, r2
 80002aa:	f240 8119 	bls.w	80004e0 <__udivmoddi4+0x290>
 80002ae:	3902      	subs	r1, #2
 80002b0:	4462      	add	r2, ip
 80002b2:	1a12      	subs	r2, r2, r0
 80002b4:	b2a4      	uxth	r4, r4
 80002b6:	fbb2 f0fe 	udiv	r0, r2, lr
 80002ba:	fb0e 2210 	mls	r2, lr, r0, r2
 80002be:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80002c2:	fb00 f505 	mul.w	r5, r0, r5
 80002c6:	42a5      	cmp	r5, r4
 80002c8:	d90a      	bls.n	80002e0 <__udivmoddi4+0x90>
 80002ca:	eb1c 0404 	adds.w	r4, ip, r4
 80002ce:	f100 32ff 	add.w	r2, r0, #4294967295
 80002d2:	f080 8107 	bcs.w	80004e4 <__udivmoddi4+0x294>
 80002d6:	42a5      	cmp	r5, r4
 80002d8:	f240 8104 	bls.w	80004e4 <__udivmoddi4+0x294>
 80002dc:	4464      	add	r4, ip
 80002de:	3802      	subs	r0, #2
 80002e0:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80002e4:	1b64      	subs	r4, r4, r5
 80002e6:	2100      	movs	r1, #0
 80002e8:	b11e      	cbz	r6, 80002f2 <__udivmoddi4+0xa2>
 80002ea:	40dc      	lsrs	r4, r3
 80002ec:	2300      	movs	r3, #0
 80002ee:	e9c6 4300 	strd	r4, r3, [r6]
 80002f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002f6:	428b      	cmp	r3, r1
 80002f8:	d908      	bls.n	800030c <__udivmoddi4+0xbc>
 80002fa:	2e00      	cmp	r6, #0
 80002fc:	f000 80ed 	beq.w	80004da <__udivmoddi4+0x28a>
 8000300:	2100      	movs	r1, #0
 8000302:	e9c6 0500 	strd	r0, r5, [r6]
 8000306:	4608      	mov	r0, r1
 8000308:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800030c:	fab3 f183 	clz	r1, r3
 8000310:	2900      	cmp	r1, #0
 8000312:	d149      	bne.n	80003a8 <__udivmoddi4+0x158>
 8000314:	42ab      	cmp	r3, r5
 8000316:	d302      	bcc.n	800031e <__udivmoddi4+0xce>
 8000318:	4282      	cmp	r2, r0
 800031a:	f200 80f8 	bhi.w	800050e <__udivmoddi4+0x2be>
 800031e:	1a84      	subs	r4, r0, r2
 8000320:	eb65 0203 	sbc.w	r2, r5, r3
 8000324:	2001      	movs	r0, #1
 8000326:	4617      	mov	r7, r2
 8000328:	2e00      	cmp	r6, #0
 800032a:	d0e2      	beq.n	80002f2 <__udivmoddi4+0xa2>
 800032c:	e9c6 4700 	strd	r4, r7, [r6]
 8000330:	e7df      	b.n	80002f2 <__udivmoddi4+0xa2>
 8000332:	b902      	cbnz	r2, 8000336 <__udivmoddi4+0xe6>
 8000334:	deff      	udf	#255	; 0xff
 8000336:	fab2 f382 	clz	r3, r2
 800033a:	2b00      	cmp	r3, #0
 800033c:	f040 8090 	bne.w	8000460 <__udivmoddi4+0x210>
 8000340:	1a8a      	subs	r2, r1, r2
 8000342:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000346:	fa1f fe8c 	uxth.w	lr, ip
 800034a:	2101      	movs	r1, #1
 800034c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000350:	fb07 2015 	mls	r0, r7, r5, r2
 8000354:	0c22      	lsrs	r2, r4, #16
 8000356:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800035a:	fb0e f005 	mul.w	r0, lr, r5
 800035e:	4290      	cmp	r0, r2
 8000360:	d908      	bls.n	8000374 <__udivmoddi4+0x124>
 8000362:	eb1c 0202 	adds.w	r2, ip, r2
 8000366:	f105 38ff 	add.w	r8, r5, #4294967295
 800036a:	d202      	bcs.n	8000372 <__udivmoddi4+0x122>
 800036c:	4290      	cmp	r0, r2
 800036e:	f200 80cb 	bhi.w	8000508 <__udivmoddi4+0x2b8>
 8000372:	4645      	mov	r5, r8
 8000374:	1a12      	subs	r2, r2, r0
 8000376:	b2a4      	uxth	r4, r4
 8000378:	fbb2 f0f7 	udiv	r0, r2, r7
 800037c:	fb07 2210 	mls	r2, r7, r0, r2
 8000380:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000384:	fb0e fe00 	mul.w	lr, lr, r0
 8000388:	45a6      	cmp	lr, r4
 800038a:	d908      	bls.n	800039e <__udivmoddi4+0x14e>
 800038c:	eb1c 0404 	adds.w	r4, ip, r4
 8000390:	f100 32ff 	add.w	r2, r0, #4294967295
 8000394:	d202      	bcs.n	800039c <__udivmoddi4+0x14c>
 8000396:	45a6      	cmp	lr, r4
 8000398:	f200 80bb 	bhi.w	8000512 <__udivmoddi4+0x2c2>
 800039c:	4610      	mov	r0, r2
 800039e:	eba4 040e 	sub.w	r4, r4, lr
 80003a2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80003a6:	e79f      	b.n	80002e8 <__udivmoddi4+0x98>
 80003a8:	f1c1 0720 	rsb	r7, r1, #32
 80003ac:	408b      	lsls	r3, r1
 80003ae:	fa22 fc07 	lsr.w	ip, r2, r7
 80003b2:	ea4c 0c03 	orr.w	ip, ip, r3
 80003b6:	fa05 f401 	lsl.w	r4, r5, r1
 80003ba:	fa20 f307 	lsr.w	r3, r0, r7
 80003be:	40fd      	lsrs	r5, r7
 80003c0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80003c4:	4323      	orrs	r3, r4
 80003c6:	fbb5 f8f9 	udiv	r8, r5, r9
 80003ca:	fa1f fe8c 	uxth.w	lr, ip
 80003ce:	fb09 5518 	mls	r5, r9, r8, r5
 80003d2:	0c1c      	lsrs	r4, r3, #16
 80003d4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80003d8:	fb08 f50e 	mul.w	r5, r8, lr
 80003dc:	42a5      	cmp	r5, r4
 80003de:	fa02 f201 	lsl.w	r2, r2, r1
 80003e2:	fa00 f001 	lsl.w	r0, r0, r1
 80003e6:	d90b      	bls.n	8000400 <__udivmoddi4+0x1b0>
 80003e8:	eb1c 0404 	adds.w	r4, ip, r4
 80003ec:	f108 3aff 	add.w	sl, r8, #4294967295
 80003f0:	f080 8088 	bcs.w	8000504 <__udivmoddi4+0x2b4>
 80003f4:	42a5      	cmp	r5, r4
 80003f6:	f240 8085 	bls.w	8000504 <__udivmoddi4+0x2b4>
 80003fa:	f1a8 0802 	sub.w	r8, r8, #2
 80003fe:	4464      	add	r4, ip
 8000400:	1b64      	subs	r4, r4, r5
 8000402:	b29d      	uxth	r5, r3
 8000404:	fbb4 f3f9 	udiv	r3, r4, r9
 8000408:	fb09 4413 	mls	r4, r9, r3, r4
 800040c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000410:	fb03 fe0e 	mul.w	lr, r3, lr
 8000414:	45a6      	cmp	lr, r4
 8000416:	d908      	bls.n	800042a <__udivmoddi4+0x1da>
 8000418:	eb1c 0404 	adds.w	r4, ip, r4
 800041c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000420:	d26c      	bcs.n	80004fc <__udivmoddi4+0x2ac>
 8000422:	45a6      	cmp	lr, r4
 8000424:	d96a      	bls.n	80004fc <__udivmoddi4+0x2ac>
 8000426:	3b02      	subs	r3, #2
 8000428:	4464      	add	r4, ip
 800042a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800042e:	fba3 9502 	umull	r9, r5, r3, r2
 8000432:	eba4 040e 	sub.w	r4, r4, lr
 8000436:	42ac      	cmp	r4, r5
 8000438:	46c8      	mov	r8, r9
 800043a:	46ae      	mov	lr, r5
 800043c:	d356      	bcc.n	80004ec <__udivmoddi4+0x29c>
 800043e:	d053      	beq.n	80004e8 <__udivmoddi4+0x298>
 8000440:	b156      	cbz	r6, 8000458 <__udivmoddi4+0x208>
 8000442:	ebb0 0208 	subs.w	r2, r0, r8
 8000446:	eb64 040e 	sbc.w	r4, r4, lr
 800044a:	fa04 f707 	lsl.w	r7, r4, r7
 800044e:	40ca      	lsrs	r2, r1
 8000450:	40cc      	lsrs	r4, r1
 8000452:	4317      	orrs	r7, r2
 8000454:	e9c6 7400 	strd	r7, r4, [r6]
 8000458:	4618      	mov	r0, r3
 800045a:	2100      	movs	r1, #0
 800045c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000460:	f1c3 0120 	rsb	r1, r3, #32
 8000464:	fa02 fc03 	lsl.w	ip, r2, r3
 8000468:	fa20 f201 	lsr.w	r2, r0, r1
 800046c:	fa25 f101 	lsr.w	r1, r5, r1
 8000470:	409d      	lsls	r5, r3
 8000472:	432a      	orrs	r2, r5
 8000474:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000478:	fa1f fe8c 	uxth.w	lr, ip
 800047c:	fbb1 f0f7 	udiv	r0, r1, r7
 8000480:	fb07 1510 	mls	r5, r7, r0, r1
 8000484:	0c11      	lsrs	r1, r2, #16
 8000486:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800048a:	fb00 f50e 	mul.w	r5, r0, lr
 800048e:	428d      	cmp	r5, r1
 8000490:	fa04 f403 	lsl.w	r4, r4, r3
 8000494:	d908      	bls.n	80004a8 <__udivmoddi4+0x258>
 8000496:	eb1c 0101 	adds.w	r1, ip, r1
 800049a:	f100 38ff 	add.w	r8, r0, #4294967295
 800049e:	d22f      	bcs.n	8000500 <__udivmoddi4+0x2b0>
 80004a0:	428d      	cmp	r5, r1
 80004a2:	d92d      	bls.n	8000500 <__udivmoddi4+0x2b0>
 80004a4:	3802      	subs	r0, #2
 80004a6:	4461      	add	r1, ip
 80004a8:	1b49      	subs	r1, r1, r5
 80004aa:	b292      	uxth	r2, r2
 80004ac:	fbb1 f5f7 	udiv	r5, r1, r7
 80004b0:	fb07 1115 	mls	r1, r7, r5, r1
 80004b4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80004b8:	fb05 f10e 	mul.w	r1, r5, lr
 80004bc:	4291      	cmp	r1, r2
 80004be:	d908      	bls.n	80004d2 <__udivmoddi4+0x282>
 80004c0:	eb1c 0202 	adds.w	r2, ip, r2
 80004c4:	f105 38ff 	add.w	r8, r5, #4294967295
 80004c8:	d216      	bcs.n	80004f8 <__udivmoddi4+0x2a8>
 80004ca:	4291      	cmp	r1, r2
 80004cc:	d914      	bls.n	80004f8 <__udivmoddi4+0x2a8>
 80004ce:	3d02      	subs	r5, #2
 80004d0:	4462      	add	r2, ip
 80004d2:	1a52      	subs	r2, r2, r1
 80004d4:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 80004d8:	e738      	b.n	800034c <__udivmoddi4+0xfc>
 80004da:	4631      	mov	r1, r6
 80004dc:	4630      	mov	r0, r6
 80004de:	e708      	b.n	80002f2 <__udivmoddi4+0xa2>
 80004e0:	4639      	mov	r1, r7
 80004e2:	e6e6      	b.n	80002b2 <__udivmoddi4+0x62>
 80004e4:	4610      	mov	r0, r2
 80004e6:	e6fb      	b.n	80002e0 <__udivmoddi4+0x90>
 80004e8:	4548      	cmp	r0, r9
 80004ea:	d2a9      	bcs.n	8000440 <__udivmoddi4+0x1f0>
 80004ec:	ebb9 0802 	subs.w	r8, r9, r2
 80004f0:	eb65 0e0c 	sbc.w	lr, r5, ip
 80004f4:	3b01      	subs	r3, #1
 80004f6:	e7a3      	b.n	8000440 <__udivmoddi4+0x1f0>
 80004f8:	4645      	mov	r5, r8
 80004fa:	e7ea      	b.n	80004d2 <__udivmoddi4+0x282>
 80004fc:	462b      	mov	r3, r5
 80004fe:	e794      	b.n	800042a <__udivmoddi4+0x1da>
 8000500:	4640      	mov	r0, r8
 8000502:	e7d1      	b.n	80004a8 <__udivmoddi4+0x258>
 8000504:	46d0      	mov	r8, sl
 8000506:	e77b      	b.n	8000400 <__udivmoddi4+0x1b0>
 8000508:	3d02      	subs	r5, #2
 800050a:	4462      	add	r2, ip
 800050c:	e732      	b.n	8000374 <__udivmoddi4+0x124>
 800050e:	4608      	mov	r0, r1
 8000510:	e70a      	b.n	8000328 <__udivmoddi4+0xd8>
 8000512:	4464      	add	r4, ip
 8000514:	3802      	subs	r0, #2
 8000516:	e742      	b.n	800039e <__udivmoddi4+0x14e>

08000518 <__aeabi_idiv0>:
 8000518:	4770      	bx	lr
 800051a:	bf00      	nop

0800051c <CodecInit>:
 800051c:	b580      	push	{r7, lr}
 800051e:	b082      	sub	sp, #8
 8000520:	af00      	add	r7, sp, #0
 8000522:	6078      	str	r0, [r7, #4]
 8000524:	6878      	ldr	r0, [r7, #4]
 8000526:	f000 f88c 	bl	8000642 <ResetCodec>
 800052a:	2019      	movs	r0, #25
 800052c:	f001 fa7e 	bl	8001a2c <HAL_Delay>
 8000530:	f240 1279 	movw	r2, #377	; 0x179
 8000534:	2102      	movs	r1, #2
 8000536:	6878      	ldr	r0, [r7, #4]
 8000538:	f000 f890 	bl	800065c <WriteCodecRegister>
 800053c:	f240 1217 	movw	r2, #279	; 0x117
 8000540:	2100      	movs	r1, #0
 8000542:	6878      	ldr	r0, [r7, #4]
 8000544:	f000 f88a 	bl	800065c <WriteCodecRegister>
 8000548:	f44f 7280 	mov.w	r2, #256	; 0x100
 800054c:	2101      	movs	r1, #1
 800054e:	6878      	ldr	r0, [r7, #4]
 8000550:	f000 f884 	bl	800065c <WriteCodecRegister>
 8000554:	2250      	movs	r2, #80	; 0x50
 8000556:	212d      	movs	r1, #45	; 0x2d
 8000558:	6878      	ldr	r0, [r7, #4]
 800055a:	f000 f87f 	bl	800065c <WriteCodecRegister>
 800055e:	22fc      	movs	r2, #252	; 0xfc
 8000560:	2119      	movs	r1, #25
 8000562:	6878      	ldr	r0, [r7, #4]
 8000564:	f000 f87a 	bl	800065c <WriteCodecRegister>
 8000568:	f44f 72e8 	mov.w	r2, #464	; 0x1d0
 800056c:	211a      	movs	r1, #26
 800056e:	6878      	ldr	r0, [r7, #4]
 8000570:	f000 f874 	bl	800065c <WriteCodecRegister>
 8000574:	223c      	movs	r2, #60	; 0x3c
 8000576:	212f      	movs	r1, #47	; 0x2f
 8000578:	6878      	ldr	r0, [r7, #4]
 800057a:	f000 f86f 	bl	800065c <WriteCodecRegister>
 800057e:	220a      	movs	r2, #10
 8000580:	2107      	movs	r1, #7
 8000582:	6878      	ldr	r0, [r7, #4]
 8000584:	f000 f86a 	bl	800065c <WriteCodecRegister>
 8000588:	f44f 7284 	mov.w	r2, #264	; 0x108
 800058c:	2120      	movs	r1, #32
 800058e:	6878      	ldr	r0, [r7, #4]
 8000590:	f000 f864 	bl	800065c <WriteCodecRegister>
 8000594:	2200      	movs	r2, #0
 8000596:	2121      	movs	r1, #33	; 0x21
 8000598:	6878      	ldr	r0, [r7, #4]
 800059a:	f000 f85f 	bl	800065c <WriteCodecRegister>
 800059e:	2200      	movs	r2, #0
 80005a0:	212e      	movs	r1, #46	; 0x2e
 80005a2:	6878      	ldr	r0, [r7, #4]
 80005a4:	f000 f85a 	bl	800065c <WriteCodecRegister>
 80005a8:	f44f 72a8 	mov.w	r2, #336	; 0x150
 80005ac:	2122      	movs	r1, #34	; 0x22
 80005ae:	6878      	ldr	r0, [r7, #4]
 80005b0:	f000 f854 	bl	800065c <WriteCodecRegister>
 80005b4:	2250      	movs	r2, #80	; 0x50
 80005b6:	2125      	movs	r1, #37	; 0x25
 80005b8:	6878      	ldr	r0, [r7, #4]
 80005ba:	f000 f84f 	bl	800065c <WriteCodecRegister>
 80005be:	f240 1279 	movw	r2, #377	; 0x179
 80005c2:	2128      	movs	r1, #40	; 0x28
 80005c4:	6878      	ldr	r0, [r7, #4]
 80005c6:	f000 f849 	bl	800065c <WriteCodecRegister>
 80005ca:	f240 1279 	movw	r2, #377	; 0x179
 80005ce:	2129      	movs	r1, #41	; 0x29
 80005d0:	6878      	ldr	r0, [r7, #4]
 80005d2:	f000 f843 	bl	800065c <WriteCodecRegister>
 80005d6:	2200      	movs	r2, #0
 80005d8:	2134      	movs	r1, #52	; 0x34
 80005da:	6878      	ldr	r0, [r7, #4]
 80005dc:	f000 f83e 	bl	800065c <WriteCodecRegister>
 80005e0:	2200      	movs	r2, #0
 80005e2:	2104      	movs	r1, #4
 80005e4:	6878      	ldr	r0, [r7, #4]
 80005e6:	f000 f839 	bl	800065c <WriteCodecRegister>
 80005ea:	f44f 72e0 	mov.w	r2, #448	; 0x1c0
 80005ee:	2108      	movs	r1, #8
 80005f0:	6878      	ldr	r0, [r7, #4]
 80005f2:	f000 f833 	bl	800065c <WriteCodecRegister>
 80005f6:	2201      	movs	r2, #1
 80005f8:	2105      	movs	r1, #5
 80005fa:	6878      	ldr	r0, [r7, #4]
 80005fc:	f000 f82e 	bl	800065c <WriteCodecRegister>
 8000600:	2200      	movs	r2, #0
 8000602:	2109      	movs	r1, #9
 8000604:	6878      	ldr	r0, [r7, #4]
 8000606:	f000 f829 	bl	800065c <WriteCodecRegister>
 800060a:	f240 12c3 	movw	r2, #451	; 0x1c3
 800060e:	2115      	movs	r1, #21
 8000610:	6878      	ldr	r0, [r7, #4]
 8000612:	f000 f823 	bl	800065c <WriteCodecRegister>
 8000616:	f240 12c3 	movw	r2, #451	; 0x1c3
 800061a:	2116      	movs	r1, #22
 800061c:	6878      	ldr	r0, [r7, #4]
 800061e:	f000 f81d 	bl	800065c <WriteCodecRegister>
 8000622:	f240 12ff 	movw	r2, #511	; 0x1ff
 8000626:	210a      	movs	r1, #10
 8000628:	6878      	ldr	r0, [r7, #4]
 800062a:	f000 f817 	bl	800065c <WriteCodecRegister>
 800062e:	f240 12ff 	movw	r2, #511	; 0x1ff
 8000632:	210b      	movs	r1, #11
 8000634:	6878      	ldr	r0, [r7, #4]
 8000636:	f000 f811 	bl	800065c <WriteCodecRegister>
 800063a:	bf00      	nop
 800063c:	3708      	adds	r7, #8
 800063e:	46bd      	mov	sp, r7
 8000640:	bd80      	pop	{r7, pc}

08000642 <ResetCodec>:
 8000642:	b580      	push	{r7, lr}
 8000644:	b082      	sub	sp, #8
 8000646:	af00      	add	r7, sp, #0
 8000648:	6078      	str	r0, [r7, #4]
 800064a:	22ff      	movs	r2, #255	; 0xff
 800064c:	210f      	movs	r1, #15
 800064e:	6878      	ldr	r0, [r7, #4]
 8000650:	f000 f804 	bl	800065c <WriteCodecRegister>
 8000654:	bf00      	nop
 8000656:	3708      	adds	r7, #8
 8000658:	46bd      	mov	sp, r7
 800065a:	bd80      	pop	{r7, pc}

0800065c <WriteCodecRegister>:
 800065c:	b580      	push	{r7, lr}
 800065e:	b088      	sub	sp, #32
 8000660:	af04      	add	r7, sp, #16
 8000662:	6078      	str	r0, [r7, #4]
 8000664:	460b      	mov	r3, r1
 8000666:	70fb      	strb	r3, [r7, #3]
 8000668:	4613      	mov	r3, r2
 800066a:	803b      	strh	r3, [r7, #0]
 800066c:	78fb      	ldrb	r3, [r7, #3]
 800066e:	005b      	lsls	r3, r3, #1
 8000670:	b2da      	uxtb	r2, r3
 8000672:	883b      	ldrh	r3, [r7, #0]
 8000674:	0a1b      	lsrs	r3, r3, #8
 8000676:	b29b      	uxth	r3, r3
 8000678:	b2db      	uxtb	r3, r3
 800067a:	4313      	orrs	r3, r2
 800067c:	73fb      	strb	r3, [r7, #15]
 800067e:	883b      	ldrh	r3, [r7, #0]
 8000680:	b2db      	uxtb	r3, r3
 8000682:	73bb      	strb	r3, [r7, #14]
 8000684:	2334      	movs	r3, #52	; 0x34
 8000686:	b299      	uxth	r1, r3
 8000688:	7bfb      	ldrb	r3, [r7, #15]
 800068a:	b29a      	uxth	r2, r3
 800068c:	f04f 33ff 	mov.w	r3, #4294967295
 8000690:	9302      	str	r3, [sp, #8]
 8000692:	2301      	movs	r3, #1
 8000694:	9301      	str	r3, [sp, #4]
 8000696:	f107 030e 	add.w	r3, r7, #14
 800069a:	9300      	str	r3, [sp, #0]
 800069c:	2301      	movs	r3, #1
 800069e:	6878      	ldr	r0, [r7, #4]
 80006a0:	f002 f8e8 	bl	8002874 <HAL_I2C_Mem_Write>
 80006a4:	bf00      	nop
 80006a6:	3710      	adds	r7, #16
 80006a8:	46bd      	mov	sp, r7
 80006aa:	bd80      	pop	{r7, pc}

080006ac <InitDSP>:
// --- Filters ---

Filters* filters;
CombFeedforward* echo;

void InitDSP(uint32_t sampleFrequency, I2S_HandleTypeDef *hi2s1, I2S_HandleTypeDef *hi2s2){
 80006ac:	b590      	push	{r4, r7, lr}
 80006ae:	b08b      	sub	sp, #44	; 0x2c
 80006b0:	af00      	add	r7, sp, #0
 80006b2:	60f8      	str	r0, [r7, #12]
 80006b4:	60b9      	str	r1, [r7, #8]
 80006b6:	607a      	str	r2, [r7, #4]


	//Init filters
	filters = initializeFilters(sampleFrequency);
 80006b8:	68f8      	ldr	r0, [r7, #12]
 80006ba:	f000 f9f3 	bl	8000aa4 <initializeFilters>
 80006be:	4603      	mov	r3, r0
 80006c0:	4a12      	ldr	r2, [pc, #72]	; (800070c <InitDSP+0x60>)
 80006c2:	6013      	str	r3, [r2, #0]

	float delayCombS[4] = {0.0297, 0.0371, 0.411, 0.437};
 80006c4:	4b12      	ldr	r3, [pc, #72]	; (8000710 <InitDSP+0x64>)
 80006c6:	f107 0418 	add.w	r4, r7, #24
 80006ca:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80006cc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	float delayAllS[2] = {0.005, 0.0017};
 80006d0:	4a10      	ldr	r2, [pc, #64]	; (8000714 <InitDSP+0x68>)
 80006d2:	f107 0310 	add.w	r3, r7, #16
 80006d6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80006da:	e883 0003 	stmia.w	r3, {r0, r1}
	echo = initializeCombFeedforward(sampleFrequency, 0.001);
 80006de:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 8000718 <InitDSP+0x6c>
 80006e2:	68f8      	ldr	r0, [r7, #12]
 80006e4:	f000 f956 	bl	8000994 <initializeCombFeedforward>
 80006e8:	4603      	mov	r3, r0
 80006ea:	4a0c      	ldr	r2, [pc, #48]	; (800071c <InitDSP+0x70>)
 80006ec:	6013      	str	r3, [r2, #0]

	//Init I²S
	HAL_I2S_Receive_DMA(hi2s2, (uint16_t*)&inputData[0], BUFFER_SIZE/2);
 80006ee:	2240      	movs	r2, #64	; 0x40
 80006f0:	490b      	ldr	r1, [pc, #44]	; (8000720 <InitDSP+0x74>)
 80006f2:	6878      	ldr	r0, [r7, #4]
 80006f4:	f002 fe3e 	bl	8003374 <HAL_I2S_Receive_DMA>
	HAL_I2S_Transmit_DMA(hi2s1, (uint16_t*)&outputData[0], BUFFER_SIZE/2);
 80006f8:	2240      	movs	r2, #64	; 0x40
 80006fa:	490a      	ldr	r1, [pc, #40]	; (8000724 <InitDSP+0x78>)
 80006fc:	68b8      	ldr	r0, [r7, #8]
 80006fe:	f002 fd91 	bl	8003224 <HAL_I2S_Transmit_DMA>

}
 8000702:	bf00      	nop
 8000704:	372c      	adds	r7, #44	; 0x2c
 8000706:	46bd      	mov	sp, r7
 8000708:	bd90      	pop	{r4, r7, pc}
 800070a:	bf00      	nop
 800070c:	200004d0 	.word	0x200004d0
 8000710:	080048ec 	.word	0x080048ec
 8000714:	080048fc 	.word	0x080048fc
 8000718:	3a83126f 	.word	0x3a83126f
 800071c:	200004d4 	.word	0x200004d4
 8000720:	200000cc 	.word	0x200000cc
 8000724:	200002cc 	.word	0x200002cc

08000728 <DSPUpdate>:


void DSPUpdate(){
 8000728:	b590      	push	{r4, r7, lr}
 800072a:	b083      	sub	sp, #12
 800072c:	af00      	add	r7, sp, #0

	if(dataReadyFlag){
 800072e:	4b19      	ldr	r3, [pc, #100]	; (8000794 <DSPUpdate+0x6c>)
 8000730:	781b      	ldrb	r3, [r3, #0]
 8000732:	2b00      	cmp	r3, #0
 8000734:	d02a      	beq.n	800078c <DSPUpdate+0x64>

		for(uint8_t i = 0; i < BUFFER_SIZE/2; i++){
 8000736:	2300      	movs	r3, #0
 8000738:	71fb      	strb	r3, [r7, #7]
 800073a:	e021      	b.n	8000780 <DSPUpdate+0x58>

			// Process left channel
			if(i % 2 == 0){
 800073c:	79fb      	ldrb	r3, [r7, #7]
 800073e:	f003 0301 	and.w	r3, r3, #1
 8000742:	b2db      	uxtb	r3, r3
 8000744:	2b00      	cmp	r3, #0
 8000746:	d111      	bne.n	800076c <DSPUpdate+0x44>
				*(outputBufPtr+i) = combFeedforwardAppendSample(echo, *(inputBufPtr+i));
 8000748:	4b13      	ldr	r3, [pc, #76]	; (8000798 <DSPUpdate+0x70>)
 800074a:	6818      	ldr	r0, [r3, #0]
 800074c:	4b13      	ldr	r3, [pc, #76]	; (800079c <DSPUpdate+0x74>)
 800074e:	681a      	ldr	r2, [r3, #0]
 8000750:	79fb      	ldrb	r3, [r7, #7]
 8000752:	009b      	lsls	r3, r3, #2
 8000754:	4413      	add	r3, r2
 8000756:	6819      	ldr	r1, [r3, #0]
 8000758:	4b11      	ldr	r3, [pc, #68]	; (80007a0 <DSPUpdate+0x78>)
 800075a:	681a      	ldr	r2, [r3, #0]
 800075c:	79fb      	ldrb	r3, [r7, #7]
 800075e:	009b      	lsls	r3, r3, #2
 8000760:	18d4      	adds	r4, r2, r3
 8000762:	f000 f941 	bl	80009e8 <combFeedforwardAppendSample>
 8000766:	4603      	mov	r3, r0
 8000768:	6023      	str	r3, [r4, #0]
 800076a:	e006      	b.n	800077a <DSPUpdate+0x52>
			}else{
				*(outputBufPtr+i) = 0;
 800076c:	4b0c      	ldr	r3, [pc, #48]	; (80007a0 <DSPUpdate+0x78>)
 800076e:	681a      	ldr	r2, [r3, #0]
 8000770:	79fb      	ldrb	r3, [r7, #7]
 8000772:	009b      	lsls	r3, r3, #2
 8000774:	4413      	add	r3, r2
 8000776:	2200      	movs	r2, #0
 8000778:	601a      	str	r2, [r3, #0]
		for(uint8_t i = 0; i < BUFFER_SIZE/2; i++){
 800077a:	79fb      	ldrb	r3, [r7, #7]
 800077c:	3301      	adds	r3, #1
 800077e:	71fb      	strb	r3, [r7, #7]
 8000780:	79fb      	ldrb	r3, [r7, #7]
 8000782:	2b3f      	cmp	r3, #63	; 0x3f
 8000784:	d9da      	bls.n	800073c <DSPUpdate+0x14>
			}

		}


		dataReadyFlag = 0;
 8000786:	4b03      	ldr	r3, [pc, #12]	; (8000794 <DSPUpdate+0x6c>)
 8000788:	2200      	movs	r2, #0
 800078a:	701a      	strb	r2, [r3, #0]
	}

}
 800078c:	bf00      	nop
 800078e:	370c      	adds	r7, #12
 8000790:	46bd      	mov	sp, r7
 8000792:	bd90      	pop	{r4, r7, pc}
 8000794:	200004cc 	.word	0x200004cc
 8000798:	200004d4 	.word	0x200004d4
 800079c:	20000000 	.word	0x20000000
 80007a0:	20000004 	.word	0x20000004

080007a4 <GetEnabledFilters>:
	}else{
		filters->enabledFilters &= 0 << filterIndex;
	}
}

uint8_t GetEnabledFilters(){
 80007a4:	b480      	push	{r7}
 80007a6:	af00      	add	r7, sp, #0
	return filters->enabledFilters;
 80007a8:	4b03      	ldr	r3, [pc, #12]	; (80007b8 <GetEnabledFilters+0x14>)
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	781b      	ldrb	r3, [r3, #0]
}
 80007ae:	4618      	mov	r0, r3
 80007b0:	46bd      	mov	sp, r7
 80007b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007b6:	4770      	bx	lr
 80007b8:	200004d0 	.word	0x200004d0

080007bc <HAL_I2S_RxHalfCpltCallback>:


void HAL_I2S_RxHalfCpltCallback(I2S_HandleTypeDef *hi2s){
 80007bc:	b480      	push	{r7}
 80007be:	b083      	sub	sp, #12
 80007c0:	af00      	add	r7, sp, #0
 80007c2:	6078      	str	r0, [r7, #4]

	inputBufPtr = &inputData[0];
 80007c4:	4b07      	ldr	r3, [pc, #28]	; (80007e4 <HAL_I2S_RxHalfCpltCallback+0x28>)
 80007c6:	4a08      	ldr	r2, [pc, #32]	; (80007e8 <HAL_I2S_RxHalfCpltCallback+0x2c>)
 80007c8:	601a      	str	r2, [r3, #0]
	outputBufPtr = &outputData[0];
 80007ca:	4b08      	ldr	r3, [pc, #32]	; (80007ec <HAL_I2S_RxHalfCpltCallback+0x30>)
 80007cc:	4a08      	ldr	r2, [pc, #32]	; (80007f0 <HAL_I2S_RxHalfCpltCallback+0x34>)
 80007ce:	601a      	str	r2, [r3, #0]

	dataReadyFlag = 1;
 80007d0:	4b08      	ldr	r3, [pc, #32]	; (80007f4 <HAL_I2S_RxHalfCpltCallback+0x38>)
 80007d2:	2201      	movs	r2, #1
 80007d4:	701a      	strb	r2, [r3, #0]

}
 80007d6:	bf00      	nop
 80007d8:	370c      	adds	r7, #12
 80007da:	46bd      	mov	sp, r7
 80007dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e0:	4770      	bx	lr
 80007e2:	bf00      	nop
 80007e4:	20000000 	.word	0x20000000
 80007e8:	200000cc 	.word	0x200000cc
 80007ec:	20000004 	.word	0x20000004
 80007f0:	200002cc 	.word	0x200002cc
 80007f4:	200004cc 	.word	0x200004cc

080007f8 <HAL_I2S_RxCpltCallback>:

void HAL_I2S_RxCpltCallback(I2S_HandleTypeDef *hi2s){
 80007f8:	b480      	push	{r7}
 80007fa:	b083      	sub	sp, #12
 80007fc:	af00      	add	r7, sp, #0
 80007fe:	6078      	str	r0, [r7, #4]

	inputBufPtr = &inputData[BUFFER_SIZE/2];
 8000800:	4b07      	ldr	r3, [pc, #28]	; (8000820 <HAL_I2S_RxCpltCallback+0x28>)
 8000802:	4a08      	ldr	r2, [pc, #32]	; (8000824 <HAL_I2S_RxCpltCallback+0x2c>)
 8000804:	601a      	str	r2, [r3, #0]
	outputBufPtr = &outputData[BUFFER_SIZE/2];
 8000806:	4b08      	ldr	r3, [pc, #32]	; (8000828 <HAL_I2S_RxCpltCallback+0x30>)
 8000808:	4a08      	ldr	r2, [pc, #32]	; (800082c <HAL_I2S_RxCpltCallback+0x34>)
 800080a:	601a      	str	r2, [r3, #0]

	dataReadyFlag = 1;
 800080c:	4b08      	ldr	r3, [pc, #32]	; (8000830 <HAL_I2S_RxCpltCallback+0x38>)
 800080e:	2201      	movs	r2, #1
 8000810:	701a      	strb	r2, [r3, #0]

}
 8000812:	bf00      	nop
 8000814:	370c      	adds	r7, #12
 8000816:	46bd      	mov	sp, r7
 8000818:	f85d 7b04 	ldr.w	r7, [sp], #4
 800081c:	4770      	bx	lr
 800081e:	bf00      	nop
 8000820:	20000000 	.word	0x20000000
 8000824:	200001cc 	.word	0x200001cc
 8000828:	20000004 	.word	0x20000004
 800082c:	200003cc 	.word	0x200003cc
 8000830:	200004cc 	.word	0x200004cc

08000834 <initializeAllPass>:

#include "AllPass.h"

AllPass* initializeAllPass(uint32_t sampleRate, float delayS, float b0, float am){
 8000834:	b580      	push	{r7, lr}
 8000836:	b088      	sub	sp, #32
 8000838:	af00      	add	r7, sp, #0
 800083a:	60f8      	str	r0, [r7, #12]
 800083c:	ed87 0a02 	vstr	s0, [r7, #8]
 8000840:	edc7 0a01 	vstr	s1, [r7, #4]
 8000844:	ed87 1a00 	vstr	s2, [r7]

    AllPass* allPass = malloc(sizeof(AllPass));
 8000848:	2008      	movs	r0, #8
 800084a:	f003 ff4b 	bl	80046e4 <malloc>
 800084e:	4603      	mov	r3, r0
 8000850:	61fb      	str	r3, [r7, #28]

    CombFeedforward *combFeedforward = initializeCombFeedforward(sampleRate, delayS);
 8000852:	ed97 0a02 	vldr	s0, [r7, #8]
 8000856:	68f8      	ldr	r0, [r7, #12]
 8000858:	f000 f89c 	bl	8000994 <initializeCombFeedforward>
 800085c:	61b8      	str	r0, [r7, #24]
    CombFeedback *combFeedback = initializeCombFeedback(sampleRate, delayS, b0, am);
 800085e:	ed97 1a00 	vldr	s2, [r7]
 8000862:	edd7 0a01 	vldr	s1, [r7, #4]
 8000866:	ed97 0a02 	vldr	s0, [r7, #8]
 800086a:	68f8      	ldr	r0, [r7, #12]
 800086c:	f000 f824 	bl	80008b8 <initializeCombFeedback>
 8000870:	6178      	str	r0, [r7, #20]

    allPass->combFeedforward = combFeedforward;
 8000872:	69fb      	ldr	r3, [r7, #28]
 8000874:	69ba      	ldr	r2, [r7, #24]
 8000876:	601a      	str	r2, [r3, #0]
    allPass->combFeedback = combFeedback;
 8000878:	69fb      	ldr	r3, [r7, #28]
 800087a:	697a      	ldr	r2, [r7, #20]
 800087c:	605a      	str	r2, [r3, #4]

    return allPass;
 800087e:	69fb      	ldr	r3, [r7, #28]

}
 8000880:	4618      	mov	r0, r3
 8000882:	3720      	adds	r7, #32
 8000884:	46bd      	mov	sp, r7
 8000886:	bd80      	pop	{r7, pc}

08000888 <allPassAppendSample>:

SampleType  allPassAppendSample(AllPass* filter, SampleType  newSample){
 8000888:	b580      	push	{r7, lr}
 800088a:	b084      	sub	sp, #16
 800088c:	af00      	add	r7, sp, #0
 800088e:	6078      	str	r0, [r7, #4]
 8000890:	6039      	str	r1, [r7, #0]

	SampleType feedForwardOutput = combFeedforwardAppendSample(filter->combFeedforward, newSample);
 8000892:	687b      	ldr	r3, [r7, #4]
 8000894:	681b      	ldr	r3, [r3, #0]
 8000896:	6839      	ldr	r1, [r7, #0]
 8000898:	4618      	mov	r0, r3
 800089a:	f000 f8a5 	bl	80009e8 <combFeedforwardAppendSample>
 800089e:	60f8      	str	r0, [r7, #12]

	SampleType output = combFeedbackAppendSample(filter->combFeedback, feedForwardOutput);
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	685b      	ldr	r3, [r3, #4]
 80008a4:	68f9      	ldr	r1, [r7, #12]
 80008a6:	4618      	mov	r0, r3
 80008a8:	f000 f83d 	bl	8000926 <combFeedbackAppendSample>
 80008ac:	60b8      	str	r0, [r7, #8]

    return output;
 80008ae:	68bb      	ldr	r3, [r7, #8]

}
 80008b0:	4618      	mov	r0, r3
 80008b2:	3710      	adds	r7, #16
 80008b4:	46bd      	mov	sp, r7
 80008b6:	bd80      	pop	{r7, pc}

080008b8 <initializeCombFeedback>:

#include "CombFeedback.h"

CombFeedback* initializeCombFeedback(uint32_t sampleRate, float delayS, float verzwakking, float am){
 80008b8:	b580      	push	{r7, lr}
 80008ba:	b086      	sub	sp, #24
 80008bc:	af00      	add	r7, sp, #0
 80008be:	60f8      	str	r0, [r7, #12]
 80008c0:	ed87 0a02 	vstr	s0, [r7, #8]
 80008c4:	edc7 0a01 	vstr	s1, [r7, #4]
 80008c8:	ed87 1a00 	vstr	s2, [r7]

    CombFeedback *filter = malloc(sizeof(CombFeedback));
 80008cc:	2014      	movs	r0, #20
 80008ce:	f003 ff09 	bl	80046e4 <malloc>
 80008d2:	4603      	mov	r3, r0
 80008d4:	617b      	str	r3, [r7, #20]

    filter->M = delayS*sampleRate;
 80008d6:	68fb      	ldr	r3, [r7, #12]
 80008d8:	ee07 3a90 	vmov	s15, r3
 80008dc:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80008e0:	edd7 7a02 	vldr	s15, [r7, #8]
 80008e4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80008e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80008ec:	ee17 2a90 	vmov	r2, s15
 80008f0:	697b      	ldr	r3, [r7, #20]
 80008f2:	601a      	str	r2, [r3, #0]
    filter->bufferSize = filter->M;
 80008f4:	697b      	ldr	r3, [r7, #20]
 80008f6:	681a      	ldr	r2, [r3, #0]
 80008f8:	697b      	ldr	r3, [r7, #20]
 80008fa:	605a      	str	r2, [r3, #4]
    filter->b0 = verzwakking;
 80008fc:	697b      	ldr	r3, [r7, #20]
 80008fe:	687a      	ldr	r2, [r7, #4]
 8000900:	60da      	str	r2, [r3, #12]
    filter->am = am;
 8000902:	697b      	ldr	r3, [r7, #20]
 8000904:	683a      	ldr	r2, [r7, #0]
 8000906:	611a      	str	r2, [r3, #16]
    filter->outputSamples = calloc(filter->M, sizeof(SampleType));
 8000908:	697b      	ldr	r3, [r7, #20]
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	2104      	movs	r1, #4
 800090e:	4618      	mov	r0, r3
 8000910:	f003 feca 	bl	80046a8 <calloc>
 8000914:	4603      	mov	r3, r0
 8000916:	461a      	mov	r2, r3
 8000918:	697b      	ldr	r3, [r7, #20]
 800091a:	609a      	str	r2, [r3, #8]

    return filter;
 800091c:	697b      	ldr	r3, [r7, #20]

}
 800091e:	4618      	mov	r0, r3
 8000920:	3718      	adds	r7, #24
 8000922:	46bd      	mov	sp, r7
 8000924:	bd80      	pop	{r7, pc}

08000926 <combFeedbackAppendSample>:

SampleType combFeedbackAppendSample(CombFeedback *filter, SampleType newSample){
 8000926:	b580      	push	{r7, lr}
 8000928:	b084      	sub	sp, #16
 800092a:	af00      	add	r7, sp, #0
 800092c:	6078      	str	r0, [r7, #4]
 800092e:	6039      	str	r1, [r7, #0]

    //static const float b0 = 0.5;
    //static const float am = 0.8;


	SampleType output = (filter->b0)*newSample - (filter->am)*filter->outputSamples[filter->M-1]; // M - 1 see struct def for explanation
 8000930:	687b      	ldr	r3, [r7, #4]
 8000932:	ed93 7a03 	vldr	s14, [r3, #12]
 8000936:	683b      	ldr	r3, [r7, #0]
 8000938:	ee07 3a90 	vmov	s15, r3
 800093c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000940:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000944:	687b      	ldr	r3, [r7, #4]
 8000946:	edd3 6a04 	vldr	s13, [r3, #16]
 800094a:	687b      	ldr	r3, [r7, #4]
 800094c:	689a      	ldr	r2, [r3, #8]
 800094e:	687b      	ldr	r3, [r7, #4]
 8000950:	681b      	ldr	r3, [r3, #0]
 8000952:	4619      	mov	r1, r3
 8000954:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
 8000958:	440b      	add	r3, r1
 800095a:	009b      	lsls	r3, r3, #2
 800095c:	4413      	add	r3, r2
 800095e:	681b      	ldr	r3, [r3, #0]
 8000960:	ee07 3a90 	vmov	s15, r3
 8000964:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000968:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800096c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000970:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000974:	ee17 3a90 	vmov	r3, s15
 8000978:	60fb      	str	r3, [r7, #12]

    shiftBuffer(filter->outputSamples, filter->bufferSize, output);
 800097a:	687b      	ldr	r3, [r7, #4]
 800097c:	6898      	ldr	r0, [r3, #8]
 800097e:	687b      	ldr	r3, [r7, #4]
 8000980:	685b      	ldr	r3, [r3, #4]
 8000982:	68fa      	ldr	r2, [r7, #12]
 8000984:	4619      	mov	r1, r3
 8000986:	f000 f867 	bl	8000a58 <shiftBuffer>

    return output;
 800098a:	68fb      	ldr	r3, [r7, #12]

}
 800098c:	4618      	mov	r0, r3
 800098e:	3710      	adds	r7, #16
 8000990:	46bd      	mov	sp, r7
 8000992:	bd80      	pop	{r7, pc}

08000994 <initializeCombFeedforward>:

#include "CombFeedforward.h"
#include <math.h>

CombFeedforward* initializeCombFeedforward(uint32_t sampleRate, float delayS){
 8000994:	b580      	push	{r7, lr}
 8000996:	b084      	sub	sp, #16
 8000998:	af00      	add	r7, sp, #0
 800099a:	6078      	str	r0, [r7, #4]
 800099c:	ed87 0a00 	vstr	s0, [r7]

    CombFeedforward *filter = malloc(sizeof(CombFeedforward));
 80009a0:	2008      	movs	r0, #8
 80009a2:	f003 fe9f 	bl	80046e4 <malloc>
 80009a6:	4603      	mov	r3, r0
 80009a8:	60fb      	str	r3, [r7, #12]

    filter->M = delayS*sampleRate;
 80009aa:	687b      	ldr	r3, [r7, #4]
 80009ac:	ee07 3a90 	vmov	s15, r3
 80009b0:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80009b4:	edd7 7a00 	vldr	s15, [r7]
 80009b8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80009bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80009c0:	ee17 2a90 	vmov	r2, s15
 80009c4:	68fb      	ldr	r3, [r7, #12]
 80009c6:	601a      	str	r2, [r3, #0]
    filter->inputSamples = calloc(filter->M, sizeof(SampleType));
 80009c8:	68fb      	ldr	r3, [r7, #12]
 80009ca:	681b      	ldr	r3, [r3, #0]
 80009cc:	2104      	movs	r1, #4
 80009ce:	4618      	mov	r0, r3
 80009d0:	f003 fe6a 	bl	80046a8 <calloc>
 80009d4:	4603      	mov	r3, r0
 80009d6:	461a      	mov	r2, r3
 80009d8:	68fb      	ldr	r3, [r7, #12]
 80009da:	605a      	str	r2, [r3, #4]

    return filter;
 80009dc:	68fb      	ldr	r3, [r7, #12]

}
 80009de:	4618      	mov	r0, r3
 80009e0:	3710      	adds	r7, #16
 80009e2:	46bd      	mov	sp, r7
 80009e4:	bd80      	pop	{r7, pc}
	...

080009e8 <combFeedforwardAppendSample>:

SampleType combFeedforwardAppendSample(CombFeedforward *filter, SampleType newSample){
 80009e8:	b480      	push	{r7}
 80009ea:	b085      	sub	sp, #20
 80009ec:	af00      	add	r7, sp, #0
 80009ee:	6078      	str	r0, [r7, #4]
 80009f0:	6039      	str	r1, [r7, #0]

    static const float b0 = 1.0f;
    static const float bm = 1-b0;


    SampleType output = 0;
 80009f2:	2300      	movs	r3, #0
 80009f4:	60fb      	str	r3, [r7, #12]
    output = (SampleType)( (b0*newSample + bm*filter->inputSamples[filter->M-1]) ); // M - 1 see struct def for explanation
 80009f6:	683b      	ldr	r3, [r7, #0]
 80009f8:	ee07 3a90 	vmov	s15, r3
 80009fc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000a00:	4b13      	ldr	r3, [pc, #76]	; (8000a50 <combFeedforwardAppendSample+0x68>)
 8000a02:	edd3 7a00 	vldr	s15, [r3]
 8000a06:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000a0a:	687b      	ldr	r3, [r7, #4]
 8000a0c:	685a      	ldr	r2, [r3, #4]
 8000a0e:	687b      	ldr	r3, [r7, #4]
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	4619      	mov	r1, r3
 8000a14:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
 8000a18:	440b      	add	r3, r1
 8000a1a:	009b      	lsls	r3, r3, #2
 8000a1c:	4413      	add	r3, r2
 8000a1e:	681b      	ldr	r3, [r3, #0]
 8000a20:	ee07 3a90 	vmov	s15, r3
 8000a24:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000a28:	4b0a      	ldr	r3, [pc, #40]	; (8000a54 <combFeedforwardAppendSample+0x6c>)
 8000a2a:	edd3 7a00 	vldr	s15, [r3]
 8000a2e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000a32:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000a36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000a3a:	ee17 3a90 	vmov	r3, s15
 8000a3e:	60fb      	str	r3, [r7, #12]


    //shiftBuffer(filter->inputSamples, filter->M, newSample);


    return output;
 8000a40:	68fb      	ldr	r3, [r7, #12]

}
 8000a42:	4618      	mov	r0, r3
 8000a44:	3714      	adds	r7, #20
 8000a46:	46bd      	mov	sp, r7
 8000a48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a4c:	4770      	bx	lr
 8000a4e:	bf00      	nop
 8000a50:	0800491c 	.word	0x0800491c
 8000a54:	08004920 	.word	0x08004920

08000a58 <shiftBuffer>:

#include "FilterUtility.h"

void shiftBuffer(SampleType *buffer, uint32_t bufferSize, SampleType newValue){
 8000a58:	b480      	push	{r7}
 8000a5a:	b087      	sub	sp, #28
 8000a5c:	af00      	add	r7, sp, #0
 8000a5e:	60f8      	str	r0, [r7, #12]
 8000a60:	60b9      	str	r1, [r7, #8]
 8000a62:	607a      	str	r2, [r7, #4]

    for(uint32_t i = bufferSize-1; i > 0; i--){
 8000a64:	68bb      	ldr	r3, [r7, #8]
 8000a66:	3b01      	subs	r3, #1
 8000a68:	617b      	str	r3, [r7, #20]
 8000a6a:	e00f      	b.n	8000a8c <shiftBuffer+0x34>
        buffer[i] = buffer[i-1];
 8000a6c:	697a      	ldr	r2, [r7, #20]
 8000a6e:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
 8000a72:	4413      	add	r3, r2
 8000a74:	009b      	lsls	r3, r3, #2
 8000a76:	68fa      	ldr	r2, [r7, #12]
 8000a78:	441a      	add	r2, r3
 8000a7a:	697b      	ldr	r3, [r7, #20]
 8000a7c:	009b      	lsls	r3, r3, #2
 8000a7e:	68f9      	ldr	r1, [r7, #12]
 8000a80:	440b      	add	r3, r1
 8000a82:	6812      	ldr	r2, [r2, #0]
 8000a84:	601a      	str	r2, [r3, #0]
    for(uint32_t i = bufferSize-1; i > 0; i--){
 8000a86:	697b      	ldr	r3, [r7, #20]
 8000a88:	3b01      	subs	r3, #1
 8000a8a:	617b      	str	r3, [r7, #20]
 8000a8c:	697b      	ldr	r3, [r7, #20]
 8000a8e:	2b00      	cmp	r3, #0
 8000a90:	d1ec      	bne.n	8000a6c <shiftBuffer+0x14>
    }

    buffer[0] = newValue;
 8000a92:	68fb      	ldr	r3, [r7, #12]
 8000a94:	687a      	ldr	r2, [r7, #4]
 8000a96:	601a      	str	r2, [r3, #0]

}
 8000a98:	bf00      	nop
 8000a9a:	371c      	adds	r7, #28
 8000a9c:	46bd      	mov	sp, r7
 8000a9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aa2:	4770      	bx	lr

08000aa4 <initializeFilters>:
 *  Created on: May 13, 2024
 *      Author: Joran
 */
#include "Filters.h"

Filters* initializeFilters(uint32_t sampleRate){
 8000aa4:	b590      	push	{r4, r7, lr}
 8000aa6:	b08d      	sub	sp, #52	; 0x34
 8000aa8:	af02      	add	r7, sp, #8
 8000aaa:	6078      	str	r0, [r7, #4]

	Filters* filters = malloc(sizeof(Filters));
 8000aac:	2024      	movs	r0, #36	; 0x24
 8000aae:	f003 fe19 	bl	80046e4 <malloc>
 8000ab2:	4603      	mov	r3, r0
 8000ab4:	627b      	str	r3, [r7, #36]	; 0x24

    filters->enabledFilters = 0x01;
 8000ab6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000ab8:	2201      	movs	r2, #1
 8000aba:	701a      	strb	r2, [r3, #0]

    float delayCombS[4] = {0.0297, 0.0371, 0.411, 0.437};
 8000abc:	4b11      	ldr	r3, [pc, #68]	; (8000b04 <initializeFilters+0x60>)
 8000abe:	f107 0410 	add.w	r4, r7, #16
 8000ac2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000ac4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    float delayAllS[2] = {0.005, 0.0017};
 8000ac8:	4a0f      	ldr	r2, [pc, #60]	; (8000b08 <initializeFilters+0x64>)
 8000aca:	f107 0308 	add.w	r3, r7, #8
 8000ace:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000ad2:	e883 0003 	stmia.w	r3, {r0, r1}
	Reverb* reverb = initializeReverb(sampleRate, 4, delayCombS, 2, delayAllS);
 8000ad6:	f107 0210 	add.w	r2, r7, #16
 8000ada:	f107 0308 	add.w	r3, r7, #8
 8000ade:	9300      	str	r3, [sp, #0]
 8000ae0:	2302      	movs	r3, #2
 8000ae2:	2104      	movs	r1, #4
 8000ae4:	6878      	ldr	r0, [r7, #4]
 8000ae6:	f000 f813 	bl	8000b10 <initializeReverb>
 8000aea:	6238      	str	r0, [r7, #32]

    filters->filterStructs[0] = reverb;
 8000aec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000aee:	6a3a      	ldr	r2, [r7, #32]
 8000af0:	605a      	str	r2, [r3, #4]
    filters->filterMethods[0] = reverbAppendSample;
 8000af2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000af4:	4a05      	ldr	r2, [pc, #20]	; (8000b0c <initializeFilters+0x68>)
 8000af6:	615a      	str	r2, [r3, #20]

    return filters;
 8000af8:	6a7b      	ldr	r3, [r7, #36]	; 0x24

}
 8000afa:	4618      	mov	r0, r3
 8000afc:	372c      	adds	r7, #44	; 0x2c
 8000afe:	46bd      	mov	sp, r7
 8000b00:	bd90      	pop	{r4, r7, pc}
 8000b02:	bf00      	nop
 8000b04:	08004904 	.word	0x08004904
 8000b08:	08004914 	.word	0x08004914
 8000b0c:	08000bed 	.word	0x08000bed

08000b10 <initializeReverb>:

#include "Reverb.h"

//Order delayS smallest to largest
Reverb* initializeReverb(uint32_t sampleRate, uint8_t amountOfCombFilters, float *delayCombS, uint8_t amountOfAllPassFilters, float *delayAllS){
 8000b10:	b590      	push	{r4, r7, lr}
 8000b12:	b089      	sub	sp, #36	; 0x24
 8000b14:	af00      	add	r7, sp, #0
 8000b16:	60f8      	str	r0, [r7, #12]
 8000b18:	607a      	str	r2, [r7, #4]
 8000b1a:	461a      	mov	r2, r3
 8000b1c:	460b      	mov	r3, r1
 8000b1e:	72fb      	strb	r3, [r7, #11]
 8000b20:	4613      	mov	r3, r2
 8000b22:	72bb      	strb	r3, [r7, #10]

    Reverb *reverb = malloc(sizeof(Reverb));
 8000b24:	2010      	movs	r0, #16
 8000b26:	f003 fddd 	bl	80046e4 <malloc>
 8000b2a:	4603      	mov	r3, r0
 8000b2c:	617b      	str	r3, [r7, #20]


    //Comb
    reverb->amountOfCombFilters = amountOfCombFilters;
 8000b2e:	7afa      	ldrb	r2, [r7, #11]
 8000b30:	697b      	ldr	r3, [r7, #20]
 8000b32:	601a      	str	r2, [r3, #0]

    reverb->combFilters = malloc(reverb->amountOfCombFilters*sizeof(CombFeedforward));
 8000b34:	697b      	ldr	r3, [r7, #20]
 8000b36:	681b      	ldr	r3, [r3, #0]
 8000b38:	00db      	lsls	r3, r3, #3
 8000b3a:	4618      	mov	r0, r3
 8000b3c:	f003 fdd2 	bl	80046e4 <malloc>
 8000b40:	4603      	mov	r3, r0
 8000b42:	461a      	mov	r2, r3
 8000b44:	697b      	ldr	r3, [r7, #20]
 8000b46:	605a      	str	r2, [r3, #4]

    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 8000b48:	2300      	movs	r3, #0
 8000b4a:	61fb      	str	r3, [r7, #28]
 8000b4c:	e014      	b.n	8000b78 <initializeReverb+0x68>
        reverb->combFilters[i] = initializeCombFeedforward(sampleRate, delayCombS[i]);
 8000b4e:	69fb      	ldr	r3, [r7, #28]
 8000b50:	009b      	lsls	r3, r3, #2
 8000b52:	687a      	ldr	r2, [r7, #4]
 8000b54:	4413      	add	r3, r2
 8000b56:	edd3 7a00 	vldr	s15, [r3]
 8000b5a:	697b      	ldr	r3, [r7, #20]
 8000b5c:	685a      	ldr	r2, [r3, #4]
 8000b5e:	69fb      	ldr	r3, [r7, #28]
 8000b60:	009b      	lsls	r3, r3, #2
 8000b62:	18d4      	adds	r4, r2, r3
 8000b64:	eeb0 0a67 	vmov.f32	s0, s15
 8000b68:	68f8      	ldr	r0, [r7, #12]
 8000b6a:	f7ff ff13 	bl	8000994 <initializeCombFeedforward>
 8000b6e:	4603      	mov	r3, r0
 8000b70:	6023      	str	r3, [r4, #0]
    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 8000b72:	69fb      	ldr	r3, [r7, #28]
 8000b74:	3301      	adds	r3, #1
 8000b76:	61fb      	str	r3, [r7, #28]
 8000b78:	697b      	ldr	r3, [r7, #20]
 8000b7a:	681b      	ldr	r3, [r3, #0]
 8000b7c:	69fa      	ldr	r2, [r7, #28]
 8000b7e:	429a      	cmp	r2, r3
 8000b80:	dbe5      	blt.n	8000b4e <initializeReverb+0x3e>
    }
    
    
    //AllPass
    reverb->amountOfAllPassFilters = amountOfAllPassFilters;
 8000b82:	7aba      	ldrb	r2, [r7, #10]
 8000b84:	697b      	ldr	r3, [r7, #20]
 8000b86:	609a      	str	r2, [r3, #8]
    reverb->allPassFilters = malloc(reverb->amountOfAllPassFilters*sizeof(AllPass));
 8000b88:	697b      	ldr	r3, [r7, #20]
 8000b8a:	689b      	ldr	r3, [r3, #8]
 8000b8c:	00db      	lsls	r3, r3, #3
 8000b8e:	4618      	mov	r0, r3
 8000b90:	f003 fda8 	bl	80046e4 <malloc>
 8000b94:	4603      	mov	r3, r0
 8000b96:	461a      	mov	r2, r3
 8000b98:	697b      	ldr	r3, [r7, #20]
 8000b9a:	60da      	str	r2, [r3, #12]

    for(int i = 0; i < reverb->amountOfAllPassFilters; i++){
 8000b9c:	2300      	movs	r3, #0
 8000b9e:	61bb      	str	r3, [r7, #24]
 8000ba0:	e018      	b.n	8000bd4 <initializeReverb+0xc4>
        reverb->allPassFilters[i] = initializeAllPass(sampleRate, delayAllS[i], 1, 0.8);
 8000ba2:	69bb      	ldr	r3, [r7, #24]
 8000ba4:	009b      	lsls	r3, r3, #2
 8000ba6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8000ba8:	4413      	add	r3, r2
 8000baa:	edd3 7a00 	vldr	s15, [r3]
 8000bae:	697b      	ldr	r3, [r7, #20]
 8000bb0:	68da      	ldr	r2, [r3, #12]
 8000bb2:	69bb      	ldr	r3, [r7, #24]
 8000bb4:	009b      	lsls	r3, r3, #2
 8000bb6:	18d4      	adds	r4, r2, r3
 8000bb8:	ed9f 1a0b 	vldr	s2, [pc, #44]	; 8000be8 <initializeReverb+0xd8>
 8000bbc:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8000bc0:	eeb0 0a67 	vmov.f32	s0, s15
 8000bc4:	68f8      	ldr	r0, [r7, #12]
 8000bc6:	f7ff fe35 	bl	8000834 <initializeAllPass>
 8000bca:	4603      	mov	r3, r0
 8000bcc:	6023      	str	r3, [r4, #0]
    for(int i = 0; i < reverb->amountOfAllPassFilters; i++){
 8000bce:	69bb      	ldr	r3, [r7, #24]
 8000bd0:	3301      	adds	r3, #1
 8000bd2:	61bb      	str	r3, [r7, #24]
 8000bd4:	697b      	ldr	r3, [r7, #20]
 8000bd6:	689b      	ldr	r3, [r3, #8]
 8000bd8:	69ba      	ldr	r2, [r7, #24]
 8000bda:	429a      	cmp	r2, r3
 8000bdc:	dbe1      	blt.n	8000ba2 <initializeReverb+0x92>
    }

    return reverb;
 8000bde:	697b      	ldr	r3, [r7, #20]

}
 8000be0:	4618      	mov	r0, r3
 8000be2:	3724      	adds	r7, #36	; 0x24
 8000be4:	46bd      	mov	sp, r7
 8000be6:	bd90      	pop	{r4, r7, pc}
 8000be8:	3f4ccccd 	.word	0x3f4ccccd

08000bec <reverbAppendSample>:

SampleType reverbAppendSample(Reverb* reverb, SampleType  newSample){
 8000bec:	b580      	push	{r7, lr}
 8000bee:	b086      	sub	sp, #24
 8000bf0:	af00      	add	r7, sp, #0
 8000bf2:	6078      	str	r0, [r7, #4]
 8000bf4:	6039      	str	r1, [r7, #0]

	SampleType  combSumOutput = 0;
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	617b      	str	r3, [r7, #20]

    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 8000bfa:	2300      	movs	r3, #0
 8000bfc:	613b      	str	r3, [r7, #16]
 8000bfe:	e010      	b.n	8000c22 <reverbAppendSample+0x36>
        combSumOutput += combFeedforwardAppendSample(reverb->combFilters[i], newSample);
 8000c00:	687b      	ldr	r3, [r7, #4]
 8000c02:	685a      	ldr	r2, [r3, #4]
 8000c04:	693b      	ldr	r3, [r7, #16]
 8000c06:	009b      	lsls	r3, r3, #2
 8000c08:	4413      	add	r3, r2
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	6839      	ldr	r1, [r7, #0]
 8000c0e:	4618      	mov	r0, r3
 8000c10:	f7ff feea 	bl	80009e8 <combFeedforwardAppendSample>
 8000c14:	4602      	mov	r2, r0
 8000c16:	697b      	ldr	r3, [r7, #20]
 8000c18:	4413      	add	r3, r2
 8000c1a:	617b      	str	r3, [r7, #20]
    for(int i = 0; i < reverb->amountOfCombFilters; i++){
 8000c1c:	693b      	ldr	r3, [r7, #16]
 8000c1e:	3301      	adds	r3, #1
 8000c20:	613b      	str	r3, [r7, #16]
 8000c22:	687b      	ldr	r3, [r7, #4]
 8000c24:	681b      	ldr	r3, [r3, #0]
 8000c26:	693a      	ldr	r2, [r7, #16]
 8000c28:	429a      	cmp	r2, r3
 8000c2a:	dbe9      	blt.n	8000c00 <reverbAppendSample+0x14>
    }


    SampleType  previousAllPassOutput = combSumOutput;
 8000c2c:	697b      	ldr	r3, [r7, #20]
 8000c2e:	60fb      	str	r3, [r7, #12]

    for (int i = 0; i < reverb->amountOfAllPassFilters; i++){
 8000c30:	2300      	movs	r3, #0
 8000c32:	60bb      	str	r3, [r7, #8]
 8000c34:	e00d      	b.n	8000c52 <reverbAppendSample+0x66>
        previousAllPassOutput = allPassAppendSample(reverb->allPassFilters[i], previousAllPassOutput);
 8000c36:	687b      	ldr	r3, [r7, #4]
 8000c38:	68da      	ldr	r2, [r3, #12]
 8000c3a:	68bb      	ldr	r3, [r7, #8]
 8000c3c:	009b      	lsls	r3, r3, #2
 8000c3e:	4413      	add	r3, r2
 8000c40:	681b      	ldr	r3, [r3, #0]
 8000c42:	68f9      	ldr	r1, [r7, #12]
 8000c44:	4618      	mov	r0, r3
 8000c46:	f7ff fe1f 	bl	8000888 <allPassAppendSample>
 8000c4a:	60f8      	str	r0, [r7, #12]
    for (int i = 0; i < reverb->amountOfAllPassFilters; i++){
 8000c4c:	68bb      	ldr	r3, [r7, #8]
 8000c4e:	3301      	adds	r3, #1
 8000c50:	60bb      	str	r3, [r7, #8]
 8000c52:	687b      	ldr	r3, [r7, #4]
 8000c54:	689b      	ldr	r3, [r3, #8]
 8000c56:	68ba      	ldr	r2, [r7, #8]
 8000c58:	429a      	cmp	r2, r3
 8000c5a:	dbec      	blt.n	8000c36 <reverbAppendSample+0x4a>
    }
    
    return previousAllPassOutput;
 8000c5c:	68fb      	ldr	r3, [r7, #12]

}
 8000c5e:	4618      	mov	r0, r3
 8000c60:	3718      	adds	r7, #24
 8000c62:	46bd      	mov	sp, r7
 8000c64:	bd80      	pop	{r7, pc}
	...

08000c68 <InitIO>:
// 1, SelectingValue -> Disabled
// 2, Disabled -> SelectingFilter
// 3, SelectingFilter -> SelectingValue
uint8_t switchedStateFlag;

void InitIO(){
 8000c68:	b580      	push	{r7, lr}
 8000c6a:	af00      	add	r7, sp, #0
	LoadValueIntoShiftRegister(&shiftRegFilterSelect, GetEnabledFilters());
 8000c6c:	f7ff fd9a 	bl	80007a4 <GetEnabledFilters>
 8000c70:	4603      	mov	r3, r0
 8000c72:	4619      	mov	r1, r3
 8000c74:	4803      	ldr	r0, [pc, #12]	; (8000c84 <InitIO+0x1c>)
 8000c76:	f000 f97d 	bl	8000f74 <LoadValueIntoShiftRegister>
	ResetShiftRegister(&shiftRegLedbar);
 8000c7a:	4803      	ldr	r0, [pc, #12]	; (8000c88 <InitIO+0x20>)
 8000c7c:	f000 f96e 	bl	8000f5c <ResetShiftRegister>
}
 8000c80:	bf00      	nop
 8000c82:	bd80      	pop	{r7, pc}
 8000c84:	20000008 	.word	0x20000008
 8000c88:	20000020 	.word	0x20000020

08000c8c <HandleSelectingFilter>:

void HandleSelectingFilter(){
 8000c8c:	b580      	push	{r7, lr}
 8000c8e:	af00      	add	r7, sp, #0

	selectedFilter = (uint16_t)(rotaryEncoder.currentPos/4) % AMOUNT_OF_FILTERS;
 8000c90:	4b0a      	ldr	r3, [pc, #40]	; (8000cbc <HandleSelectingFilter+0x30>)
 8000c92:	781b      	ldrb	r3, [r3, #0]
 8000c94:	089b      	lsrs	r3, r3, #2
 8000c96:	b2db      	uxtb	r3, r3
 8000c98:	f003 0303 	and.w	r3, r3, #3
 8000c9c:	b2da      	uxtb	r2, r3
 8000c9e:	4b08      	ldr	r3, [pc, #32]	; (8000cc0 <HandleSelectingFilter+0x34>)
 8000ca0:	701a      	strb	r2, [r3, #0]
	LoadValueIntoShiftRegister(&shiftRegFilterSelect, 1 << selectedFilter);
 8000ca2:	4b07      	ldr	r3, [pc, #28]	; (8000cc0 <HandleSelectingFilter+0x34>)
 8000ca4:	781b      	ldrb	r3, [r3, #0]
 8000ca6:	461a      	mov	r2, r3
 8000ca8:	2301      	movs	r3, #1
 8000caa:	4093      	lsls	r3, r2
 8000cac:	b2db      	uxtb	r3, r3
 8000cae:	4619      	mov	r1, r3
 8000cb0:	4804      	ldr	r0, [pc, #16]	; (8000cc4 <HandleSelectingFilter+0x38>)
 8000cb2:	f000 f95f 	bl	8000f74 <LoadValueIntoShiftRegister>

}
 8000cb6:	bf00      	nop
 8000cb8:	bd80      	pop	{r7, pc}
 8000cba:	bf00      	nop
 8000cbc:	20000038 	.word	0x20000038
 8000cc0:	200004d9 	.word	0x200004d9
 8000cc4:	20000008 	.word	0x20000008

08000cc8 <HandleSelectingValue>:

void HandleSelectingValue(){
 8000cc8:	b580      	push	{r7, lr}
 8000cca:	b082      	sub	sp, #8
 8000ccc:	af00      	add	r7, sp, #0

	uint8_t led_bar = (rotaryEncoder.currentPos/4);
 8000cce:	4b0a      	ldr	r3, [pc, #40]	; (8000cf8 <HandleSelectingValue+0x30>)
 8000cd0:	781b      	ldrb	r3, [r3, #0]
 8000cd2:	089b      	lsrs	r3, r3, #2
 8000cd4:	71fb      	strb	r3, [r7, #7]
	uint8_t ledbar_array = (1 << led_bar) - 1;
 8000cd6:	79fb      	ldrb	r3, [r7, #7]
 8000cd8:	2201      	movs	r2, #1
 8000cda:	fa02 f303 	lsl.w	r3, r2, r3
 8000cde:	b2db      	uxtb	r3, r3
 8000ce0:	3b01      	subs	r3, #1
 8000ce2:	71bb      	strb	r3, [r7, #6]

	LoadValueIntoShiftRegister(&shiftRegLedbar, ledbar_array);
 8000ce4:	79bb      	ldrb	r3, [r7, #6]
 8000ce6:	4619      	mov	r1, r3
 8000ce8:	4804      	ldr	r0, [pc, #16]	; (8000cfc <HandleSelectingValue+0x34>)
 8000cea:	f000 f943 	bl	8000f74 <LoadValueIntoShiftRegister>

}
 8000cee:	bf00      	nop
 8000cf0:	3708      	adds	r7, #8
 8000cf2:	46bd      	mov	sp, r7
 8000cf4:	bd80      	pop	{r7, pc}
 8000cf6:	bf00      	nop
 8000cf8:	20000038 	.word	0x20000038
 8000cfc:	20000020 	.word	0x20000020

08000d00 <ButtonInterrupt>:

void ButtonInterrupt(uint32_t time){
 8000d00:	b480      	push	{r7}
 8000d02:	b083      	sub	sp, #12
 8000d04:	af00      	add	r7, sp, #0
 8000d06:	6078      	str	r0, [r7, #4]

	IOState = (IOState + 1)%3;
 8000d08:	4b0e      	ldr	r3, [pc, #56]	; (8000d44 <ButtonInterrupt+0x44>)
 8000d0a:	781b      	ldrb	r3, [r3, #0]
 8000d0c:	1c5a      	adds	r2, r3, #1
 8000d0e:	4b0e      	ldr	r3, [pc, #56]	; (8000d48 <ButtonInterrupt+0x48>)
 8000d10:	fb83 3102 	smull	r3, r1, r3, r2
 8000d14:	17d3      	asrs	r3, r2, #31
 8000d16:	1ac9      	subs	r1, r1, r3
 8000d18:	460b      	mov	r3, r1
 8000d1a:	005b      	lsls	r3, r3, #1
 8000d1c:	440b      	add	r3, r1
 8000d1e:	1ad1      	subs	r1, r2, r3
 8000d20:	b2ca      	uxtb	r2, r1
 8000d22:	4b08      	ldr	r3, [pc, #32]	; (8000d44 <ButtonInterrupt+0x44>)
 8000d24:	701a      	strb	r2, [r3, #0]

	rotaryEncoder.currentPos = 0;
 8000d26:	4b09      	ldr	r3, [pc, #36]	; (8000d4c <ButtonInterrupt+0x4c>)
 8000d28:	2200      	movs	r2, #0
 8000d2a:	701a      	strb	r2, [r3, #0]

	switchedStateFlag = IOState + 1;
 8000d2c:	4b05      	ldr	r3, [pc, #20]	; (8000d44 <ButtonInterrupt+0x44>)
 8000d2e:	781b      	ldrb	r3, [r3, #0]
 8000d30:	3301      	adds	r3, #1
 8000d32:	b2da      	uxtb	r2, r3
 8000d34:	4b06      	ldr	r3, [pc, #24]	; (8000d50 <ButtonInterrupt+0x50>)
 8000d36:	701a      	strb	r2, [r3, #0]


}
 8000d38:	bf00      	nop
 8000d3a:	370c      	adds	r7, #12
 8000d3c:	46bd      	mov	sp, r7
 8000d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d42:	4770      	bx	lr
 8000d44:	200004d8 	.word	0x200004d8
 8000d48:	55555556 	.word	0x55555556
 8000d4c:	20000038 	.word	0x20000038
 8000d50:	200004da 	.word	0x200004da

08000d54 <RotaryEncoderInterrupt>:

void RotaryEncoderInterrupt(){
 8000d54:	b580      	push	{r7, lr}
 8000d56:	af00      	add	r7, sp, #0
	rot_intrupt(&rotaryEncoder);
 8000d58:	4802      	ldr	r0, [pc, #8]	; (8000d64 <RotaryEncoderInterrupt+0x10>)
 8000d5a:	f000 f871 	bl	8000e40 <rot_intrupt>
}
 8000d5e:	bf00      	nop
 8000d60:	bd80      	pop	{r7, pc}
 8000d62:	bf00      	nop
 8000d64:	20000038 	.word	0x20000038

08000d68 <IOUpdate>:


void IOUpdate(){
 8000d68:	b580      	push	{r7, lr}
 8000d6a:	b082      	sub	sp, #8
 8000d6c:	af00      	add	r7, sp, #0


	uint8_t buttonPressed = HAL_GPIO_ReadPin(ToggleInput1_GPIO_Port, ToggleInput1_Pin);
 8000d6e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000d72:	481d      	ldr	r0, [pc, #116]	; (8000de8 <IOUpdate+0x80>)
 8000d74:	f001 fca4 	bl	80026c0 <HAL_GPIO_ReadPin>
 8000d78:	4603      	mov	r3, r0
 8000d7a:	71fb      	strb	r3, [r7, #7]
	//SetFilterState(0, buttonPressed);


	//Handling Transistions
	if(switchedStateFlag > 0){
 8000d7c:	4b1b      	ldr	r3, [pc, #108]	; (8000dec <IOUpdate+0x84>)
 8000d7e:	781b      	ldrb	r3, [r3, #0]
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d01b      	beq.n	8000dbc <IOUpdate+0x54>

		switch(switchedStateFlag){
 8000d84:	4b19      	ldr	r3, [pc, #100]	; (8000dec <IOUpdate+0x84>)
 8000d86:	781b      	ldrb	r3, [r3, #0]
 8000d88:	2b03      	cmp	r3, #3
 8000d8a:	d010      	beq.n	8000dae <IOUpdate+0x46>
 8000d8c:	2b03      	cmp	r3, #3
 8000d8e:	dc12      	bgt.n	8000db6 <IOUpdate+0x4e>
 8000d90:	2b01      	cmp	r3, #1
 8000d92:	d001      	beq.n	8000d98 <IOUpdate+0x30>
 8000d94:	2b02      	cmp	r3, #2
				LoadValueIntoShiftRegister(&shiftRegFilterSelect, GetEnabledFilters());
				ResetShiftRegister(&shiftRegLedbar);
				break;
			case 2:
				// Nothing needs to be reset
				break;
 8000d96:	e00e      	b.n	8000db6 <IOUpdate+0x4e>
				LoadValueIntoShiftRegister(&shiftRegFilterSelect, GetEnabledFilters());
 8000d98:	f7ff fd04 	bl	80007a4 <GetEnabledFilters>
 8000d9c:	4603      	mov	r3, r0
 8000d9e:	4619      	mov	r1, r3
 8000da0:	4813      	ldr	r0, [pc, #76]	; (8000df0 <IOUpdate+0x88>)
 8000da2:	f000 f8e7 	bl	8000f74 <LoadValueIntoShiftRegister>
				ResetShiftRegister(&shiftRegLedbar);
 8000da6:	4813      	ldr	r0, [pc, #76]	; (8000df4 <IOUpdate+0x8c>)
 8000da8:	f000 f8d8 	bl	8000f5c <ResetShiftRegister>
				break;
 8000dac:	e003      	b.n	8000db6 <IOUpdate+0x4e>
			case 3:
				// Nothing needs to be reset
				rotaryEncoder.currentPos = 4; // At least one led on, at start
 8000dae:	4b12      	ldr	r3, [pc, #72]	; (8000df8 <IOUpdate+0x90>)
 8000db0:	2204      	movs	r2, #4
 8000db2:	701a      	strb	r2, [r3, #0]
				break;
 8000db4:	bf00      	nop
		}

		switchedStateFlag = 0;
 8000db6:	4b0d      	ldr	r3, [pc, #52]	; (8000dec <IOUpdate+0x84>)
 8000db8:	2200      	movs	r2, #0
 8000dba:	701a      	strb	r2, [r3, #0]

	}

	//Handling states
	switch (IOState) {
 8000dbc:	4b0f      	ldr	r3, [pc, #60]	; (8000dfc <IOUpdate+0x94>)
 8000dbe:	781b      	ldrb	r3, [r3, #0]
 8000dc0:	2b02      	cmp	r3, #2
 8000dc2:	d009      	beq.n	8000dd8 <IOUpdate+0x70>
 8000dc4:	2b02      	cmp	r3, #2
 8000dc6:	dc0b      	bgt.n	8000de0 <IOUpdate+0x78>
 8000dc8:	2b00      	cmp	r3, #0
 8000dca:	d008      	beq.n	8000dde <IOUpdate+0x76>
 8000dcc:	2b01      	cmp	r3, #1
 8000dce:	d000      	beq.n	8000dd2 <IOUpdate+0x6a>
	    	break;
	  }



}
 8000dd0:	e006      	b.n	8000de0 <IOUpdate+0x78>
	    	HandleSelectingFilter();
 8000dd2:	f7ff ff5b 	bl	8000c8c <HandleSelectingFilter>
	    	break;
 8000dd6:	e003      	b.n	8000de0 <IOUpdate+0x78>
	    	HandleSelectingValue();
 8000dd8:	f7ff ff76 	bl	8000cc8 <HandleSelectingValue>
	    	break;
 8000ddc:	e000      	b.n	8000de0 <IOUpdate+0x78>
	    	break;
 8000dde:	bf00      	nop
}
 8000de0:	bf00      	nop
 8000de2:	3708      	adds	r7, #8
 8000de4:	46bd      	mov	sp, r7
 8000de6:	bd80      	pop	{r7, pc}
 8000de8:	40020000 	.word	0x40020000
 8000dec:	200004da 	.word	0x200004da
 8000df0:	20000008 	.word	0x20000008
 8000df4:	20000020 	.word	0x20000020
 8000df8:	20000038 	.word	0x20000038
 8000dfc:	200004d8 	.word	0x200004d8

08000e00 <rot_get_state>:

uint8_t rot_old_state =0;
uint8_t rot_new_state=0;


uint8_t rot_get_state(RotaryEncoder_t* rotEncoder) {
 8000e00:	b590      	push	{r4, r7, lr}
 8000e02:	b083      	sub	sp, #12
 8000e04:	af00      	add	r7, sp, #0
 8000e06:	6078      	str	r0, [r7, #4]
	return (uint8_t)( (HAL_GPIO_ReadPin(rotEncoder->portB, rotEncoder->pinB) << 1)
 8000e08:	687b      	ldr	r3, [r7, #4]
 8000e0a:	68da      	ldr	r2, [r3, #12]
 8000e0c:	687b      	ldr	r3, [r7, #4]
 8000e0e:	8a1b      	ldrh	r3, [r3, #16]
 8000e10:	4619      	mov	r1, r3
 8000e12:	4610      	mov	r0, r2
 8000e14:	f001 fc54 	bl	80026c0 <HAL_GPIO_ReadPin>
 8000e18:	4603      	mov	r3, r0
 8000e1a:	005b      	lsls	r3, r3, #1
                	| (HAL_GPIO_ReadPin(rotEncoder->portA, rotEncoder->pinA)) );
 8000e1c:	b25c      	sxtb	r4, r3
 8000e1e:	687b      	ldr	r3, [r7, #4]
 8000e20:	685a      	ldr	r2, [r3, #4]
 8000e22:	687b      	ldr	r3, [r7, #4]
 8000e24:	891b      	ldrh	r3, [r3, #8]
 8000e26:	4619      	mov	r1, r3
 8000e28:	4610      	mov	r0, r2
 8000e2a:	f001 fc49 	bl	80026c0 <HAL_GPIO_ReadPin>
 8000e2e:	4603      	mov	r3, r0
 8000e30:	b25b      	sxtb	r3, r3
 8000e32:	4323      	orrs	r3, r4
 8000e34:	b25b      	sxtb	r3, r3
	return (uint8_t)( (HAL_GPIO_ReadPin(rotEncoder->portB, rotEncoder->pinB) << 1)
 8000e36:	b2db      	uxtb	r3, r3
}
 8000e38:	4618      	mov	r0, r3
 8000e3a:	370c      	adds	r7, #12
 8000e3c:	46bd      	mov	sp, r7
 8000e3e:	bd90      	pop	{r4, r7, pc}

08000e40 <rot_intrupt>:

void rot_intrupt(RotaryEncoder_t* rotEncoder){
 8000e40:	b580      	push	{r7, lr}
 8000e42:	b082      	sub	sp, #8
 8000e44:	af00      	add	r7, sp, #0
 8000e46:	6078      	str	r0, [r7, #4]

	  rot_new_state = rot_get_state(rotEncoder);
 8000e48:	6878      	ldr	r0, [r7, #4]
 8000e4a:	f7ff ffd9 	bl	8000e00 <rot_get_state>
 8000e4e:	4603      	mov	r3, r0
 8000e50:	461a      	mov	r2, r3
 8000e52:	4b40      	ldr	r3, [pc, #256]	; (8000f54 <rot_intrupt+0x114>)
 8000e54:	701a      	strb	r2, [r3, #0]
	  		// Check transition
	  if (rot_old_state == 3 && rot_new_state == 2) {        // 3 -> 2 transition
 8000e56:	4b40      	ldr	r3, [pc, #256]	; (8000f58 <rot_intrupt+0x118>)
 8000e58:	781b      	ldrb	r3, [r3, #0]
 8000e5a:	2b03      	cmp	r3, #3
 8000e5c:	d10a      	bne.n	8000e74 <rot_intrupt+0x34>
 8000e5e:	4b3d      	ldr	r3, [pc, #244]	; (8000f54 <rot_intrupt+0x114>)
 8000e60:	781b      	ldrb	r3, [r3, #0]
 8000e62:	2b02      	cmp	r3, #2
 8000e64:	d106      	bne.n	8000e74 <rot_intrupt+0x34>
		  rotEncoder->currentPos++;
 8000e66:	687b      	ldr	r3, [r7, #4]
 8000e68:	781b      	ldrb	r3, [r3, #0]
 8000e6a:	3301      	adds	r3, #1
 8000e6c:	b2da      	uxtb	r2, r3
 8000e6e:	687b      	ldr	r3, [r7, #4]
 8000e70:	701a      	strb	r2, [r3, #0]
 8000e72:	e067      	b.n	8000f44 <rot_intrupt+0x104>
	  } else if (rot_old_state == 2 && rot_new_state == 0) { // 2 -> 0 transition
 8000e74:	4b38      	ldr	r3, [pc, #224]	; (8000f58 <rot_intrupt+0x118>)
 8000e76:	781b      	ldrb	r3, [r3, #0]
 8000e78:	2b02      	cmp	r3, #2
 8000e7a:	d10a      	bne.n	8000e92 <rot_intrupt+0x52>
 8000e7c:	4b35      	ldr	r3, [pc, #212]	; (8000f54 <rot_intrupt+0x114>)
 8000e7e:	781b      	ldrb	r3, [r3, #0]
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	d106      	bne.n	8000e92 <rot_intrupt+0x52>
		  rotEncoder->currentPos++;
 8000e84:	687b      	ldr	r3, [r7, #4]
 8000e86:	781b      	ldrb	r3, [r3, #0]
 8000e88:	3301      	adds	r3, #1
 8000e8a:	b2da      	uxtb	r2, r3
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	701a      	strb	r2, [r3, #0]
 8000e90:	e058      	b.n	8000f44 <rot_intrupt+0x104>
	  } else if (rot_old_state == 0 && rot_new_state == 1) { // 0 -> 1 transition
 8000e92:	4b31      	ldr	r3, [pc, #196]	; (8000f58 <rot_intrupt+0x118>)
 8000e94:	781b      	ldrb	r3, [r3, #0]
 8000e96:	2b00      	cmp	r3, #0
 8000e98:	d10a      	bne.n	8000eb0 <rot_intrupt+0x70>
 8000e9a:	4b2e      	ldr	r3, [pc, #184]	; (8000f54 <rot_intrupt+0x114>)
 8000e9c:	781b      	ldrb	r3, [r3, #0]
 8000e9e:	2b01      	cmp	r3, #1
 8000ea0:	d106      	bne.n	8000eb0 <rot_intrupt+0x70>
		  rotEncoder->currentPos++;
 8000ea2:	687b      	ldr	r3, [r7, #4]
 8000ea4:	781b      	ldrb	r3, [r3, #0]
 8000ea6:	3301      	adds	r3, #1
 8000ea8:	b2da      	uxtb	r2, r3
 8000eaa:	687b      	ldr	r3, [r7, #4]
 8000eac:	701a      	strb	r2, [r3, #0]
 8000eae:	e049      	b.n	8000f44 <rot_intrupt+0x104>
	  } else if (rot_old_state == 1 && rot_new_state == 3) { // 1 -> 3 transition
 8000eb0:	4b29      	ldr	r3, [pc, #164]	; (8000f58 <rot_intrupt+0x118>)
 8000eb2:	781b      	ldrb	r3, [r3, #0]
 8000eb4:	2b01      	cmp	r3, #1
 8000eb6:	d10a      	bne.n	8000ece <rot_intrupt+0x8e>
 8000eb8:	4b26      	ldr	r3, [pc, #152]	; (8000f54 <rot_intrupt+0x114>)
 8000eba:	781b      	ldrb	r3, [r3, #0]
 8000ebc:	2b03      	cmp	r3, #3
 8000ebe:	d106      	bne.n	8000ece <rot_intrupt+0x8e>
		  rotEncoder->currentPos++;
 8000ec0:	687b      	ldr	r3, [r7, #4]
 8000ec2:	781b      	ldrb	r3, [r3, #0]
 8000ec4:	3301      	adds	r3, #1
 8000ec6:	b2da      	uxtb	r2, r3
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	701a      	strb	r2, [r3, #0]
 8000ecc:	e03a      	b.n	8000f44 <rot_intrupt+0x104>
	  } else if (rot_old_state == 3 && rot_new_state == 1) { // 3 -> 1 transition
 8000ece:	4b22      	ldr	r3, [pc, #136]	; (8000f58 <rot_intrupt+0x118>)
 8000ed0:	781b      	ldrb	r3, [r3, #0]
 8000ed2:	2b03      	cmp	r3, #3
 8000ed4:	d10a      	bne.n	8000eec <rot_intrupt+0xac>
 8000ed6:	4b1f      	ldr	r3, [pc, #124]	; (8000f54 <rot_intrupt+0x114>)
 8000ed8:	781b      	ldrb	r3, [r3, #0]
 8000eda:	2b01      	cmp	r3, #1
 8000edc:	d106      	bne.n	8000eec <rot_intrupt+0xac>
		  rotEncoder->currentPos--;
 8000ede:	687b      	ldr	r3, [r7, #4]
 8000ee0:	781b      	ldrb	r3, [r3, #0]
 8000ee2:	3b01      	subs	r3, #1
 8000ee4:	b2da      	uxtb	r2, r3
 8000ee6:	687b      	ldr	r3, [r7, #4]
 8000ee8:	701a      	strb	r2, [r3, #0]
 8000eea:	e02b      	b.n	8000f44 <rot_intrupt+0x104>
	  } else if (rot_old_state == 1 && rot_new_state == 0) { // 1 -> 0 transition
 8000eec:	4b1a      	ldr	r3, [pc, #104]	; (8000f58 <rot_intrupt+0x118>)
 8000eee:	781b      	ldrb	r3, [r3, #0]
 8000ef0:	2b01      	cmp	r3, #1
 8000ef2:	d10a      	bne.n	8000f0a <rot_intrupt+0xca>
 8000ef4:	4b17      	ldr	r3, [pc, #92]	; (8000f54 <rot_intrupt+0x114>)
 8000ef6:	781b      	ldrb	r3, [r3, #0]
 8000ef8:	2b00      	cmp	r3, #0
 8000efa:	d106      	bne.n	8000f0a <rot_intrupt+0xca>
		  rotEncoder->currentPos--;
 8000efc:	687b      	ldr	r3, [r7, #4]
 8000efe:	781b      	ldrb	r3, [r3, #0]
 8000f00:	3b01      	subs	r3, #1
 8000f02:	b2da      	uxtb	r2, r3
 8000f04:	687b      	ldr	r3, [r7, #4]
 8000f06:	701a      	strb	r2, [r3, #0]
 8000f08:	e01c      	b.n	8000f44 <rot_intrupt+0x104>
	  } else if (rot_old_state == 0 && rot_new_state == 2) { // 0 -> 2 transition
 8000f0a:	4b13      	ldr	r3, [pc, #76]	; (8000f58 <rot_intrupt+0x118>)
 8000f0c:	781b      	ldrb	r3, [r3, #0]
 8000f0e:	2b00      	cmp	r3, #0
 8000f10:	d10a      	bne.n	8000f28 <rot_intrupt+0xe8>
 8000f12:	4b10      	ldr	r3, [pc, #64]	; (8000f54 <rot_intrupt+0x114>)
 8000f14:	781b      	ldrb	r3, [r3, #0]
 8000f16:	2b02      	cmp	r3, #2
 8000f18:	d106      	bne.n	8000f28 <rot_intrupt+0xe8>
		  rotEncoder->currentPos--;
 8000f1a:	687b      	ldr	r3, [r7, #4]
 8000f1c:	781b      	ldrb	r3, [r3, #0]
 8000f1e:	3b01      	subs	r3, #1
 8000f20:	b2da      	uxtb	r2, r3
 8000f22:	687b      	ldr	r3, [r7, #4]
 8000f24:	701a      	strb	r2, [r3, #0]
 8000f26:	e00d      	b.n	8000f44 <rot_intrupt+0x104>
	  } else if (rot_old_state == 2 && rot_new_state == 3) { // 2 -> 3 transition
 8000f28:	4b0b      	ldr	r3, [pc, #44]	; (8000f58 <rot_intrupt+0x118>)
 8000f2a:	781b      	ldrb	r3, [r3, #0]
 8000f2c:	2b02      	cmp	r3, #2
 8000f2e:	d109      	bne.n	8000f44 <rot_intrupt+0x104>
 8000f30:	4b08      	ldr	r3, [pc, #32]	; (8000f54 <rot_intrupt+0x114>)
 8000f32:	781b      	ldrb	r3, [r3, #0]
 8000f34:	2b03      	cmp	r3, #3
 8000f36:	d105      	bne.n	8000f44 <rot_intrupt+0x104>
		  rotEncoder->currentPos--;
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	781b      	ldrb	r3, [r3, #0]
 8000f3c:	3b01      	subs	r3, #1
 8000f3e:	b2da      	uxtb	r2, r3
 8000f40:	687b      	ldr	r3, [r7, #4]
 8000f42:	701a      	strb	r2, [r3, #0]
	  }
	  rot_old_state = rot_new_state;
 8000f44:	4b03      	ldr	r3, [pc, #12]	; (8000f54 <rot_intrupt+0x114>)
 8000f46:	781a      	ldrb	r2, [r3, #0]
 8000f48:	4b03      	ldr	r3, [pc, #12]	; (8000f58 <rot_intrupt+0x118>)
 8000f4a:	701a      	strb	r2, [r3, #0]
}
 8000f4c:	bf00      	nop
 8000f4e:	3708      	adds	r7, #8
 8000f50:	46bd      	mov	sp, r7
 8000f52:	bd80      	pop	{r7, pc}
 8000f54:	200004dc 	.word	0x200004dc
 8000f58:	200004db 	.word	0x200004db

08000f5c <ResetShiftRegister>:
 */


#include "ShiftRegister.h"

void ResetShiftRegister(ShiftRegister_t *reg){
 8000f5c:	b580      	push	{r7, lr}
 8000f5e:	b082      	sub	sp, #8
 8000f60:	af00      	add	r7, sp, #0
 8000f62:	6078      	str	r0, [r7, #4]
	LoadValueIntoShiftRegister(reg, 0x00);
 8000f64:	2100      	movs	r1, #0
 8000f66:	6878      	ldr	r0, [r7, #4]
 8000f68:	f000 f804 	bl	8000f74 <LoadValueIntoShiftRegister>
}
 8000f6c:	bf00      	nop
 8000f6e:	3708      	adds	r7, #8
 8000f70:	46bd      	mov	sp, r7
 8000f72:	bd80      	pop	{r7, pc}

08000f74 <LoadValueIntoShiftRegister>:

void LoadValueIntoShiftRegister(ShiftRegister_t *reg, uint8_t num){
 8000f74:	b580      	push	{r7, lr}
 8000f76:	b084      	sub	sp, #16
 8000f78:	af00      	add	r7, sp, #0
 8000f7a:	6078      	str	r0, [r7, #4]
 8000f7c:	460b      	mov	r3, r1
 8000f7e:	70fb      	strb	r3, [r7, #3]

	for (int8_t i = 7; i >= 0; i--) {
 8000f80:	2307      	movs	r3, #7
 8000f82:	73fb      	strb	r3, [r7, #15]
 8000f84:	e02c      	b.n	8000fe0 <LoadValueIntoShiftRegister+0x6c>
		GPIO_PinState bit_value = ((num >> i) & 1)  ? GPIO_PIN_SET : GPIO_PIN_RESET;
 8000f86:	78fa      	ldrb	r2, [r7, #3]
 8000f88:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000f8c:	fa42 f303 	asr.w	r3, r2, r3
 8000f90:	b2db      	uxtb	r3, r3
 8000f92:	f003 0301 	and.w	r3, r3, #1
 8000f96:	73bb      	strb	r3, [r7, #14]
		HAL_GPIO_WritePin(reg->dataPort, reg->dataPin, bit_value);
 8000f98:	687b      	ldr	r3, [r7, #4]
 8000f9a:	6898      	ldr	r0, [r3, #8]
 8000f9c:	687b      	ldr	r3, [r7, #4]
 8000f9e:	899b      	ldrh	r3, [r3, #12]
 8000fa0:	7bba      	ldrb	r2, [r7, #14]
 8000fa2:	4619      	mov	r1, r3
 8000fa4:	f001 fba4 	bl	80026f0 <HAL_GPIO_WritePin>
		HAL_Delay(1);
 8000fa8:	2001      	movs	r0, #1
 8000faa:	f000 fd3f 	bl	8001a2c <HAL_Delay>
		HAL_GPIO_WritePin(reg->clkPort, reg->clkPin, GPIO_PIN_SET);
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	6818      	ldr	r0, [r3, #0]
 8000fb2:	687b      	ldr	r3, [r7, #4]
 8000fb4:	889b      	ldrh	r3, [r3, #4]
 8000fb6:	2201      	movs	r2, #1
 8000fb8:	4619      	mov	r1, r3
 8000fba:	f001 fb99 	bl	80026f0 <HAL_GPIO_WritePin>
		HAL_Delay(1);
 8000fbe:	2001      	movs	r0, #1
 8000fc0:	f000 fd34 	bl	8001a2c <HAL_Delay>
		HAL_GPIO_WritePin(reg->clkPort, reg->clkPin, GPIO_PIN_RESET);
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	6818      	ldr	r0, [r3, #0]
 8000fc8:	687b      	ldr	r3, [r7, #4]
 8000fca:	889b      	ldrh	r3, [r3, #4]
 8000fcc:	2200      	movs	r2, #0
 8000fce:	4619      	mov	r1, r3
 8000fd0:	f001 fb8e 	bl	80026f0 <HAL_GPIO_WritePin>
	for (int8_t i = 7; i >= 0; i--) {
 8000fd4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000fd8:	b2db      	uxtb	r3, r3
 8000fda:	3b01      	subs	r3, #1
 8000fdc:	b2db      	uxtb	r3, r3
 8000fde:	73fb      	strb	r3, [r7, #15]
 8000fe0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000fe4:	2b00      	cmp	r3, #0
 8000fe6:	dace      	bge.n	8000f86 <LoadValueIntoShiftRegister+0x12>
	  }

	HAL_GPIO_WritePin(reg->enabledPort, reg->enabledPin, GPIO_PIN_SET);
 8000fe8:	687b      	ldr	r3, [r7, #4]
 8000fea:	6918      	ldr	r0, [r3, #16]
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	8a9b      	ldrh	r3, [r3, #20]
 8000ff0:	2201      	movs	r2, #1
 8000ff2:	4619      	mov	r1, r3
 8000ff4:	f001 fb7c 	bl	80026f0 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8000ff8:	2001      	movs	r0, #1
 8000ffa:	f000 fd17 	bl	8001a2c <HAL_Delay>
	HAL_GPIO_WritePin(reg->enabledPort, reg->enabledPin, GPIO_PIN_RESET);
 8000ffe:	687b      	ldr	r3, [r7, #4]
 8001000:	6918      	ldr	r0, [r3, #16]
 8001002:	687b      	ldr	r3, [r7, #4]
 8001004:	8a9b      	ldrh	r3, [r3, #20]
 8001006:	2200      	movs	r2, #0
 8001008:	4619      	mov	r1, r3
 800100a:	f001 fb71 	bl	80026f0 <HAL_GPIO_WritePin>
}
 800100e:	bf00      	nop
 8001010:	3710      	adds	r7, #16
 8001012:	46bd      	mov	sp, r7
 8001014:	bd80      	pop	{r7, pc}
	...

08001018 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001018:	b580      	push	{r7, lr}
 800101a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800101c:	f000 fca9 	bl	8001972 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001020:	f000 f822 	bl	8001068 <SystemClock_Config>

/* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 8001024:	f000 f88e 	bl	8001144 <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001028:	f000 f976 	bl	8001318 <MX_GPIO_Init>
  MX_DMA_Init();
 800102c:	f000 f942 	bl	80012b4 <MX_DMA_Init>
  MX_I2C1_Init();
 8001030:	f000 f8aa 	bl	8001188 <MX_I2C1_Init>
  MX_I2S1_Init();
 8001034:	f000 f8e8 	bl	8001208 <MX_I2S1_Init>
  MX_I2S2_Init();
 8001038:	f000 f912 	bl	8001260 <MX_I2S2_Init>
  /* USER CODE BEGIN 2 */

  InitIO();
 800103c:	f7ff fe14 	bl	8000c68 <InitIO>
  CodecInit(&hi2c1);
 8001040:	4806      	ldr	r0, [pc, #24]	; (800105c <main+0x44>)
 8001042:	f7ff fa6b 	bl	800051c <CodecInit>

  InitDSP(48000, &hi2s1, &hi2s2); //44117 is in IOC file
 8001046:	4a06      	ldr	r2, [pc, #24]	; (8001060 <main+0x48>)
 8001048:	4906      	ldr	r1, [pc, #24]	; (8001064 <main+0x4c>)
 800104a:	f64b 3080 	movw	r0, #48000	; 0xbb80
 800104e:	f7ff fb2d 	bl	80006ac <InitDSP>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {

	IOUpdate();
 8001052:	f7ff fe89 	bl	8000d68 <IOUpdate>
	DSPUpdate();
 8001056:	f7ff fb67 	bl	8000728 <DSPUpdate>
	IOUpdate();
 800105a:	e7fa      	b.n	8001052 <main+0x3a>
 800105c:	200004e0 	.word	0x200004e0
 8001060:	20000574 	.word	0x20000574
 8001064:	20000534 	.word	0x20000534

08001068 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001068:	b580      	push	{r7, lr}
 800106a:	b094      	sub	sp, #80	; 0x50
 800106c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800106e:	f107 0320 	add.w	r3, r7, #32
 8001072:	2230      	movs	r2, #48	; 0x30
 8001074:	2100      	movs	r1, #0
 8001076:	4618      	mov	r0, r3
 8001078:	f003 fbe8 	bl	800484c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800107c:	f107 030c 	add.w	r3, r7, #12
 8001080:	2200      	movs	r2, #0
 8001082:	601a      	str	r2, [r3, #0]
 8001084:	605a      	str	r2, [r3, #4]
 8001086:	609a      	str	r2, [r3, #8]
 8001088:	60da      	str	r2, [r3, #12]
 800108a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800108c:	4b2b      	ldr	r3, [pc, #172]	; (800113c <SystemClock_Config+0xd4>)
 800108e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001090:	4a2a      	ldr	r2, [pc, #168]	; (800113c <SystemClock_Config+0xd4>)
 8001092:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001096:	6413      	str	r3, [r2, #64]	; 0x40
 8001098:	4b28      	ldr	r3, [pc, #160]	; (800113c <SystemClock_Config+0xd4>)
 800109a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800109c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80010a0:	60bb      	str	r3, [r7, #8]
 80010a2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80010a4:	4b26      	ldr	r3, [pc, #152]	; (8001140 <SystemClock_Config+0xd8>)
 80010a6:	681b      	ldr	r3, [r3, #0]
 80010a8:	4a25      	ldr	r2, [pc, #148]	; (8001140 <SystemClock_Config+0xd8>)
 80010aa:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80010ae:	6013      	str	r3, [r2, #0]
 80010b0:	4b23      	ldr	r3, [pc, #140]	; (8001140 <SystemClock_Config+0xd8>)
 80010b2:	681b      	ldr	r3, [r3, #0]
 80010b4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80010b8:	607b      	str	r3, [r7, #4]
 80010ba:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80010bc:	2301      	movs	r3, #1
 80010be:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80010c0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80010c4:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80010c6:	2302      	movs	r3, #2
 80010c8:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80010ca:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80010ce:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 80010d0:	2319      	movs	r3, #25
 80010d2:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 432;
 80010d4:	f44f 73d8 	mov.w	r3, #432	; 0x1b0
 80010d8:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80010da:	2302      	movs	r3, #2
 80010dc:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80010de:	2302      	movs	r3, #2
 80010e0:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80010e2:	f107 0320 	add.w	r3, r7, #32
 80010e6:	4618      	mov	r0, r3
 80010e8:	f002 fb3e 	bl	8003768 <HAL_RCC_OscConfig>
 80010ec:	4603      	mov	r3, r0
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d001      	beq.n	80010f6 <SystemClock_Config+0x8e>
  {
    Error_Handler();
 80010f2:	f000 f9dd 	bl	80014b0 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80010f6:	f002 fae7 	bl	80036c8 <HAL_PWREx_EnableOverDrive>
 80010fa:	4603      	mov	r3, r0
 80010fc:	2b00      	cmp	r3, #0
 80010fe:	d001      	beq.n	8001104 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8001100:	f000 f9d6 	bl	80014b0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001104:	230f      	movs	r3, #15
 8001106:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001108:	2302      	movs	r3, #2
 800110a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800110c:	2300      	movs	r3, #0
 800110e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001110:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001114:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001116:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800111a:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 800111c:	f107 030c 	add.w	r3, r7, #12
 8001120:	2107      	movs	r1, #7
 8001122:	4618      	mov	r0, r3
 8001124:	f002 fdc4 	bl	8003cb0 <HAL_RCC_ClockConfig>
 8001128:	4603      	mov	r3, r0
 800112a:	2b00      	cmp	r3, #0
 800112c:	d001      	beq.n	8001132 <SystemClock_Config+0xca>
  {
    Error_Handler();
 800112e:	f000 f9bf 	bl	80014b0 <Error_Handler>
  }
}
 8001132:	bf00      	nop
 8001134:	3750      	adds	r7, #80	; 0x50
 8001136:	46bd      	mov	sp, r7
 8001138:	bd80      	pop	{r7, pc}
 800113a:	bf00      	nop
 800113c:	40023800 	.word	0x40023800
 8001140:	40007000 	.word	0x40007000

08001144 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 8001144:	b580      	push	{r7, lr}
 8001146:	b0a0      	sub	sp, #128	; 0x80
 8001148:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800114a:	463b      	mov	r3, r7
 800114c:	2280      	movs	r2, #128	; 0x80
 800114e:	2100      	movs	r1, #0
 8001150:	4618      	mov	r0, r3
 8001152:	f003 fb7b 	bl	800484c <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 8001156:	2301      	movs	r3, #1
 8001158:	603b      	str	r3, [r7, #0]
  PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 800115a:	23c0      	movs	r3, #192	; 0xc0
 800115c:	607b      	str	r3, [r7, #4]
  PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 800115e:	2302      	movs	r3, #2
 8001160:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.PLLI2S.PLLI2SQ = 2;
 8001162:	2302      	movs	r3, #2
 8001164:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLI2SDivQ = 1;
 8001166:	2301      	movs	r3, #1
 8001168:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.I2sClockSelection = RCC_I2SCLKSOURCE_PLLI2S;
 800116a:	2300      	movs	r3, #0
 800116c:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800116e:	463b      	mov	r3, r7
 8001170:	4618      	mov	r0, r3
 8001172:	f002 ff4f 	bl	8004014 <HAL_RCCEx_PeriphCLKConfig>
 8001176:	4603      	mov	r3, r0
 8001178:	2b00      	cmp	r3, #0
 800117a:	d001      	beq.n	8001180 <PeriphCommonClock_Config+0x3c>
  {
    Error_Handler();
 800117c:	f000 f998 	bl	80014b0 <Error_Handler>
  }
}
 8001180:	bf00      	nop
 8001182:	3780      	adds	r7, #128	; 0x80
 8001184:	46bd      	mov	sp, r7
 8001186:	bd80      	pop	{r7, pc}

08001188 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001188:	b580      	push	{r7, lr}
 800118a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 800118c:	4b1b      	ldr	r3, [pc, #108]	; (80011fc <MX_I2C1_Init+0x74>)
 800118e:	4a1c      	ldr	r2, [pc, #112]	; (8001200 <MX_I2C1_Init+0x78>)
 8001190:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x20404768;
 8001192:	4b1a      	ldr	r3, [pc, #104]	; (80011fc <MX_I2C1_Init+0x74>)
 8001194:	4a1b      	ldr	r2, [pc, #108]	; (8001204 <MX_I2C1_Init+0x7c>)
 8001196:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8001198:	4b18      	ldr	r3, [pc, #96]	; (80011fc <MX_I2C1_Init+0x74>)
 800119a:	2200      	movs	r2, #0
 800119c:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800119e:	4b17      	ldr	r3, [pc, #92]	; (80011fc <MX_I2C1_Init+0x74>)
 80011a0:	2201      	movs	r2, #1
 80011a2:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80011a4:	4b15      	ldr	r3, [pc, #84]	; (80011fc <MX_I2C1_Init+0x74>)
 80011a6:	2200      	movs	r2, #0
 80011a8:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 80011aa:	4b14      	ldr	r3, [pc, #80]	; (80011fc <MX_I2C1_Init+0x74>)
 80011ac:	2200      	movs	r2, #0
 80011ae:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80011b0:	4b12      	ldr	r3, [pc, #72]	; (80011fc <MX_I2C1_Init+0x74>)
 80011b2:	2200      	movs	r2, #0
 80011b4:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80011b6:	4b11      	ldr	r3, [pc, #68]	; (80011fc <MX_I2C1_Init+0x74>)
 80011b8:	2200      	movs	r2, #0
 80011ba:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80011bc:	4b0f      	ldr	r3, [pc, #60]	; (80011fc <MX_I2C1_Init+0x74>)
 80011be:	2200      	movs	r2, #0
 80011c0:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80011c2:	480e      	ldr	r0, [pc, #56]	; (80011fc <MX_I2C1_Init+0x74>)
 80011c4:	f001 fac6 	bl	8002754 <HAL_I2C_Init>
 80011c8:	4603      	mov	r3, r0
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d001      	beq.n	80011d2 <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 80011ce:	f000 f96f 	bl	80014b0 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80011d2:	2100      	movs	r1, #0
 80011d4:	4809      	ldr	r0, [pc, #36]	; (80011fc <MX_I2C1_Init+0x74>)
 80011d6:	f001 fea7 	bl	8002f28 <HAL_I2CEx_ConfigAnalogFilter>
 80011da:	4603      	mov	r3, r0
 80011dc:	2b00      	cmp	r3, #0
 80011de:	d001      	beq.n	80011e4 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 80011e0:	f000 f966 	bl	80014b0 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 80011e4:	2100      	movs	r1, #0
 80011e6:	4805      	ldr	r0, [pc, #20]	; (80011fc <MX_I2C1_Init+0x74>)
 80011e8:	f001 fee9 	bl	8002fbe <HAL_I2CEx_ConfigDigitalFilter>
 80011ec:	4603      	mov	r3, r0
 80011ee:	2b00      	cmp	r3, #0
 80011f0:	d001      	beq.n	80011f6 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 80011f2:	f000 f95d 	bl	80014b0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80011f6:	bf00      	nop
 80011f8:	bd80      	pop	{r7, pc}
 80011fa:	bf00      	nop
 80011fc:	200004e0 	.word	0x200004e0
 8001200:	40005400 	.word	0x40005400
 8001204:	20404768 	.word	0x20404768

08001208 <MX_I2S1_Init>:
  * @brief I2S1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2S1_Init(void)
{
 8001208:	b580      	push	{r7, lr}
 800120a:	af00      	add	r7, sp, #0
  /* USER CODE END I2S1_Init 0 */

  /* USER CODE BEGIN I2S1_Init 1 */

  /* USER CODE END I2S1_Init 1 */
  hi2s1.Instance = SPI1;
 800120c:	4b12      	ldr	r3, [pc, #72]	; (8001258 <MX_I2S1_Init+0x50>)
 800120e:	4a13      	ldr	r2, [pc, #76]	; (800125c <MX_I2S1_Init+0x54>)
 8001210:	601a      	str	r2, [r3, #0]
  hi2s1.Init.Mode = I2S_MODE_MASTER_TX;
 8001212:	4b11      	ldr	r3, [pc, #68]	; (8001258 <MX_I2S1_Init+0x50>)
 8001214:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001218:	605a      	str	r2, [r3, #4]
  hi2s1.Init.Standard = I2S_STANDARD_PHILIPS;
 800121a:	4b0f      	ldr	r3, [pc, #60]	; (8001258 <MX_I2S1_Init+0x50>)
 800121c:	2200      	movs	r2, #0
 800121e:	609a      	str	r2, [r3, #8]
  hi2s1.Init.DataFormat = I2S_DATAFORMAT_24B;
 8001220:	4b0d      	ldr	r3, [pc, #52]	; (8001258 <MX_I2S1_Init+0x50>)
 8001222:	2203      	movs	r2, #3
 8001224:	60da      	str	r2, [r3, #12]
  hi2s1.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 8001226:	4b0c      	ldr	r3, [pc, #48]	; (8001258 <MX_I2S1_Init+0x50>)
 8001228:	f44f 7200 	mov.w	r2, #512	; 0x200
 800122c:	611a      	str	r2, [r3, #16]
  hi2s1.Init.AudioFreq = I2S_AUDIOFREQ_48K;
 800122e:	4b0a      	ldr	r3, [pc, #40]	; (8001258 <MX_I2S1_Init+0x50>)
 8001230:	f64b 3280 	movw	r2, #48000	; 0xbb80
 8001234:	615a      	str	r2, [r3, #20]
  hi2s1.Init.CPOL = I2S_CPOL_LOW;
 8001236:	4b08      	ldr	r3, [pc, #32]	; (8001258 <MX_I2S1_Init+0x50>)
 8001238:	2200      	movs	r2, #0
 800123a:	619a      	str	r2, [r3, #24]
  hi2s1.Init.ClockSource = I2S_CLOCK_PLL;
 800123c:	4b06      	ldr	r3, [pc, #24]	; (8001258 <MX_I2S1_Init+0x50>)
 800123e:	2202      	movs	r2, #2
 8001240:	61da      	str	r2, [r3, #28]
  if (HAL_I2S_Init(&hi2s1) != HAL_OK)
 8001242:	4805      	ldr	r0, [pc, #20]	; (8001258 <MX_I2S1_Init+0x50>)
 8001244:	f001 ff08 	bl	8003058 <HAL_I2S_Init>
 8001248:	4603      	mov	r3, r0
 800124a:	2b00      	cmp	r3, #0
 800124c:	d001      	beq.n	8001252 <MX_I2S1_Init+0x4a>
  {
    Error_Handler();
 800124e:	f000 f92f 	bl	80014b0 <Error_Handler>
  }
  /* USER CODE BEGIN I2S1_Init 2 */

  /* USER CODE END I2S1_Init 2 */

}
 8001252:	bf00      	nop
 8001254:	bd80      	pop	{r7, pc}
 8001256:	bf00      	nop
 8001258:	20000534 	.word	0x20000534
 800125c:	40013000 	.word	0x40013000

08001260 <MX_I2S2_Init>:
  * @brief I2S2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2S2_Init(void)
{
 8001260:	b580      	push	{r7, lr}
 8001262:	af00      	add	r7, sp, #0
  /* USER CODE END I2S2_Init 0 */

  /* USER CODE BEGIN I2S2_Init 1 */

  /* USER CODE END I2S2_Init 1 */
  hi2s2.Instance = SPI2;
 8001264:	4b11      	ldr	r3, [pc, #68]	; (80012ac <MX_I2S2_Init+0x4c>)
 8001266:	4a12      	ldr	r2, [pc, #72]	; (80012b0 <MX_I2S2_Init+0x50>)
 8001268:	601a      	str	r2, [r3, #0]
  hi2s2.Init.Mode = I2S_MODE_SLAVE_RX;
 800126a:	4b10      	ldr	r3, [pc, #64]	; (80012ac <MX_I2S2_Init+0x4c>)
 800126c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001270:	605a      	str	r2, [r3, #4]
  hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 8001272:	4b0e      	ldr	r3, [pc, #56]	; (80012ac <MX_I2S2_Init+0x4c>)
 8001274:	2200      	movs	r2, #0
 8001276:	609a      	str	r2, [r3, #8]
  hi2s2.Init.DataFormat = I2S_DATAFORMAT_24B;
 8001278:	4b0c      	ldr	r3, [pc, #48]	; (80012ac <MX_I2S2_Init+0x4c>)
 800127a:	2203      	movs	r2, #3
 800127c:	60da      	str	r2, [r3, #12]
  hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 800127e:	4b0b      	ldr	r3, [pc, #44]	; (80012ac <MX_I2S2_Init+0x4c>)
 8001280:	2200      	movs	r2, #0
 8001282:	611a      	str	r2, [r3, #16]
  hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_48K;
 8001284:	4b09      	ldr	r3, [pc, #36]	; (80012ac <MX_I2S2_Init+0x4c>)
 8001286:	f64b 3280 	movw	r2, #48000	; 0xbb80
 800128a:	615a      	str	r2, [r3, #20]
  hi2s2.Init.CPOL = I2S_CPOL_LOW;
 800128c:	4b07      	ldr	r3, [pc, #28]	; (80012ac <MX_I2S2_Init+0x4c>)
 800128e:	2200      	movs	r2, #0
 8001290:	619a      	str	r2, [r3, #24]
  hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 8001292:	4b06      	ldr	r3, [pc, #24]	; (80012ac <MX_I2S2_Init+0x4c>)
 8001294:	2202      	movs	r2, #2
 8001296:	61da      	str	r2, [r3, #28]
  if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 8001298:	4804      	ldr	r0, [pc, #16]	; (80012ac <MX_I2S2_Init+0x4c>)
 800129a:	f001 fedd 	bl	8003058 <HAL_I2S_Init>
 800129e:	4603      	mov	r3, r0
 80012a0:	2b00      	cmp	r3, #0
 80012a2:	d001      	beq.n	80012a8 <MX_I2S2_Init+0x48>
  {
    Error_Handler();
 80012a4:	f000 f904 	bl	80014b0 <Error_Handler>
  }
  /* USER CODE BEGIN I2S2_Init 2 */

  /* USER CODE END I2S2_Init 2 */

}
 80012a8:	bf00      	nop
 80012aa:	bd80      	pop	{r7, pc}
 80012ac:	20000574 	.word	0x20000574
 80012b0:	40003800 	.word	0x40003800

080012b4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80012b4:	b580      	push	{r7, lr}
 80012b6:	b082      	sub	sp, #8
 80012b8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80012ba:	4b16      	ldr	r3, [pc, #88]	; (8001314 <MX_DMA_Init+0x60>)
 80012bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012be:	4a15      	ldr	r2, [pc, #84]	; (8001314 <MX_DMA_Init+0x60>)
 80012c0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80012c4:	6313      	str	r3, [r2, #48]	; 0x30
 80012c6:	4b13      	ldr	r3, [pc, #76]	; (8001314 <MX_DMA_Init+0x60>)
 80012c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012ca:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80012ce:	607b      	str	r3, [r7, #4]
 80012d0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 80012d2:	4b10      	ldr	r3, [pc, #64]	; (8001314 <MX_DMA_Init+0x60>)
 80012d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012d6:	4a0f      	ldr	r2, [pc, #60]	; (8001314 <MX_DMA_Init+0x60>)
 80012d8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80012dc:	6313      	str	r3, [r2, #48]	; 0x30
 80012de:	4b0d      	ldr	r3, [pc, #52]	; (8001314 <MX_DMA_Init+0x60>)
 80012e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012e2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80012e6:	603b      	str	r3, [r7, #0]
 80012e8:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 0, 0);
 80012ea:	2200      	movs	r2, #0
 80012ec:	2100      	movs	r1, #0
 80012ee:	200e      	movs	r0, #14
 80012f0:	f000 fc9b 	bl	8001c2a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 80012f4:	200e      	movs	r0, #14
 80012f6:	f000 fcb4 	bl	8001c62 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
 80012fa:	2200      	movs	r2, #0
 80012fc:	2100      	movs	r1, #0
 80012fe:	203b      	movs	r0, #59	; 0x3b
 8001300:	f000 fc93 	bl	8001c2a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 8001304:	203b      	movs	r0, #59	; 0x3b
 8001306:	f000 fcac 	bl	8001c62 <HAL_NVIC_EnableIRQ>

}
 800130a:	bf00      	nop
 800130c:	3708      	adds	r7, #8
 800130e:	46bd      	mov	sp, r7
 8001310:	bd80      	pop	{r7, pc}
 8001312:	bf00      	nop
 8001314:	40023800 	.word	0x40023800

08001318 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001318:	b580      	push	{r7, lr}
 800131a:	b08a      	sub	sp, #40	; 0x28
 800131c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800131e:	f107 0314 	add.w	r3, r7, #20
 8001322:	2200      	movs	r2, #0
 8001324:	601a      	str	r2, [r3, #0]
 8001326:	605a      	str	r2, [r3, #4]
 8001328:	609a      	str	r2, [r3, #8]
 800132a:	60da      	str	r2, [r3, #12]
 800132c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800132e:	4b4a      	ldr	r3, [pc, #296]	; (8001458 <MX_GPIO_Init+0x140>)
 8001330:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001332:	4a49      	ldr	r2, [pc, #292]	; (8001458 <MX_GPIO_Init+0x140>)
 8001334:	f043 0304 	orr.w	r3, r3, #4
 8001338:	6313      	str	r3, [r2, #48]	; 0x30
 800133a:	4b47      	ldr	r3, [pc, #284]	; (8001458 <MX_GPIO_Init+0x140>)
 800133c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800133e:	f003 0304 	and.w	r3, r3, #4
 8001342:	613b      	str	r3, [r7, #16]
 8001344:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001346:	4b44      	ldr	r3, [pc, #272]	; (8001458 <MX_GPIO_Init+0x140>)
 8001348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800134a:	4a43      	ldr	r2, [pc, #268]	; (8001458 <MX_GPIO_Init+0x140>)
 800134c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001350:	6313      	str	r3, [r2, #48]	; 0x30
 8001352:	4b41      	ldr	r3, [pc, #260]	; (8001458 <MX_GPIO_Init+0x140>)
 8001354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001356:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800135a:	60fb      	str	r3, [r7, #12]
 800135c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800135e:	4b3e      	ldr	r3, [pc, #248]	; (8001458 <MX_GPIO_Init+0x140>)
 8001360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001362:	4a3d      	ldr	r2, [pc, #244]	; (8001458 <MX_GPIO_Init+0x140>)
 8001364:	f043 0301 	orr.w	r3, r3, #1
 8001368:	6313      	str	r3, [r2, #48]	; 0x30
 800136a:	4b3b      	ldr	r3, [pc, #236]	; (8001458 <MX_GPIO_Init+0x140>)
 800136c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800136e:	f003 0301 	and.w	r3, r3, #1
 8001372:	60bb      	str	r3, [r7, #8]
 8001374:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001376:	4b38      	ldr	r3, [pc, #224]	; (8001458 <MX_GPIO_Init+0x140>)
 8001378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800137a:	4a37      	ldr	r2, [pc, #220]	; (8001458 <MX_GPIO_Init+0x140>)
 800137c:	f043 0302 	orr.w	r3, r3, #2
 8001380:	6313      	str	r3, [r2, #48]	; 0x30
 8001382:	4b35      	ldr	r3, [pc, #212]	; (8001458 <MX_GPIO_Init+0x140>)
 8001384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001386:	f003 0302 	and.w	r3, r3, #2
 800138a:	607b      	str	r3, [r7, #4]
 800138c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, ShiftRegFDat_Pin|ShiftRegFStoClk_Pin|ShiftRegFClk_Pin|ShiftRegLBarDat_Pin
 800138e:	2200      	movs	r2, #0
 8001390:	f24e 010d 	movw	r1, #57357	; 0xe00d
 8001394:	4831      	ldr	r0, [pc, #196]	; (800145c <MX_GPIO_Init+0x144>)
 8001396:	f001 f9ab 	bl	80026f0 <HAL_GPIO_WritePin>
                          |ShiftRegLBarStoClk_Pin|ShiftRegLBarClk_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : ShiftRegFDat_Pin ShiftRegFStoClk_Pin ShiftRegFClk_Pin ShiftRegLBarDat_Pin
                           ShiftRegLBarStoClk_Pin ShiftRegLBarClk_Pin */
  GPIO_InitStruct.Pin = ShiftRegFDat_Pin|ShiftRegFStoClk_Pin|ShiftRegFClk_Pin|ShiftRegLBarDat_Pin
 800139a:	f24e 030d 	movw	r3, #57357	; 0xe00d
 800139e:	617b      	str	r3, [r7, #20]
                          |ShiftRegLBarStoClk_Pin|ShiftRegLBarClk_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013a0:	2301      	movs	r3, #1
 80013a2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013a4:	2300      	movs	r3, #0
 80013a6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013a8:	2300      	movs	r3, #0
 80013aa:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013ac:	f107 0314 	add.w	r3, r7, #20
 80013b0:	4619      	mov	r1, r3
 80013b2:	482a      	ldr	r0, [pc, #168]	; (800145c <MX_GPIO_Init+0x144>)
 80013b4:	f000 ffe8 	bl	8002388 <HAL_GPIO_Init>

  /*Configure GPIO pins : RotEncoderInA_Pin RotEncoderButton_Pin */
  GPIO_InitStruct.Pin = RotEncoderInA_Pin|RotEncoderButton_Pin;
 80013b8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80013bc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80013be:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80013c2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013c4:	2300      	movs	r3, #0
 80013c6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013c8:	f107 0314 	add.w	r3, r7, #20
 80013cc:	4619      	mov	r1, r3
 80013ce:	4823      	ldr	r0, [pc, #140]	; (800145c <MX_GPIO_Init+0x144>)
 80013d0:	f000 ffda 	bl	8002388 <HAL_GPIO_Init>

  /*Configure GPIO pin : RotEncoderInB_Pin */
  GPIO_InitStruct.Pin = RotEncoderInB_Pin;
 80013d4:	2380      	movs	r3, #128	; 0x80
 80013d6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 80013d8:	f44f 1344 	mov.w	r3, #3211264	; 0x310000
 80013dc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013de:	2300      	movs	r3, #0
 80013e0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(RotEncoderInB_GPIO_Port, &GPIO_InitStruct);
 80013e2:	f107 0314 	add.w	r3, r7, #20
 80013e6:	4619      	mov	r1, r3
 80013e8:	481c      	ldr	r0, [pc, #112]	; (800145c <MX_GPIO_Init+0x144>)
 80013ea:	f000 ffcd 	bl	8002388 <HAL_GPIO_Init>

  /*Configure GPIO pins : ToggleInput4_Pin ToggleInput2_Pin ToggleInput1_Pin ToggleInput8_Pin */
  GPIO_InitStruct.Pin = ToggleInput4_Pin|ToggleInput2_Pin|ToggleInput1_Pin|ToggleInput8_Pin;
 80013ee:	f44f 431a 	mov.w	r3, #39424	; 0x9a00
 80013f2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80013f4:	2300      	movs	r3, #0
 80013f6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013f8:	2300      	movs	r3, #0
 80013fa:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013fc:	f107 0314 	add.w	r3, r7, #20
 8001400:	4619      	mov	r1, r3
 8001402:	4817      	ldr	r0, [pc, #92]	; (8001460 <MX_GPIO_Init+0x148>)
 8001404:	f000 ffc0 	bl	8002388 <HAL_GPIO_Init>

  /*Configure GPIO pin : ToggleInput3_Pin */
  GPIO_InitStruct.Pin = ToggleInput3_Pin;
 8001408:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800140c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800140e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001412:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001414:	2300      	movs	r3, #0
 8001416:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(ToggleInput3_GPIO_Port, &GPIO_InitStruct);
 8001418:	f107 0314 	add.w	r3, r7, #20
 800141c:	4619      	mov	r1, r3
 800141e:	4810      	ldr	r0, [pc, #64]	; (8001460 <MX_GPIO_Init+0x148>)
 8001420:	f000 ffb2 	bl	8002388 <HAL_GPIO_Init>

  /*Configure GPIO pins : ToggleInput7_Pin ToggleInput6_Pin ToggleInput5_Pin */
  GPIO_InitStruct.Pin = ToggleInput7_Pin|ToggleInput6_Pin|ToggleInput5_Pin;
 8001424:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 8001428:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800142a:	2300      	movs	r3, #0
 800142c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800142e:	2300      	movs	r3, #0
 8001430:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001432:	f107 0314 	add.w	r3, r7, #20
 8001436:	4619      	mov	r1, r3
 8001438:	4808      	ldr	r0, [pc, #32]	; (800145c <MX_GPIO_Init+0x144>)
 800143a:	f000 ffa5 	bl	8002388 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 800143e:	2200      	movs	r2, #0
 8001440:	2100      	movs	r1, #0
 8001442:	2017      	movs	r0, #23
 8001444:	f000 fbf1 	bl	8001c2a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001448:	2017      	movs	r0, #23
 800144a:	f000 fc0a 	bl	8001c62 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800144e:	bf00      	nop
 8001450:	3728      	adds	r7, #40	; 0x28
 8001452:	46bd      	mov	sp, r7
 8001454:	bd80      	pop	{r7, pc}
 8001456:	bf00      	nop
 8001458:	40023800 	.word	0x40023800
 800145c:	40020800 	.word	0x40020800
 8001460:	40020000 	.word	0x40020000

08001464 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 8001464:	b580      	push	{r7, lr}
 8001466:	b084      	sub	sp, #16
 8001468:	af00      	add	r7, sp, #0
 800146a:	4603      	mov	r3, r0
 800146c:	80fb      	strh	r3, [r7, #6]

  /* Prevent unused argument(s) compilation warning */
  uint32_t currentMillis = HAL_GetTick();
 800146e:	f000 fad1 	bl	8001a14 <HAL_GetTick>
 8001472:	60f8      	str	r0, [r7, #12]
  UNUSED(GPIO_Pin);


  if(GPIO_Pin == RotEncoderButton_Pin && (currentMillis - previousMillis > 100)){
 8001474:	88fb      	ldrh	r3, [r7, #6]
 8001476:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800147a:	d108      	bne.n	800148e <HAL_GPIO_EXTI_Callback+0x2a>
 800147c:	4b0b      	ldr	r3, [pc, #44]	; (80014ac <HAL_GPIO_EXTI_Callback+0x48>)
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	68fa      	ldr	r2, [r7, #12]
 8001482:	1ad3      	subs	r3, r2, r3
 8001484:	2b64      	cmp	r3, #100	; 0x64
 8001486:	d902      	bls.n	800148e <HAL_GPIO_EXTI_Callback+0x2a>
	  ButtonInterrupt(currentMillis);
 8001488:	68f8      	ldr	r0, [r7, #12]
 800148a:	f7ff fc39 	bl	8000d00 <ButtonInterrupt>
  }

  if(GPIO_Pin == RotEncoderInA_Pin || GPIO_Pin == RotEncoderInB_Pin){
 800148e:	88fb      	ldrh	r3, [r7, #6]
 8001490:	2b40      	cmp	r3, #64	; 0x40
 8001492:	d002      	beq.n	800149a <HAL_GPIO_EXTI_Callback+0x36>
 8001494:	88fb      	ldrh	r3, [r7, #6]
 8001496:	2b80      	cmp	r3, #128	; 0x80
 8001498:	d101      	bne.n	800149e <HAL_GPIO_EXTI_Callback+0x3a>
	  RotaryEncoderInterrupt();
 800149a:	f7ff fc5b 	bl	8000d54 <RotaryEncoderInterrupt>
  }

  previousMillis = currentMillis;
 800149e:	4a03      	ldr	r2, [pc, #12]	; (80014ac <HAL_GPIO_EXTI_Callback+0x48>)
 80014a0:	68fb      	ldr	r3, [r7, #12]
 80014a2:	6013      	str	r3, [r2, #0]

}
 80014a4:	bf00      	nop
 80014a6:	3710      	adds	r7, #16
 80014a8:	46bd      	mov	sp, r7
 80014aa:	bd80      	pop	{r7, pc}
 80014ac:	20000674 	.word	0x20000674

080014b0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80014b0:	b480      	push	{r7}
 80014b2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80014b4:	b672      	cpsid	i
}
 80014b6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80014b8:	e7fe      	b.n	80014b8 <Error_Handler+0x8>
	...

080014bc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80014bc:	b480      	push	{r7}
 80014be:	b083      	sub	sp, #12
 80014c0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80014c2:	4b0f      	ldr	r3, [pc, #60]	; (8001500 <HAL_MspInit+0x44>)
 80014c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014c6:	4a0e      	ldr	r2, [pc, #56]	; (8001500 <HAL_MspInit+0x44>)
 80014c8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80014cc:	6413      	str	r3, [r2, #64]	; 0x40
 80014ce:	4b0c      	ldr	r3, [pc, #48]	; (8001500 <HAL_MspInit+0x44>)
 80014d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80014d6:	607b      	str	r3, [r7, #4]
 80014d8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80014da:	4b09      	ldr	r3, [pc, #36]	; (8001500 <HAL_MspInit+0x44>)
 80014dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80014de:	4a08      	ldr	r2, [pc, #32]	; (8001500 <HAL_MspInit+0x44>)
 80014e0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80014e4:	6453      	str	r3, [r2, #68]	; 0x44
 80014e6:	4b06      	ldr	r3, [pc, #24]	; (8001500 <HAL_MspInit+0x44>)
 80014e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80014ea:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80014ee:	603b      	str	r3, [r7, #0]
 80014f0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80014f2:	bf00      	nop
 80014f4:	370c      	adds	r7, #12
 80014f6:	46bd      	mov	sp, r7
 80014f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014fc:	4770      	bx	lr
 80014fe:	bf00      	nop
 8001500:	40023800 	.word	0x40023800

08001504 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001504:	b580      	push	{r7, lr}
 8001506:	b0aa      	sub	sp, #168	; 0xa8
 8001508:	af00      	add	r7, sp, #0
 800150a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800150c:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8001510:	2200      	movs	r2, #0
 8001512:	601a      	str	r2, [r3, #0]
 8001514:	605a      	str	r2, [r3, #4]
 8001516:	609a      	str	r2, [r3, #8]
 8001518:	60da      	str	r2, [r3, #12]
 800151a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800151c:	f107 0314 	add.w	r3, r7, #20
 8001520:	2280      	movs	r2, #128	; 0x80
 8001522:	2100      	movs	r1, #0
 8001524:	4618      	mov	r0, r3
 8001526:	f003 f991 	bl	800484c <memset>
  if(hi2c->Instance==I2C1)
 800152a:	687b      	ldr	r3, [r7, #4]
 800152c:	681b      	ldr	r3, [r3, #0]
 800152e:	4a21      	ldr	r2, [pc, #132]	; (80015b4 <HAL_I2C_MspInit+0xb0>)
 8001530:	4293      	cmp	r3, r2
 8001532:	d13b      	bne.n	80015ac <HAL_I2C_MspInit+0xa8>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8001534:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001538:	617b      	str	r3, [r7, #20]
    PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 800153a:	2300      	movs	r3, #0
 800153c:	673b      	str	r3, [r7, #112]	; 0x70
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800153e:	f107 0314 	add.w	r3, r7, #20
 8001542:	4618      	mov	r0, r3
 8001544:	f002 fd66 	bl	8004014 <HAL_RCCEx_PeriphCLKConfig>
 8001548:	4603      	mov	r3, r0
 800154a:	2b00      	cmp	r3, #0
 800154c:	d001      	beq.n	8001552 <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 800154e:	f7ff ffaf 	bl	80014b0 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001552:	4b19      	ldr	r3, [pc, #100]	; (80015b8 <HAL_I2C_MspInit+0xb4>)
 8001554:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001556:	4a18      	ldr	r2, [pc, #96]	; (80015b8 <HAL_I2C_MspInit+0xb4>)
 8001558:	f043 0302 	orr.w	r3, r3, #2
 800155c:	6313      	str	r3, [r2, #48]	; 0x30
 800155e:	4b16      	ldr	r3, [pc, #88]	; (80015b8 <HAL_I2C_MspInit+0xb4>)
 8001560:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001562:	f003 0302 	and.w	r3, r3, #2
 8001566:	613b      	str	r3, [r7, #16]
 8001568:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800156a:	23c0      	movs	r3, #192	; 0xc0
 800156c:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001570:	2312      	movs	r3, #18
 8001572:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001576:	2300      	movs	r3, #0
 8001578:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800157c:	2303      	movs	r3, #3
 800157e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001582:	2304      	movs	r3, #4
 8001584:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001588:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800158c:	4619      	mov	r1, r3
 800158e:	480b      	ldr	r0, [pc, #44]	; (80015bc <HAL_I2C_MspInit+0xb8>)
 8001590:	f000 fefa 	bl	8002388 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001594:	4b08      	ldr	r3, [pc, #32]	; (80015b8 <HAL_I2C_MspInit+0xb4>)
 8001596:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001598:	4a07      	ldr	r2, [pc, #28]	; (80015b8 <HAL_I2C_MspInit+0xb4>)
 800159a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800159e:	6413      	str	r3, [r2, #64]	; 0x40
 80015a0:	4b05      	ldr	r3, [pc, #20]	; (80015b8 <HAL_I2C_MspInit+0xb4>)
 80015a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015a4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80015a8:	60fb      	str	r3, [r7, #12]
 80015aa:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 80015ac:	bf00      	nop
 80015ae:	37a8      	adds	r7, #168	; 0xa8
 80015b0:	46bd      	mov	sp, r7
 80015b2:	bd80      	pop	{r7, pc}
 80015b4:	40005400 	.word	0x40005400
 80015b8:	40023800 	.word	0x40023800
 80015bc:	40020400 	.word	0x40020400

080015c0 <HAL_I2S_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2s: I2S handle pointer
* @retval None
*/
void HAL_I2S_MspInit(I2S_HandleTypeDef* hi2s)
{
 80015c0:	b580      	push	{r7, lr}
 80015c2:	b08e      	sub	sp, #56	; 0x38
 80015c4:	af00      	add	r7, sp, #0
 80015c6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015c8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80015cc:	2200      	movs	r2, #0
 80015ce:	601a      	str	r2, [r3, #0]
 80015d0:	605a      	str	r2, [r3, #4]
 80015d2:	609a      	str	r2, [r3, #8]
 80015d4:	60da      	str	r2, [r3, #12]
 80015d6:	611a      	str	r2, [r3, #16]
  if(hi2s->Instance==SPI1)
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	4a7c      	ldr	r2, [pc, #496]	; (80017d0 <HAL_I2S_MspInit+0x210>)
 80015de:	4293      	cmp	r3, r2
 80015e0:	d176      	bne.n	80016d0 <HAL_I2S_MspInit+0x110>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 80015e2:	4b7c      	ldr	r3, [pc, #496]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 80015e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015e6:	4a7b      	ldr	r2, [pc, #492]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 80015e8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80015ec:	6453      	str	r3, [r2, #68]	; 0x44
 80015ee:	4b79      	ldr	r3, [pc, #484]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 80015f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015f2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80015f6:	623b      	str	r3, [r7, #32]
 80015f8:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80015fa:	4b76      	ldr	r3, [pc, #472]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 80015fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015fe:	4a75      	ldr	r2, [pc, #468]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 8001600:	f043 0301 	orr.w	r3, r3, #1
 8001604:	6313      	str	r3, [r2, #48]	; 0x30
 8001606:	4b73      	ldr	r3, [pc, #460]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 8001608:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800160a:	f003 0301 	and.w	r3, r3, #1
 800160e:	61fb      	str	r3, [r7, #28]
 8001610:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001612:	4b70      	ldr	r3, [pc, #448]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 8001614:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001616:	4a6f      	ldr	r2, [pc, #444]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 8001618:	f043 0304 	orr.w	r3, r3, #4
 800161c:	6313      	str	r3, [r2, #48]	; 0x30
 800161e:	4b6d      	ldr	r3, [pc, #436]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 8001620:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001622:	f003 0304 	and.w	r3, r3, #4
 8001626:	61bb      	str	r3, [r7, #24]
 8001628:	69bb      	ldr	r3, [r7, #24]
    PA4     ------> I2S1_WS
    PA5     ------> I2S1_CK
    PA7     ------> I2S1_SD
    PC4     ------> I2S1_MCK
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7;
 800162a:	23b0      	movs	r3, #176	; 0xb0
 800162c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800162e:	2302      	movs	r3, #2
 8001630:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001632:	2300      	movs	r3, #0
 8001634:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001636:	2300      	movs	r3, #0
 8001638:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800163a:	2305      	movs	r3, #5
 800163c:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800163e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001642:	4619      	mov	r1, r3
 8001644:	4864      	ldr	r0, [pc, #400]	; (80017d8 <HAL_I2S_MspInit+0x218>)
 8001646:	f000 fe9f 	bl	8002388 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_4;
 800164a:	2310      	movs	r3, #16
 800164c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800164e:	2302      	movs	r3, #2
 8001650:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001652:	2300      	movs	r3, #0
 8001654:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001656:	2300      	movs	r3, #0
 8001658:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800165a:	2305      	movs	r3, #5
 800165c:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800165e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001662:	4619      	mov	r1, r3
 8001664:	485d      	ldr	r0, [pc, #372]	; (80017dc <HAL_I2S_MspInit+0x21c>)
 8001666:	f000 fe8f 	bl	8002388 <HAL_GPIO_Init>

    /* I2S1 DMA Init */
    /* SPI1_TX Init */
    hdma_spi1_tx.Instance = DMA2_Stream3;
 800166a:	4b5d      	ldr	r3, [pc, #372]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 800166c:	4a5d      	ldr	r2, [pc, #372]	; (80017e4 <HAL_I2S_MspInit+0x224>)
 800166e:	601a      	str	r2, [r3, #0]
    hdma_spi1_tx.Init.Channel = DMA_CHANNEL_3;
 8001670:	4b5b      	ldr	r3, [pc, #364]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 8001672:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8001676:	605a      	str	r2, [r3, #4]
    hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001678:	4b59      	ldr	r3, [pc, #356]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 800167a:	2240      	movs	r2, #64	; 0x40
 800167c:	609a      	str	r2, [r3, #8]
    hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800167e:	4b58      	ldr	r3, [pc, #352]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 8001680:	2200      	movs	r2, #0
 8001682:	60da      	str	r2, [r3, #12]
    hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001684:	4b56      	ldr	r3, [pc, #344]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 8001686:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800168a:	611a      	str	r2, [r3, #16]
    hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800168c:	4b54      	ldr	r3, [pc, #336]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 800168e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001692:	615a      	str	r2, [r3, #20]
    hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8001694:	4b52      	ldr	r3, [pc, #328]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 8001696:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800169a:	619a      	str	r2, [r3, #24]
    hdma_spi1_tx.Init.Mode = DMA_CIRCULAR;
 800169c:	4b50      	ldr	r3, [pc, #320]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 800169e:	f44f 7280 	mov.w	r2, #256	; 0x100
 80016a2:	61da      	str	r2, [r3, #28]
    hdma_spi1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 80016a4:	4b4e      	ldr	r3, [pc, #312]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 80016a6:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80016aa:	621a      	str	r2, [r3, #32]
    hdma_spi1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80016ac:	4b4c      	ldr	r3, [pc, #304]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 80016ae:	2200      	movs	r2, #0
 80016b0:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
 80016b2:	484b      	ldr	r0, [pc, #300]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 80016b4:	f000 faf0 	bl	8001c98 <HAL_DMA_Init>
 80016b8:	4603      	mov	r3, r0
 80016ba:	2b00      	cmp	r3, #0
 80016bc:	d001      	beq.n	80016c2 <HAL_I2S_MspInit+0x102>
    {
      Error_Handler();
 80016be:	f7ff fef7 	bl	80014b0 <Error_Handler>
    }

    __HAL_LINKDMA(hi2s,hdmatx,hdma_spi1_tx);
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	4a46      	ldr	r2, [pc, #280]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 80016c6:	631a      	str	r2, [r3, #48]	; 0x30
 80016c8:	4a45      	ldr	r2, [pc, #276]	; (80017e0 <HAL_I2S_MspInit+0x220>)
 80016ca:	687b      	ldr	r3, [r7, #4]
 80016cc:	6393      	str	r3, [r2, #56]	; 0x38
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 80016ce:	e07a      	b.n	80017c6 <HAL_I2S_MspInit+0x206>
  else if(hi2s->Instance==SPI2)
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	4a44      	ldr	r2, [pc, #272]	; (80017e8 <HAL_I2S_MspInit+0x228>)
 80016d6:	4293      	cmp	r3, r2
 80016d8:	d175      	bne.n	80017c6 <HAL_I2S_MspInit+0x206>
    __HAL_RCC_SPI2_CLK_ENABLE();
 80016da:	4b3e      	ldr	r3, [pc, #248]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 80016dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80016de:	4a3d      	ldr	r2, [pc, #244]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 80016e0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80016e4:	6413      	str	r3, [r2, #64]	; 0x40
 80016e6:	4b3b      	ldr	r3, [pc, #236]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 80016e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80016ea:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80016ee:	617b      	str	r3, [r7, #20]
 80016f0:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80016f2:	4b38      	ldr	r3, [pc, #224]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 80016f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016f6:	4a37      	ldr	r2, [pc, #220]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 80016f8:	f043 0304 	orr.w	r3, r3, #4
 80016fc:	6313      	str	r3, [r2, #48]	; 0x30
 80016fe:	4b35      	ldr	r3, [pc, #212]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 8001700:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001702:	f003 0304 	and.w	r3, r3, #4
 8001706:	613b      	str	r3, [r7, #16]
 8001708:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800170a:	4b32      	ldr	r3, [pc, #200]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 800170c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800170e:	4a31      	ldr	r2, [pc, #196]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 8001710:	f043 0302 	orr.w	r3, r3, #2
 8001714:	6313      	str	r3, [r2, #48]	; 0x30
 8001716:	4b2f      	ldr	r3, [pc, #188]	; (80017d4 <HAL_I2S_MspInit+0x214>)
 8001718:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800171a:	f003 0302 	and.w	r3, r3, #2
 800171e:	60fb      	str	r3, [r7, #12]
 8001720:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001722:	2302      	movs	r3, #2
 8001724:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001726:	2302      	movs	r3, #2
 8001728:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800172a:	2300      	movs	r3, #0
 800172c:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800172e:	2300      	movs	r3, #0
 8001730:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001732:	2305      	movs	r3, #5
 8001734:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001736:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800173a:	4619      	mov	r1, r3
 800173c:	4827      	ldr	r0, [pc, #156]	; (80017dc <HAL_I2S_MspInit+0x21c>)
 800173e:	f000 fe23 	bl	8002388 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001742:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8001746:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001748:	2302      	movs	r3, #2
 800174a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800174c:	2300      	movs	r3, #0
 800174e:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001750:	2300      	movs	r3, #0
 8001752:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001754:	2305      	movs	r3, #5
 8001756:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001758:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800175c:	4619      	mov	r1, r3
 800175e:	4823      	ldr	r0, [pc, #140]	; (80017ec <HAL_I2S_MspInit+0x22c>)
 8001760:	f000 fe12 	bl	8002388 <HAL_GPIO_Init>
    hdma_spi2_rx.Instance = DMA1_Stream3;
 8001764:	4b22      	ldr	r3, [pc, #136]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 8001766:	4a23      	ldr	r2, [pc, #140]	; (80017f4 <HAL_I2S_MspInit+0x234>)
 8001768:	601a      	str	r2, [r3, #0]
    hdma_spi2_rx.Init.Channel = DMA_CHANNEL_0;
 800176a:	4b21      	ldr	r3, [pc, #132]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 800176c:	2200      	movs	r2, #0
 800176e:	605a      	str	r2, [r3, #4]
    hdma_spi2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001770:	4b1f      	ldr	r3, [pc, #124]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 8001772:	2200      	movs	r2, #0
 8001774:	609a      	str	r2, [r3, #8]
    hdma_spi2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001776:	4b1e      	ldr	r3, [pc, #120]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 8001778:	2200      	movs	r2, #0
 800177a:	60da      	str	r2, [r3, #12]
    hdma_spi2_rx.Init.MemInc = DMA_MINC_ENABLE;
 800177c:	4b1c      	ldr	r3, [pc, #112]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 800177e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001782:	611a      	str	r2, [r3, #16]
    hdma_spi2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8001784:	4b1a      	ldr	r3, [pc, #104]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 8001786:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800178a:	615a      	str	r2, [r3, #20]
    hdma_spi2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 800178c:	4b18      	ldr	r3, [pc, #96]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 800178e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001792:	619a      	str	r2, [r3, #24]
    hdma_spi2_rx.Init.Mode = DMA_CIRCULAR;
 8001794:	4b16      	ldr	r3, [pc, #88]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 8001796:	f44f 7280 	mov.w	r2, #256	; 0x100
 800179a:	61da      	str	r2, [r3, #28]
    hdma_spi2_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 800179c:	4b14      	ldr	r3, [pc, #80]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 800179e:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80017a2:	621a      	str	r2, [r3, #32]
    hdma_spi2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80017a4:	4b12      	ldr	r3, [pc, #72]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 80017a6:	2200      	movs	r2, #0
 80017a8:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_spi2_rx) != HAL_OK)
 80017aa:	4811      	ldr	r0, [pc, #68]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 80017ac:	f000 fa74 	bl	8001c98 <HAL_DMA_Init>
 80017b0:	4603      	mov	r3, r0
 80017b2:	2b00      	cmp	r3, #0
 80017b4:	d001      	beq.n	80017ba <HAL_I2S_MspInit+0x1fa>
      Error_Handler();
 80017b6:	f7ff fe7b 	bl	80014b0 <Error_Handler>
    __HAL_LINKDMA(hi2s,hdmarx,hdma_spi2_rx);
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	4a0c      	ldr	r2, [pc, #48]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 80017be:	635a      	str	r2, [r3, #52]	; 0x34
 80017c0:	4a0b      	ldr	r2, [pc, #44]	; (80017f0 <HAL_I2S_MspInit+0x230>)
 80017c2:	687b      	ldr	r3, [r7, #4]
 80017c4:	6393      	str	r3, [r2, #56]	; 0x38
}
 80017c6:	bf00      	nop
 80017c8:	3738      	adds	r7, #56	; 0x38
 80017ca:	46bd      	mov	sp, r7
 80017cc:	bd80      	pop	{r7, pc}
 80017ce:	bf00      	nop
 80017d0:	40013000 	.word	0x40013000
 80017d4:	40023800 	.word	0x40023800
 80017d8:	40020000 	.word	0x40020000
 80017dc:	40020800 	.word	0x40020800
 80017e0:	200005b4 	.word	0x200005b4
 80017e4:	40026458 	.word	0x40026458
 80017e8:	40003800 	.word	0x40003800
 80017ec:	40020400 	.word	0x40020400
 80017f0:	20000614 	.word	0x20000614
 80017f4:	40026058 	.word	0x40026058

080017f8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80017f8:	b480      	push	{r7}
 80017fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80017fc:	e7fe      	b.n	80017fc <NMI_Handler+0x4>

080017fe <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80017fe:	b480      	push	{r7}
 8001800:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001802:	e7fe      	b.n	8001802 <HardFault_Handler+0x4>

08001804 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001804:	b480      	push	{r7}
 8001806:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001808:	e7fe      	b.n	8001808 <MemManage_Handler+0x4>

0800180a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800180a:	b480      	push	{r7}
 800180c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800180e:	e7fe      	b.n	800180e <BusFault_Handler+0x4>

08001810 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001810:	b480      	push	{r7}
 8001812:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001814:	e7fe      	b.n	8001814 <UsageFault_Handler+0x4>

08001816 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001816:	b480      	push	{r7}
 8001818:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800181a:	bf00      	nop
 800181c:	46bd      	mov	sp, r7
 800181e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001822:	4770      	bx	lr

08001824 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001824:	b480      	push	{r7}
 8001826:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001828:	bf00      	nop
 800182a:	46bd      	mov	sp, r7
 800182c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001830:	4770      	bx	lr

08001832 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001832:	b480      	push	{r7}
 8001834:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001836:	bf00      	nop
 8001838:	46bd      	mov	sp, r7
 800183a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800183e:	4770      	bx	lr

08001840 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001840:	b580      	push	{r7, lr}
 8001842:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001844:	f000 f8d2 	bl	80019ec <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001848:	bf00      	nop
 800184a:	bd80      	pop	{r7, pc}

0800184c <DMA1_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA1 stream3 global interrupt.
  */
void DMA1_Stream3_IRQHandler(void)
{
 800184c:	b580      	push	{r7, lr}
 800184e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */

  /* USER CODE END DMA1_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_rx);
 8001850:	4802      	ldr	r0, [pc, #8]	; (800185c <DMA1_Stream3_IRQHandler+0x10>)
 8001852:	f000 fb2f 	bl	8001eb4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */

  /* USER CODE END DMA1_Stream3_IRQn 1 */
}
 8001856:	bf00      	nop
 8001858:	bd80      	pop	{r7, pc}
 800185a:	bf00      	nop
 800185c:	20000614 	.word	0x20000614

08001860 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001860:	b580      	push	{r7, lr}
 8001862:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(RotEncoderInA_Pin);
 8001864:	2040      	movs	r0, #64	; 0x40
 8001866:	f000 ff5d 	bl	8002724 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(RotEncoderInB_Pin);
 800186a:	2080      	movs	r0, #128	; 0x80
 800186c:	f000 ff5a 	bl	8002724 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(RotEncoderButton_Pin);
 8001870:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001874:	f000 ff56 	bl	8002724 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001878:	bf00      	nop
 800187a:	bd80      	pop	{r7, pc}

0800187c <DMA2_Stream3_IRQHandler>:

/**
  * @brief This function handles DMA2 stream3 global interrupt.
  */
void DMA2_Stream3_IRQHandler(void)
{
 800187c:	b580      	push	{r7, lr}
 800187e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */

  /* USER CODE END DMA2_Stream3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi1_tx);
 8001880:	4802      	ldr	r0, [pc, #8]	; (800188c <DMA2_Stream3_IRQHandler+0x10>)
 8001882:	f000 fb17 	bl	8001eb4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */

  /* USER CODE END DMA2_Stream3_IRQn 1 */
}
 8001886:	bf00      	nop
 8001888:	bd80      	pop	{r7, pc}
 800188a:	bf00      	nop
 800188c:	200005b4 	.word	0x200005b4

08001890 <_sbrk>:
 8001890:	b580      	push	{r7, lr}
 8001892:	b086      	sub	sp, #24
 8001894:	af00      	add	r7, sp, #0
 8001896:	6078      	str	r0, [r7, #4]
 8001898:	4a14      	ldr	r2, [pc, #80]	; (80018ec <_sbrk+0x5c>)
 800189a:	4b15      	ldr	r3, [pc, #84]	; (80018f0 <_sbrk+0x60>)
 800189c:	1ad3      	subs	r3, r2, r3
 800189e:	617b      	str	r3, [r7, #20]
 80018a0:	697b      	ldr	r3, [r7, #20]
 80018a2:	613b      	str	r3, [r7, #16]
 80018a4:	4b13      	ldr	r3, [pc, #76]	; (80018f4 <_sbrk+0x64>)
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	2b00      	cmp	r3, #0
 80018aa:	d102      	bne.n	80018b2 <_sbrk+0x22>
 80018ac:	4b11      	ldr	r3, [pc, #68]	; (80018f4 <_sbrk+0x64>)
 80018ae:	4a12      	ldr	r2, [pc, #72]	; (80018f8 <_sbrk+0x68>)
 80018b0:	601a      	str	r2, [r3, #0]
 80018b2:	4b10      	ldr	r3, [pc, #64]	; (80018f4 <_sbrk+0x64>)
 80018b4:	681a      	ldr	r2, [r3, #0]
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	4413      	add	r3, r2
 80018ba:	693a      	ldr	r2, [r7, #16]
 80018bc:	429a      	cmp	r2, r3
 80018be:	d207      	bcs.n	80018d0 <_sbrk+0x40>
 80018c0:	f002 ffdc 	bl	800487c <__errno>
 80018c4:	4603      	mov	r3, r0
 80018c6:	220c      	movs	r2, #12
 80018c8:	601a      	str	r2, [r3, #0]
 80018ca:	f04f 33ff 	mov.w	r3, #4294967295
 80018ce:	e009      	b.n	80018e4 <_sbrk+0x54>
 80018d0:	4b08      	ldr	r3, [pc, #32]	; (80018f4 <_sbrk+0x64>)
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	60fb      	str	r3, [r7, #12]
 80018d6:	4b07      	ldr	r3, [pc, #28]	; (80018f4 <_sbrk+0x64>)
 80018d8:	681a      	ldr	r2, [r3, #0]
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	4413      	add	r3, r2
 80018de:	4a05      	ldr	r2, [pc, #20]	; (80018f4 <_sbrk+0x64>)
 80018e0:	6013      	str	r3, [r2, #0]
 80018e2:	68fb      	ldr	r3, [r7, #12]
 80018e4:	4618      	mov	r0, r3
 80018e6:	3718      	adds	r7, #24
 80018e8:	46bd      	mov	sp, r7
 80018ea:	bd80      	pop	{r7, pc}
 80018ec:	20040000 	.word	0x20040000
 80018f0:	00000400 	.word	0x00000400
 80018f4:	20000678 	.word	0x20000678
 80018f8:	200007c8 	.word	0x200007c8

080018fc <SystemInit>:
 80018fc:	b480      	push	{r7}
 80018fe:	af00      	add	r7, sp, #0
 8001900:	4b06      	ldr	r3, [pc, #24]	; (800191c <SystemInit+0x20>)
 8001902:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001906:	4a05      	ldr	r2, [pc, #20]	; (800191c <SystemInit+0x20>)
 8001908:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800190c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001910:	bf00      	nop
 8001912:	46bd      	mov	sp, r7
 8001914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001918:	4770      	bx	lr
 800191a:	bf00      	nop
 800191c:	e000ed00 	.word	0xe000ed00

08001920 <Reset_Handler>:
 8001920:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001958 <LoopFillZerobss+0x12>
 8001924:	480d      	ldr	r0, [pc, #52]	; (800195c <LoopFillZerobss+0x16>)
 8001926:	490e      	ldr	r1, [pc, #56]	; (8001960 <LoopFillZerobss+0x1a>)
 8001928:	4a0e      	ldr	r2, [pc, #56]	; (8001964 <LoopFillZerobss+0x1e>)
 800192a:	2300      	movs	r3, #0
 800192c:	e002      	b.n	8001934 <LoopCopyDataInit>

0800192e <CopyDataInit>:
 800192e:	58d4      	ldr	r4, [r2, r3]
 8001930:	50c4      	str	r4, [r0, r3]
 8001932:	3304      	adds	r3, #4

08001934 <LoopCopyDataInit>:
 8001934:	18c4      	adds	r4, r0, r3
 8001936:	428c      	cmp	r4, r1
 8001938:	d3f9      	bcc.n	800192e <CopyDataInit>
 800193a:	4a0b      	ldr	r2, [pc, #44]	; (8001968 <LoopFillZerobss+0x22>)
 800193c:	4c0b      	ldr	r4, [pc, #44]	; (800196c <LoopFillZerobss+0x26>)
 800193e:	2300      	movs	r3, #0
 8001940:	e001      	b.n	8001946 <LoopFillZerobss>

08001942 <FillZerobss>:
 8001942:	6013      	str	r3, [r2, #0]
 8001944:	3204      	adds	r2, #4

08001946 <LoopFillZerobss>:
 8001946:	42a2      	cmp	r2, r4
 8001948:	d3fb      	bcc.n	8001942 <FillZerobss>
 800194a:	f7ff ffd7 	bl	80018fc <SystemInit>
 800194e:	f002 ff9b 	bl	8004888 <__libc_init_array>
 8001952:	f7ff fb61 	bl	8001018 <main>
 8001956:	4770      	bx	lr
 8001958:	20040000 	.word	0x20040000
 800195c:	20000000 	.word	0x20000000
 8001960:	200000b0 	.word	0x200000b0
 8001964:	0800494c 	.word	0x0800494c
 8001968:	200000b0 	.word	0x200000b0
 800196c:	200007c8 	.word	0x200007c8

08001970 <ADC_IRQHandler>:
 8001970:	e7fe      	b.n	8001970 <ADC_IRQHandler>

08001972 <HAL_Init>:
 8001972:	b580      	push	{r7, lr}
 8001974:	af00      	add	r7, sp, #0
 8001976:	2003      	movs	r0, #3
 8001978:	f000 f94c 	bl	8001c14 <HAL_NVIC_SetPriorityGrouping>
 800197c:	200f      	movs	r0, #15
 800197e:	f000 f805 	bl	800198c <HAL_InitTick>
 8001982:	f7ff fd9b 	bl	80014bc <HAL_MspInit>
 8001986:	2300      	movs	r3, #0
 8001988:	4618      	mov	r0, r3
 800198a:	bd80      	pop	{r7, pc}

0800198c <HAL_InitTick>:
 800198c:	b580      	push	{r7, lr}
 800198e:	b082      	sub	sp, #8
 8001990:	af00      	add	r7, sp, #0
 8001992:	6078      	str	r0, [r7, #4]
 8001994:	4b12      	ldr	r3, [pc, #72]	; (80019e0 <HAL_InitTick+0x54>)
 8001996:	681a      	ldr	r2, [r3, #0]
 8001998:	4b12      	ldr	r3, [pc, #72]	; (80019e4 <HAL_InitTick+0x58>)
 800199a:	781b      	ldrb	r3, [r3, #0]
 800199c:	4619      	mov	r1, r3
 800199e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80019a2:	fbb3 f3f1 	udiv	r3, r3, r1
 80019a6:	fbb2 f3f3 	udiv	r3, r2, r3
 80019aa:	4618      	mov	r0, r3
 80019ac:	f000 f967 	bl	8001c7e <HAL_SYSTICK_Config>
 80019b0:	4603      	mov	r3, r0
 80019b2:	2b00      	cmp	r3, #0
 80019b4:	d001      	beq.n	80019ba <HAL_InitTick+0x2e>
 80019b6:	2301      	movs	r3, #1
 80019b8:	e00e      	b.n	80019d8 <HAL_InitTick+0x4c>
 80019ba:	687b      	ldr	r3, [r7, #4]
 80019bc:	2b0f      	cmp	r3, #15
 80019be:	d80a      	bhi.n	80019d6 <HAL_InitTick+0x4a>
 80019c0:	2200      	movs	r2, #0
 80019c2:	6879      	ldr	r1, [r7, #4]
 80019c4:	f04f 30ff 	mov.w	r0, #4294967295
 80019c8:	f000 f92f 	bl	8001c2a <HAL_NVIC_SetPriority>
 80019cc:	4a06      	ldr	r2, [pc, #24]	; (80019e8 <HAL_InitTick+0x5c>)
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	6013      	str	r3, [r2, #0]
 80019d2:	2300      	movs	r3, #0
 80019d4:	e000      	b.n	80019d8 <HAL_InitTick+0x4c>
 80019d6:	2301      	movs	r3, #1
 80019d8:	4618      	mov	r0, r3
 80019da:	3708      	adds	r7, #8
 80019dc:	46bd      	mov	sp, r7
 80019de:	bd80      	pop	{r7, pc}
 80019e0:	20000054 	.word	0x20000054
 80019e4:	2000005c 	.word	0x2000005c
 80019e8:	20000058 	.word	0x20000058

080019ec <HAL_IncTick>:
 80019ec:	b480      	push	{r7}
 80019ee:	af00      	add	r7, sp, #0
 80019f0:	4b06      	ldr	r3, [pc, #24]	; (8001a0c <HAL_IncTick+0x20>)
 80019f2:	781b      	ldrb	r3, [r3, #0]
 80019f4:	461a      	mov	r2, r3
 80019f6:	4b06      	ldr	r3, [pc, #24]	; (8001a10 <HAL_IncTick+0x24>)
 80019f8:	681b      	ldr	r3, [r3, #0]
 80019fa:	4413      	add	r3, r2
 80019fc:	4a04      	ldr	r2, [pc, #16]	; (8001a10 <HAL_IncTick+0x24>)
 80019fe:	6013      	str	r3, [r2, #0]
 8001a00:	bf00      	nop
 8001a02:	46bd      	mov	sp, r7
 8001a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a08:	4770      	bx	lr
 8001a0a:	bf00      	nop
 8001a0c:	2000005c 	.word	0x2000005c
 8001a10:	2000067c 	.word	0x2000067c

08001a14 <HAL_GetTick>:
 8001a14:	b480      	push	{r7}
 8001a16:	af00      	add	r7, sp, #0
 8001a18:	4b03      	ldr	r3, [pc, #12]	; (8001a28 <HAL_GetTick+0x14>)
 8001a1a:	681b      	ldr	r3, [r3, #0]
 8001a1c:	4618      	mov	r0, r3
 8001a1e:	46bd      	mov	sp, r7
 8001a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a24:	4770      	bx	lr
 8001a26:	bf00      	nop
 8001a28:	2000067c 	.word	0x2000067c

08001a2c <HAL_Delay>:
 8001a2c:	b580      	push	{r7, lr}
 8001a2e:	b084      	sub	sp, #16
 8001a30:	af00      	add	r7, sp, #0
 8001a32:	6078      	str	r0, [r7, #4]
 8001a34:	f7ff ffee 	bl	8001a14 <HAL_GetTick>
 8001a38:	60b8      	str	r0, [r7, #8]
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	60fb      	str	r3, [r7, #12]
 8001a3e:	68fb      	ldr	r3, [r7, #12]
 8001a40:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001a44:	d005      	beq.n	8001a52 <HAL_Delay+0x26>
 8001a46:	4b0a      	ldr	r3, [pc, #40]	; (8001a70 <HAL_Delay+0x44>)
 8001a48:	781b      	ldrb	r3, [r3, #0]
 8001a4a:	461a      	mov	r2, r3
 8001a4c:	68fb      	ldr	r3, [r7, #12]
 8001a4e:	4413      	add	r3, r2
 8001a50:	60fb      	str	r3, [r7, #12]
 8001a52:	bf00      	nop
 8001a54:	f7ff ffde 	bl	8001a14 <HAL_GetTick>
 8001a58:	4602      	mov	r2, r0
 8001a5a:	68bb      	ldr	r3, [r7, #8]
 8001a5c:	1ad3      	subs	r3, r2, r3
 8001a5e:	68fa      	ldr	r2, [r7, #12]
 8001a60:	429a      	cmp	r2, r3
 8001a62:	d8f7      	bhi.n	8001a54 <HAL_Delay+0x28>
 8001a64:	bf00      	nop
 8001a66:	bf00      	nop
 8001a68:	3710      	adds	r7, #16
 8001a6a:	46bd      	mov	sp, r7
 8001a6c:	bd80      	pop	{r7, pc}
 8001a6e:	bf00      	nop
 8001a70:	2000005c 	.word	0x2000005c

08001a74 <__NVIC_SetPriorityGrouping>:
 8001a74:	b480      	push	{r7}
 8001a76:	b085      	sub	sp, #20
 8001a78:	af00      	add	r7, sp, #0
 8001a7a:	6078      	str	r0, [r7, #4]
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	f003 0307 	and.w	r3, r3, #7
 8001a82:	60fb      	str	r3, [r7, #12]
 8001a84:	4b0b      	ldr	r3, [pc, #44]	; (8001ab4 <__NVIC_SetPriorityGrouping+0x40>)
 8001a86:	68db      	ldr	r3, [r3, #12]
 8001a88:	60bb      	str	r3, [r7, #8]
 8001a8a:	68ba      	ldr	r2, [r7, #8]
 8001a8c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001a90:	4013      	ands	r3, r2
 8001a92:	60bb      	str	r3, [r7, #8]
 8001a94:	68fb      	ldr	r3, [r7, #12]
 8001a96:	021a      	lsls	r2, r3, #8
 8001a98:	68bb      	ldr	r3, [r7, #8]
 8001a9a:	431a      	orrs	r2, r3
 8001a9c:	4b06      	ldr	r3, [pc, #24]	; (8001ab8 <__NVIC_SetPriorityGrouping+0x44>)
 8001a9e:	4313      	orrs	r3, r2
 8001aa0:	60bb      	str	r3, [r7, #8]
 8001aa2:	4a04      	ldr	r2, [pc, #16]	; (8001ab4 <__NVIC_SetPriorityGrouping+0x40>)
 8001aa4:	68bb      	ldr	r3, [r7, #8]
 8001aa6:	60d3      	str	r3, [r2, #12]
 8001aa8:	bf00      	nop
 8001aaa:	3714      	adds	r7, #20
 8001aac:	46bd      	mov	sp, r7
 8001aae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ab2:	4770      	bx	lr
 8001ab4:	e000ed00 	.word	0xe000ed00
 8001ab8:	05fa0000 	.word	0x05fa0000

08001abc <__NVIC_GetPriorityGrouping>:
 8001abc:	b480      	push	{r7}
 8001abe:	af00      	add	r7, sp, #0
 8001ac0:	4b04      	ldr	r3, [pc, #16]	; (8001ad4 <__NVIC_GetPriorityGrouping+0x18>)
 8001ac2:	68db      	ldr	r3, [r3, #12]
 8001ac4:	0a1b      	lsrs	r3, r3, #8
 8001ac6:	f003 0307 	and.w	r3, r3, #7
 8001aca:	4618      	mov	r0, r3
 8001acc:	46bd      	mov	sp, r7
 8001ace:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ad2:	4770      	bx	lr
 8001ad4:	e000ed00 	.word	0xe000ed00

08001ad8 <__NVIC_EnableIRQ>:
 8001ad8:	b480      	push	{r7}
 8001ada:	b083      	sub	sp, #12
 8001adc:	af00      	add	r7, sp, #0
 8001ade:	4603      	mov	r3, r0
 8001ae0:	71fb      	strb	r3, [r7, #7]
 8001ae2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ae6:	2b00      	cmp	r3, #0
 8001ae8:	db0b      	blt.n	8001b02 <__NVIC_EnableIRQ+0x2a>
 8001aea:	79fb      	ldrb	r3, [r7, #7]
 8001aec:	f003 021f 	and.w	r2, r3, #31
 8001af0:	4907      	ldr	r1, [pc, #28]	; (8001b10 <__NVIC_EnableIRQ+0x38>)
 8001af2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001af6:	095b      	lsrs	r3, r3, #5
 8001af8:	2001      	movs	r0, #1
 8001afa:	fa00 f202 	lsl.w	r2, r0, r2
 8001afe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001b02:	bf00      	nop
 8001b04:	370c      	adds	r7, #12
 8001b06:	46bd      	mov	sp, r7
 8001b08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b0c:	4770      	bx	lr
 8001b0e:	bf00      	nop
 8001b10:	e000e100 	.word	0xe000e100

08001b14 <__NVIC_SetPriority>:
 8001b14:	b480      	push	{r7}
 8001b16:	b083      	sub	sp, #12
 8001b18:	af00      	add	r7, sp, #0
 8001b1a:	4603      	mov	r3, r0
 8001b1c:	6039      	str	r1, [r7, #0]
 8001b1e:	71fb      	strb	r3, [r7, #7]
 8001b20:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b24:	2b00      	cmp	r3, #0
 8001b26:	db0a      	blt.n	8001b3e <__NVIC_SetPriority+0x2a>
 8001b28:	683b      	ldr	r3, [r7, #0]
 8001b2a:	b2da      	uxtb	r2, r3
 8001b2c:	490c      	ldr	r1, [pc, #48]	; (8001b60 <__NVIC_SetPriority+0x4c>)
 8001b2e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b32:	0112      	lsls	r2, r2, #4
 8001b34:	b2d2      	uxtb	r2, r2
 8001b36:	440b      	add	r3, r1
 8001b38:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001b3c:	e00a      	b.n	8001b54 <__NVIC_SetPriority+0x40>
 8001b3e:	683b      	ldr	r3, [r7, #0]
 8001b40:	b2da      	uxtb	r2, r3
 8001b42:	4908      	ldr	r1, [pc, #32]	; (8001b64 <__NVIC_SetPriority+0x50>)
 8001b44:	79fb      	ldrb	r3, [r7, #7]
 8001b46:	f003 030f 	and.w	r3, r3, #15
 8001b4a:	3b04      	subs	r3, #4
 8001b4c:	0112      	lsls	r2, r2, #4
 8001b4e:	b2d2      	uxtb	r2, r2
 8001b50:	440b      	add	r3, r1
 8001b52:	761a      	strb	r2, [r3, #24]
 8001b54:	bf00      	nop
 8001b56:	370c      	adds	r7, #12
 8001b58:	46bd      	mov	sp, r7
 8001b5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b5e:	4770      	bx	lr
 8001b60:	e000e100 	.word	0xe000e100
 8001b64:	e000ed00 	.word	0xe000ed00

08001b68 <NVIC_EncodePriority>:
 8001b68:	b480      	push	{r7}
 8001b6a:	b089      	sub	sp, #36	; 0x24
 8001b6c:	af00      	add	r7, sp, #0
 8001b6e:	60f8      	str	r0, [r7, #12]
 8001b70:	60b9      	str	r1, [r7, #8]
 8001b72:	607a      	str	r2, [r7, #4]
 8001b74:	68fb      	ldr	r3, [r7, #12]
 8001b76:	f003 0307 	and.w	r3, r3, #7
 8001b7a:	61fb      	str	r3, [r7, #28]
 8001b7c:	69fb      	ldr	r3, [r7, #28]
 8001b7e:	f1c3 0307 	rsb	r3, r3, #7
 8001b82:	2b04      	cmp	r3, #4
 8001b84:	bf28      	it	cs
 8001b86:	2304      	movcs	r3, #4
 8001b88:	61bb      	str	r3, [r7, #24]
 8001b8a:	69fb      	ldr	r3, [r7, #28]
 8001b8c:	3304      	adds	r3, #4
 8001b8e:	2b06      	cmp	r3, #6
 8001b90:	d902      	bls.n	8001b98 <NVIC_EncodePriority+0x30>
 8001b92:	69fb      	ldr	r3, [r7, #28]
 8001b94:	3b03      	subs	r3, #3
 8001b96:	e000      	b.n	8001b9a <NVIC_EncodePriority+0x32>
 8001b98:	2300      	movs	r3, #0
 8001b9a:	617b      	str	r3, [r7, #20]
 8001b9c:	f04f 32ff 	mov.w	r2, #4294967295
 8001ba0:	69bb      	ldr	r3, [r7, #24]
 8001ba2:	fa02 f303 	lsl.w	r3, r2, r3
 8001ba6:	43da      	mvns	r2, r3
 8001ba8:	68bb      	ldr	r3, [r7, #8]
 8001baa:	401a      	ands	r2, r3
 8001bac:	697b      	ldr	r3, [r7, #20]
 8001bae:	409a      	lsls	r2, r3
 8001bb0:	f04f 31ff 	mov.w	r1, #4294967295
 8001bb4:	697b      	ldr	r3, [r7, #20]
 8001bb6:	fa01 f303 	lsl.w	r3, r1, r3
 8001bba:	43d9      	mvns	r1, r3
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	400b      	ands	r3, r1
 8001bc0:	4313      	orrs	r3, r2
 8001bc2:	4618      	mov	r0, r3
 8001bc4:	3724      	adds	r7, #36	; 0x24
 8001bc6:	46bd      	mov	sp, r7
 8001bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bcc:	4770      	bx	lr
	...

08001bd0 <SysTick_Config>:
 8001bd0:	b580      	push	{r7, lr}
 8001bd2:	b082      	sub	sp, #8
 8001bd4:	af00      	add	r7, sp, #0
 8001bd6:	6078      	str	r0, [r7, #4]
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	3b01      	subs	r3, #1
 8001bdc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001be0:	d301      	bcc.n	8001be6 <SysTick_Config+0x16>
 8001be2:	2301      	movs	r3, #1
 8001be4:	e00f      	b.n	8001c06 <SysTick_Config+0x36>
 8001be6:	4a0a      	ldr	r2, [pc, #40]	; (8001c10 <SysTick_Config+0x40>)
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	3b01      	subs	r3, #1
 8001bec:	6053      	str	r3, [r2, #4]
 8001bee:	210f      	movs	r1, #15
 8001bf0:	f04f 30ff 	mov.w	r0, #4294967295
 8001bf4:	f7ff ff8e 	bl	8001b14 <__NVIC_SetPriority>
 8001bf8:	4b05      	ldr	r3, [pc, #20]	; (8001c10 <SysTick_Config+0x40>)
 8001bfa:	2200      	movs	r2, #0
 8001bfc:	609a      	str	r2, [r3, #8]
 8001bfe:	4b04      	ldr	r3, [pc, #16]	; (8001c10 <SysTick_Config+0x40>)
 8001c00:	2207      	movs	r2, #7
 8001c02:	601a      	str	r2, [r3, #0]
 8001c04:	2300      	movs	r3, #0
 8001c06:	4618      	mov	r0, r3
 8001c08:	3708      	adds	r7, #8
 8001c0a:	46bd      	mov	sp, r7
 8001c0c:	bd80      	pop	{r7, pc}
 8001c0e:	bf00      	nop
 8001c10:	e000e010 	.word	0xe000e010

08001c14 <HAL_NVIC_SetPriorityGrouping>:
 8001c14:	b580      	push	{r7, lr}
 8001c16:	b082      	sub	sp, #8
 8001c18:	af00      	add	r7, sp, #0
 8001c1a:	6078      	str	r0, [r7, #4]
 8001c1c:	6878      	ldr	r0, [r7, #4]
 8001c1e:	f7ff ff29 	bl	8001a74 <__NVIC_SetPriorityGrouping>
 8001c22:	bf00      	nop
 8001c24:	3708      	adds	r7, #8
 8001c26:	46bd      	mov	sp, r7
 8001c28:	bd80      	pop	{r7, pc}

08001c2a <HAL_NVIC_SetPriority>:
 8001c2a:	b580      	push	{r7, lr}
 8001c2c:	b086      	sub	sp, #24
 8001c2e:	af00      	add	r7, sp, #0
 8001c30:	4603      	mov	r3, r0
 8001c32:	60b9      	str	r1, [r7, #8]
 8001c34:	607a      	str	r2, [r7, #4]
 8001c36:	73fb      	strb	r3, [r7, #15]
 8001c38:	2300      	movs	r3, #0
 8001c3a:	617b      	str	r3, [r7, #20]
 8001c3c:	f7ff ff3e 	bl	8001abc <__NVIC_GetPriorityGrouping>
 8001c40:	6178      	str	r0, [r7, #20]
 8001c42:	687a      	ldr	r2, [r7, #4]
 8001c44:	68b9      	ldr	r1, [r7, #8]
 8001c46:	6978      	ldr	r0, [r7, #20]
 8001c48:	f7ff ff8e 	bl	8001b68 <NVIC_EncodePriority>
 8001c4c:	4602      	mov	r2, r0
 8001c4e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001c52:	4611      	mov	r1, r2
 8001c54:	4618      	mov	r0, r3
 8001c56:	f7ff ff5d 	bl	8001b14 <__NVIC_SetPriority>
 8001c5a:	bf00      	nop
 8001c5c:	3718      	adds	r7, #24
 8001c5e:	46bd      	mov	sp, r7
 8001c60:	bd80      	pop	{r7, pc}

08001c62 <HAL_NVIC_EnableIRQ>:
 8001c62:	b580      	push	{r7, lr}
 8001c64:	b082      	sub	sp, #8
 8001c66:	af00      	add	r7, sp, #0
 8001c68:	4603      	mov	r3, r0
 8001c6a:	71fb      	strb	r3, [r7, #7]
 8001c6c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c70:	4618      	mov	r0, r3
 8001c72:	f7ff ff31 	bl	8001ad8 <__NVIC_EnableIRQ>
 8001c76:	bf00      	nop
 8001c78:	3708      	adds	r7, #8
 8001c7a:	46bd      	mov	sp, r7
 8001c7c:	bd80      	pop	{r7, pc}

08001c7e <HAL_SYSTICK_Config>:
 8001c7e:	b580      	push	{r7, lr}
 8001c80:	b082      	sub	sp, #8
 8001c82:	af00      	add	r7, sp, #0
 8001c84:	6078      	str	r0, [r7, #4]
 8001c86:	6878      	ldr	r0, [r7, #4]
 8001c88:	f7ff ffa2 	bl	8001bd0 <SysTick_Config>
 8001c8c:	4603      	mov	r3, r0
 8001c8e:	4618      	mov	r0, r3
 8001c90:	3708      	adds	r7, #8
 8001c92:	46bd      	mov	sp, r7
 8001c94:	bd80      	pop	{r7, pc}
	...

08001c98 <HAL_DMA_Init>:
 8001c98:	b580      	push	{r7, lr}
 8001c9a:	b086      	sub	sp, #24
 8001c9c:	af00      	add	r7, sp, #0
 8001c9e:	6078      	str	r0, [r7, #4]
 8001ca0:	2300      	movs	r3, #0
 8001ca2:	617b      	str	r3, [r7, #20]
 8001ca4:	f7ff feb6 	bl	8001a14 <HAL_GetTick>
 8001ca8:	6138      	str	r0, [r7, #16]
 8001caa:	687b      	ldr	r3, [r7, #4]
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	d101      	bne.n	8001cb4 <HAL_DMA_Init+0x1c>
 8001cb0:	2301      	movs	r3, #1
 8001cb2:	e099      	b.n	8001de8 <HAL_DMA_Init+0x150>
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	2202      	movs	r2, #2
 8001cb8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	2200      	movs	r2, #0
 8001cc0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	681b      	ldr	r3, [r3, #0]
 8001cc8:	681a      	ldr	r2, [r3, #0]
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	681b      	ldr	r3, [r3, #0]
 8001cce:	f022 0201 	bic.w	r2, r2, #1
 8001cd2:	601a      	str	r2, [r3, #0]
 8001cd4:	e00f      	b.n	8001cf6 <HAL_DMA_Init+0x5e>
 8001cd6:	f7ff fe9d 	bl	8001a14 <HAL_GetTick>
 8001cda:	4602      	mov	r2, r0
 8001cdc:	693b      	ldr	r3, [r7, #16]
 8001cde:	1ad3      	subs	r3, r2, r3
 8001ce0:	2b05      	cmp	r3, #5
 8001ce2:	d908      	bls.n	8001cf6 <HAL_DMA_Init+0x5e>
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	2220      	movs	r2, #32
 8001ce8:	655a      	str	r2, [r3, #84]	; 0x54
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	2203      	movs	r2, #3
 8001cee:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001cf2:	2303      	movs	r3, #3
 8001cf4:	e078      	b.n	8001de8 <HAL_DMA_Init+0x150>
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	681b      	ldr	r3, [r3, #0]
 8001cfc:	f003 0301 	and.w	r3, r3, #1
 8001d00:	2b00      	cmp	r3, #0
 8001d02:	d1e8      	bne.n	8001cd6 <HAL_DMA_Init+0x3e>
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	617b      	str	r3, [r7, #20]
 8001d0c:	697a      	ldr	r2, [r7, #20]
 8001d0e:	4b38      	ldr	r3, [pc, #224]	; (8001df0 <HAL_DMA_Init+0x158>)
 8001d10:	4013      	ands	r3, r2
 8001d12:	617b      	str	r3, [r7, #20]
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	685a      	ldr	r2, [r3, #4]
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	689b      	ldr	r3, [r3, #8]
 8001d1c:	431a      	orrs	r2, r3
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	68db      	ldr	r3, [r3, #12]
 8001d22:	431a      	orrs	r2, r3
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	691b      	ldr	r3, [r3, #16]
 8001d28:	431a      	orrs	r2, r3
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	695b      	ldr	r3, [r3, #20]
 8001d2e:	431a      	orrs	r2, r3
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	699b      	ldr	r3, [r3, #24]
 8001d34:	431a      	orrs	r2, r3
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	69db      	ldr	r3, [r3, #28]
 8001d3a:	431a      	orrs	r2, r3
 8001d3c:	687b      	ldr	r3, [r7, #4]
 8001d3e:	6a1b      	ldr	r3, [r3, #32]
 8001d40:	4313      	orrs	r3, r2
 8001d42:	697a      	ldr	r2, [r7, #20]
 8001d44:	4313      	orrs	r3, r2
 8001d46:	617b      	str	r3, [r7, #20]
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d4c:	2b04      	cmp	r3, #4
 8001d4e:	d107      	bne.n	8001d60 <HAL_DMA_Init+0xc8>
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d58:	4313      	orrs	r3, r2
 8001d5a:	697a      	ldr	r2, [r7, #20]
 8001d5c:	4313      	orrs	r3, r2
 8001d5e:	617b      	str	r3, [r7, #20]
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	681b      	ldr	r3, [r3, #0]
 8001d64:	697a      	ldr	r2, [r7, #20]
 8001d66:	601a      	str	r2, [r3, #0]
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	695b      	ldr	r3, [r3, #20]
 8001d6e:	617b      	str	r3, [r7, #20]
 8001d70:	697b      	ldr	r3, [r7, #20]
 8001d72:	f023 0307 	bic.w	r3, r3, #7
 8001d76:	617b      	str	r3, [r7, #20]
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d7c:	697a      	ldr	r2, [r7, #20]
 8001d7e:	4313      	orrs	r3, r2
 8001d80:	617b      	str	r3, [r7, #20]
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d86:	2b04      	cmp	r3, #4
 8001d88:	d117      	bne.n	8001dba <HAL_DMA_Init+0x122>
 8001d8a:	687b      	ldr	r3, [r7, #4]
 8001d8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001d8e:	697a      	ldr	r2, [r7, #20]
 8001d90:	4313      	orrs	r3, r2
 8001d92:	617b      	str	r3, [r7, #20]
 8001d94:	687b      	ldr	r3, [r7, #4]
 8001d96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001d98:	2b00      	cmp	r3, #0
 8001d9a:	d00e      	beq.n	8001dba <HAL_DMA_Init+0x122>
 8001d9c:	6878      	ldr	r0, [r7, #4]
 8001d9e:	f000 fa77 	bl	8002290 <DMA_CheckFifoParam>
 8001da2:	4603      	mov	r3, r0
 8001da4:	2b00      	cmp	r3, #0
 8001da6:	d008      	beq.n	8001dba <HAL_DMA_Init+0x122>
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	2240      	movs	r2, #64	; 0x40
 8001dac:	655a      	str	r2, [r3, #84]	; 0x54
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	2201      	movs	r2, #1
 8001db2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001db6:	2301      	movs	r3, #1
 8001db8:	e016      	b.n	8001de8 <HAL_DMA_Init+0x150>
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	681b      	ldr	r3, [r3, #0]
 8001dbe:	697a      	ldr	r2, [r7, #20]
 8001dc0:	615a      	str	r2, [r3, #20]
 8001dc2:	6878      	ldr	r0, [r7, #4]
 8001dc4:	f000 fa2e 	bl	8002224 <DMA_CalcBaseAndBitshift>
 8001dc8:	4603      	mov	r3, r0
 8001dca:	60fb      	str	r3, [r7, #12]
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001dd0:	223f      	movs	r2, #63	; 0x3f
 8001dd2:	409a      	lsls	r2, r3
 8001dd4:	68fb      	ldr	r3, [r7, #12]
 8001dd6:	609a      	str	r2, [r3, #8]
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	2200      	movs	r2, #0
 8001ddc:	655a      	str	r2, [r3, #84]	; 0x54
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	2201      	movs	r2, #1
 8001de2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001de6:	2300      	movs	r3, #0
 8001de8:	4618      	mov	r0, r3
 8001dea:	3718      	adds	r7, #24
 8001dec:	46bd      	mov	sp, r7
 8001dee:	bd80      	pop	{r7, pc}
 8001df0:	e010803f 	.word	0xe010803f

08001df4 <HAL_DMA_Start_IT>:
 8001df4:	b580      	push	{r7, lr}
 8001df6:	b086      	sub	sp, #24
 8001df8:	af00      	add	r7, sp, #0
 8001dfa:	60f8      	str	r0, [r7, #12]
 8001dfc:	60b9      	str	r1, [r7, #8]
 8001dfe:	607a      	str	r2, [r7, #4]
 8001e00:	603b      	str	r3, [r7, #0]
 8001e02:	2300      	movs	r3, #0
 8001e04:	75fb      	strb	r3, [r7, #23]
 8001e06:	68fb      	ldr	r3, [r7, #12]
 8001e08:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001e0a:	613b      	str	r3, [r7, #16]
 8001e0c:	68fb      	ldr	r3, [r7, #12]
 8001e0e:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8001e12:	2b01      	cmp	r3, #1
 8001e14:	d101      	bne.n	8001e1a <HAL_DMA_Start_IT+0x26>
 8001e16:	2302      	movs	r3, #2
 8001e18:	e048      	b.n	8001eac <HAL_DMA_Start_IT+0xb8>
 8001e1a:	68fb      	ldr	r3, [r7, #12]
 8001e1c:	2201      	movs	r2, #1
 8001e1e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001e22:	68fb      	ldr	r3, [r7, #12]
 8001e24:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001e28:	b2db      	uxtb	r3, r3
 8001e2a:	2b01      	cmp	r3, #1
 8001e2c:	d137      	bne.n	8001e9e <HAL_DMA_Start_IT+0xaa>
 8001e2e:	68fb      	ldr	r3, [r7, #12]
 8001e30:	2202      	movs	r2, #2
 8001e32:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001e36:	68fb      	ldr	r3, [r7, #12]
 8001e38:	2200      	movs	r2, #0
 8001e3a:	655a      	str	r2, [r3, #84]	; 0x54
 8001e3c:	683b      	ldr	r3, [r7, #0]
 8001e3e:	687a      	ldr	r2, [r7, #4]
 8001e40:	68b9      	ldr	r1, [r7, #8]
 8001e42:	68f8      	ldr	r0, [r7, #12]
 8001e44:	f000 f9c0 	bl	80021c8 <DMA_SetConfig>
 8001e48:	68fb      	ldr	r3, [r7, #12]
 8001e4a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001e4c:	223f      	movs	r2, #63	; 0x3f
 8001e4e:	409a      	lsls	r2, r3
 8001e50:	693b      	ldr	r3, [r7, #16]
 8001e52:	609a      	str	r2, [r3, #8]
 8001e54:	68fb      	ldr	r3, [r7, #12]
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	681a      	ldr	r2, [r3, #0]
 8001e5a:	68fb      	ldr	r3, [r7, #12]
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	f042 0216 	orr.w	r2, r2, #22
 8001e62:	601a      	str	r2, [r3, #0]
 8001e64:	68fb      	ldr	r3, [r7, #12]
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	695a      	ldr	r2, [r3, #20]
 8001e6a:	68fb      	ldr	r3, [r7, #12]
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001e72:	615a      	str	r2, [r3, #20]
 8001e74:	68fb      	ldr	r3, [r7, #12]
 8001e76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e78:	2b00      	cmp	r3, #0
 8001e7a:	d007      	beq.n	8001e8c <HAL_DMA_Start_IT+0x98>
 8001e7c:	68fb      	ldr	r3, [r7, #12]
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	681a      	ldr	r2, [r3, #0]
 8001e82:	68fb      	ldr	r3, [r7, #12]
 8001e84:	681b      	ldr	r3, [r3, #0]
 8001e86:	f042 0208 	orr.w	r2, r2, #8
 8001e8a:	601a      	str	r2, [r3, #0]
 8001e8c:	68fb      	ldr	r3, [r7, #12]
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	681a      	ldr	r2, [r3, #0]
 8001e92:	68fb      	ldr	r3, [r7, #12]
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	f042 0201 	orr.w	r2, r2, #1
 8001e9a:	601a      	str	r2, [r3, #0]
 8001e9c:	e005      	b.n	8001eaa <HAL_DMA_Start_IT+0xb6>
 8001e9e:	68fb      	ldr	r3, [r7, #12]
 8001ea0:	2200      	movs	r2, #0
 8001ea2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001ea6:	2302      	movs	r3, #2
 8001ea8:	75fb      	strb	r3, [r7, #23]
 8001eaa:	7dfb      	ldrb	r3, [r7, #23]
 8001eac:	4618      	mov	r0, r3
 8001eae:	3718      	adds	r7, #24
 8001eb0:	46bd      	mov	sp, r7
 8001eb2:	bd80      	pop	{r7, pc}

08001eb4 <HAL_DMA_IRQHandler>:
 8001eb4:	b580      	push	{r7, lr}
 8001eb6:	b086      	sub	sp, #24
 8001eb8:	af00      	add	r7, sp, #0
 8001eba:	6078      	str	r0, [r7, #4]
 8001ebc:	2300      	movs	r3, #0
 8001ebe:	60bb      	str	r3, [r7, #8]
 8001ec0:	4b8e      	ldr	r3, [pc, #568]	; (80020fc <HAL_DMA_IRQHandler+0x248>)
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	4a8e      	ldr	r2, [pc, #568]	; (8002100 <HAL_DMA_IRQHandler+0x24c>)
 8001ec6:	fba2 2303 	umull	r2, r3, r2, r3
 8001eca:	0a9b      	lsrs	r3, r3, #10
 8001ecc:	617b      	str	r3, [r7, #20]
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001ed2:	613b      	str	r3, [r7, #16]
 8001ed4:	693b      	ldr	r3, [r7, #16]
 8001ed6:	681b      	ldr	r3, [r3, #0]
 8001ed8:	60fb      	str	r3, [r7, #12]
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001ede:	2208      	movs	r2, #8
 8001ee0:	409a      	lsls	r2, r3
 8001ee2:	68fb      	ldr	r3, [r7, #12]
 8001ee4:	4013      	ands	r3, r2
 8001ee6:	2b00      	cmp	r3, #0
 8001ee8:	d01a      	beq.n	8001f20 <HAL_DMA_IRQHandler+0x6c>
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	681b      	ldr	r3, [r3, #0]
 8001eee:	681b      	ldr	r3, [r3, #0]
 8001ef0:	f003 0304 	and.w	r3, r3, #4
 8001ef4:	2b00      	cmp	r3, #0
 8001ef6:	d013      	beq.n	8001f20 <HAL_DMA_IRQHandler+0x6c>
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	681b      	ldr	r3, [r3, #0]
 8001efc:	681a      	ldr	r2, [r3, #0]
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	681b      	ldr	r3, [r3, #0]
 8001f02:	f022 0204 	bic.w	r2, r2, #4
 8001f06:	601a      	str	r2, [r3, #0]
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001f0c:	2208      	movs	r2, #8
 8001f0e:	409a      	lsls	r2, r3
 8001f10:	693b      	ldr	r3, [r7, #16]
 8001f12:	609a      	str	r2, [r3, #8]
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001f18:	f043 0201 	orr.w	r2, r3, #1
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	655a      	str	r2, [r3, #84]	; 0x54
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001f24:	2201      	movs	r2, #1
 8001f26:	409a      	lsls	r2, r3
 8001f28:	68fb      	ldr	r3, [r7, #12]
 8001f2a:	4013      	ands	r3, r2
 8001f2c:	2b00      	cmp	r3, #0
 8001f2e:	d012      	beq.n	8001f56 <HAL_DMA_IRQHandler+0xa2>
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	681b      	ldr	r3, [r3, #0]
 8001f34:	695b      	ldr	r3, [r3, #20]
 8001f36:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001f3a:	2b00      	cmp	r3, #0
 8001f3c:	d00b      	beq.n	8001f56 <HAL_DMA_IRQHandler+0xa2>
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001f42:	2201      	movs	r2, #1
 8001f44:	409a      	lsls	r2, r3
 8001f46:	693b      	ldr	r3, [r7, #16]
 8001f48:	609a      	str	r2, [r3, #8]
 8001f4a:	687b      	ldr	r3, [r7, #4]
 8001f4c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001f4e:	f043 0202 	orr.w	r2, r3, #2
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	655a      	str	r2, [r3, #84]	; 0x54
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001f5a:	2204      	movs	r2, #4
 8001f5c:	409a      	lsls	r2, r3
 8001f5e:	68fb      	ldr	r3, [r7, #12]
 8001f60:	4013      	ands	r3, r2
 8001f62:	2b00      	cmp	r3, #0
 8001f64:	d012      	beq.n	8001f8c <HAL_DMA_IRQHandler+0xd8>
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	681b      	ldr	r3, [r3, #0]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	f003 0302 	and.w	r3, r3, #2
 8001f70:	2b00      	cmp	r3, #0
 8001f72:	d00b      	beq.n	8001f8c <HAL_DMA_IRQHandler+0xd8>
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001f78:	2204      	movs	r2, #4
 8001f7a:	409a      	lsls	r2, r3
 8001f7c:	693b      	ldr	r3, [r7, #16]
 8001f7e:	609a      	str	r2, [r3, #8]
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001f84:	f043 0204 	orr.w	r2, r3, #4
 8001f88:	687b      	ldr	r3, [r7, #4]
 8001f8a:	655a      	str	r2, [r3, #84]	; 0x54
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001f90:	2210      	movs	r2, #16
 8001f92:	409a      	lsls	r2, r3
 8001f94:	68fb      	ldr	r3, [r7, #12]
 8001f96:	4013      	ands	r3, r2
 8001f98:	2b00      	cmp	r3, #0
 8001f9a:	d043      	beq.n	8002024 <HAL_DMA_IRQHandler+0x170>
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	f003 0308 	and.w	r3, r3, #8
 8001fa6:	2b00      	cmp	r3, #0
 8001fa8:	d03c      	beq.n	8002024 <HAL_DMA_IRQHandler+0x170>
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001fae:	2210      	movs	r2, #16
 8001fb0:	409a      	lsls	r2, r3
 8001fb2:	693b      	ldr	r3, [r7, #16]
 8001fb4:	609a      	str	r2, [r3, #8]
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8001fc0:	2b00      	cmp	r3, #0
 8001fc2:	d018      	beq.n	8001ff6 <HAL_DMA_IRQHandler+0x142>
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	681b      	ldr	r3, [r3, #0]
 8001fc8:	681b      	ldr	r3, [r3, #0]
 8001fca:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8001fce:	2b00      	cmp	r3, #0
 8001fd0:	d108      	bne.n	8001fe4 <HAL_DMA_IRQHandler+0x130>
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fd6:	2b00      	cmp	r3, #0
 8001fd8:	d024      	beq.n	8002024 <HAL_DMA_IRQHandler+0x170>
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fde:	6878      	ldr	r0, [r7, #4]
 8001fe0:	4798      	blx	r3
 8001fe2:	e01f      	b.n	8002024 <HAL_DMA_IRQHandler+0x170>
 8001fe4:	687b      	ldr	r3, [r7, #4]
 8001fe6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001fe8:	2b00      	cmp	r3, #0
 8001fea:	d01b      	beq.n	8002024 <HAL_DMA_IRQHandler+0x170>
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001ff0:	6878      	ldr	r0, [r7, #4]
 8001ff2:	4798      	blx	r3
 8001ff4:	e016      	b.n	8002024 <HAL_DMA_IRQHandler+0x170>
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002000:	2b00      	cmp	r3, #0
 8002002:	d107      	bne.n	8002014 <HAL_DMA_IRQHandler+0x160>
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	681a      	ldr	r2, [r3, #0]
 800200a:	687b      	ldr	r3, [r7, #4]
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	f022 0208 	bic.w	r2, r2, #8
 8002012:	601a      	str	r2, [r3, #0]
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002018:	2b00      	cmp	r3, #0
 800201a:	d003      	beq.n	8002024 <HAL_DMA_IRQHandler+0x170>
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002020:	6878      	ldr	r0, [r7, #4]
 8002022:	4798      	blx	r3
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002028:	2220      	movs	r2, #32
 800202a:	409a      	lsls	r2, r3
 800202c:	68fb      	ldr	r3, [r7, #12]
 800202e:	4013      	ands	r3, r2
 8002030:	2b00      	cmp	r3, #0
 8002032:	f000 808f 	beq.w	8002154 <HAL_DMA_IRQHandler+0x2a0>
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	681b      	ldr	r3, [r3, #0]
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	f003 0310 	and.w	r3, r3, #16
 8002040:	2b00      	cmp	r3, #0
 8002042:	f000 8087 	beq.w	8002154 <HAL_DMA_IRQHandler+0x2a0>
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800204a:	2220      	movs	r2, #32
 800204c:	409a      	lsls	r2, r3
 800204e:	693b      	ldr	r3, [r7, #16]
 8002050:	609a      	str	r2, [r3, #8]
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002058:	b2db      	uxtb	r3, r3
 800205a:	2b05      	cmp	r3, #5
 800205c:	d136      	bne.n	80020cc <HAL_DMA_IRQHandler+0x218>
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	681b      	ldr	r3, [r3, #0]
 8002062:	681a      	ldr	r2, [r3, #0]
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	f022 0216 	bic.w	r2, r2, #22
 800206c:	601a      	str	r2, [r3, #0]
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	681b      	ldr	r3, [r3, #0]
 8002072:	695a      	ldr	r2, [r3, #20]
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800207c:	615a      	str	r2, [r3, #20]
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002082:	2b00      	cmp	r3, #0
 8002084:	d103      	bne.n	800208e <HAL_DMA_IRQHandler+0x1da>
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800208a:	2b00      	cmp	r3, #0
 800208c:	d007      	beq.n	800209e <HAL_DMA_IRQHandler+0x1ea>
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	681a      	ldr	r2, [r3, #0]
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	f022 0208 	bic.w	r2, r2, #8
 800209c:	601a      	str	r2, [r3, #0]
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80020a2:	223f      	movs	r2, #63	; 0x3f
 80020a4:	409a      	lsls	r2, r3
 80020a6:	693b      	ldr	r3, [r7, #16]
 80020a8:	609a      	str	r2, [r3, #8]
 80020aa:	687b      	ldr	r3, [r7, #4]
 80020ac:	2201      	movs	r2, #1
 80020ae:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	2200      	movs	r2, #0
 80020b6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80020be:	2b00      	cmp	r3, #0
 80020c0:	d07e      	beq.n	80021c0 <HAL_DMA_IRQHandler+0x30c>
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80020c6:	6878      	ldr	r0, [r7, #4]
 80020c8:	4798      	blx	r3
 80020ca:	e079      	b.n	80021c0 <HAL_DMA_IRQHandler+0x30c>
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80020d6:	2b00      	cmp	r3, #0
 80020d8:	d01d      	beq.n	8002116 <HAL_DMA_IRQHandler+0x262>
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	681b      	ldr	r3, [r3, #0]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80020e4:	2b00      	cmp	r3, #0
 80020e6:	d10d      	bne.n	8002104 <HAL_DMA_IRQHandler+0x250>
 80020e8:	687b      	ldr	r3, [r7, #4]
 80020ea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d031      	beq.n	8002154 <HAL_DMA_IRQHandler+0x2a0>
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80020f4:	6878      	ldr	r0, [r7, #4]
 80020f6:	4798      	blx	r3
 80020f8:	e02c      	b.n	8002154 <HAL_DMA_IRQHandler+0x2a0>
 80020fa:	bf00      	nop
 80020fc:	20000054 	.word	0x20000054
 8002100:	1b4e81b5 	.word	0x1b4e81b5
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002108:	2b00      	cmp	r3, #0
 800210a:	d023      	beq.n	8002154 <HAL_DMA_IRQHandler+0x2a0>
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002110:	6878      	ldr	r0, [r7, #4]
 8002112:	4798      	blx	r3
 8002114:	e01e      	b.n	8002154 <HAL_DMA_IRQHandler+0x2a0>
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	681b      	ldr	r3, [r3, #0]
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002120:	2b00      	cmp	r3, #0
 8002122:	d10f      	bne.n	8002144 <HAL_DMA_IRQHandler+0x290>
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	681a      	ldr	r2, [r3, #0]
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	f022 0210 	bic.w	r2, r2, #16
 8002132:	601a      	str	r2, [r3, #0]
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	2201      	movs	r2, #1
 8002138:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	2200      	movs	r2, #0
 8002140:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002148:	2b00      	cmp	r3, #0
 800214a:	d003      	beq.n	8002154 <HAL_DMA_IRQHandler+0x2a0>
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002150:	6878      	ldr	r0, [r7, #4]
 8002152:	4798      	blx	r3
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002158:	2b00      	cmp	r3, #0
 800215a:	d032      	beq.n	80021c2 <HAL_DMA_IRQHandler+0x30e>
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002160:	f003 0301 	and.w	r3, r3, #1
 8002164:	2b00      	cmp	r3, #0
 8002166:	d022      	beq.n	80021ae <HAL_DMA_IRQHandler+0x2fa>
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	2205      	movs	r2, #5
 800216c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	681a      	ldr	r2, [r3, #0]
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	681b      	ldr	r3, [r3, #0]
 800217a:	f022 0201 	bic.w	r2, r2, #1
 800217e:	601a      	str	r2, [r3, #0]
 8002180:	68bb      	ldr	r3, [r7, #8]
 8002182:	3301      	adds	r3, #1
 8002184:	60bb      	str	r3, [r7, #8]
 8002186:	697a      	ldr	r2, [r7, #20]
 8002188:	429a      	cmp	r2, r3
 800218a:	d307      	bcc.n	800219c <HAL_DMA_IRQHandler+0x2e8>
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	681b      	ldr	r3, [r3, #0]
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	f003 0301 	and.w	r3, r3, #1
 8002196:	2b00      	cmp	r3, #0
 8002198:	d1f2      	bne.n	8002180 <HAL_DMA_IRQHandler+0x2cc>
 800219a:	e000      	b.n	800219e <HAL_DMA_IRQHandler+0x2ea>
 800219c:	bf00      	nop
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	2201      	movs	r2, #1
 80021a2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	2200      	movs	r2, #0
 80021aa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80021b2:	2b00      	cmp	r3, #0
 80021b4:	d005      	beq.n	80021c2 <HAL_DMA_IRQHandler+0x30e>
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80021ba:	6878      	ldr	r0, [r7, #4]
 80021bc:	4798      	blx	r3
 80021be:	e000      	b.n	80021c2 <HAL_DMA_IRQHandler+0x30e>
 80021c0:	bf00      	nop
 80021c2:	3718      	adds	r7, #24
 80021c4:	46bd      	mov	sp, r7
 80021c6:	bd80      	pop	{r7, pc}

080021c8 <DMA_SetConfig>:
 80021c8:	b480      	push	{r7}
 80021ca:	b085      	sub	sp, #20
 80021cc:	af00      	add	r7, sp, #0
 80021ce:	60f8      	str	r0, [r7, #12]
 80021d0:	60b9      	str	r1, [r7, #8]
 80021d2:	607a      	str	r2, [r7, #4]
 80021d4:	603b      	str	r3, [r7, #0]
 80021d6:	68fb      	ldr	r3, [r7, #12]
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	681a      	ldr	r2, [r3, #0]
 80021dc:	68fb      	ldr	r3, [r7, #12]
 80021de:	681b      	ldr	r3, [r3, #0]
 80021e0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80021e4:	601a      	str	r2, [r3, #0]
 80021e6:	68fb      	ldr	r3, [r7, #12]
 80021e8:	681b      	ldr	r3, [r3, #0]
 80021ea:	683a      	ldr	r2, [r7, #0]
 80021ec:	605a      	str	r2, [r3, #4]
 80021ee:	68fb      	ldr	r3, [r7, #12]
 80021f0:	689b      	ldr	r3, [r3, #8]
 80021f2:	2b40      	cmp	r3, #64	; 0x40
 80021f4:	d108      	bne.n	8002208 <DMA_SetConfig+0x40>
 80021f6:	68fb      	ldr	r3, [r7, #12]
 80021f8:	681b      	ldr	r3, [r3, #0]
 80021fa:	687a      	ldr	r2, [r7, #4]
 80021fc:	609a      	str	r2, [r3, #8]
 80021fe:	68fb      	ldr	r3, [r7, #12]
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	68ba      	ldr	r2, [r7, #8]
 8002204:	60da      	str	r2, [r3, #12]
 8002206:	e007      	b.n	8002218 <DMA_SetConfig+0x50>
 8002208:	68fb      	ldr	r3, [r7, #12]
 800220a:	681b      	ldr	r3, [r3, #0]
 800220c:	68ba      	ldr	r2, [r7, #8]
 800220e:	609a      	str	r2, [r3, #8]
 8002210:	68fb      	ldr	r3, [r7, #12]
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	687a      	ldr	r2, [r7, #4]
 8002216:	60da      	str	r2, [r3, #12]
 8002218:	bf00      	nop
 800221a:	3714      	adds	r7, #20
 800221c:	46bd      	mov	sp, r7
 800221e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002222:	4770      	bx	lr

08002224 <DMA_CalcBaseAndBitshift>:
 8002224:	b480      	push	{r7}
 8002226:	b085      	sub	sp, #20
 8002228:	af00      	add	r7, sp, #0
 800222a:	6078      	str	r0, [r7, #4]
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	b2db      	uxtb	r3, r3
 8002232:	3b10      	subs	r3, #16
 8002234:	4a13      	ldr	r2, [pc, #76]	; (8002284 <DMA_CalcBaseAndBitshift+0x60>)
 8002236:	fba2 2303 	umull	r2, r3, r2, r3
 800223a:	091b      	lsrs	r3, r3, #4
 800223c:	60fb      	str	r3, [r7, #12]
 800223e:	4a12      	ldr	r2, [pc, #72]	; (8002288 <DMA_CalcBaseAndBitshift+0x64>)
 8002240:	68fb      	ldr	r3, [r7, #12]
 8002242:	4413      	add	r3, r2
 8002244:	781b      	ldrb	r3, [r3, #0]
 8002246:	461a      	mov	r2, r3
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	65da      	str	r2, [r3, #92]	; 0x5c
 800224c:	68fb      	ldr	r3, [r7, #12]
 800224e:	2b03      	cmp	r3, #3
 8002250:	d908      	bls.n	8002264 <DMA_CalcBaseAndBitshift+0x40>
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	461a      	mov	r2, r3
 8002258:	4b0c      	ldr	r3, [pc, #48]	; (800228c <DMA_CalcBaseAndBitshift+0x68>)
 800225a:	4013      	ands	r3, r2
 800225c:	1d1a      	adds	r2, r3, #4
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	659a      	str	r2, [r3, #88]	; 0x58
 8002262:	e006      	b.n	8002272 <DMA_CalcBaseAndBitshift+0x4e>
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	461a      	mov	r2, r3
 800226a:	4b08      	ldr	r3, [pc, #32]	; (800228c <DMA_CalcBaseAndBitshift+0x68>)
 800226c:	4013      	ands	r3, r2
 800226e:	687a      	ldr	r2, [r7, #4]
 8002270:	6593      	str	r3, [r2, #88]	; 0x58
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002276:	4618      	mov	r0, r3
 8002278:	3714      	adds	r7, #20
 800227a:	46bd      	mov	sp, r7
 800227c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002280:	4770      	bx	lr
 8002282:	bf00      	nop
 8002284:	aaaaaaab 	.word	0xaaaaaaab
 8002288:	08004934 	.word	0x08004934
 800228c:	fffffc00 	.word	0xfffffc00

08002290 <DMA_CheckFifoParam>:
 8002290:	b480      	push	{r7}
 8002292:	b085      	sub	sp, #20
 8002294:	af00      	add	r7, sp, #0
 8002296:	6078      	str	r0, [r7, #4]
 8002298:	2300      	movs	r3, #0
 800229a:	73fb      	strb	r3, [r7, #15]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80022a0:	60bb      	str	r3, [r7, #8]
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	699b      	ldr	r3, [r3, #24]
 80022a6:	2b00      	cmp	r3, #0
 80022a8:	d11f      	bne.n	80022ea <DMA_CheckFifoParam+0x5a>
 80022aa:	68bb      	ldr	r3, [r7, #8]
 80022ac:	2b03      	cmp	r3, #3
 80022ae:	d856      	bhi.n	800235e <DMA_CheckFifoParam+0xce>
 80022b0:	a201      	add	r2, pc, #4	; (adr r2, 80022b8 <DMA_CheckFifoParam+0x28>)
 80022b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80022b6:	bf00      	nop
 80022b8:	080022c9 	.word	0x080022c9
 80022bc:	080022db 	.word	0x080022db
 80022c0:	080022c9 	.word	0x080022c9
 80022c4:	0800235f 	.word	0x0800235f
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80022cc:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	d046      	beq.n	8002362 <DMA_CheckFifoParam+0xd2>
 80022d4:	2301      	movs	r3, #1
 80022d6:	73fb      	strb	r3, [r7, #15]
 80022d8:	e043      	b.n	8002362 <DMA_CheckFifoParam+0xd2>
 80022da:	687b      	ldr	r3, [r7, #4]
 80022dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80022de:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80022e2:	d140      	bne.n	8002366 <DMA_CheckFifoParam+0xd6>
 80022e4:	2301      	movs	r3, #1
 80022e6:	73fb      	strb	r3, [r7, #15]
 80022e8:	e03d      	b.n	8002366 <DMA_CheckFifoParam+0xd6>
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	699b      	ldr	r3, [r3, #24]
 80022ee:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80022f2:	d121      	bne.n	8002338 <DMA_CheckFifoParam+0xa8>
 80022f4:	68bb      	ldr	r3, [r7, #8]
 80022f6:	2b03      	cmp	r3, #3
 80022f8:	d837      	bhi.n	800236a <DMA_CheckFifoParam+0xda>
 80022fa:	a201      	add	r2, pc, #4	; (adr r2, 8002300 <DMA_CheckFifoParam+0x70>)
 80022fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002300:	08002311 	.word	0x08002311
 8002304:	08002317 	.word	0x08002317
 8002308:	08002311 	.word	0x08002311
 800230c:	08002329 	.word	0x08002329
 8002310:	2301      	movs	r3, #1
 8002312:	73fb      	strb	r3, [r7, #15]
 8002314:	e030      	b.n	8002378 <DMA_CheckFifoParam+0xe8>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800231a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800231e:	2b00      	cmp	r3, #0
 8002320:	d025      	beq.n	800236e <DMA_CheckFifoParam+0xde>
 8002322:	2301      	movs	r3, #1
 8002324:	73fb      	strb	r3, [r7, #15]
 8002326:	e022      	b.n	800236e <DMA_CheckFifoParam+0xde>
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800232c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8002330:	d11f      	bne.n	8002372 <DMA_CheckFifoParam+0xe2>
 8002332:	2301      	movs	r3, #1
 8002334:	73fb      	strb	r3, [r7, #15]
 8002336:	e01c      	b.n	8002372 <DMA_CheckFifoParam+0xe2>
 8002338:	68bb      	ldr	r3, [r7, #8]
 800233a:	2b02      	cmp	r3, #2
 800233c:	d903      	bls.n	8002346 <DMA_CheckFifoParam+0xb6>
 800233e:	68bb      	ldr	r3, [r7, #8]
 8002340:	2b03      	cmp	r3, #3
 8002342:	d003      	beq.n	800234c <DMA_CheckFifoParam+0xbc>
 8002344:	e018      	b.n	8002378 <DMA_CheckFifoParam+0xe8>
 8002346:	2301      	movs	r3, #1
 8002348:	73fb      	strb	r3, [r7, #15]
 800234a:	e015      	b.n	8002378 <DMA_CheckFifoParam+0xe8>
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002350:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002354:	2b00      	cmp	r3, #0
 8002356:	d00e      	beq.n	8002376 <DMA_CheckFifoParam+0xe6>
 8002358:	2301      	movs	r3, #1
 800235a:	73fb      	strb	r3, [r7, #15]
 800235c:	e00b      	b.n	8002376 <DMA_CheckFifoParam+0xe6>
 800235e:	bf00      	nop
 8002360:	e00a      	b.n	8002378 <DMA_CheckFifoParam+0xe8>
 8002362:	bf00      	nop
 8002364:	e008      	b.n	8002378 <DMA_CheckFifoParam+0xe8>
 8002366:	bf00      	nop
 8002368:	e006      	b.n	8002378 <DMA_CheckFifoParam+0xe8>
 800236a:	bf00      	nop
 800236c:	e004      	b.n	8002378 <DMA_CheckFifoParam+0xe8>
 800236e:	bf00      	nop
 8002370:	e002      	b.n	8002378 <DMA_CheckFifoParam+0xe8>
 8002372:	bf00      	nop
 8002374:	e000      	b.n	8002378 <DMA_CheckFifoParam+0xe8>
 8002376:	bf00      	nop
 8002378:	7bfb      	ldrb	r3, [r7, #15]
 800237a:	4618      	mov	r0, r3
 800237c:	3714      	adds	r7, #20
 800237e:	46bd      	mov	sp, r7
 8002380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002384:	4770      	bx	lr
 8002386:	bf00      	nop

08002388 <HAL_GPIO_Init>:
 8002388:	b480      	push	{r7}
 800238a:	b089      	sub	sp, #36	; 0x24
 800238c:	af00      	add	r7, sp, #0
 800238e:	6078      	str	r0, [r7, #4]
 8002390:	6039      	str	r1, [r7, #0]
 8002392:	2300      	movs	r3, #0
 8002394:	61fb      	str	r3, [r7, #28]
 8002396:	2300      	movs	r3, #0
 8002398:	617b      	str	r3, [r7, #20]
 800239a:	2300      	movs	r3, #0
 800239c:	613b      	str	r3, [r7, #16]
 800239e:	2300      	movs	r3, #0
 80023a0:	61bb      	str	r3, [r7, #24]
 80023a2:	2300      	movs	r3, #0
 80023a4:	61fb      	str	r3, [r7, #28]
 80023a6:	e169      	b.n	800267c <HAL_GPIO_Init+0x2f4>
 80023a8:	2201      	movs	r2, #1
 80023aa:	69fb      	ldr	r3, [r7, #28]
 80023ac:	fa02 f303 	lsl.w	r3, r2, r3
 80023b0:	617b      	str	r3, [r7, #20]
 80023b2:	683b      	ldr	r3, [r7, #0]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	697a      	ldr	r2, [r7, #20]
 80023b8:	4013      	ands	r3, r2
 80023ba:	613b      	str	r3, [r7, #16]
 80023bc:	693a      	ldr	r2, [r7, #16]
 80023be:	697b      	ldr	r3, [r7, #20]
 80023c0:	429a      	cmp	r2, r3
 80023c2:	f040 8158 	bne.w	8002676 <HAL_GPIO_Init+0x2ee>
 80023c6:	683b      	ldr	r3, [r7, #0]
 80023c8:	685b      	ldr	r3, [r3, #4]
 80023ca:	f003 0303 	and.w	r3, r3, #3
 80023ce:	2b01      	cmp	r3, #1
 80023d0:	d005      	beq.n	80023de <HAL_GPIO_Init+0x56>
 80023d2:	683b      	ldr	r3, [r7, #0]
 80023d4:	685b      	ldr	r3, [r3, #4]
 80023d6:	f003 0303 	and.w	r3, r3, #3
 80023da:	2b02      	cmp	r3, #2
 80023dc:	d130      	bne.n	8002440 <HAL_GPIO_Init+0xb8>
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	689b      	ldr	r3, [r3, #8]
 80023e2:	61bb      	str	r3, [r7, #24]
 80023e4:	69fb      	ldr	r3, [r7, #28]
 80023e6:	005b      	lsls	r3, r3, #1
 80023e8:	2203      	movs	r2, #3
 80023ea:	fa02 f303 	lsl.w	r3, r2, r3
 80023ee:	43db      	mvns	r3, r3
 80023f0:	69ba      	ldr	r2, [r7, #24]
 80023f2:	4013      	ands	r3, r2
 80023f4:	61bb      	str	r3, [r7, #24]
 80023f6:	683b      	ldr	r3, [r7, #0]
 80023f8:	68da      	ldr	r2, [r3, #12]
 80023fa:	69fb      	ldr	r3, [r7, #28]
 80023fc:	005b      	lsls	r3, r3, #1
 80023fe:	fa02 f303 	lsl.w	r3, r2, r3
 8002402:	69ba      	ldr	r2, [r7, #24]
 8002404:	4313      	orrs	r3, r2
 8002406:	61bb      	str	r3, [r7, #24]
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	69ba      	ldr	r2, [r7, #24]
 800240c:	609a      	str	r2, [r3, #8]
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	685b      	ldr	r3, [r3, #4]
 8002412:	61bb      	str	r3, [r7, #24]
 8002414:	2201      	movs	r2, #1
 8002416:	69fb      	ldr	r3, [r7, #28]
 8002418:	fa02 f303 	lsl.w	r3, r2, r3
 800241c:	43db      	mvns	r3, r3
 800241e:	69ba      	ldr	r2, [r7, #24]
 8002420:	4013      	ands	r3, r2
 8002422:	61bb      	str	r3, [r7, #24]
 8002424:	683b      	ldr	r3, [r7, #0]
 8002426:	685b      	ldr	r3, [r3, #4]
 8002428:	091b      	lsrs	r3, r3, #4
 800242a:	f003 0201 	and.w	r2, r3, #1
 800242e:	69fb      	ldr	r3, [r7, #28]
 8002430:	fa02 f303 	lsl.w	r3, r2, r3
 8002434:	69ba      	ldr	r2, [r7, #24]
 8002436:	4313      	orrs	r3, r2
 8002438:	61bb      	str	r3, [r7, #24]
 800243a:	687b      	ldr	r3, [r7, #4]
 800243c:	69ba      	ldr	r2, [r7, #24]
 800243e:	605a      	str	r2, [r3, #4]
 8002440:	683b      	ldr	r3, [r7, #0]
 8002442:	685b      	ldr	r3, [r3, #4]
 8002444:	f003 0303 	and.w	r3, r3, #3
 8002448:	2b03      	cmp	r3, #3
 800244a:	d017      	beq.n	800247c <HAL_GPIO_Init+0xf4>
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	68db      	ldr	r3, [r3, #12]
 8002450:	61bb      	str	r3, [r7, #24]
 8002452:	69fb      	ldr	r3, [r7, #28]
 8002454:	005b      	lsls	r3, r3, #1
 8002456:	2203      	movs	r2, #3
 8002458:	fa02 f303 	lsl.w	r3, r2, r3
 800245c:	43db      	mvns	r3, r3
 800245e:	69ba      	ldr	r2, [r7, #24]
 8002460:	4013      	ands	r3, r2
 8002462:	61bb      	str	r3, [r7, #24]
 8002464:	683b      	ldr	r3, [r7, #0]
 8002466:	689a      	ldr	r2, [r3, #8]
 8002468:	69fb      	ldr	r3, [r7, #28]
 800246a:	005b      	lsls	r3, r3, #1
 800246c:	fa02 f303 	lsl.w	r3, r2, r3
 8002470:	69ba      	ldr	r2, [r7, #24]
 8002472:	4313      	orrs	r3, r2
 8002474:	61bb      	str	r3, [r7, #24]
 8002476:	687b      	ldr	r3, [r7, #4]
 8002478:	69ba      	ldr	r2, [r7, #24]
 800247a:	60da      	str	r2, [r3, #12]
 800247c:	683b      	ldr	r3, [r7, #0]
 800247e:	685b      	ldr	r3, [r3, #4]
 8002480:	f003 0303 	and.w	r3, r3, #3
 8002484:	2b02      	cmp	r3, #2
 8002486:	d123      	bne.n	80024d0 <HAL_GPIO_Init+0x148>
 8002488:	69fb      	ldr	r3, [r7, #28]
 800248a:	08da      	lsrs	r2, r3, #3
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	3208      	adds	r2, #8
 8002490:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002494:	61bb      	str	r3, [r7, #24]
 8002496:	69fb      	ldr	r3, [r7, #28]
 8002498:	f003 0307 	and.w	r3, r3, #7
 800249c:	009b      	lsls	r3, r3, #2
 800249e:	220f      	movs	r2, #15
 80024a0:	fa02 f303 	lsl.w	r3, r2, r3
 80024a4:	43db      	mvns	r3, r3
 80024a6:	69ba      	ldr	r2, [r7, #24]
 80024a8:	4013      	ands	r3, r2
 80024aa:	61bb      	str	r3, [r7, #24]
 80024ac:	683b      	ldr	r3, [r7, #0]
 80024ae:	691a      	ldr	r2, [r3, #16]
 80024b0:	69fb      	ldr	r3, [r7, #28]
 80024b2:	f003 0307 	and.w	r3, r3, #7
 80024b6:	009b      	lsls	r3, r3, #2
 80024b8:	fa02 f303 	lsl.w	r3, r2, r3
 80024bc:	69ba      	ldr	r2, [r7, #24]
 80024be:	4313      	orrs	r3, r2
 80024c0:	61bb      	str	r3, [r7, #24]
 80024c2:	69fb      	ldr	r3, [r7, #28]
 80024c4:	08da      	lsrs	r2, r3, #3
 80024c6:	687b      	ldr	r3, [r7, #4]
 80024c8:	3208      	adds	r2, #8
 80024ca:	69b9      	ldr	r1, [r7, #24]
 80024cc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	61bb      	str	r3, [r7, #24]
 80024d6:	69fb      	ldr	r3, [r7, #28]
 80024d8:	005b      	lsls	r3, r3, #1
 80024da:	2203      	movs	r2, #3
 80024dc:	fa02 f303 	lsl.w	r3, r2, r3
 80024e0:	43db      	mvns	r3, r3
 80024e2:	69ba      	ldr	r2, [r7, #24]
 80024e4:	4013      	ands	r3, r2
 80024e6:	61bb      	str	r3, [r7, #24]
 80024e8:	683b      	ldr	r3, [r7, #0]
 80024ea:	685b      	ldr	r3, [r3, #4]
 80024ec:	f003 0203 	and.w	r2, r3, #3
 80024f0:	69fb      	ldr	r3, [r7, #28]
 80024f2:	005b      	lsls	r3, r3, #1
 80024f4:	fa02 f303 	lsl.w	r3, r2, r3
 80024f8:	69ba      	ldr	r2, [r7, #24]
 80024fa:	4313      	orrs	r3, r2
 80024fc:	61bb      	str	r3, [r7, #24]
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	69ba      	ldr	r2, [r7, #24]
 8002502:	601a      	str	r2, [r3, #0]
 8002504:	683b      	ldr	r3, [r7, #0]
 8002506:	685b      	ldr	r3, [r3, #4]
 8002508:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800250c:	2b00      	cmp	r3, #0
 800250e:	f000 80b2 	beq.w	8002676 <HAL_GPIO_Init+0x2ee>
 8002512:	4b60      	ldr	r3, [pc, #384]	; (8002694 <HAL_GPIO_Init+0x30c>)
 8002514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002516:	4a5f      	ldr	r2, [pc, #380]	; (8002694 <HAL_GPIO_Init+0x30c>)
 8002518:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800251c:	6453      	str	r3, [r2, #68]	; 0x44
 800251e:	4b5d      	ldr	r3, [pc, #372]	; (8002694 <HAL_GPIO_Init+0x30c>)
 8002520:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002522:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002526:	60fb      	str	r3, [r7, #12]
 8002528:	68fb      	ldr	r3, [r7, #12]
 800252a:	4a5b      	ldr	r2, [pc, #364]	; (8002698 <HAL_GPIO_Init+0x310>)
 800252c:	69fb      	ldr	r3, [r7, #28]
 800252e:	089b      	lsrs	r3, r3, #2
 8002530:	3302      	adds	r3, #2
 8002532:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002536:	61bb      	str	r3, [r7, #24]
 8002538:	69fb      	ldr	r3, [r7, #28]
 800253a:	f003 0303 	and.w	r3, r3, #3
 800253e:	009b      	lsls	r3, r3, #2
 8002540:	220f      	movs	r2, #15
 8002542:	fa02 f303 	lsl.w	r3, r2, r3
 8002546:	43db      	mvns	r3, r3
 8002548:	69ba      	ldr	r2, [r7, #24]
 800254a:	4013      	ands	r3, r2
 800254c:	61bb      	str	r3, [r7, #24]
 800254e:	687b      	ldr	r3, [r7, #4]
 8002550:	4a52      	ldr	r2, [pc, #328]	; (800269c <HAL_GPIO_Init+0x314>)
 8002552:	4293      	cmp	r3, r2
 8002554:	d02b      	beq.n	80025ae <HAL_GPIO_Init+0x226>
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	4a51      	ldr	r2, [pc, #324]	; (80026a0 <HAL_GPIO_Init+0x318>)
 800255a:	4293      	cmp	r3, r2
 800255c:	d025      	beq.n	80025aa <HAL_GPIO_Init+0x222>
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	4a50      	ldr	r2, [pc, #320]	; (80026a4 <HAL_GPIO_Init+0x31c>)
 8002562:	4293      	cmp	r3, r2
 8002564:	d01f      	beq.n	80025a6 <HAL_GPIO_Init+0x21e>
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	4a4f      	ldr	r2, [pc, #316]	; (80026a8 <HAL_GPIO_Init+0x320>)
 800256a:	4293      	cmp	r3, r2
 800256c:	d019      	beq.n	80025a2 <HAL_GPIO_Init+0x21a>
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	4a4e      	ldr	r2, [pc, #312]	; (80026ac <HAL_GPIO_Init+0x324>)
 8002572:	4293      	cmp	r3, r2
 8002574:	d013      	beq.n	800259e <HAL_GPIO_Init+0x216>
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	4a4d      	ldr	r2, [pc, #308]	; (80026b0 <HAL_GPIO_Init+0x328>)
 800257a:	4293      	cmp	r3, r2
 800257c:	d00d      	beq.n	800259a <HAL_GPIO_Init+0x212>
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	4a4c      	ldr	r2, [pc, #304]	; (80026b4 <HAL_GPIO_Init+0x32c>)
 8002582:	4293      	cmp	r3, r2
 8002584:	d007      	beq.n	8002596 <HAL_GPIO_Init+0x20e>
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	4a4b      	ldr	r2, [pc, #300]	; (80026b8 <HAL_GPIO_Init+0x330>)
 800258a:	4293      	cmp	r3, r2
 800258c:	d101      	bne.n	8002592 <HAL_GPIO_Init+0x20a>
 800258e:	2307      	movs	r3, #7
 8002590:	e00e      	b.n	80025b0 <HAL_GPIO_Init+0x228>
 8002592:	2308      	movs	r3, #8
 8002594:	e00c      	b.n	80025b0 <HAL_GPIO_Init+0x228>
 8002596:	2306      	movs	r3, #6
 8002598:	e00a      	b.n	80025b0 <HAL_GPIO_Init+0x228>
 800259a:	2305      	movs	r3, #5
 800259c:	e008      	b.n	80025b0 <HAL_GPIO_Init+0x228>
 800259e:	2304      	movs	r3, #4
 80025a0:	e006      	b.n	80025b0 <HAL_GPIO_Init+0x228>
 80025a2:	2303      	movs	r3, #3
 80025a4:	e004      	b.n	80025b0 <HAL_GPIO_Init+0x228>
 80025a6:	2302      	movs	r3, #2
 80025a8:	e002      	b.n	80025b0 <HAL_GPIO_Init+0x228>
 80025aa:	2301      	movs	r3, #1
 80025ac:	e000      	b.n	80025b0 <HAL_GPIO_Init+0x228>
 80025ae:	2300      	movs	r3, #0
 80025b0:	69fa      	ldr	r2, [r7, #28]
 80025b2:	f002 0203 	and.w	r2, r2, #3
 80025b6:	0092      	lsls	r2, r2, #2
 80025b8:	4093      	lsls	r3, r2
 80025ba:	69ba      	ldr	r2, [r7, #24]
 80025bc:	4313      	orrs	r3, r2
 80025be:	61bb      	str	r3, [r7, #24]
 80025c0:	4935      	ldr	r1, [pc, #212]	; (8002698 <HAL_GPIO_Init+0x310>)
 80025c2:	69fb      	ldr	r3, [r7, #28]
 80025c4:	089b      	lsrs	r3, r3, #2
 80025c6:	3302      	adds	r3, #2
 80025c8:	69ba      	ldr	r2, [r7, #24]
 80025ca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80025ce:	4b3b      	ldr	r3, [pc, #236]	; (80026bc <HAL_GPIO_Init+0x334>)
 80025d0:	689b      	ldr	r3, [r3, #8]
 80025d2:	61bb      	str	r3, [r7, #24]
 80025d4:	693b      	ldr	r3, [r7, #16]
 80025d6:	43db      	mvns	r3, r3
 80025d8:	69ba      	ldr	r2, [r7, #24]
 80025da:	4013      	ands	r3, r2
 80025dc:	61bb      	str	r3, [r7, #24]
 80025de:	683b      	ldr	r3, [r7, #0]
 80025e0:	685b      	ldr	r3, [r3, #4]
 80025e2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80025e6:	2b00      	cmp	r3, #0
 80025e8:	d003      	beq.n	80025f2 <HAL_GPIO_Init+0x26a>
 80025ea:	69ba      	ldr	r2, [r7, #24]
 80025ec:	693b      	ldr	r3, [r7, #16]
 80025ee:	4313      	orrs	r3, r2
 80025f0:	61bb      	str	r3, [r7, #24]
 80025f2:	4a32      	ldr	r2, [pc, #200]	; (80026bc <HAL_GPIO_Init+0x334>)
 80025f4:	69bb      	ldr	r3, [r7, #24]
 80025f6:	6093      	str	r3, [r2, #8]
 80025f8:	4b30      	ldr	r3, [pc, #192]	; (80026bc <HAL_GPIO_Init+0x334>)
 80025fa:	68db      	ldr	r3, [r3, #12]
 80025fc:	61bb      	str	r3, [r7, #24]
 80025fe:	693b      	ldr	r3, [r7, #16]
 8002600:	43db      	mvns	r3, r3
 8002602:	69ba      	ldr	r2, [r7, #24]
 8002604:	4013      	ands	r3, r2
 8002606:	61bb      	str	r3, [r7, #24]
 8002608:	683b      	ldr	r3, [r7, #0]
 800260a:	685b      	ldr	r3, [r3, #4]
 800260c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002610:	2b00      	cmp	r3, #0
 8002612:	d003      	beq.n	800261c <HAL_GPIO_Init+0x294>
 8002614:	69ba      	ldr	r2, [r7, #24]
 8002616:	693b      	ldr	r3, [r7, #16]
 8002618:	4313      	orrs	r3, r2
 800261a:	61bb      	str	r3, [r7, #24]
 800261c:	4a27      	ldr	r2, [pc, #156]	; (80026bc <HAL_GPIO_Init+0x334>)
 800261e:	69bb      	ldr	r3, [r7, #24]
 8002620:	60d3      	str	r3, [r2, #12]
 8002622:	4b26      	ldr	r3, [pc, #152]	; (80026bc <HAL_GPIO_Init+0x334>)
 8002624:	685b      	ldr	r3, [r3, #4]
 8002626:	61bb      	str	r3, [r7, #24]
 8002628:	693b      	ldr	r3, [r7, #16]
 800262a:	43db      	mvns	r3, r3
 800262c:	69ba      	ldr	r2, [r7, #24]
 800262e:	4013      	ands	r3, r2
 8002630:	61bb      	str	r3, [r7, #24]
 8002632:	683b      	ldr	r3, [r7, #0]
 8002634:	685b      	ldr	r3, [r3, #4]
 8002636:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800263a:	2b00      	cmp	r3, #0
 800263c:	d003      	beq.n	8002646 <HAL_GPIO_Init+0x2be>
 800263e:	69ba      	ldr	r2, [r7, #24]
 8002640:	693b      	ldr	r3, [r7, #16]
 8002642:	4313      	orrs	r3, r2
 8002644:	61bb      	str	r3, [r7, #24]
 8002646:	4a1d      	ldr	r2, [pc, #116]	; (80026bc <HAL_GPIO_Init+0x334>)
 8002648:	69bb      	ldr	r3, [r7, #24]
 800264a:	6053      	str	r3, [r2, #4]
 800264c:	4b1b      	ldr	r3, [pc, #108]	; (80026bc <HAL_GPIO_Init+0x334>)
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	61bb      	str	r3, [r7, #24]
 8002652:	693b      	ldr	r3, [r7, #16]
 8002654:	43db      	mvns	r3, r3
 8002656:	69ba      	ldr	r2, [r7, #24]
 8002658:	4013      	ands	r3, r2
 800265a:	61bb      	str	r3, [r7, #24]
 800265c:	683b      	ldr	r3, [r7, #0]
 800265e:	685b      	ldr	r3, [r3, #4]
 8002660:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002664:	2b00      	cmp	r3, #0
 8002666:	d003      	beq.n	8002670 <HAL_GPIO_Init+0x2e8>
 8002668:	69ba      	ldr	r2, [r7, #24]
 800266a:	693b      	ldr	r3, [r7, #16]
 800266c:	4313      	orrs	r3, r2
 800266e:	61bb      	str	r3, [r7, #24]
 8002670:	4a12      	ldr	r2, [pc, #72]	; (80026bc <HAL_GPIO_Init+0x334>)
 8002672:	69bb      	ldr	r3, [r7, #24]
 8002674:	6013      	str	r3, [r2, #0]
 8002676:	69fb      	ldr	r3, [r7, #28]
 8002678:	3301      	adds	r3, #1
 800267a:	61fb      	str	r3, [r7, #28]
 800267c:	69fb      	ldr	r3, [r7, #28]
 800267e:	2b0f      	cmp	r3, #15
 8002680:	f67f ae92 	bls.w	80023a8 <HAL_GPIO_Init+0x20>
 8002684:	bf00      	nop
 8002686:	bf00      	nop
 8002688:	3724      	adds	r7, #36	; 0x24
 800268a:	46bd      	mov	sp, r7
 800268c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002690:	4770      	bx	lr
 8002692:	bf00      	nop
 8002694:	40023800 	.word	0x40023800
 8002698:	40013800 	.word	0x40013800
 800269c:	40020000 	.word	0x40020000
 80026a0:	40020400 	.word	0x40020400
 80026a4:	40020800 	.word	0x40020800
 80026a8:	40020c00 	.word	0x40020c00
 80026ac:	40021000 	.word	0x40021000
 80026b0:	40021400 	.word	0x40021400
 80026b4:	40021800 	.word	0x40021800
 80026b8:	40021c00 	.word	0x40021c00
 80026bc:	40013c00 	.word	0x40013c00

080026c0 <HAL_GPIO_ReadPin>:
 80026c0:	b480      	push	{r7}
 80026c2:	b085      	sub	sp, #20
 80026c4:	af00      	add	r7, sp, #0
 80026c6:	6078      	str	r0, [r7, #4]
 80026c8:	460b      	mov	r3, r1
 80026ca:	807b      	strh	r3, [r7, #2]
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	691a      	ldr	r2, [r3, #16]
 80026d0:	887b      	ldrh	r3, [r7, #2]
 80026d2:	4013      	ands	r3, r2
 80026d4:	2b00      	cmp	r3, #0
 80026d6:	d002      	beq.n	80026de <HAL_GPIO_ReadPin+0x1e>
 80026d8:	2301      	movs	r3, #1
 80026da:	73fb      	strb	r3, [r7, #15]
 80026dc:	e001      	b.n	80026e2 <HAL_GPIO_ReadPin+0x22>
 80026de:	2300      	movs	r3, #0
 80026e0:	73fb      	strb	r3, [r7, #15]
 80026e2:	7bfb      	ldrb	r3, [r7, #15]
 80026e4:	4618      	mov	r0, r3
 80026e6:	3714      	adds	r7, #20
 80026e8:	46bd      	mov	sp, r7
 80026ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026ee:	4770      	bx	lr

080026f0 <HAL_GPIO_WritePin>:
 80026f0:	b480      	push	{r7}
 80026f2:	b083      	sub	sp, #12
 80026f4:	af00      	add	r7, sp, #0
 80026f6:	6078      	str	r0, [r7, #4]
 80026f8:	460b      	mov	r3, r1
 80026fa:	807b      	strh	r3, [r7, #2]
 80026fc:	4613      	mov	r3, r2
 80026fe:	707b      	strb	r3, [r7, #1]
 8002700:	787b      	ldrb	r3, [r7, #1]
 8002702:	2b00      	cmp	r3, #0
 8002704:	d003      	beq.n	800270e <HAL_GPIO_WritePin+0x1e>
 8002706:	887a      	ldrh	r2, [r7, #2]
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	619a      	str	r2, [r3, #24]
 800270c:	e003      	b.n	8002716 <HAL_GPIO_WritePin+0x26>
 800270e:	887b      	ldrh	r3, [r7, #2]
 8002710:	041a      	lsls	r2, r3, #16
 8002712:	687b      	ldr	r3, [r7, #4]
 8002714:	619a      	str	r2, [r3, #24]
 8002716:	bf00      	nop
 8002718:	370c      	adds	r7, #12
 800271a:	46bd      	mov	sp, r7
 800271c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002720:	4770      	bx	lr
	...

08002724 <HAL_GPIO_EXTI_IRQHandler>:
 8002724:	b580      	push	{r7, lr}
 8002726:	b082      	sub	sp, #8
 8002728:	af00      	add	r7, sp, #0
 800272a:	4603      	mov	r3, r0
 800272c:	80fb      	strh	r3, [r7, #6]
 800272e:	4b08      	ldr	r3, [pc, #32]	; (8002750 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002730:	695a      	ldr	r2, [r3, #20]
 8002732:	88fb      	ldrh	r3, [r7, #6]
 8002734:	4013      	ands	r3, r2
 8002736:	2b00      	cmp	r3, #0
 8002738:	d006      	beq.n	8002748 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800273a:	4a05      	ldr	r2, [pc, #20]	; (8002750 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800273c:	88fb      	ldrh	r3, [r7, #6]
 800273e:	6153      	str	r3, [r2, #20]
 8002740:	88fb      	ldrh	r3, [r7, #6]
 8002742:	4618      	mov	r0, r3
 8002744:	f7fe fe8e 	bl	8001464 <HAL_GPIO_EXTI_Callback>
 8002748:	bf00      	nop
 800274a:	3708      	adds	r7, #8
 800274c:	46bd      	mov	sp, r7
 800274e:	bd80      	pop	{r7, pc}
 8002750:	40013c00 	.word	0x40013c00

08002754 <HAL_I2C_Init>:
 8002754:	b580      	push	{r7, lr}
 8002756:	b082      	sub	sp, #8
 8002758:	af00      	add	r7, sp, #0
 800275a:	6078      	str	r0, [r7, #4]
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	2b00      	cmp	r3, #0
 8002760:	d101      	bne.n	8002766 <HAL_I2C_Init+0x12>
 8002762:	2301      	movs	r3, #1
 8002764:	e07f      	b.n	8002866 <HAL_I2C_Init+0x112>
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800276c:	b2db      	uxtb	r3, r3
 800276e:	2b00      	cmp	r3, #0
 8002770:	d106      	bne.n	8002780 <HAL_I2C_Init+0x2c>
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	2200      	movs	r2, #0
 8002776:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800277a:	6878      	ldr	r0, [r7, #4]
 800277c:	f7fe fec2 	bl	8001504 <HAL_I2C_MspInit>
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	2224      	movs	r2, #36	; 0x24
 8002784:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	681a      	ldr	r2, [r3, #0]
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	681b      	ldr	r3, [r3, #0]
 8002792:	f022 0201 	bic.w	r2, r2, #1
 8002796:	601a      	str	r2, [r3, #0]
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	685a      	ldr	r2, [r3, #4]
 800279c:	687b      	ldr	r3, [r7, #4]
 800279e:	681b      	ldr	r3, [r3, #0]
 80027a0:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80027a4:	611a      	str	r2, [r3, #16]
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	681b      	ldr	r3, [r3, #0]
 80027aa:	689a      	ldr	r2, [r3, #8]
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80027b4:	609a      	str	r2, [r3, #8]
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	68db      	ldr	r3, [r3, #12]
 80027ba:	2b01      	cmp	r3, #1
 80027bc:	d107      	bne.n	80027ce <HAL_I2C_Init+0x7a>
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	689a      	ldr	r2, [r3, #8]
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80027ca:	609a      	str	r2, [r3, #8]
 80027cc:	e006      	b.n	80027dc <HAL_I2C_Init+0x88>
 80027ce:	687b      	ldr	r3, [r7, #4]
 80027d0:	689a      	ldr	r2, [r3, #8]
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 80027da:	609a      	str	r2, [r3, #8]
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	68db      	ldr	r3, [r3, #12]
 80027e0:	2b02      	cmp	r3, #2
 80027e2:	d104      	bne.n	80027ee <HAL_I2C_Init+0x9a>
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80027ec:	605a      	str	r2, [r3, #4]
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	6859      	ldr	r1, [r3, #4]
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	681a      	ldr	r2, [r3, #0]
 80027f8:	4b1d      	ldr	r3, [pc, #116]	; (8002870 <HAL_I2C_Init+0x11c>)
 80027fa:	430b      	orrs	r3, r1
 80027fc:	6053      	str	r3, [r2, #4]
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	681b      	ldr	r3, [r3, #0]
 8002802:	68da      	ldr	r2, [r3, #12]
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	681b      	ldr	r3, [r3, #0]
 8002808:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800280c:	60da      	str	r2, [r3, #12]
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	691a      	ldr	r2, [r3, #16]
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	695b      	ldr	r3, [r3, #20]
 8002816:	ea42 0103 	orr.w	r1, r2, r3
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	699b      	ldr	r3, [r3, #24]
 800281e:	021a      	lsls	r2, r3, #8
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	430a      	orrs	r2, r1
 8002826:	60da      	str	r2, [r3, #12]
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	69d9      	ldr	r1, [r3, #28]
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	6a1a      	ldr	r2, [r3, #32]
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	430a      	orrs	r2, r1
 8002836:	601a      	str	r2, [r3, #0]
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	681a      	ldr	r2, [r3, #0]
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	f042 0201 	orr.w	r2, r2, #1
 8002846:	601a      	str	r2, [r3, #0]
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	2200      	movs	r2, #0
 800284c:	645a      	str	r2, [r3, #68]	; 0x44
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	2220      	movs	r2, #32
 8002852:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	2200      	movs	r2, #0
 800285a:	631a      	str	r2, [r3, #48]	; 0x30
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	2200      	movs	r2, #0
 8002860:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002864:	2300      	movs	r3, #0
 8002866:	4618      	mov	r0, r3
 8002868:	3708      	adds	r7, #8
 800286a:	46bd      	mov	sp, r7
 800286c:	bd80      	pop	{r7, pc}
 800286e:	bf00      	nop
 8002870:	02008000 	.word	0x02008000

08002874 <HAL_I2C_Mem_Write>:
 8002874:	b580      	push	{r7, lr}
 8002876:	b088      	sub	sp, #32
 8002878:	af02      	add	r7, sp, #8
 800287a:	60f8      	str	r0, [r7, #12]
 800287c:	4608      	mov	r0, r1
 800287e:	4611      	mov	r1, r2
 8002880:	461a      	mov	r2, r3
 8002882:	4603      	mov	r3, r0
 8002884:	817b      	strh	r3, [r7, #10]
 8002886:	460b      	mov	r3, r1
 8002888:	813b      	strh	r3, [r7, #8]
 800288a:	4613      	mov	r3, r2
 800288c:	80fb      	strh	r3, [r7, #6]
 800288e:	68fb      	ldr	r3, [r7, #12]
 8002890:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002894:	b2db      	uxtb	r3, r3
 8002896:	2b20      	cmp	r3, #32
 8002898:	f040 80f9 	bne.w	8002a8e <HAL_I2C_Mem_Write+0x21a>
 800289c:	6a3b      	ldr	r3, [r7, #32]
 800289e:	2b00      	cmp	r3, #0
 80028a0:	d002      	beq.n	80028a8 <HAL_I2C_Mem_Write+0x34>
 80028a2:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80028a4:	2b00      	cmp	r3, #0
 80028a6:	d105      	bne.n	80028b4 <HAL_I2C_Mem_Write+0x40>
 80028a8:	68fb      	ldr	r3, [r7, #12]
 80028aa:	f44f 7200 	mov.w	r2, #512	; 0x200
 80028ae:	645a      	str	r2, [r3, #68]	; 0x44
 80028b0:	2301      	movs	r3, #1
 80028b2:	e0ed      	b.n	8002a90 <HAL_I2C_Mem_Write+0x21c>
 80028b4:	68fb      	ldr	r3, [r7, #12]
 80028b6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80028ba:	2b01      	cmp	r3, #1
 80028bc:	d101      	bne.n	80028c2 <HAL_I2C_Mem_Write+0x4e>
 80028be:	2302      	movs	r3, #2
 80028c0:	e0e6      	b.n	8002a90 <HAL_I2C_Mem_Write+0x21c>
 80028c2:	68fb      	ldr	r3, [r7, #12]
 80028c4:	2201      	movs	r2, #1
 80028c6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80028ca:	f7ff f8a3 	bl	8001a14 <HAL_GetTick>
 80028ce:	6178      	str	r0, [r7, #20]
 80028d0:	697b      	ldr	r3, [r7, #20]
 80028d2:	9300      	str	r3, [sp, #0]
 80028d4:	2319      	movs	r3, #25
 80028d6:	2201      	movs	r2, #1
 80028d8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80028dc:	68f8      	ldr	r0, [r7, #12]
 80028de:	f000 f955 	bl	8002b8c <I2C_WaitOnFlagUntilTimeout>
 80028e2:	4603      	mov	r3, r0
 80028e4:	2b00      	cmp	r3, #0
 80028e6:	d001      	beq.n	80028ec <HAL_I2C_Mem_Write+0x78>
 80028e8:	2301      	movs	r3, #1
 80028ea:	e0d1      	b.n	8002a90 <HAL_I2C_Mem_Write+0x21c>
 80028ec:	68fb      	ldr	r3, [r7, #12]
 80028ee:	2221      	movs	r2, #33	; 0x21
 80028f0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80028f4:	68fb      	ldr	r3, [r7, #12]
 80028f6:	2240      	movs	r2, #64	; 0x40
 80028f8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80028fc:	68fb      	ldr	r3, [r7, #12]
 80028fe:	2200      	movs	r2, #0
 8002900:	645a      	str	r2, [r3, #68]	; 0x44
 8002902:	68fb      	ldr	r3, [r7, #12]
 8002904:	6a3a      	ldr	r2, [r7, #32]
 8002906:	625a      	str	r2, [r3, #36]	; 0x24
 8002908:	68fb      	ldr	r3, [r7, #12]
 800290a:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 800290c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800290e:	68fb      	ldr	r3, [r7, #12]
 8002910:	2200      	movs	r2, #0
 8002912:	635a      	str	r2, [r3, #52]	; 0x34
 8002914:	88f8      	ldrh	r0, [r7, #6]
 8002916:	893a      	ldrh	r2, [r7, #8]
 8002918:	8979      	ldrh	r1, [r7, #10]
 800291a:	697b      	ldr	r3, [r7, #20]
 800291c:	9301      	str	r3, [sp, #4]
 800291e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002920:	9300      	str	r3, [sp, #0]
 8002922:	4603      	mov	r3, r0
 8002924:	68f8      	ldr	r0, [r7, #12]
 8002926:	f000 f8b9 	bl	8002a9c <I2C_RequestMemoryWrite>
 800292a:	4603      	mov	r3, r0
 800292c:	2b00      	cmp	r3, #0
 800292e:	d005      	beq.n	800293c <HAL_I2C_Mem_Write+0xc8>
 8002930:	68fb      	ldr	r3, [r7, #12]
 8002932:	2200      	movs	r2, #0
 8002934:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002938:	2301      	movs	r3, #1
 800293a:	e0a9      	b.n	8002a90 <HAL_I2C_Mem_Write+0x21c>
 800293c:	68fb      	ldr	r3, [r7, #12]
 800293e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002940:	b29b      	uxth	r3, r3
 8002942:	2bff      	cmp	r3, #255	; 0xff
 8002944:	d90e      	bls.n	8002964 <HAL_I2C_Mem_Write+0xf0>
 8002946:	68fb      	ldr	r3, [r7, #12]
 8002948:	22ff      	movs	r2, #255	; 0xff
 800294a:	851a      	strh	r2, [r3, #40]	; 0x28
 800294c:	68fb      	ldr	r3, [r7, #12]
 800294e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002950:	b2da      	uxtb	r2, r3
 8002952:	8979      	ldrh	r1, [r7, #10]
 8002954:	2300      	movs	r3, #0
 8002956:	9300      	str	r3, [sp, #0]
 8002958:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800295c:	68f8      	ldr	r0, [r7, #12]
 800295e:	f000 fab1 	bl	8002ec4 <I2C_TransferConfig>
 8002962:	e00f      	b.n	8002984 <HAL_I2C_Mem_Write+0x110>
 8002964:	68fb      	ldr	r3, [r7, #12]
 8002966:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002968:	b29a      	uxth	r2, r3
 800296a:	68fb      	ldr	r3, [r7, #12]
 800296c:	851a      	strh	r2, [r3, #40]	; 0x28
 800296e:	68fb      	ldr	r3, [r7, #12]
 8002970:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002972:	b2da      	uxtb	r2, r3
 8002974:	8979      	ldrh	r1, [r7, #10]
 8002976:	2300      	movs	r3, #0
 8002978:	9300      	str	r3, [sp, #0]
 800297a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800297e:	68f8      	ldr	r0, [r7, #12]
 8002980:	f000 faa0 	bl	8002ec4 <I2C_TransferConfig>
 8002984:	697a      	ldr	r2, [r7, #20]
 8002986:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002988:	68f8      	ldr	r0, [r7, #12]
 800298a:	f000 f93f 	bl	8002c0c <I2C_WaitOnTXISFlagUntilTimeout>
 800298e:	4603      	mov	r3, r0
 8002990:	2b00      	cmp	r3, #0
 8002992:	d001      	beq.n	8002998 <HAL_I2C_Mem_Write+0x124>
 8002994:	2301      	movs	r3, #1
 8002996:	e07b      	b.n	8002a90 <HAL_I2C_Mem_Write+0x21c>
 8002998:	68fb      	ldr	r3, [r7, #12]
 800299a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800299c:	781a      	ldrb	r2, [r3, #0]
 800299e:	68fb      	ldr	r3, [r7, #12]
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	629a      	str	r2, [r3, #40]	; 0x28
 80029a4:	68fb      	ldr	r3, [r7, #12]
 80029a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80029a8:	1c5a      	adds	r2, r3, #1
 80029aa:	68fb      	ldr	r3, [r7, #12]
 80029ac:	625a      	str	r2, [r3, #36]	; 0x24
 80029ae:	68fb      	ldr	r3, [r7, #12]
 80029b0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80029b2:	b29b      	uxth	r3, r3
 80029b4:	3b01      	subs	r3, #1
 80029b6:	b29a      	uxth	r2, r3
 80029b8:	68fb      	ldr	r3, [r7, #12]
 80029ba:	855a      	strh	r2, [r3, #42]	; 0x2a
 80029bc:	68fb      	ldr	r3, [r7, #12]
 80029be:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80029c0:	3b01      	subs	r3, #1
 80029c2:	b29a      	uxth	r2, r3
 80029c4:	68fb      	ldr	r3, [r7, #12]
 80029c6:	851a      	strh	r2, [r3, #40]	; 0x28
 80029c8:	68fb      	ldr	r3, [r7, #12]
 80029ca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80029cc:	b29b      	uxth	r3, r3
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	d034      	beq.n	8002a3c <HAL_I2C_Mem_Write+0x1c8>
 80029d2:	68fb      	ldr	r3, [r7, #12]
 80029d4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80029d6:	2b00      	cmp	r3, #0
 80029d8:	d130      	bne.n	8002a3c <HAL_I2C_Mem_Write+0x1c8>
 80029da:	697b      	ldr	r3, [r7, #20]
 80029dc:	9300      	str	r3, [sp, #0]
 80029de:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80029e0:	2200      	movs	r2, #0
 80029e2:	2180      	movs	r1, #128	; 0x80
 80029e4:	68f8      	ldr	r0, [r7, #12]
 80029e6:	f000 f8d1 	bl	8002b8c <I2C_WaitOnFlagUntilTimeout>
 80029ea:	4603      	mov	r3, r0
 80029ec:	2b00      	cmp	r3, #0
 80029ee:	d001      	beq.n	80029f4 <HAL_I2C_Mem_Write+0x180>
 80029f0:	2301      	movs	r3, #1
 80029f2:	e04d      	b.n	8002a90 <HAL_I2C_Mem_Write+0x21c>
 80029f4:	68fb      	ldr	r3, [r7, #12]
 80029f6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80029f8:	b29b      	uxth	r3, r3
 80029fa:	2bff      	cmp	r3, #255	; 0xff
 80029fc:	d90e      	bls.n	8002a1c <HAL_I2C_Mem_Write+0x1a8>
 80029fe:	68fb      	ldr	r3, [r7, #12]
 8002a00:	22ff      	movs	r2, #255	; 0xff
 8002a02:	851a      	strh	r2, [r3, #40]	; 0x28
 8002a04:	68fb      	ldr	r3, [r7, #12]
 8002a06:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002a08:	b2da      	uxtb	r2, r3
 8002a0a:	8979      	ldrh	r1, [r7, #10]
 8002a0c:	2300      	movs	r3, #0
 8002a0e:	9300      	str	r3, [sp, #0]
 8002a10:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002a14:	68f8      	ldr	r0, [r7, #12]
 8002a16:	f000 fa55 	bl	8002ec4 <I2C_TransferConfig>
 8002a1a:	e00f      	b.n	8002a3c <HAL_I2C_Mem_Write+0x1c8>
 8002a1c:	68fb      	ldr	r3, [r7, #12]
 8002a1e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002a20:	b29a      	uxth	r2, r3
 8002a22:	68fb      	ldr	r3, [r7, #12]
 8002a24:	851a      	strh	r2, [r3, #40]	; 0x28
 8002a26:	68fb      	ldr	r3, [r7, #12]
 8002a28:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002a2a:	b2da      	uxtb	r2, r3
 8002a2c:	8979      	ldrh	r1, [r7, #10]
 8002a2e:	2300      	movs	r3, #0
 8002a30:	9300      	str	r3, [sp, #0]
 8002a32:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002a36:	68f8      	ldr	r0, [r7, #12]
 8002a38:	f000 fa44 	bl	8002ec4 <I2C_TransferConfig>
 8002a3c:	68fb      	ldr	r3, [r7, #12]
 8002a3e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002a40:	b29b      	uxth	r3, r3
 8002a42:	2b00      	cmp	r3, #0
 8002a44:	d19e      	bne.n	8002984 <HAL_I2C_Mem_Write+0x110>
 8002a46:	697a      	ldr	r2, [r7, #20]
 8002a48:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002a4a:	68f8      	ldr	r0, [r7, #12]
 8002a4c:	f000 f91e 	bl	8002c8c <I2C_WaitOnSTOPFlagUntilTimeout>
 8002a50:	4603      	mov	r3, r0
 8002a52:	2b00      	cmp	r3, #0
 8002a54:	d001      	beq.n	8002a5a <HAL_I2C_Mem_Write+0x1e6>
 8002a56:	2301      	movs	r3, #1
 8002a58:	e01a      	b.n	8002a90 <HAL_I2C_Mem_Write+0x21c>
 8002a5a:	68fb      	ldr	r3, [r7, #12]
 8002a5c:	681b      	ldr	r3, [r3, #0]
 8002a5e:	2220      	movs	r2, #32
 8002a60:	61da      	str	r2, [r3, #28]
 8002a62:	68fb      	ldr	r3, [r7, #12]
 8002a64:	681b      	ldr	r3, [r3, #0]
 8002a66:	6859      	ldr	r1, [r3, #4]
 8002a68:	68fb      	ldr	r3, [r7, #12]
 8002a6a:	681a      	ldr	r2, [r3, #0]
 8002a6c:	4b0a      	ldr	r3, [pc, #40]	; (8002a98 <HAL_I2C_Mem_Write+0x224>)
 8002a6e:	400b      	ands	r3, r1
 8002a70:	6053      	str	r3, [r2, #4]
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	2220      	movs	r2, #32
 8002a76:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002a7a:	68fb      	ldr	r3, [r7, #12]
 8002a7c:	2200      	movs	r2, #0
 8002a7e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002a82:	68fb      	ldr	r3, [r7, #12]
 8002a84:	2200      	movs	r2, #0
 8002a86:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002a8a:	2300      	movs	r3, #0
 8002a8c:	e000      	b.n	8002a90 <HAL_I2C_Mem_Write+0x21c>
 8002a8e:	2302      	movs	r3, #2
 8002a90:	4618      	mov	r0, r3
 8002a92:	3718      	adds	r7, #24
 8002a94:	46bd      	mov	sp, r7
 8002a96:	bd80      	pop	{r7, pc}
 8002a98:	fe00e800 	.word	0xfe00e800

08002a9c <I2C_RequestMemoryWrite>:
 8002a9c:	b580      	push	{r7, lr}
 8002a9e:	b086      	sub	sp, #24
 8002aa0:	af02      	add	r7, sp, #8
 8002aa2:	60f8      	str	r0, [r7, #12]
 8002aa4:	4608      	mov	r0, r1
 8002aa6:	4611      	mov	r1, r2
 8002aa8:	461a      	mov	r2, r3
 8002aaa:	4603      	mov	r3, r0
 8002aac:	817b      	strh	r3, [r7, #10]
 8002aae:	460b      	mov	r3, r1
 8002ab0:	813b      	strh	r3, [r7, #8]
 8002ab2:	4613      	mov	r3, r2
 8002ab4:	80fb      	strh	r3, [r7, #6]
 8002ab6:	88fb      	ldrh	r3, [r7, #6]
 8002ab8:	b2da      	uxtb	r2, r3
 8002aba:	8979      	ldrh	r1, [r7, #10]
 8002abc:	4b20      	ldr	r3, [pc, #128]	; (8002b40 <I2C_RequestMemoryWrite+0xa4>)
 8002abe:	9300      	str	r3, [sp, #0]
 8002ac0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002ac4:	68f8      	ldr	r0, [r7, #12]
 8002ac6:	f000 f9fd 	bl	8002ec4 <I2C_TransferConfig>
 8002aca:	69fa      	ldr	r2, [r7, #28]
 8002acc:	69b9      	ldr	r1, [r7, #24]
 8002ace:	68f8      	ldr	r0, [r7, #12]
 8002ad0:	f000 f89c 	bl	8002c0c <I2C_WaitOnTXISFlagUntilTimeout>
 8002ad4:	4603      	mov	r3, r0
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d001      	beq.n	8002ade <I2C_RequestMemoryWrite+0x42>
 8002ada:	2301      	movs	r3, #1
 8002adc:	e02c      	b.n	8002b38 <I2C_RequestMemoryWrite+0x9c>
 8002ade:	88fb      	ldrh	r3, [r7, #6]
 8002ae0:	2b01      	cmp	r3, #1
 8002ae2:	d105      	bne.n	8002af0 <I2C_RequestMemoryWrite+0x54>
 8002ae4:	893b      	ldrh	r3, [r7, #8]
 8002ae6:	b2da      	uxtb	r2, r3
 8002ae8:	68fb      	ldr	r3, [r7, #12]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	629a      	str	r2, [r3, #40]	; 0x28
 8002aee:	e015      	b.n	8002b1c <I2C_RequestMemoryWrite+0x80>
 8002af0:	893b      	ldrh	r3, [r7, #8]
 8002af2:	0a1b      	lsrs	r3, r3, #8
 8002af4:	b29b      	uxth	r3, r3
 8002af6:	b2da      	uxtb	r2, r3
 8002af8:	68fb      	ldr	r3, [r7, #12]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	629a      	str	r2, [r3, #40]	; 0x28
 8002afe:	69fa      	ldr	r2, [r7, #28]
 8002b00:	69b9      	ldr	r1, [r7, #24]
 8002b02:	68f8      	ldr	r0, [r7, #12]
 8002b04:	f000 f882 	bl	8002c0c <I2C_WaitOnTXISFlagUntilTimeout>
 8002b08:	4603      	mov	r3, r0
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	d001      	beq.n	8002b12 <I2C_RequestMemoryWrite+0x76>
 8002b0e:	2301      	movs	r3, #1
 8002b10:	e012      	b.n	8002b38 <I2C_RequestMemoryWrite+0x9c>
 8002b12:	893b      	ldrh	r3, [r7, #8]
 8002b14:	b2da      	uxtb	r2, r3
 8002b16:	68fb      	ldr	r3, [r7, #12]
 8002b18:	681b      	ldr	r3, [r3, #0]
 8002b1a:	629a      	str	r2, [r3, #40]	; 0x28
 8002b1c:	69fb      	ldr	r3, [r7, #28]
 8002b1e:	9300      	str	r3, [sp, #0]
 8002b20:	69bb      	ldr	r3, [r7, #24]
 8002b22:	2200      	movs	r2, #0
 8002b24:	2180      	movs	r1, #128	; 0x80
 8002b26:	68f8      	ldr	r0, [r7, #12]
 8002b28:	f000 f830 	bl	8002b8c <I2C_WaitOnFlagUntilTimeout>
 8002b2c:	4603      	mov	r3, r0
 8002b2e:	2b00      	cmp	r3, #0
 8002b30:	d001      	beq.n	8002b36 <I2C_RequestMemoryWrite+0x9a>
 8002b32:	2301      	movs	r3, #1
 8002b34:	e000      	b.n	8002b38 <I2C_RequestMemoryWrite+0x9c>
 8002b36:	2300      	movs	r3, #0
 8002b38:	4618      	mov	r0, r3
 8002b3a:	3710      	adds	r7, #16
 8002b3c:	46bd      	mov	sp, r7
 8002b3e:	bd80      	pop	{r7, pc}
 8002b40:	80002000 	.word	0x80002000

08002b44 <I2C_Flush_TXDR>:
 8002b44:	b480      	push	{r7}
 8002b46:	b083      	sub	sp, #12
 8002b48:	af00      	add	r7, sp, #0
 8002b4a:	6078      	str	r0, [r7, #4]
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	681b      	ldr	r3, [r3, #0]
 8002b50:	699b      	ldr	r3, [r3, #24]
 8002b52:	f003 0302 	and.w	r3, r3, #2
 8002b56:	2b02      	cmp	r3, #2
 8002b58:	d103      	bne.n	8002b62 <I2C_Flush_TXDR+0x1e>
 8002b5a:	687b      	ldr	r3, [r7, #4]
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	2200      	movs	r2, #0
 8002b60:	629a      	str	r2, [r3, #40]	; 0x28
 8002b62:	687b      	ldr	r3, [r7, #4]
 8002b64:	681b      	ldr	r3, [r3, #0]
 8002b66:	699b      	ldr	r3, [r3, #24]
 8002b68:	f003 0301 	and.w	r3, r3, #1
 8002b6c:	2b01      	cmp	r3, #1
 8002b6e:	d007      	beq.n	8002b80 <I2C_Flush_TXDR+0x3c>
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	699a      	ldr	r2, [r3, #24]
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	f042 0201 	orr.w	r2, r2, #1
 8002b7e:	619a      	str	r2, [r3, #24]
 8002b80:	bf00      	nop
 8002b82:	370c      	adds	r7, #12
 8002b84:	46bd      	mov	sp, r7
 8002b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b8a:	4770      	bx	lr

08002b8c <I2C_WaitOnFlagUntilTimeout>:
 8002b8c:	b580      	push	{r7, lr}
 8002b8e:	b084      	sub	sp, #16
 8002b90:	af00      	add	r7, sp, #0
 8002b92:	60f8      	str	r0, [r7, #12]
 8002b94:	60b9      	str	r1, [r7, #8]
 8002b96:	603b      	str	r3, [r7, #0]
 8002b98:	4613      	mov	r3, r2
 8002b9a:	71fb      	strb	r3, [r7, #7]
 8002b9c:	e022      	b.n	8002be4 <I2C_WaitOnFlagUntilTimeout+0x58>
 8002b9e:	683b      	ldr	r3, [r7, #0]
 8002ba0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ba4:	d01e      	beq.n	8002be4 <I2C_WaitOnFlagUntilTimeout+0x58>
 8002ba6:	f7fe ff35 	bl	8001a14 <HAL_GetTick>
 8002baa:	4602      	mov	r2, r0
 8002bac:	69bb      	ldr	r3, [r7, #24]
 8002bae:	1ad3      	subs	r3, r2, r3
 8002bb0:	683a      	ldr	r2, [r7, #0]
 8002bb2:	429a      	cmp	r2, r3
 8002bb4:	d302      	bcc.n	8002bbc <I2C_WaitOnFlagUntilTimeout+0x30>
 8002bb6:	683b      	ldr	r3, [r7, #0]
 8002bb8:	2b00      	cmp	r3, #0
 8002bba:	d113      	bne.n	8002be4 <I2C_WaitOnFlagUntilTimeout+0x58>
 8002bbc:	68fb      	ldr	r3, [r7, #12]
 8002bbe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002bc0:	f043 0220 	orr.w	r2, r3, #32
 8002bc4:	68fb      	ldr	r3, [r7, #12]
 8002bc6:	645a      	str	r2, [r3, #68]	; 0x44
 8002bc8:	68fb      	ldr	r3, [r7, #12]
 8002bca:	2220      	movs	r2, #32
 8002bcc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002bd0:	68fb      	ldr	r3, [r7, #12]
 8002bd2:	2200      	movs	r2, #0
 8002bd4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002bd8:	68fb      	ldr	r3, [r7, #12]
 8002bda:	2200      	movs	r2, #0
 8002bdc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002be0:	2301      	movs	r3, #1
 8002be2:	e00f      	b.n	8002c04 <I2C_WaitOnFlagUntilTimeout+0x78>
 8002be4:	68fb      	ldr	r3, [r7, #12]
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	699a      	ldr	r2, [r3, #24]
 8002bea:	68bb      	ldr	r3, [r7, #8]
 8002bec:	4013      	ands	r3, r2
 8002bee:	68ba      	ldr	r2, [r7, #8]
 8002bf0:	429a      	cmp	r2, r3
 8002bf2:	bf0c      	ite	eq
 8002bf4:	2301      	moveq	r3, #1
 8002bf6:	2300      	movne	r3, #0
 8002bf8:	b2db      	uxtb	r3, r3
 8002bfa:	461a      	mov	r2, r3
 8002bfc:	79fb      	ldrb	r3, [r7, #7]
 8002bfe:	429a      	cmp	r2, r3
 8002c00:	d0cd      	beq.n	8002b9e <I2C_WaitOnFlagUntilTimeout+0x12>
 8002c02:	2300      	movs	r3, #0
 8002c04:	4618      	mov	r0, r3
 8002c06:	3710      	adds	r7, #16
 8002c08:	46bd      	mov	sp, r7
 8002c0a:	bd80      	pop	{r7, pc}

08002c0c <I2C_WaitOnTXISFlagUntilTimeout>:
 8002c0c:	b580      	push	{r7, lr}
 8002c0e:	b084      	sub	sp, #16
 8002c10:	af00      	add	r7, sp, #0
 8002c12:	60f8      	str	r0, [r7, #12]
 8002c14:	60b9      	str	r1, [r7, #8]
 8002c16:	607a      	str	r2, [r7, #4]
 8002c18:	e02c      	b.n	8002c74 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8002c1a:	687a      	ldr	r2, [r7, #4]
 8002c1c:	68b9      	ldr	r1, [r7, #8]
 8002c1e:	68f8      	ldr	r0, [r7, #12]
 8002c20:	f000 f870 	bl	8002d04 <I2C_IsErrorOccurred>
 8002c24:	4603      	mov	r3, r0
 8002c26:	2b00      	cmp	r3, #0
 8002c28:	d001      	beq.n	8002c2e <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8002c2a:	2301      	movs	r3, #1
 8002c2c:	e02a      	b.n	8002c84 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8002c2e:	68bb      	ldr	r3, [r7, #8]
 8002c30:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002c34:	d01e      	beq.n	8002c74 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8002c36:	f7fe feed 	bl	8001a14 <HAL_GetTick>
 8002c3a:	4602      	mov	r2, r0
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	1ad3      	subs	r3, r2, r3
 8002c40:	68ba      	ldr	r2, [r7, #8]
 8002c42:	429a      	cmp	r2, r3
 8002c44:	d302      	bcc.n	8002c4c <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8002c46:	68bb      	ldr	r3, [r7, #8]
 8002c48:	2b00      	cmp	r3, #0
 8002c4a:	d113      	bne.n	8002c74 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8002c4c:	68fb      	ldr	r3, [r7, #12]
 8002c4e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c50:	f043 0220 	orr.w	r2, r3, #32
 8002c54:	68fb      	ldr	r3, [r7, #12]
 8002c56:	645a      	str	r2, [r3, #68]	; 0x44
 8002c58:	68fb      	ldr	r3, [r7, #12]
 8002c5a:	2220      	movs	r2, #32
 8002c5c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002c60:	68fb      	ldr	r3, [r7, #12]
 8002c62:	2200      	movs	r2, #0
 8002c64:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002c68:	68fb      	ldr	r3, [r7, #12]
 8002c6a:	2200      	movs	r2, #0
 8002c6c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002c70:	2301      	movs	r3, #1
 8002c72:	e007      	b.n	8002c84 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8002c74:	68fb      	ldr	r3, [r7, #12]
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	699b      	ldr	r3, [r3, #24]
 8002c7a:	f003 0302 	and.w	r3, r3, #2
 8002c7e:	2b02      	cmp	r3, #2
 8002c80:	d1cb      	bne.n	8002c1a <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8002c82:	2300      	movs	r3, #0
 8002c84:	4618      	mov	r0, r3
 8002c86:	3710      	adds	r7, #16
 8002c88:	46bd      	mov	sp, r7
 8002c8a:	bd80      	pop	{r7, pc}

08002c8c <I2C_WaitOnSTOPFlagUntilTimeout>:
 8002c8c:	b580      	push	{r7, lr}
 8002c8e:	b084      	sub	sp, #16
 8002c90:	af00      	add	r7, sp, #0
 8002c92:	60f8      	str	r0, [r7, #12]
 8002c94:	60b9      	str	r1, [r7, #8]
 8002c96:	607a      	str	r2, [r7, #4]
 8002c98:	e028      	b.n	8002cec <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8002c9a:	687a      	ldr	r2, [r7, #4]
 8002c9c:	68b9      	ldr	r1, [r7, #8]
 8002c9e:	68f8      	ldr	r0, [r7, #12]
 8002ca0:	f000 f830 	bl	8002d04 <I2C_IsErrorOccurred>
 8002ca4:	4603      	mov	r3, r0
 8002ca6:	2b00      	cmp	r3, #0
 8002ca8:	d001      	beq.n	8002cae <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8002caa:	2301      	movs	r3, #1
 8002cac:	e026      	b.n	8002cfc <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8002cae:	f7fe feb1 	bl	8001a14 <HAL_GetTick>
 8002cb2:	4602      	mov	r2, r0
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	1ad3      	subs	r3, r2, r3
 8002cb8:	68ba      	ldr	r2, [r7, #8]
 8002cba:	429a      	cmp	r2, r3
 8002cbc:	d302      	bcc.n	8002cc4 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8002cbe:	68bb      	ldr	r3, [r7, #8]
 8002cc0:	2b00      	cmp	r3, #0
 8002cc2:	d113      	bne.n	8002cec <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8002cc4:	68fb      	ldr	r3, [r7, #12]
 8002cc6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002cc8:	f043 0220 	orr.w	r2, r3, #32
 8002ccc:	68fb      	ldr	r3, [r7, #12]
 8002cce:	645a      	str	r2, [r3, #68]	; 0x44
 8002cd0:	68fb      	ldr	r3, [r7, #12]
 8002cd2:	2220      	movs	r2, #32
 8002cd4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002cd8:	68fb      	ldr	r3, [r7, #12]
 8002cda:	2200      	movs	r2, #0
 8002cdc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002ce0:	68fb      	ldr	r3, [r7, #12]
 8002ce2:	2200      	movs	r2, #0
 8002ce4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002ce8:	2301      	movs	r3, #1
 8002cea:	e007      	b.n	8002cfc <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8002cec:	68fb      	ldr	r3, [r7, #12]
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	699b      	ldr	r3, [r3, #24]
 8002cf2:	f003 0320 	and.w	r3, r3, #32
 8002cf6:	2b20      	cmp	r3, #32
 8002cf8:	d1cf      	bne.n	8002c9a <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 8002cfa:	2300      	movs	r3, #0
 8002cfc:	4618      	mov	r0, r3
 8002cfe:	3710      	adds	r7, #16
 8002d00:	46bd      	mov	sp, r7
 8002d02:	bd80      	pop	{r7, pc}

08002d04 <I2C_IsErrorOccurred>:
 8002d04:	b580      	push	{r7, lr}
 8002d06:	b08a      	sub	sp, #40	; 0x28
 8002d08:	af00      	add	r7, sp, #0
 8002d0a:	60f8      	str	r0, [r7, #12]
 8002d0c:	60b9      	str	r1, [r7, #8]
 8002d0e:	607a      	str	r2, [r7, #4]
 8002d10:	2300      	movs	r3, #0
 8002d12:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002d16:	68fb      	ldr	r3, [r7, #12]
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	699b      	ldr	r3, [r3, #24]
 8002d1c:	61bb      	str	r3, [r7, #24]
 8002d1e:	2300      	movs	r3, #0
 8002d20:	623b      	str	r3, [r7, #32]
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	61fb      	str	r3, [r7, #28]
 8002d26:	69bb      	ldr	r3, [r7, #24]
 8002d28:	f003 0310 	and.w	r3, r3, #16
 8002d2c:	2b00      	cmp	r3, #0
 8002d2e:	d068      	beq.n	8002e02 <I2C_IsErrorOccurred+0xfe>
 8002d30:	68fb      	ldr	r3, [r7, #12]
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	2210      	movs	r2, #16
 8002d36:	61da      	str	r2, [r3, #28]
 8002d38:	e049      	b.n	8002dce <I2C_IsErrorOccurred+0xca>
 8002d3a:	68bb      	ldr	r3, [r7, #8]
 8002d3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002d40:	d045      	beq.n	8002dce <I2C_IsErrorOccurred+0xca>
 8002d42:	f7fe fe67 	bl	8001a14 <HAL_GetTick>
 8002d46:	4602      	mov	r2, r0
 8002d48:	69fb      	ldr	r3, [r7, #28]
 8002d4a:	1ad3      	subs	r3, r2, r3
 8002d4c:	68ba      	ldr	r2, [r7, #8]
 8002d4e:	429a      	cmp	r2, r3
 8002d50:	d302      	bcc.n	8002d58 <I2C_IsErrorOccurred+0x54>
 8002d52:	68bb      	ldr	r3, [r7, #8]
 8002d54:	2b00      	cmp	r3, #0
 8002d56:	d13a      	bne.n	8002dce <I2C_IsErrorOccurred+0xca>
 8002d58:	68fb      	ldr	r3, [r7, #12]
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	685b      	ldr	r3, [r3, #4]
 8002d5e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002d62:	617b      	str	r3, [r7, #20]
 8002d64:	68fb      	ldr	r3, [r7, #12]
 8002d66:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8002d6a:	74fb      	strb	r3, [r7, #19]
 8002d6c:	68fb      	ldr	r3, [r7, #12]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	699b      	ldr	r3, [r3, #24]
 8002d72:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8002d76:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002d7a:	d121      	bne.n	8002dc0 <I2C_IsErrorOccurred+0xbc>
 8002d7c:	697b      	ldr	r3, [r7, #20]
 8002d7e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002d82:	d01d      	beq.n	8002dc0 <I2C_IsErrorOccurred+0xbc>
 8002d84:	7cfb      	ldrb	r3, [r7, #19]
 8002d86:	2b20      	cmp	r3, #32
 8002d88:	d01a      	beq.n	8002dc0 <I2C_IsErrorOccurred+0xbc>
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	685a      	ldr	r2, [r3, #4]
 8002d90:	68fb      	ldr	r3, [r7, #12]
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002d98:	605a      	str	r2, [r3, #4]
 8002d9a:	f7fe fe3b 	bl	8001a14 <HAL_GetTick>
 8002d9e:	61f8      	str	r0, [r7, #28]
 8002da0:	e00e      	b.n	8002dc0 <I2C_IsErrorOccurred+0xbc>
 8002da2:	f7fe fe37 	bl	8001a14 <HAL_GetTick>
 8002da6:	4602      	mov	r2, r0
 8002da8:	69fb      	ldr	r3, [r7, #28]
 8002daa:	1ad3      	subs	r3, r2, r3
 8002dac:	2b19      	cmp	r3, #25
 8002dae:	d907      	bls.n	8002dc0 <I2C_IsErrorOccurred+0xbc>
 8002db0:	6a3b      	ldr	r3, [r7, #32]
 8002db2:	f043 0320 	orr.w	r3, r3, #32
 8002db6:	623b      	str	r3, [r7, #32]
 8002db8:	2301      	movs	r3, #1
 8002dba:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002dbe:	e006      	b.n	8002dce <I2C_IsErrorOccurred+0xca>
 8002dc0:	68fb      	ldr	r3, [r7, #12]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	699b      	ldr	r3, [r3, #24]
 8002dc6:	f003 0320 	and.w	r3, r3, #32
 8002dca:	2b20      	cmp	r3, #32
 8002dcc:	d1e9      	bne.n	8002da2 <I2C_IsErrorOccurred+0x9e>
 8002dce:	68fb      	ldr	r3, [r7, #12]
 8002dd0:	681b      	ldr	r3, [r3, #0]
 8002dd2:	699b      	ldr	r3, [r3, #24]
 8002dd4:	f003 0320 	and.w	r3, r3, #32
 8002dd8:	2b20      	cmp	r3, #32
 8002dda:	d003      	beq.n	8002de4 <I2C_IsErrorOccurred+0xe0>
 8002ddc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002de0:	2b00      	cmp	r3, #0
 8002de2:	d0aa      	beq.n	8002d3a <I2C_IsErrorOccurred+0x36>
 8002de4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002de8:	2b00      	cmp	r3, #0
 8002dea:	d103      	bne.n	8002df4 <I2C_IsErrorOccurred+0xf0>
 8002dec:	68fb      	ldr	r3, [r7, #12]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	2220      	movs	r2, #32
 8002df2:	61da      	str	r2, [r3, #28]
 8002df4:	6a3b      	ldr	r3, [r7, #32]
 8002df6:	f043 0304 	orr.w	r3, r3, #4
 8002dfa:	623b      	str	r3, [r7, #32]
 8002dfc:	2301      	movs	r3, #1
 8002dfe:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002e02:	68fb      	ldr	r3, [r7, #12]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	699b      	ldr	r3, [r3, #24]
 8002e08:	61bb      	str	r3, [r7, #24]
 8002e0a:	69bb      	ldr	r3, [r7, #24]
 8002e0c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	d00b      	beq.n	8002e2c <I2C_IsErrorOccurred+0x128>
 8002e14:	6a3b      	ldr	r3, [r7, #32]
 8002e16:	f043 0301 	orr.w	r3, r3, #1
 8002e1a:	623b      	str	r3, [r7, #32]
 8002e1c:	68fb      	ldr	r3, [r7, #12]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002e24:	61da      	str	r2, [r3, #28]
 8002e26:	2301      	movs	r3, #1
 8002e28:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002e2c:	69bb      	ldr	r3, [r7, #24]
 8002e2e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	d00b      	beq.n	8002e4e <I2C_IsErrorOccurred+0x14a>
 8002e36:	6a3b      	ldr	r3, [r7, #32]
 8002e38:	f043 0308 	orr.w	r3, r3, #8
 8002e3c:	623b      	str	r3, [r7, #32]
 8002e3e:	68fb      	ldr	r3, [r7, #12]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002e46:	61da      	str	r2, [r3, #28]
 8002e48:	2301      	movs	r3, #1
 8002e4a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002e4e:	69bb      	ldr	r3, [r7, #24]
 8002e50:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d00b      	beq.n	8002e70 <I2C_IsErrorOccurred+0x16c>
 8002e58:	6a3b      	ldr	r3, [r7, #32]
 8002e5a:	f043 0302 	orr.w	r3, r3, #2
 8002e5e:	623b      	str	r3, [r7, #32]
 8002e60:	68fb      	ldr	r3, [r7, #12]
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002e68:	61da      	str	r2, [r3, #28]
 8002e6a:	2301      	movs	r3, #1
 8002e6c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8002e70:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002e74:	2b00      	cmp	r3, #0
 8002e76:	d01c      	beq.n	8002eb2 <I2C_IsErrorOccurred+0x1ae>
 8002e78:	68f8      	ldr	r0, [r7, #12]
 8002e7a:	f7ff fe63 	bl	8002b44 <I2C_Flush_TXDR>
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	6859      	ldr	r1, [r3, #4]
 8002e84:	68fb      	ldr	r3, [r7, #12]
 8002e86:	681a      	ldr	r2, [r3, #0]
 8002e88:	4b0d      	ldr	r3, [pc, #52]	; (8002ec0 <I2C_IsErrorOccurred+0x1bc>)
 8002e8a:	400b      	ands	r3, r1
 8002e8c:	6053      	str	r3, [r2, #4]
 8002e8e:	68fb      	ldr	r3, [r7, #12]
 8002e90:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e92:	6a3b      	ldr	r3, [r7, #32]
 8002e94:	431a      	orrs	r2, r3
 8002e96:	68fb      	ldr	r3, [r7, #12]
 8002e98:	645a      	str	r2, [r3, #68]	; 0x44
 8002e9a:	68fb      	ldr	r3, [r7, #12]
 8002e9c:	2220      	movs	r2, #32
 8002e9e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002ea2:	68fb      	ldr	r3, [r7, #12]
 8002ea4:	2200      	movs	r2, #0
 8002ea6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002eaa:	68fb      	ldr	r3, [r7, #12]
 8002eac:	2200      	movs	r2, #0
 8002eae:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002eb2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002eb6:	4618      	mov	r0, r3
 8002eb8:	3728      	adds	r7, #40	; 0x28
 8002eba:	46bd      	mov	sp, r7
 8002ebc:	bd80      	pop	{r7, pc}
 8002ebe:	bf00      	nop
 8002ec0:	fe00e800 	.word	0xfe00e800

08002ec4 <I2C_TransferConfig>:
 8002ec4:	b480      	push	{r7}
 8002ec6:	b087      	sub	sp, #28
 8002ec8:	af00      	add	r7, sp, #0
 8002eca:	60f8      	str	r0, [r7, #12]
 8002ecc:	607b      	str	r3, [r7, #4]
 8002ece:	460b      	mov	r3, r1
 8002ed0:	817b      	strh	r3, [r7, #10]
 8002ed2:	4613      	mov	r3, r2
 8002ed4:	727b      	strb	r3, [r7, #9]
 8002ed6:	897b      	ldrh	r3, [r7, #10]
 8002ed8:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8002edc:	7a7b      	ldrb	r3, [r7, #9]
 8002ede:	041b      	lsls	r3, r3, #16
 8002ee0:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8002ee4:	431a      	orrs	r2, r3
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	431a      	orrs	r2, r3
 8002eea:	6a3b      	ldr	r3, [r7, #32]
 8002eec:	4313      	orrs	r3, r2
 8002eee:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002ef2:	617b      	str	r3, [r7, #20]
 8002ef4:	68fb      	ldr	r3, [r7, #12]
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	685a      	ldr	r2, [r3, #4]
 8002efa:	6a3b      	ldr	r3, [r7, #32]
 8002efc:	0d5b      	lsrs	r3, r3, #21
 8002efe:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8002f02:	4b08      	ldr	r3, [pc, #32]	; (8002f24 <I2C_TransferConfig+0x60>)
 8002f04:	430b      	orrs	r3, r1
 8002f06:	43db      	mvns	r3, r3
 8002f08:	ea02 0103 	and.w	r1, r2, r3
 8002f0c:	68fb      	ldr	r3, [r7, #12]
 8002f0e:	681b      	ldr	r3, [r3, #0]
 8002f10:	697a      	ldr	r2, [r7, #20]
 8002f12:	430a      	orrs	r2, r1
 8002f14:	605a      	str	r2, [r3, #4]
 8002f16:	bf00      	nop
 8002f18:	371c      	adds	r7, #28
 8002f1a:	46bd      	mov	sp, r7
 8002f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f20:	4770      	bx	lr
 8002f22:	bf00      	nop
 8002f24:	03ff63ff 	.word	0x03ff63ff

08002f28 <HAL_I2CEx_ConfigAnalogFilter>:
 8002f28:	b480      	push	{r7}
 8002f2a:	b083      	sub	sp, #12
 8002f2c:	af00      	add	r7, sp, #0
 8002f2e:	6078      	str	r0, [r7, #4]
 8002f30:	6039      	str	r1, [r7, #0]
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002f38:	b2db      	uxtb	r3, r3
 8002f3a:	2b20      	cmp	r3, #32
 8002f3c:	d138      	bne.n	8002fb0 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002f44:	2b01      	cmp	r3, #1
 8002f46:	d101      	bne.n	8002f4c <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8002f48:	2302      	movs	r3, #2
 8002f4a:	e032      	b.n	8002fb2 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	2201      	movs	r2, #1
 8002f50:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	2224      	movs	r2, #36	; 0x24
 8002f58:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	681b      	ldr	r3, [r3, #0]
 8002f60:	681a      	ldr	r2, [r3, #0]
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	f022 0201 	bic.w	r2, r2, #1
 8002f6a:	601a      	str	r2, [r3, #0]
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	681b      	ldr	r3, [r3, #0]
 8002f70:	681a      	ldr	r2, [r3, #0]
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	681b      	ldr	r3, [r3, #0]
 8002f76:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8002f7a:	601a      	str	r2, [r3, #0]
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	681b      	ldr	r3, [r3, #0]
 8002f80:	6819      	ldr	r1, [r3, #0]
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	681b      	ldr	r3, [r3, #0]
 8002f86:	683a      	ldr	r2, [r7, #0]
 8002f88:	430a      	orrs	r2, r1
 8002f8a:	601a      	str	r2, [r3, #0]
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	681b      	ldr	r3, [r3, #0]
 8002f90:	681a      	ldr	r2, [r3, #0]
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	f042 0201 	orr.w	r2, r2, #1
 8002f9a:	601a      	str	r2, [r3, #0]
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	2220      	movs	r2, #32
 8002fa0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	2200      	movs	r2, #0
 8002fa8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002fac:	2300      	movs	r3, #0
 8002fae:	e000      	b.n	8002fb2 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8002fb0:	2302      	movs	r3, #2
 8002fb2:	4618      	mov	r0, r3
 8002fb4:	370c      	adds	r7, #12
 8002fb6:	46bd      	mov	sp, r7
 8002fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fbc:	4770      	bx	lr

08002fbe <HAL_I2CEx_ConfigDigitalFilter>:
 8002fbe:	b480      	push	{r7}
 8002fc0:	b085      	sub	sp, #20
 8002fc2:	af00      	add	r7, sp, #0
 8002fc4:	6078      	str	r0, [r7, #4]
 8002fc6:	6039      	str	r1, [r7, #0]
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8002fce:	b2db      	uxtb	r3, r3
 8002fd0:	2b20      	cmp	r3, #32
 8002fd2:	d139      	bne.n	8003048 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002fda:	2b01      	cmp	r3, #1
 8002fdc:	d101      	bne.n	8002fe2 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8002fde:	2302      	movs	r3, #2
 8002fe0:	e033      	b.n	800304a <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	2201      	movs	r2, #1
 8002fe6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	2224      	movs	r2, #36	; 0x24
 8002fee:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	681b      	ldr	r3, [r3, #0]
 8002ff6:	681a      	ldr	r2, [r3, #0]
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	f022 0201 	bic.w	r2, r2, #1
 8003000:	601a      	str	r2, [r3, #0]
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	681b      	ldr	r3, [r3, #0]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	60fb      	str	r3, [r7, #12]
 800300a:	68fb      	ldr	r3, [r7, #12]
 800300c:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8003010:	60fb      	str	r3, [r7, #12]
 8003012:	683b      	ldr	r3, [r7, #0]
 8003014:	021b      	lsls	r3, r3, #8
 8003016:	68fa      	ldr	r2, [r7, #12]
 8003018:	4313      	orrs	r3, r2
 800301a:	60fb      	str	r3, [r7, #12]
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	68fa      	ldr	r2, [r7, #12]
 8003022:	601a      	str	r2, [r3, #0]
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	681a      	ldr	r2, [r3, #0]
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	681b      	ldr	r3, [r3, #0]
 800302e:	f042 0201 	orr.w	r2, r2, #1
 8003032:	601a      	str	r2, [r3, #0]
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	2220      	movs	r2, #32
 8003038:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	2200      	movs	r2, #0
 8003040:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003044:	2300      	movs	r3, #0
 8003046:	e000      	b.n	800304a <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003048:	2302      	movs	r3, #2
 800304a:	4618      	mov	r0, r3
 800304c:	3714      	adds	r7, #20
 800304e:	46bd      	mov	sp, r7
 8003050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003054:	4770      	bx	lr
	...

08003058 <HAL_I2S_Init>:
 8003058:	b580      	push	{r7, lr}
 800305a:	b088      	sub	sp, #32
 800305c:	af00      	add	r7, sp, #0
 800305e:	6078      	str	r0, [r7, #4]
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	2b00      	cmp	r3, #0
 8003064:	d101      	bne.n	800306a <HAL_I2S_Init+0x12>
 8003066:	2301      	movs	r3, #1
 8003068:	e0d2      	b.n	8003210 <HAL_I2S_Init+0x1b8>
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8003070:	b2db      	uxtb	r3, r3
 8003072:	2b00      	cmp	r3, #0
 8003074:	d106      	bne.n	8003084 <HAL_I2S_Init+0x2c>
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	2200      	movs	r2, #0
 800307a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800307e:	6878      	ldr	r0, [r7, #4]
 8003080:	f7fe fa9e 	bl	80015c0 <HAL_I2S_MspInit>
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	2202      	movs	r2, #2
 8003088:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	681b      	ldr	r3, [r3, #0]
 8003090:	69d9      	ldr	r1, [r3, #28]
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	681a      	ldr	r2, [r3, #0]
 8003096:	4b60      	ldr	r3, [pc, #384]	; (8003218 <HAL_I2S_Init+0x1c0>)
 8003098:	400b      	ands	r3, r1
 800309a:	61d3      	str	r3, [r2, #28]
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	2202      	movs	r2, #2
 80030a2:	621a      	str	r2, [r3, #32]
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	695b      	ldr	r3, [r3, #20]
 80030a8:	2b02      	cmp	r3, #2
 80030aa:	d067      	beq.n	800317c <HAL_I2S_Init+0x124>
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	68db      	ldr	r3, [r3, #12]
 80030b0:	2b00      	cmp	r3, #0
 80030b2:	d102      	bne.n	80030ba <HAL_I2S_Init+0x62>
 80030b4:	2310      	movs	r3, #16
 80030b6:	617b      	str	r3, [r7, #20]
 80030b8:	e001      	b.n	80030be <HAL_I2S_Init+0x66>
 80030ba:	2320      	movs	r3, #32
 80030bc:	617b      	str	r3, [r7, #20]
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	689b      	ldr	r3, [r3, #8]
 80030c2:	2b20      	cmp	r3, #32
 80030c4:	d802      	bhi.n	80030cc <HAL_I2S_Init+0x74>
 80030c6:	697b      	ldr	r3, [r7, #20]
 80030c8:	005b      	lsls	r3, r3, #1
 80030ca:	617b      	str	r3, [r7, #20]
 80030cc:	687b      	ldr	r3, [r7, #4]
 80030ce:	69db      	ldr	r3, [r3, #28]
 80030d0:	2b01      	cmp	r3, #1
 80030d2:	d102      	bne.n	80030da <HAL_I2S_Init+0x82>
 80030d4:	4b51      	ldr	r3, [pc, #324]	; (800321c <HAL_I2S_Init+0x1c4>)
 80030d6:	60fb      	str	r3, [r7, #12]
 80030d8:	e003      	b.n	80030e2 <HAL_I2S_Init+0x8a>
 80030da:	6878      	ldr	r0, [r7, #4]
 80030dc:	f000 fa24 	bl	8003528 <I2S_GetClockFreq>
 80030e0:	60f8      	str	r0, [r7, #12]
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	691b      	ldr	r3, [r3, #16]
 80030e6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80030ea:	d125      	bne.n	8003138 <HAL_I2S_Init+0xe0>
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	68db      	ldr	r3, [r3, #12]
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d010      	beq.n	8003116 <HAL_I2S_Init+0xbe>
 80030f4:	697b      	ldr	r3, [r7, #20]
 80030f6:	009b      	lsls	r3, r3, #2
 80030f8:	68fa      	ldr	r2, [r7, #12]
 80030fa:	fbb2 f2f3 	udiv	r2, r2, r3
 80030fe:	4613      	mov	r3, r2
 8003100:	009b      	lsls	r3, r3, #2
 8003102:	4413      	add	r3, r2
 8003104:	005b      	lsls	r3, r3, #1
 8003106:	461a      	mov	r2, r3
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	695b      	ldr	r3, [r3, #20]
 800310c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003110:	3305      	adds	r3, #5
 8003112:	613b      	str	r3, [r7, #16]
 8003114:	e01f      	b.n	8003156 <HAL_I2S_Init+0xfe>
 8003116:	697b      	ldr	r3, [r7, #20]
 8003118:	00db      	lsls	r3, r3, #3
 800311a:	68fa      	ldr	r2, [r7, #12]
 800311c:	fbb2 f2f3 	udiv	r2, r2, r3
 8003120:	4613      	mov	r3, r2
 8003122:	009b      	lsls	r3, r3, #2
 8003124:	4413      	add	r3, r2
 8003126:	005b      	lsls	r3, r3, #1
 8003128:	461a      	mov	r2, r3
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	695b      	ldr	r3, [r3, #20]
 800312e:	fbb2 f3f3 	udiv	r3, r2, r3
 8003132:	3305      	adds	r3, #5
 8003134:	613b      	str	r3, [r7, #16]
 8003136:	e00e      	b.n	8003156 <HAL_I2S_Init+0xfe>
 8003138:	68fa      	ldr	r2, [r7, #12]
 800313a:	697b      	ldr	r3, [r7, #20]
 800313c:	fbb2 f2f3 	udiv	r2, r2, r3
 8003140:	4613      	mov	r3, r2
 8003142:	009b      	lsls	r3, r3, #2
 8003144:	4413      	add	r3, r2
 8003146:	005b      	lsls	r3, r3, #1
 8003148:	461a      	mov	r2, r3
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	695b      	ldr	r3, [r3, #20]
 800314e:	fbb2 f3f3 	udiv	r3, r2, r3
 8003152:	3305      	adds	r3, #5
 8003154:	613b      	str	r3, [r7, #16]
 8003156:	693b      	ldr	r3, [r7, #16]
 8003158:	4a31      	ldr	r2, [pc, #196]	; (8003220 <HAL_I2S_Init+0x1c8>)
 800315a:	fba2 2303 	umull	r2, r3, r2, r3
 800315e:	08db      	lsrs	r3, r3, #3
 8003160:	613b      	str	r3, [r7, #16]
 8003162:	693b      	ldr	r3, [r7, #16]
 8003164:	f003 0301 	and.w	r3, r3, #1
 8003168:	61bb      	str	r3, [r7, #24]
 800316a:	693a      	ldr	r2, [r7, #16]
 800316c:	69bb      	ldr	r3, [r7, #24]
 800316e:	1ad3      	subs	r3, r2, r3
 8003170:	085b      	lsrs	r3, r3, #1
 8003172:	61fb      	str	r3, [r7, #28]
 8003174:	69bb      	ldr	r3, [r7, #24]
 8003176:	021b      	lsls	r3, r3, #8
 8003178:	61bb      	str	r3, [r7, #24]
 800317a:	e003      	b.n	8003184 <HAL_I2S_Init+0x12c>
 800317c:	2302      	movs	r3, #2
 800317e:	61fb      	str	r3, [r7, #28]
 8003180:	2300      	movs	r3, #0
 8003182:	61bb      	str	r3, [r7, #24]
 8003184:	69fb      	ldr	r3, [r7, #28]
 8003186:	2b01      	cmp	r3, #1
 8003188:	d902      	bls.n	8003190 <HAL_I2S_Init+0x138>
 800318a:	69fb      	ldr	r3, [r7, #28]
 800318c:	2bff      	cmp	r3, #255	; 0xff
 800318e:	d907      	bls.n	80031a0 <HAL_I2S_Init+0x148>
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003194:	f043 0210 	orr.w	r2, r3, #16
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	63da      	str	r2, [r3, #60]	; 0x3c
 800319c:	2301      	movs	r3, #1
 800319e:	e037      	b.n	8003210 <HAL_I2S_Init+0x1b8>
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	691a      	ldr	r2, [r3, #16]
 80031a4:	69bb      	ldr	r3, [r7, #24]
 80031a6:	ea42 0103 	orr.w	r1, r2, r3
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	69fa      	ldr	r2, [r7, #28]
 80031b0:	430a      	orrs	r2, r1
 80031b2:	621a      	str	r2, [r3, #32]
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	69da      	ldr	r2, [r3, #28]
 80031ba:	4b17      	ldr	r3, [pc, #92]	; (8003218 <HAL_I2S_Init+0x1c0>)
 80031bc:	4013      	ands	r3, r2
 80031be:	687a      	ldr	r2, [r7, #4]
 80031c0:	6851      	ldr	r1, [r2, #4]
 80031c2:	687a      	ldr	r2, [r7, #4]
 80031c4:	6892      	ldr	r2, [r2, #8]
 80031c6:	4311      	orrs	r1, r2
 80031c8:	687a      	ldr	r2, [r7, #4]
 80031ca:	68d2      	ldr	r2, [r2, #12]
 80031cc:	4311      	orrs	r1, r2
 80031ce:	687a      	ldr	r2, [r7, #4]
 80031d0:	6992      	ldr	r2, [r2, #24]
 80031d2:	430a      	orrs	r2, r1
 80031d4:	431a      	orrs	r2, r3
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80031de:	61da      	str	r2, [r3, #28]
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	689b      	ldr	r3, [r3, #8]
 80031e4:	2b30      	cmp	r3, #48	; 0x30
 80031e6:	d003      	beq.n	80031f0 <HAL_I2S_Init+0x198>
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	689b      	ldr	r3, [r3, #8]
 80031ec:	2bb0      	cmp	r3, #176	; 0xb0
 80031ee:	d107      	bne.n	8003200 <HAL_I2S_Init+0x1a8>
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	69da      	ldr	r2, [r3, #28]
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	681b      	ldr	r3, [r3, #0]
 80031fa:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80031fe:	61da      	str	r2, [r3, #28]
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	2200      	movs	r2, #0
 8003204:	63da      	str	r2, [r3, #60]	; 0x3c
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	2201      	movs	r2, #1
 800320a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800320e:	2300      	movs	r3, #0
 8003210:	4618      	mov	r0, r3
 8003212:	3720      	adds	r7, #32
 8003214:	46bd      	mov	sp, r7
 8003216:	bd80      	pop	{r7, pc}
 8003218:	fffff040 	.word	0xfffff040
 800321c:	00bb8000 	.word	0x00bb8000
 8003220:	cccccccd 	.word	0xcccccccd

08003224 <HAL_I2S_Transmit_DMA>:
 8003224:	b580      	push	{r7, lr}
 8003226:	b086      	sub	sp, #24
 8003228:	af00      	add	r7, sp, #0
 800322a:	60f8      	str	r0, [r7, #12]
 800322c:	60b9      	str	r1, [r7, #8]
 800322e:	4613      	mov	r3, r2
 8003230:	80fb      	strh	r3, [r7, #6]
 8003232:	68bb      	ldr	r3, [r7, #8]
 8003234:	2b00      	cmp	r3, #0
 8003236:	d002      	beq.n	800323e <HAL_I2S_Transmit_DMA+0x1a>
 8003238:	88fb      	ldrh	r3, [r7, #6]
 800323a:	2b00      	cmp	r3, #0
 800323c:	d101      	bne.n	8003242 <HAL_I2S_Transmit_DMA+0x1e>
 800323e:	2301      	movs	r3, #1
 8003240:	e08e      	b.n	8003360 <HAL_I2S_Transmit_DMA+0x13c>
 8003242:	68fb      	ldr	r3, [r7, #12]
 8003244:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003248:	b2db      	uxtb	r3, r3
 800324a:	2b01      	cmp	r3, #1
 800324c:	d101      	bne.n	8003252 <HAL_I2S_Transmit_DMA+0x2e>
 800324e:	2302      	movs	r3, #2
 8003250:	e086      	b.n	8003360 <HAL_I2S_Transmit_DMA+0x13c>
 8003252:	68fb      	ldr	r3, [r7, #12]
 8003254:	2201      	movs	r2, #1
 8003256:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800325a:	68fb      	ldr	r3, [r7, #12]
 800325c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8003260:	b2db      	uxtb	r3, r3
 8003262:	2b01      	cmp	r3, #1
 8003264:	d005      	beq.n	8003272 <HAL_I2S_Transmit_DMA+0x4e>
 8003266:	68fb      	ldr	r3, [r7, #12]
 8003268:	2200      	movs	r2, #0
 800326a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800326e:	2302      	movs	r3, #2
 8003270:	e076      	b.n	8003360 <HAL_I2S_Transmit_DMA+0x13c>
 8003272:	68fb      	ldr	r3, [r7, #12]
 8003274:	2203      	movs	r2, #3
 8003276:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800327a:	68fb      	ldr	r3, [r7, #12]
 800327c:	2200      	movs	r2, #0
 800327e:	63da      	str	r2, [r3, #60]	; 0x3c
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	68ba      	ldr	r2, [r7, #8]
 8003284:	621a      	str	r2, [r3, #32]
 8003286:	68fb      	ldr	r3, [r7, #12]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	69db      	ldr	r3, [r3, #28]
 800328c:	f003 0307 	and.w	r3, r3, #7
 8003290:	617b      	str	r3, [r7, #20]
 8003292:	697b      	ldr	r3, [r7, #20]
 8003294:	2b03      	cmp	r3, #3
 8003296:	d002      	beq.n	800329e <HAL_I2S_Transmit_DMA+0x7a>
 8003298:	697b      	ldr	r3, [r7, #20]
 800329a:	2b05      	cmp	r3, #5
 800329c:	d10a      	bne.n	80032b4 <HAL_I2S_Transmit_DMA+0x90>
 800329e:	88fb      	ldrh	r3, [r7, #6]
 80032a0:	005b      	lsls	r3, r3, #1
 80032a2:	b29a      	uxth	r2, r3
 80032a4:	68fb      	ldr	r3, [r7, #12]
 80032a6:	849a      	strh	r2, [r3, #36]	; 0x24
 80032a8:	88fb      	ldrh	r3, [r7, #6]
 80032aa:	005b      	lsls	r3, r3, #1
 80032ac:	b29a      	uxth	r2, r3
 80032ae:	68fb      	ldr	r3, [r7, #12]
 80032b0:	84da      	strh	r2, [r3, #38]	; 0x26
 80032b2:	e005      	b.n	80032c0 <HAL_I2S_Transmit_DMA+0x9c>
 80032b4:	68fb      	ldr	r3, [r7, #12]
 80032b6:	88fa      	ldrh	r2, [r7, #6]
 80032b8:	849a      	strh	r2, [r3, #36]	; 0x24
 80032ba:	68fb      	ldr	r3, [r7, #12]
 80032bc:	88fa      	ldrh	r2, [r7, #6]
 80032be:	84da      	strh	r2, [r3, #38]	; 0x26
 80032c0:	68fb      	ldr	r3, [r7, #12]
 80032c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032c4:	4a28      	ldr	r2, [pc, #160]	; (8003368 <HAL_I2S_Transmit_DMA+0x144>)
 80032c6:	641a      	str	r2, [r3, #64]	; 0x40
 80032c8:	68fb      	ldr	r3, [r7, #12]
 80032ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032cc:	4a27      	ldr	r2, [pc, #156]	; (800336c <HAL_I2S_Transmit_DMA+0x148>)
 80032ce:	63da      	str	r2, [r3, #60]	; 0x3c
 80032d0:	68fb      	ldr	r3, [r7, #12]
 80032d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032d4:	4a26      	ldr	r2, [pc, #152]	; (8003370 <HAL_I2S_Transmit_DMA+0x14c>)
 80032d6:	64da      	str	r2, [r3, #76]	; 0x4c
 80032d8:	68fb      	ldr	r3, [r7, #12]
 80032da:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80032dc:	68fb      	ldr	r3, [r7, #12]
 80032de:	6a1b      	ldr	r3, [r3, #32]
 80032e0:	4619      	mov	r1, r3
 80032e2:	68fb      	ldr	r3, [r7, #12]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	330c      	adds	r3, #12
 80032e8:	461a      	mov	r2, r3
 80032ea:	68fb      	ldr	r3, [r7, #12]
 80032ec:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80032ee:	b29b      	uxth	r3, r3
 80032f0:	f7fe fd80 	bl	8001df4 <HAL_DMA_Start_IT>
 80032f4:	4603      	mov	r3, r0
 80032f6:	2b00      	cmp	r3, #0
 80032f8:	d00f      	beq.n	800331a <HAL_I2S_Transmit_DMA+0xf6>
 80032fa:	68fb      	ldr	r3, [r7, #12]
 80032fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80032fe:	f043 0208 	orr.w	r2, r3, #8
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	63da      	str	r2, [r3, #60]	; 0x3c
 8003306:	68fb      	ldr	r3, [r7, #12]
 8003308:	2201      	movs	r2, #1
 800330a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800330e:	68fb      	ldr	r3, [r7, #12]
 8003310:	2200      	movs	r2, #0
 8003312:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003316:	2301      	movs	r3, #1
 8003318:	e022      	b.n	8003360 <HAL_I2S_Transmit_DMA+0x13c>
 800331a:	68fb      	ldr	r3, [r7, #12]
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	69db      	ldr	r3, [r3, #28]
 8003320:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003324:	2b00      	cmp	r3, #0
 8003326:	d107      	bne.n	8003338 <HAL_I2S_Transmit_DMA+0x114>
 8003328:	68fb      	ldr	r3, [r7, #12]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	69da      	ldr	r2, [r3, #28]
 800332e:	68fb      	ldr	r3, [r7, #12]
 8003330:	681b      	ldr	r3, [r3, #0]
 8003332:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003336:	61da      	str	r2, [r3, #28]
 8003338:	68fb      	ldr	r3, [r7, #12]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	685b      	ldr	r3, [r3, #4]
 800333e:	f003 0302 	and.w	r3, r3, #2
 8003342:	2b00      	cmp	r3, #0
 8003344:	d107      	bne.n	8003356 <HAL_I2S_Transmit_DMA+0x132>
 8003346:	68fb      	ldr	r3, [r7, #12]
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	685a      	ldr	r2, [r3, #4]
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	f042 0202 	orr.w	r2, r2, #2
 8003354:	605a      	str	r2, [r3, #4]
 8003356:	68fb      	ldr	r3, [r7, #12]
 8003358:	2200      	movs	r2, #0
 800335a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800335e:	2300      	movs	r3, #0
 8003360:	4618      	mov	r0, r3
 8003362:	3718      	adds	r7, #24
 8003364:	46bd      	mov	sp, r7
 8003366:	bd80      	pop	{r7, pc}
 8003368:	08003603 	.word	0x08003603
 800336c:	080035c1 	.word	0x080035c1
 8003370:	0800367d 	.word	0x0800367d

08003374 <HAL_I2S_Receive_DMA>:
 8003374:	b580      	push	{r7, lr}
 8003376:	b086      	sub	sp, #24
 8003378:	af00      	add	r7, sp, #0
 800337a:	60f8      	str	r0, [r7, #12]
 800337c:	60b9      	str	r1, [r7, #8]
 800337e:	4613      	mov	r3, r2
 8003380:	80fb      	strh	r3, [r7, #6]
 8003382:	68bb      	ldr	r3, [r7, #8]
 8003384:	2b00      	cmp	r3, #0
 8003386:	d002      	beq.n	800338e <HAL_I2S_Receive_DMA+0x1a>
 8003388:	88fb      	ldrh	r3, [r7, #6]
 800338a:	2b00      	cmp	r3, #0
 800338c:	d101      	bne.n	8003392 <HAL_I2S_Receive_DMA+0x1e>
 800338e:	2301      	movs	r3, #1
 8003390:	e0a1      	b.n	80034d6 <HAL_I2S_Receive_DMA+0x162>
 8003392:	68fb      	ldr	r3, [r7, #12]
 8003394:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003398:	b2db      	uxtb	r3, r3
 800339a:	2b01      	cmp	r3, #1
 800339c:	d101      	bne.n	80033a2 <HAL_I2S_Receive_DMA+0x2e>
 800339e:	2302      	movs	r3, #2
 80033a0:	e099      	b.n	80034d6 <HAL_I2S_Receive_DMA+0x162>
 80033a2:	68fb      	ldr	r3, [r7, #12]
 80033a4:	2201      	movs	r2, #1
 80033a6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80033aa:	68fb      	ldr	r3, [r7, #12]
 80033ac:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80033b0:	b2db      	uxtb	r3, r3
 80033b2:	2b01      	cmp	r3, #1
 80033b4:	d005      	beq.n	80033c2 <HAL_I2S_Receive_DMA+0x4e>
 80033b6:	68fb      	ldr	r3, [r7, #12]
 80033b8:	2200      	movs	r2, #0
 80033ba:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80033be:	2302      	movs	r3, #2
 80033c0:	e089      	b.n	80034d6 <HAL_I2S_Receive_DMA+0x162>
 80033c2:	68fb      	ldr	r3, [r7, #12]
 80033c4:	2204      	movs	r2, #4
 80033c6:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80033ca:	68fb      	ldr	r3, [r7, #12]
 80033cc:	2200      	movs	r2, #0
 80033ce:	63da      	str	r2, [r3, #60]	; 0x3c
 80033d0:	68fb      	ldr	r3, [r7, #12]
 80033d2:	68ba      	ldr	r2, [r7, #8]
 80033d4:	629a      	str	r2, [r3, #40]	; 0x28
 80033d6:	68fb      	ldr	r3, [r7, #12]
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	69db      	ldr	r3, [r3, #28]
 80033dc:	f003 0307 	and.w	r3, r3, #7
 80033e0:	617b      	str	r3, [r7, #20]
 80033e2:	697b      	ldr	r3, [r7, #20]
 80033e4:	2b03      	cmp	r3, #3
 80033e6:	d002      	beq.n	80033ee <HAL_I2S_Receive_DMA+0x7a>
 80033e8:	697b      	ldr	r3, [r7, #20]
 80033ea:	2b05      	cmp	r3, #5
 80033ec:	d10a      	bne.n	8003404 <HAL_I2S_Receive_DMA+0x90>
 80033ee:	88fb      	ldrh	r3, [r7, #6]
 80033f0:	005b      	lsls	r3, r3, #1
 80033f2:	b29a      	uxth	r2, r3
 80033f4:	68fb      	ldr	r3, [r7, #12]
 80033f6:	859a      	strh	r2, [r3, #44]	; 0x2c
 80033f8:	88fb      	ldrh	r3, [r7, #6]
 80033fa:	005b      	lsls	r3, r3, #1
 80033fc:	b29a      	uxth	r2, r3
 80033fe:	68fb      	ldr	r3, [r7, #12]
 8003400:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003402:	e005      	b.n	8003410 <HAL_I2S_Receive_DMA+0x9c>
 8003404:	68fb      	ldr	r3, [r7, #12]
 8003406:	88fa      	ldrh	r2, [r7, #6]
 8003408:	859a      	strh	r2, [r3, #44]	; 0x2c
 800340a:	68fb      	ldr	r3, [r7, #12]
 800340c:	88fa      	ldrh	r2, [r7, #6]
 800340e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003410:	68fb      	ldr	r3, [r7, #12]
 8003412:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003414:	4a32      	ldr	r2, [pc, #200]	; (80034e0 <HAL_I2S_Receive_DMA+0x16c>)
 8003416:	641a      	str	r2, [r3, #64]	; 0x40
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800341c:	4a31      	ldr	r2, [pc, #196]	; (80034e4 <HAL_I2S_Receive_DMA+0x170>)
 800341e:	63da      	str	r2, [r3, #60]	; 0x3c
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003424:	4a30      	ldr	r2, [pc, #192]	; (80034e8 <HAL_I2S_Receive_DMA+0x174>)
 8003426:	64da      	str	r2, [r3, #76]	; 0x4c
 8003428:	68fb      	ldr	r3, [r7, #12]
 800342a:	681b      	ldr	r3, [r3, #0]
 800342c:	69db      	ldr	r3, [r3, #28]
 800342e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003432:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8003436:	d10a      	bne.n	800344e <HAL_I2S_Receive_DMA+0xda>
 8003438:	2300      	movs	r3, #0
 800343a:	613b      	str	r3, [r7, #16]
 800343c:	68fb      	ldr	r3, [r7, #12]
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	68db      	ldr	r3, [r3, #12]
 8003442:	613b      	str	r3, [r7, #16]
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	689b      	ldr	r3, [r3, #8]
 800344a:	613b      	str	r3, [r7, #16]
 800344c:	693b      	ldr	r3, [r7, #16]
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8003452:	68fb      	ldr	r3, [r7, #12]
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	330c      	adds	r3, #12
 8003458:	4619      	mov	r1, r3
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800345e:	461a      	mov	r2, r3
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003464:	b29b      	uxth	r3, r3
 8003466:	f7fe fcc5 	bl	8001df4 <HAL_DMA_Start_IT>
 800346a:	4603      	mov	r3, r0
 800346c:	2b00      	cmp	r3, #0
 800346e:	d00f      	beq.n	8003490 <HAL_I2S_Receive_DMA+0x11c>
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003474:	f043 0208 	orr.w	r2, r3, #8
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	63da      	str	r2, [r3, #60]	; 0x3c
 800347c:	68fb      	ldr	r3, [r7, #12]
 800347e:	2201      	movs	r2, #1
 8003480:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003484:	68fb      	ldr	r3, [r7, #12]
 8003486:	2200      	movs	r2, #0
 8003488:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800348c:	2301      	movs	r3, #1
 800348e:	e022      	b.n	80034d6 <HAL_I2S_Receive_DMA+0x162>
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	69db      	ldr	r3, [r3, #28]
 8003496:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800349a:	2b00      	cmp	r3, #0
 800349c:	d107      	bne.n	80034ae <HAL_I2S_Receive_DMA+0x13a>
 800349e:	68fb      	ldr	r3, [r7, #12]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	69da      	ldr	r2, [r3, #28]
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80034ac:	61da      	str	r2, [r3, #28]
 80034ae:	68fb      	ldr	r3, [r7, #12]
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	685b      	ldr	r3, [r3, #4]
 80034b4:	f003 0301 	and.w	r3, r3, #1
 80034b8:	2b00      	cmp	r3, #0
 80034ba:	d107      	bne.n	80034cc <HAL_I2S_Receive_DMA+0x158>
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	685a      	ldr	r2, [r3, #4]
 80034c2:	68fb      	ldr	r3, [r7, #12]
 80034c4:	681b      	ldr	r3, [r3, #0]
 80034c6:	f042 0201 	orr.w	r2, r2, #1
 80034ca:	605a      	str	r2, [r3, #4]
 80034cc:	68fb      	ldr	r3, [r7, #12]
 80034ce:	2200      	movs	r2, #0
 80034d0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80034d4:	2300      	movs	r3, #0
 80034d6:	4618      	mov	r0, r3
 80034d8:	3718      	adds	r7, #24
 80034da:	46bd      	mov	sp, r7
 80034dc:	bd80      	pop	{r7, pc}
 80034de:	bf00      	nop
 80034e0:	08003661 	.word	0x08003661
 80034e4:	0800361f 	.word	0x0800361f
 80034e8:	0800367d 	.word	0x0800367d

080034ec <HAL_I2S_TxHalfCpltCallback>:
 80034ec:	b480      	push	{r7}
 80034ee:	b083      	sub	sp, #12
 80034f0:	af00      	add	r7, sp, #0
 80034f2:	6078      	str	r0, [r7, #4]
 80034f4:	bf00      	nop
 80034f6:	370c      	adds	r7, #12
 80034f8:	46bd      	mov	sp, r7
 80034fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034fe:	4770      	bx	lr

08003500 <HAL_I2S_TxCpltCallback>:
 8003500:	b480      	push	{r7}
 8003502:	b083      	sub	sp, #12
 8003504:	af00      	add	r7, sp, #0
 8003506:	6078      	str	r0, [r7, #4]
 8003508:	bf00      	nop
 800350a:	370c      	adds	r7, #12
 800350c:	46bd      	mov	sp, r7
 800350e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003512:	4770      	bx	lr

08003514 <HAL_I2S_ErrorCallback>:
 8003514:	b480      	push	{r7}
 8003516:	b083      	sub	sp, #12
 8003518:	af00      	add	r7, sp, #0
 800351a:	6078      	str	r0, [r7, #4]
 800351c:	bf00      	nop
 800351e:	370c      	adds	r7, #12
 8003520:	46bd      	mov	sp, r7
 8003522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003526:	4770      	bx	lr

08003528 <I2S_GetClockFreq>:
 8003528:	b480      	push	{r7}
 800352a:	b087      	sub	sp, #28
 800352c:	af00      	add	r7, sp, #0
 800352e:	6078      	str	r0, [r7, #4]
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	69db      	ldr	r3, [r3, #28]
 8003534:	2b01      	cmp	r3, #1
 8003536:	d02d      	beq.n	8003594 <I2S_GetClockFreq+0x6c>
 8003538:	2b02      	cmp	r3, #2
 800353a:	d12e      	bne.n	800359a <I2S_GetClockFreq+0x72>
 800353c:	4b1c      	ldr	r3, [pc, #112]	; (80035b0 <I2S_GetClockFreq+0x88>)
 800353e:	685b      	ldr	r3, [r3, #4]
 8003540:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003544:	2b00      	cmp	r3, #0
 8003546:	d108      	bne.n	800355a <I2S_GetClockFreq+0x32>
 8003548:	4b19      	ldr	r3, [pc, #100]	; (80035b0 <I2S_GetClockFreq+0x88>)
 800354a:	685b      	ldr	r3, [r3, #4]
 800354c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003550:	4a18      	ldr	r2, [pc, #96]	; (80035b4 <I2S_GetClockFreq+0x8c>)
 8003552:	fbb2 f3f3 	udiv	r3, r2, r3
 8003556:	617b      	str	r3, [r7, #20]
 8003558:	e007      	b.n	800356a <I2S_GetClockFreq+0x42>
 800355a:	4b15      	ldr	r3, [pc, #84]	; (80035b0 <I2S_GetClockFreq+0x88>)
 800355c:	685b      	ldr	r3, [r3, #4]
 800355e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003562:	4a15      	ldr	r2, [pc, #84]	; (80035b8 <I2S_GetClockFreq+0x90>)
 8003564:	fbb2 f3f3 	udiv	r3, r2, r3
 8003568:	617b      	str	r3, [r7, #20]
 800356a:	4b11      	ldr	r3, [pc, #68]	; (80035b0 <I2S_GetClockFreq+0x88>)
 800356c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003570:	0f1b      	lsrs	r3, r3, #28
 8003572:	f003 0307 	and.w	r3, r3, #7
 8003576:	60fb      	str	r3, [r7, #12]
 8003578:	4b0d      	ldr	r3, [pc, #52]	; (80035b0 <I2S_GetClockFreq+0x88>)
 800357a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800357e:	099b      	lsrs	r3, r3, #6
 8003580:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003584:	697a      	ldr	r2, [r7, #20]
 8003586:	fb03 f202 	mul.w	r2, r3, r2
 800358a:	68fb      	ldr	r3, [r7, #12]
 800358c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003590:	613b      	str	r3, [r7, #16]
 8003592:	e005      	b.n	80035a0 <I2S_GetClockFreq+0x78>
 8003594:	4b09      	ldr	r3, [pc, #36]	; (80035bc <I2S_GetClockFreq+0x94>)
 8003596:	613b      	str	r3, [r7, #16]
 8003598:	e002      	b.n	80035a0 <I2S_GetClockFreq+0x78>
 800359a:	2300      	movs	r3, #0
 800359c:	613b      	str	r3, [r7, #16]
 800359e:	bf00      	nop
 80035a0:	693b      	ldr	r3, [r7, #16]
 80035a2:	4618      	mov	r0, r3
 80035a4:	371c      	adds	r7, #28
 80035a6:	46bd      	mov	sp, r7
 80035a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035ac:	4770      	bx	lr
 80035ae:	bf00      	nop
 80035b0:	40023800 	.word	0x40023800
 80035b4:	00f42400 	.word	0x00f42400
 80035b8:	017d7840 	.word	0x017d7840
 80035bc:	00bb8000 	.word	0x00bb8000

080035c0 <I2S_DMATxCplt>:
 80035c0:	b580      	push	{r7, lr}
 80035c2:	b084      	sub	sp, #16
 80035c4:	af00      	add	r7, sp, #0
 80035c6:	6078      	str	r0, [r7, #4]
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80035cc:	60fb      	str	r3, [r7, #12]
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	69db      	ldr	r3, [r3, #28]
 80035d2:	2b00      	cmp	r3, #0
 80035d4:	d10e      	bne.n	80035f4 <I2S_DMATxCplt+0x34>
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	685a      	ldr	r2, [r3, #4]
 80035dc:	68fb      	ldr	r3, [r7, #12]
 80035de:	681b      	ldr	r3, [r3, #0]
 80035e0:	f022 0202 	bic.w	r2, r2, #2
 80035e4:	605a      	str	r2, [r3, #4]
 80035e6:	68fb      	ldr	r3, [r7, #12]
 80035e8:	2200      	movs	r2, #0
 80035ea:	84da      	strh	r2, [r3, #38]	; 0x26
 80035ec:	68fb      	ldr	r3, [r7, #12]
 80035ee:	2201      	movs	r2, #1
 80035f0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80035f4:	68f8      	ldr	r0, [r7, #12]
 80035f6:	f7ff ff83 	bl	8003500 <HAL_I2S_TxCpltCallback>
 80035fa:	bf00      	nop
 80035fc:	3710      	adds	r7, #16
 80035fe:	46bd      	mov	sp, r7
 8003600:	bd80      	pop	{r7, pc}

08003602 <I2S_DMATxHalfCplt>:
 8003602:	b580      	push	{r7, lr}
 8003604:	b084      	sub	sp, #16
 8003606:	af00      	add	r7, sp, #0
 8003608:	6078      	str	r0, [r7, #4]
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800360e:	60fb      	str	r3, [r7, #12]
 8003610:	68f8      	ldr	r0, [r7, #12]
 8003612:	f7ff ff6b 	bl	80034ec <HAL_I2S_TxHalfCpltCallback>
 8003616:	bf00      	nop
 8003618:	3710      	adds	r7, #16
 800361a:	46bd      	mov	sp, r7
 800361c:	bd80      	pop	{r7, pc}

0800361e <I2S_DMARxCplt>:
 800361e:	b580      	push	{r7, lr}
 8003620:	b084      	sub	sp, #16
 8003622:	af00      	add	r7, sp, #0
 8003624:	6078      	str	r0, [r7, #4]
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800362a:	60fb      	str	r3, [r7, #12]
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	69db      	ldr	r3, [r3, #28]
 8003630:	2b00      	cmp	r3, #0
 8003632:	d10e      	bne.n	8003652 <I2S_DMARxCplt+0x34>
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	685a      	ldr	r2, [r3, #4]
 800363a:	68fb      	ldr	r3, [r7, #12]
 800363c:	681b      	ldr	r3, [r3, #0]
 800363e:	f022 0201 	bic.w	r2, r2, #1
 8003642:	605a      	str	r2, [r3, #4]
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	2200      	movs	r2, #0
 8003648:	85da      	strh	r2, [r3, #46]	; 0x2e
 800364a:	68fb      	ldr	r3, [r7, #12]
 800364c:	2201      	movs	r2, #1
 800364e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003652:	68f8      	ldr	r0, [r7, #12]
 8003654:	f7fd f8d0 	bl	80007f8 <HAL_I2S_RxCpltCallback>
 8003658:	bf00      	nop
 800365a:	3710      	adds	r7, #16
 800365c:	46bd      	mov	sp, r7
 800365e:	bd80      	pop	{r7, pc}

08003660 <I2S_DMARxHalfCplt>:
 8003660:	b580      	push	{r7, lr}
 8003662:	b084      	sub	sp, #16
 8003664:	af00      	add	r7, sp, #0
 8003666:	6078      	str	r0, [r7, #4]
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800366c:	60fb      	str	r3, [r7, #12]
 800366e:	68f8      	ldr	r0, [r7, #12]
 8003670:	f7fd f8a4 	bl	80007bc <HAL_I2S_RxHalfCpltCallback>
 8003674:	bf00      	nop
 8003676:	3710      	adds	r7, #16
 8003678:	46bd      	mov	sp, r7
 800367a:	bd80      	pop	{r7, pc}

0800367c <I2S_DMAError>:
 800367c:	b580      	push	{r7, lr}
 800367e:	b084      	sub	sp, #16
 8003680:	af00      	add	r7, sp, #0
 8003682:	6078      	str	r0, [r7, #4]
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003688:	60fb      	str	r3, [r7, #12]
 800368a:	68fb      	ldr	r3, [r7, #12]
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	685a      	ldr	r2, [r3, #4]
 8003690:	68fb      	ldr	r3, [r7, #12]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	f022 0203 	bic.w	r2, r2, #3
 8003698:	605a      	str	r2, [r3, #4]
 800369a:	68fb      	ldr	r3, [r7, #12]
 800369c:	2200      	movs	r2, #0
 800369e:	84da      	strh	r2, [r3, #38]	; 0x26
 80036a0:	68fb      	ldr	r3, [r7, #12]
 80036a2:	2200      	movs	r2, #0
 80036a4:	85da      	strh	r2, [r3, #46]	; 0x2e
 80036a6:	68fb      	ldr	r3, [r7, #12]
 80036a8:	2201      	movs	r2, #1
 80036aa:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80036ae:	68fb      	ldr	r3, [r7, #12]
 80036b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80036b2:	f043 0208 	orr.w	r2, r3, #8
 80036b6:	68fb      	ldr	r3, [r7, #12]
 80036b8:	63da      	str	r2, [r3, #60]	; 0x3c
 80036ba:	68f8      	ldr	r0, [r7, #12]
 80036bc:	f7ff ff2a 	bl	8003514 <HAL_I2S_ErrorCallback>
 80036c0:	bf00      	nop
 80036c2:	3710      	adds	r7, #16
 80036c4:	46bd      	mov	sp, r7
 80036c6:	bd80      	pop	{r7, pc}

080036c8 <HAL_PWREx_EnableOverDrive>:
 80036c8:	b580      	push	{r7, lr}
 80036ca:	b082      	sub	sp, #8
 80036cc:	af00      	add	r7, sp, #0
 80036ce:	2300      	movs	r3, #0
 80036d0:	607b      	str	r3, [r7, #4]
 80036d2:	4b23      	ldr	r3, [pc, #140]	; (8003760 <HAL_PWREx_EnableOverDrive+0x98>)
 80036d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036d6:	4a22      	ldr	r2, [pc, #136]	; (8003760 <HAL_PWREx_EnableOverDrive+0x98>)
 80036d8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80036dc:	6413      	str	r3, [r2, #64]	; 0x40
 80036de:	4b20      	ldr	r3, [pc, #128]	; (8003760 <HAL_PWREx_EnableOverDrive+0x98>)
 80036e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80036e6:	603b      	str	r3, [r7, #0]
 80036e8:	683b      	ldr	r3, [r7, #0]
 80036ea:	4b1e      	ldr	r3, [pc, #120]	; (8003764 <HAL_PWREx_EnableOverDrive+0x9c>)
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	4a1d      	ldr	r2, [pc, #116]	; (8003764 <HAL_PWREx_EnableOverDrive+0x9c>)
 80036f0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80036f4:	6013      	str	r3, [r2, #0]
 80036f6:	f7fe f98d 	bl	8001a14 <HAL_GetTick>
 80036fa:	6078      	str	r0, [r7, #4]
 80036fc:	e009      	b.n	8003712 <HAL_PWREx_EnableOverDrive+0x4a>
 80036fe:	f7fe f989 	bl	8001a14 <HAL_GetTick>
 8003702:	4602      	mov	r2, r0
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	1ad3      	subs	r3, r2, r3
 8003708:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800370c:	d901      	bls.n	8003712 <HAL_PWREx_EnableOverDrive+0x4a>
 800370e:	2303      	movs	r3, #3
 8003710:	e022      	b.n	8003758 <HAL_PWREx_EnableOverDrive+0x90>
 8003712:	4b14      	ldr	r3, [pc, #80]	; (8003764 <HAL_PWREx_EnableOverDrive+0x9c>)
 8003714:	685b      	ldr	r3, [r3, #4]
 8003716:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800371a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800371e:	d1ee      	bne.n	80036fe <HAL_PWREx_EnableOverDrive+0x36>
 8003720:	4b10      	ldr	r3, [pc, #64]	; (8003764 <HAL_PWREx_EnableOverDrive+0x9c>)
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	4a0f      	ldr	r2, [pc, #60]	; (8003764 <HAL_PWREx_EnableOverDrive+0x9c>)
 8003726:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800372a:	6013      	str	r3, [r2, #0]
 800372c:	f7fe f972 	bl	8001a14 <HAL_GetTick>
 8003730:	6078      	str	r0, [r7, #4]
 8003732:	e009      	b.n	8003748 <HAL_PWREx_EnableOverDrive+0x80>
 8003734:	f7fe f96e 	bl	8001a14 <HAL_GetTick>
 8003738:	4602      	mov	r2, r0
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	1ad3      	subs	r3, r2, r3
 800373e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003742:	d901      	bls.n	8003748 <HAL_PWREx_EnableOverDrive+0x80>
 8003744:	2303      	movs	r3, #3
 8003746:	e007      	b.n	8003758 <HAL_PWREx_EnableOverDrive+0x90>
 8003748:	4b06      	ldr	r3, [pc, #24]	; (8003764 <HAL_PWREx_EnableOverDrive+0x9c>)
 800374a:	685b      	ldr	r3, [r3, #4]
 800374c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003750:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8003754:	d1ee      	bne.n	8003734 <HAL_PWREx_EnableOverDrive+0x6c>
 8003756:	2300      	movs	r3, #0
 8003758:	4618      	mov	r0, r3
 800375a:	3708      	adds	r7, #8
 800375c:	46bd      	mov	sp, r7
 800375e:	bd80      	pop	{r7, pc}
 8003760:	40023800 	.word	0x40023800
 8003764:	40007000 	.word	0x40007000

08003768 <HAL_RCC_OscConfig>:
 8003768:	b580      	push	{r7, lr}
 800376a:	b086      	sub	sp, #24
 800376c:	af00      	add	r7, sp, #0
 800376e:	6078      	str	r0, [r7, #4]
 8003770:	2300      	movs	r3, #0
 8003772:	75fb      	strb	r3, [r7, #23]
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	2b00      	cmp	r3, #0
 8003778:	d101      	bne.n	800377e <HAL_RCC_OscConfig+0x16>
 800377a:	2301      	movs	r3, #1
 800377c:	e291      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	f003 0301 	and.w	r3, r3, #1
 8003786:	2b00      	cmp	r3, #0
 8003788:	f000 8087 	beq.w	800389a <HAL_RCC_OscConfig+0x132>
 800378c:	4b96      	ldr	r3, [pc, #600]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 800378e:	689b      	ldr	r3, [r3, #8]
 8003790:	f003 030c 	and.w	r3, r3, #12
 8003794:	2b04      	cmp	r3, #4
 8003796:	d00c      	beq.n	80037b2 <HAL_RCC_OscConfig+0x4a>
 8003798:	4b93      	ldr	r3, [pc, #588]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 800379a:	689b      	ldr	r3, [r3, #8]
 800379c:	f003 030c 	and.w	r3, r3, #12
 80037a0:	2b08      	cmp	r3, #8
 80037a2:	d112      	bne.n	80037ca <HAL_RCC_OscConfig+0x62>
 80037a4:	4b90      	ldr	r3, [pc, #576]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80037a6:	685b      	ldr	r3, [r3, #4]
 80037a8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80037ac:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80037b0:	d10b      	bne.n	80037ca <HAL_RCC_OscConfig+0x62>
 80037b2:	4b8d      	ldr	r3, [pc, #564]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d06c      	beq.n	8003898 <HAL_RCC_OscConfig+0x130>
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	685b      	ldr	r3, [r3, #4]
 80037c2:	2b00      	cmp	r3, #0
 80037c4:	d168      	bne.n	8003898 <HAL_RCC_OscConfig+0x130>
 80037c6:	2301      	movs	r3, #1
 80037c8:	e26b      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	685b      	ldr	r3, [r3, #4]
 80037ce:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80037d2:	d106      	bne.n	80037e2 <HAL_RCC_OscConfig+0x7a>
 80037d4:	4b84      	ldr	r3, [pc, #528]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	4a83      	ldr	r2, [pc, #524]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80037da:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80037de:	6013      	str	r3, [r2, #0]
 80037e0:	e02e      	b.n	8003840 <HAL_RCC_OscConfig+0xd8>
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	685b      	ldr	r3, [r3, #4]
 80037e6:	2b00      	cmp	r3, #0
 80037e8:	d10c      	bne.n	8003804 <HAL_RCC_OscConfig+0x9c>
 80037ea:	4b7f      	ldr	r3, [pc, #508]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80037ec:	681b      	ldr	r3, [r3, #0]
 80037ee:	4a7e      	ldr	r2, [pc, #504]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80037f0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80037f4:	6013      	str	r3, [r2, #0]
 80037f6:	4b7c      	ldr	r3, [pc, #496]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	4a7b      	ldr	r2, [pc, #492]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80037fc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003800:	6013      	str	r3, [r2, #0]
 8003802:	e01d      	b.n	8003840 <HAL_RCC_OscConfig+0xd8>
 8003804:	687b      	ldr	r3, [r7, #4]
 8003806:	685b      	ldr	r3, [r3, #4]
 8003808:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800380c:	d10c      	bne.n	8003828 <HAL_RCC_OscConfig+0xc0>
 800380e:	4b76      	ldr	r3, [pc, #472]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	4a75      	ldr	r2, [pc, #468]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003814:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003818:	6013      	str	r3, [r2, #0]
 800381a:	4b73      	ldr	r3, [pc, #460]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	4a72      	ldr	r2, [pc, #456]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003820:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003824:	6013      	str	r3, [r2, #0]
 8003826:	e00b      	b.n	8003840 <HAL_RCC_OscConfig+0xd8>
 8003828:	4b6f      	ldr	r3, [pc, #444]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	4a6e      	ldr	r2, [pc, #440]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 800382e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003832:	6013      	str	r3, [r2, #0]
 8003834:	4b6c      	ldr	r3, [pc, #432]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	4a6b      	ldr	r2, [pc, #428]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 800383a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800383e:	6013      	str	r3, [r2, #0]
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	685b      	ldr	r3, [r3, #4]
 8003844:	2b00      	cmp	r3, #0
 8003846:	d013      	beq.n	8003870 <HAL_RCC_OscConfig+0x108>
 8003848:	f7fe f8e4 	bl	8001a14 <HAL_GetTick>
 800384c:	6138      	str	r0, [r7, #16]
 800384e:	e008      	b.n	8003862 <HAL_RCC_OscConfig+0xfa>
 8003850:	f7fe f8e0 	bl	8001a14 <HAL_GetTick>
 8003854:	4602      	mov	r2, r0
 8003856:	693b      	ldr	r3, [r7, #16]
 8003858:	1ad3      	subs	r3, r2, r3
 800385a:	2b64      	cmp	r3, #100	; 0x64
 800385c:	d901      	bls.n	8003862 <HAL_RCC_OscConfig+0xfa>
 800385e:	2303      	movs	r3, #3
 8003860:	e21f      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 8003862:	4b61      	ldr	r3, [pc, #388]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003864:	681b      	ldr	r3, [r3, #0]
 8003866:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800386a:	2b00      	cmp	r3, #0
 800386c:	d0f0      	beq.n	8003850 <HAL_RCC_OscConfig+0xe8>
 800386e:	e014      	b.n	800389a <HAL_RCC_OscConfig+0x132>
 8003870:	f7fe f8d0 	bl	8001a14 <HAL_GetTick>
 8003874:	6138      	str	r0, [r7, #16]
 8003876:	e008      	b.n	800388a <HAL_RCC_OscConfig+0x122>
 8003878:	f7fe f8cc 	bl	8001a14 <HAL_GetTick>
 800387c:	4602      	mov	r2, r0
 800387e:	693b      	ldr	r3, [r7, #16]
 8003880:	1ad3      	subs	r3, r2, r3
 8003882:	2b64      	cmp	r3, #100	; 0x64
 8003884:	d901      	bls.n	800388a <HAL_RCC_OscConfig+0x122>
 8003886:	2303      	movs	r3, #3
 8003888:	e20b      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 800388a:	4b57      	ldr	r3, [pc, #348]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 800388c:	681b      	ldr	r3, [r3, #0]
 800388e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003892:	2b00      	cmp	r3, #0
 8003894:	d1f0      	bne.n	8003878 <HAL_RCC_OscConfig+0x110>
 8003896:	e000      	b.n	800389a <HAL_RCC_OscConfig+0x132>
 8003898:	bf00      	nop
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	f003 0302 	and.w	r3, r3, #2
 80038a2:	2b00      	cmp	r3, #0
 80038a4:	d069      	beq.n	800397a <HAL_RCC_OscConfig+0x212>
 80038a6:	4b50      	ldr	r3, [pc, #320]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80038a8:	689b      	ldr	r3, [r3, #8]
 80038aa:	f003 030c 	and.w	r3, r3, #12
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	d00b      	beq.n	80038ca <HAL_RCC_OscConfig+0x162>
 80038b2:	4b4d      	ldr	r3, [pc, #308]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80038b4:	689b      	ldr	r3, [r3, #8]
 80038b6:	f003 030c 	and.w	r3, r3, #12
 80038ba:	2b08      	cmp	r3, #8
 80038bc:	d11c      	bne.n	80038f8 <HAL_RCC_OscConfig+0x190>
 80038be:	4b4a      	ldr	r3, [pc, #296]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80038c0:	685b      	ldr	r3, [r3, #4]
 80038c2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80038c6:	2b00      	cmp	r3, #0
 80038c8:	d116      	bne.n	80038f8 <HAL_RCC_OscConfig+0x190>
 80038ca:	4b47      	ldr	r3, [pc, #284]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80038cc:	681b      	ldr	r3, [r3, #0]
 80038ce:	f003 0302 	and.w	r3, r3, #2
 80038d2:	2b00      	cmp	r3, #0
 80038d4:	d005      	beq.n	80038e2 <HAL_RCC_OscConfig+0x17a>
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	68db      	ldr	r3, [r3, #12]
 80038da:	2b01      	cmp	r3, #1
 80038dc:	d001      	beq.n	80038e2 <HAL_RCC_OscConfig+0x17a>
 80038de:	2301      	movs	r3, #1
 80038e0:	e1df      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 80038e2:	4b41      	ldr	r3, [pc, #260]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80038e4:	681b      	ldr	r3, [r3, #0]
 80038e6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	691b      	ldr	r3, [r3, #16]
 80038ee:	00db      	lsls	r3, r3, #3
 80038f0:	493d      	ldr	r1, [pc, #244]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80038f2:	4313      	orrs	r3, r2
 80038f4:	600b      	str	r3, [r1, #0]
 80038f6:	e040      	b.n	800397a <HAL_RCC_OscConfig+0x212>
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	68db      	ldr	r3, [r3, #12]
 80038fc:	2b00      	cmp	r3, #0
 80038fe:	d023      	beq.n	8003948 <HAL_RCC_OscConfig+0x1e0>
 8003900:	4b39      	ldr	r3, [pc, #228]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003902:	681b      	ldr	r3, [r3, #0]
 8003904:	4a38      	ldr	r2, [pc, #224]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003906:	f043 0301 	orr.w	r3, r3, #1
 800390a:	6013      	str	r3, [r2, #0]
 800390c:	f7fe f882 	bl	8001a14 <HAL_GetTick>
 8003910:	6138      	str	r0, [r7, #16]
 8003912:	e008      	b.n	8003926 <HAL_RCC_OscConfig+0x1be>
 8003914:	f7fe f87e 	bl	8001a14 <HAL_GetTick>
 8003918:	4602      	mov	r2, r0
 800391a:	693b      	ldr	r3, [r7, #16]
 800391c:	1ad3      	subs	r3, r2, r3
 800391e:	2b02      	cmp	r3, #2
 8003920:	d901      	bls.n	8003926 <HAL_RCC_OscConfig+0x1be>
 8003922:	2303      	movs	r3, #3
 8003924:	e1bd      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 8003926:	4b30      	ldr	r3, [pc, #192]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	f003 0302 	and.w	r3, r3, #2
 800392e:	2b00      	cmp	r3, #0
 8003930:	d0f0      	beq.n	8003914 <HAL_RCC_OscConfig+0x1ac>
 8003932:	4b2d      	ldr	r3, [pc, #180]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	691b      	ldr	r3, [r3, #16]
 800393e:	00db      	lsls	r3, r3, #3
 8003940:	4929      	ldr	r1, [pc, #164]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003942:	4313      	orrs	r3, r2
 8003944:	600b      	str	r3, [r1, #0]
 8003946:	e018      	b.n	800397a <HAL_RCC_OscConfig+0x212>
 8003948:	4b27      	ldr	r3, [pc, #156]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	4a26      	ldr	r2, [pc, #152]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 800394e:	f023 0301 	bic.w	r3, r3, #1
 8003952:	6013      	str	r3, [r2, #0]
 8003954:	f7fe f85e 	bl	8001a14 <HAL_GetTick>
 8003958:	6138      	str	r0, [r7, #16]
 800395a:	e008      	b.n	800396e <HAL_RCC_OscConfig+0x206>
 800395c:	f7fe f85a 	bl	8001a14 <HAL_GetTick>
 8003960:	4602      	mov	r2, r0
 8003962:	693b      	ldr	r3, [r7, #16]
 8003964:	1ad3      	subs	r3, r2, r3
 8003966:	2b02      	cmp	r3, #2
 8003968:	d901      	bls.n	800396e <HAL_RCC_OscConfig+0x206>
 800396a:	2303      	movs	r3, #3
 800396c:	e199      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 800396e:	4b1e      	ldr	r3, [pc, #120]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	f003 0302 	and.w	r3, r3, #2
 8003976:	2b00      	cmp	r3, #0
 8003978:	d1f0      	bne.n	800395c <HAL_RCC_OscConfig+0x1f4>
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	f003 0308 	and.w	r3, r3, #8
 8003982:	2b00      	cmp	r3, #0
 8003984:	d038      	beq.n	80039f8 <HAL_RCC_OscConfig+0x290>
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	695b      	ldr	r3, [r3, #20]
 800398a:	2b00      	cmp	r3, #0
 800398c:	d019      	beq.n	80039c2 <HAL_RCC_OscConfig+0x25a>
 800398e:	4b16      	ldr	r3, [pc, #88]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003990:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8003992:	4a15      	ldr	r2, [pc, #84]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 8003994:	f043 0301 	orr.w	r3, r3, #1
 8003998:	6753      	str	r3, [r2, #116]	; 0x74
 800399a:	f7fe f83b 	bl	8001a14 <HAL_GetTick>
 800399e:	6138      	str	r0, [r7, #16]
 80039a0:	e008      	b.n	80039b4 <HAL_RCC_OscConfig+0x24c>
 80039a2:	f7fe f837 	bl	8001a14 <HAL_GetTick>
 80039a6:	4602      	mov	r2, r0
 80039a8:	693b      	ldr	r3, [r7, #16]
 80039aa:	1ad3      	subs	r3, r2, r3
 80039ac:	2b02      	cmp	r3, #2
 80039ae:	d901      	bls.n	80039b4 <HAL_RCC_OscConfig+0x24c>
 80039b0:	2303      	movs	r3, #3
 80039b2:	e176      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 80039b4:	4b0c      	ldr	r3, [pc, #48]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80039b6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80039b8:	f003 0302 	and.w	r3, r3, #2
 80039bc:	2b00      	cmp	r3, #0
 80039be:	d0f0      	beq.n	80039a2 <HAL_RCC_OscConfig+0x23a>
 80039c0:	e01a      	b.n	80039f8 <HAL_RCC_OscConfig+0x290>
 80039c2:	4b09      	ldr	r3, [pc, #36]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80039c4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80039c6:	4a08      	ldr	r2, [pc, #32]	; (80039e8 <HAL_RCC_OscConfig+0x280>)
 80039c8:	f023 0301 	bic.w	r3, r3, #1
 80039cc:	6753      	str	r3, [r2, #116]	; 0x74
 80039ce:	f7fe f821 	bl	8001a14 <HAL_GetTick>
 80039d2:	6138      	str	r0, [r7, #16]
 80039d4:	e00a      	b.n	80039ec <HAL_RCC_OscConfig+0x284>
 80039d6:	f7fe f81d 	bl	8001a14 <HAL_GetTick>
 80039da:	4602      	mov	r2, r0
 80039dc:	693b      	ldr	r3, [r7, #16]
 80039de:	1ad3      	subs	r3, r2, r3
 80039e0:	2b02      	cmp	r3, #2
 80039e2:	d903      	bls.n	80039ec <HAL_RCC_OscConfig+0x284>
 80039e4:	2303      	movs	r3, #3
 80039e6:	e15c      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 80039e8:	40023800 	.word	0x40023800
 80039ec:	4b91      	ldr	r3, [pc, #580]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 80039ee:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80039f0:	f003 0302 	and.w	r3, r3, #2
 80039f4:	2b00      	cmp	r3, #0
 80039f6:	d1ee      	bne.n	80039d6 <HAL_RCC_OscConfig+0x26e>
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	f003 0304 	and.w	r3, r3, #4
 8003a00:	2b00      	cmp	r3, #0
 8003a02:	f000 80a4 	beq.w	8003b4e <HAL_RCC_OscConfig+0x3e6>
 8003a06:	4b8b      	ldr	r3, [pc, #556]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003a08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a0a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d10d      	bne.n	8003a2e <HAL_RCC_OscConfig+0x2c6>
 8003a12:	4b88      	ldr	r3, [pc, #544]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003a14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a16:	4a87      	ldr	r2, [pc, #540]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003a18:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003a1c:	6413      	str	r3, [r2, #64]	; 0x40
 8003a1e:	4b85      	ldr	r3, [pc, #532]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003a20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a22:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003a26:	60bb      	str	r3, [r7, #8]
 8003a28:	68bb      	ldr	r3, [r7, #8]
 8003a2a:	2301      	movs	r3, #1
 8003a2c:	75fb      	strb	r3, [r7, #23]
 8003a2e:	4b82      	ldr	r3, [pc, #520]	; (8003c38 <HAL_RCC_OscConfig+0x4d0>)
 8003a30:	681b      	ldr	r3, [r3, #0]
 8003a32:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003a36:	2b00      	cmp	r3, #0
 8003a38:	d118      	bne.n	8003a6c <HAL_RCC_OscConfig+0x304>
 8003a3a:	4b7f      	ldr	r3, [pc, #508]	; (8003c38 <HAL_RCC_OscConfig+0x4d0>)
 8003a3c:	681b      	ldr	r3, [r3, #0]
 8003a3e:	4a7e      	ldr	r2, [pc, #504]	; (8003c38 <HAL_RCC_OscConfig+0x4d0>)
 8003a40:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003a44:	6013      	str	r3, [r2, #0]
 8003a46:	f7fd ffe5 	bl	8001a14 <HAL_GetTick>
 8003a4a:	6138      	str	r0, [r7, #16]
 8003a4c:	e008      	b.n	8003a60 <HAL_RCC_OscConfig+0x2f8>
 8003a4e:	f7fd ffe1 	bl	8001a14 <HAL_GetTick>
 8003a52:	4602      	mov	r2, r0
 8003a54:	693b      	ldr	r3, [r7, #16]
 8003a56:	1ad3      	subs	r3, r2, r3
 8003a58:	2b64      	cmp	r3, #100	; 0x64
 8003a5a:	d901      	bls.n	8003a60 <HAL_RCC_OscConfig+0x2f8>
 8003a5c:	2303      	movs	r3, #3
 8003a5e:	e120      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 8003a60:	4b75      	ldr	r3, [pc, #468]	; (8003c38 <HAL_RCC_OscConfig+0x4d0>)
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003a68:	2b00      	cmp	r3, #0
 8003a6a:	d0f0      	beq.n	8003a4e <HAL_RCC_OscConfig+0x2e6>
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	689b      	ldr	r3, [r3, #8]
 8003a70:	2b01      	cmp	r3, #1
 8003a72:	d106      	bne.n	8003a82 <HAL_RCC_OscConfig+0x31a>
 8003a74:	4b6f      	ldr	r3, [pc, #444]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003a76:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003a78:	4a6e      	ldr	r2, [pc, #440]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003a7a:	f043 0301 	orr.w	r3, r3, #1
 8003a7e:	6713      	str	r3, [r2, #112]	; 0x70
 8003a80:	e02d      	b.n	8003ade <HAL_RCC_OscConfig+0x376>
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	689b      	ldr	r3, [r3, #8]
 8003a86:	2b00      	cmp	r3, #0
 8003a88:	d10c      	bne.n	8003aa4 <HAL_RCC_OscConfig+0x33c>
 8003a8a:	4b6a      	ldr	r3, [pc, #424]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003a8c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003a8e:	4a69      	ldr	r2, [pc, #420]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003a90:	f023 0301 	bic.w	r3, r3, #1
 8003a94:	6713      	str	r3, [r2, #112]	; 0x70
 8003a96:	4b67      	ldr	r3, [pc, #412]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003a98:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003a9a:	4a66      	ldr	r2, [pc, #408]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003a9c:	f023 0304 	bic.w	r3, r3, #4
 8003aa0:	6713      	str	r3, [r2, #112]	; 0x70
 8003aa2:	e01c      	b.n	8003ade <HAL_RCC_OscConfig+0x376>
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	689b      	ldr	r3, [r3, #8]
 8003aa8:	2b05      	cmp	r3, #5
 8003aaa:	d10c      	bne.n	8003ac6 <HAL_RCC_OscConfig+0x35e>
 8003aac:	4b61      	ldr	r3, [pc, #388]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003aae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003ab0:	4a60      	ldr	r2, [pc, #384]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003ab2:	f043 0304 	orr.w	r3, r3, #4
 8003ab6:	6713      	str	r3, [r2, #112]	; 0x70
 8003ab8:	4b5e      	ldr	r3, [pc, #376]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003aba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003abc:	4a5d      	ldr	r2, [pc, #372]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003abe:	f043 0301 	orr.w	r3, r3, #1
 8003ac2:	6713      	str	r3, [r2, #112]	; 0x70
 8003ac4:	e00b      	b.n	8003ade <HAL_RCC_OscConfig+0x376>
 8003ac6:	4b5b      	ldr	r3, [pc, #364]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003ac8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003aca:	4a5a      	ldr	r2, [pc, #360]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003acc:	f023 0301 	bic.w	r3, r3, #1
 8003ad0:	6713      	str	r3, [r2, #112]	; 0x70
 8003ad2:	4b58      	ldr	r3, [pc, #352]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003ad4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003ad6:	4a57      	ldr	r2, [pc, #348]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003ad8:	f023 0304 	bic.w	r3, r3, #4
 8003adc:	6713      	str	r3, [r2, #112]	; 0x70
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	689b      	ldr	r3, [r3, #8]
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d015      	beq.n	8003b12 <HAL_RCC_OscConfig+0x3aa>
 8003ae6:	f7fd ff95 	bl	8001a14 <HAL_GetTick>
 8003aea:	6138      	str	r0, [r7, #16]
 8003aec:	e00a      	b.n	8003b04 <HAL_RCC_OscConfig+0x39c>
 8003aee:	f7fd ff91 	bl	8001a14 <HAL_GetTick>
 8003af2:	4602      	mov	r2, r0
 8003af4:	693b      	ldr	r3, [r7, #16]
 8003af6:	1ad3      	subs	r3, r2, r3
 8003af8:	f241 3288 	movw	r2, #5000	; 0x1388
 8003afc:	4293      	cmp	r3, r2
 8003afe:	d901      	bls.n	8003b04 <HAL_RCC_OscConfig+0x39c>
 8003b00:	2303      	movs	r3, #3
 8003b02:	e0ce      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 8003b04:	4b4b      	ldr	r3, [pc, #300]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003b06:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003b08:	f003 0302 	and.w	r3, r3, #2
 8003b0c:	2b00      	cmp	r3, #0
 8003b0e:	d0ee      	beq.n	8003aee <HAL_RCC_OscConfig+0x386>
 8003b10:	e014      	b.n	8003b3c <HAL_RCC_OscConfig+0x3d4>
 8003b12:	f7fd ff7f 	bl	8001a14 <HAL_GetTick>
 8003b16:	6138      	str	r0, [r7, #16]
 8003b18:	e00a      	b.n	8003b30 <HAL_RCC_OscConfig+0x3c8>
 8003b1a:	f7fd ff7b 	bl	8001a14 <HAL_GetTick>
 8003b1e:	4602      	mov	r2, r0
 8003b20:	693b      	ldr	r3, [r7, #16]
 8003b22:	1ad3      	subs	r3, r2, r3
 8003b24:	f241 3288 	movw	r2, #5000	; 0x1388
 8003b28:	4293      	cmp	r3, r2
 8003b2a:	d901      	bls.n	8003b30 <HAL_RCC_OscConfig+0x3c8>
 8003b2c:	2303      	movs	r3, #3
 8003b2e:	e0b8      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 8003b30:	4b40      	ldr	r3, [pc, #256]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003b32:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003b34:	f003 0302 	and.w	r3, r3, #2
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	d1ee      	bne.n	8003b1a <HAL_RCC_OscConfig+0x3b2>
 8003b3c:	7dfb      	ldrb	r3, [r7, #23]
 8003b3e:	2b01      	cmp	r3, #1
 8003b40:	d105      	bne.n	8003b4e <HAL_RCC_OscConfig+0x3e6>
 8003b42:	4b3c      	ldr	r3, [pc, #240]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003b44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b46:	4a3b      	ldr	r2, [pc, #236]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003b48:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003b4c:	6413      	str	r3, [r2, #64]	; 0x40
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	699b      	ldr	r3, [r3, #24]
 8003b52:	2b00      	cmp	r3, #0
 8003b54:	f000 80a4 	beq.w	8003ca0 <HAL_RCC_OscConfig+0x538>
 8003b58:	4b36      	ldr	r3, [pc, #216]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003b5a:	689b      	ldr	r3, [r3, #8]
 8003b5c:	f003 030c 	and.w	r3, r3, #12
 8003b60:	2b08      	cmp	r3, #8
 8003b62:	d06b      	beq.n	8003c3c <HAL_RCC_OscConfig+0x4d4>
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	699b      	ldr	r3, [r3, #24]
 8003b68:	2b02      	cmp	r3, #2
 8003b6a:	d149      	bne.n	8003c00 <HAL_RCC_OscConfig+0x498>
 8003b6c:	4b31      	ldr	r3, [pc, #196]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003b6e:	681b      	ldr	r3, [r3, #0]
 8003b70:	4a30      	ldr	r2, [pc, #192]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003b72:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8003b76:	6013      	str	r3, [r2, #0]
 8003b78:	f7fd ff4c 	bl	8001a14 <HAL_GetTick>
 8003b7c:	6138      	str	r0, [r7, #16]
 8003b7e:	e008      	b.n	8003b92 <HAL_RCC_OscConfig+0x42a>
 8003b80:	f7fd ff48 	bl	8001a14 <HAL_GetTick>
 8003b84:	4602      	mov	r2, r0
 8003b86:	693b      	ldr	r3, [r7, #16]
 8003b88:	1ad3      	subs	r3, r2, r3
 8003b8a:	2b02      	cmp	r3, #2
 8003b8c:	d901      	bls.n	8003b92 <HAL_RCC_OscConfig+0x42a>
 8003b8e:	2303      	movs	r3, #3
 8003b90:	e087      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 8003b92:	4b28      	ldr	r3, [pc, #160]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	d1f0      	bne.n	8003b80 <HAL_RCC_OscConfig+0x418>
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	69da      	ldr	r2, [r3, #28]
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	6a1b      	ldr	r3, [r3, #32]
 8003ba6:	431a      	orrs	r2, r3
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bac:	019b      	lsls	r3, r3, #6
 8003bae:	431a      	orrs	r2, r3
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003bb4:	085b      	lsrs	r3, r3, #1
 8003bb6:	3b01      	subs	r3, #1
 8003bb8:	041b      	lsls	r3, r3, #16
 8003bba:	431a      	orrs	r2, r3
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003bc0:	061b      	lsls	r3, r3, #24
 8003bc2:	4313      	orrs	r3, r2
 8003bc4:	4a1b      	ldr	r2, [pc, #108]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003bc6:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8003bca:	6053      	str	r3, [r2, #4]
 8003bcc:	4b19      	ldr	r3, [pc, #100]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	4a18      	ldr	r2, [pc, #96]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003bd2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003bd6:	6013      	str	r3, [r2, #0]
 8003bd8:	f7fd ff1c 	bl	8001a14 <HAL_GetTick>
 8003bdc:	6138      	str	r0, [r7, #16]
 8003bde:	e008      	b.n	8003bf2 <HAL_RCC_OscConfig+0x48a>
 8003be0:	f7fd ff18 	bl	8001a14 <HAL_GetTick>
 8003be4:	4602      	mov	r2, r0
 8003be6:	693b      	ldr	r3, [r7, #16]
 8003be8:	1ad3      	subs	r3, r2, r3
 8003bea:	2b02      	cmp	r3, #2
 8003bec:	d901      	bls.n	8003bf2 <HAL_RCC_OscConfig+0x48a>
 8003bee:	2303      	movs	r3, #3
 8003bf0:	e057      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 8003bf2:	4b10      	ldr	r3, [pc, #64]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003bfa:	2b00      	cmp	r3, #0
 8003bfc:	d0f0      	beq.n	8003be0 <HAL_RCC_OscConfig+0x478>
 8003bfe:	e04f      	b.n	8003ca0 <HAL_RCC_OscConfig+0x538>
 8003c00:	4b0c      	ldr	r3, [pc, #48]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003c02:	681b      	ldr	r3, [r3, #0]
 8003c04:	4a0b      	ldr	r2, [pc, #44]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003c06:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8003c0a:	6013      	str	r3, [r2, #0]
 8003c0c:	f7fd ff02 	bl	8001a14 <HAL_GetTick>
 8003c10:	6138      	str	r0, [r7, #16]
 8003c12:	e008      	b.n	8003c26 <HAL_RCC_OscConfig+0x4be>
 8003c14:	f7fd fefe 	bl	8001a14 <HAL_GetTick>
 8003c18:	4602      	mov	r2, r0
 8003c1a:	693b      	ldr	r3, [r7, #16]
 8003c1c:	1ad3      	subs	r3, r2, r3
 8003c1e:	2b02      	cmp	r3, #2
 8003c20:	d901      	bls.n	8003c26 <HAL_RCC_OscConfig+0x4be>
 8003c22:	2303      	movs	r3, #3
 8003c24:	e03d      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 8003c26:	4b03      	ldr	r3, [pc, #12]	; (8003c34 <HAL_RCC_OscConfig+0x4cc>)
 8003c28:	681b      	ldr	r3, [r3, #0]
 8003c2a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	d1f0      	bne.n	8003c14 <HAL_RCC_OscConfig+0x4ac>
 8003c32:	e035      	b.n	8003ca0 <HAL_RCC_OscConfig+0x538>
 8003c34:	40023800 	.word	0x40023800
 8003c38:	40007000 	.word	0x40007000
 8003c3c:	4b1b      	ldr	r3, [pc, #108]	; (8003cac <HAL_RCC_OscConfig+0x544>)
 8003c3e:	685b      	ldr	r3, [r3, #4]
 8003c40:	60fb      	str	r3, [r7, #12]
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	699b      	ldr	r3, [r3, #24]
 8003c46:	2b01      	cmp	r3, #1
 8003c48:	d028      	beq.n	8003c9c <HAL_RCC_OscConfig+0x534>
 8003c4a:	68fb      	ldr	r3, [r7, #12]
 8003c4c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	69db      	ldr	r3, [r3, #28]
 8003c54:	429a      	cmp	r2, r3
 8003c56:	d121      	bne.n	8003c9c <HAL_RCC_OscConfig+0x534>
 8003c58:	68fb      	ldr	r3, [r7, #12]
 8003c5a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	6a1b      	ldr	r3, [r3, #32]
 8003c62:	429a      	cmp	r2, r3
 8003c64:	d11a      	bne.n	8003c9c <HAL_RCC_OscConfig+0x534>
 8003c66:	68fa      	ldr	r2, [r7, #12]
 8003c68:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8003c6c:	4013      	ands	r3, r2
 8003c6e:	687a      	ldr	r2, [r7, #4]
 8003c70:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8003c72:	0192      	lsls	r2, r2, #6
 8003c74:	4293      	cmp	r3, r2
 8003c76:	d111      	bne.n	8003c9c <HAL_RCC_OscConfig+0x534>
 8003c78:	68fb      	ldr	r3, [r7, #12]
 8003c7a:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003c82:	085b      	lsrs	r3, r3, #1
 8003c84:	3b01      	subs	r3, #1
 8003c86:	041b      	lsls	r3, r3, #16
 8003c88:	429a      	cmp	r2, r3
 8003c8a:	d107      	bne.n	8003c9c <HAL_RCC_OscConfig+0x534>
 8003c8c:	68fb      	ldr	r3, [r7, #12]
 8003c8e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c96:	061b      	lsls	r3, r3, #24
 8003c98:	429a      	cmp	r2, r3
 8003c9a:	d001      	beq.n	8003ca0 <HAL_RCC_OscConfig+0x538>
 8003c9c:	2301      	movs	r3, #1
 8003c9e:	e000      	b.n	8003ca2 <HAL_RCC_OscConfig+0x53a>
 8003ca0:	2300      	movs	r3, #0
 8003ca2:	4618      	mov	r0, r3
 8003ca4:	3718      	adds	r7, #24
 8003ca6:	46bd      	mov	sp, r7
 8003ca8:	bd80      	pop	{r7, pc}
 8003caa:	bf00      	nop
 8003cac:	40023800 	.word	0x40023800

08003cb0 <HAL_RCC_ClockConfig>:
 8003cb0:	b580      	push	{r7, lr}
 8003cb2:	b084      	sub	sp, #16
 8003cb4:	af00      	add	r7, sp, #0
 8003cb6:	6078      	str	r0, [r7, #4]
 8003cb8:	6039      	str	r1, [r7, #0]
 8003cba:	2300      	movs	r3, #0
 8003cbc:	60fb      	str	r3, [r7, #12]
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	2b00      	cmp	r3, #0
 8003cc2:	d101      	bne.n	8003cc8 <HAL_RCC_ClockConfig+0x18>
 8003cc4:	2301      	movs	r3, #1
 8003cc6:	e0d0      	b.n	8003e6a <HAL_RCC_ClockConfig+0x1ba>
 8003cc8:	4b6a      	ldr	r3, [pc, #424]	; (8003e74 <HAL_RCC_ClockConfig+0x1c4>)
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	f003 030f 	and.w	r3, r3, #15
 8003cd0:	683a      	ldr	r2, [r7, #0]
 8003cd2:	429a      	cmp	r2, r3
 8003cd4:	d910      	bls.n	8003cf8 <HAL_RCC_ClockConfig+0x48>
 8003cd6:	4b67      	ldr	r3, [pc, #412]	; (8003e74 <HAL_RCC_ClockConfig+0x1c4>)
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	f023 020f 	bic.w	r2, r3, #15
 8003cde:	4965      	ldr	r1, [pc, #404]	; (8003e74 <HAL_RCC_ClockConfig+0x1c4>)
 8003ce0:	683b      	ldr	r3, [r7, #0]
 8003ce2:	4313      	orrs	r3, r2
 8003ce4:	600b      	str	r3, [r1, #0]
 8003ce6:	4b63      	ldr	r3, [pc, #396]	; (8003e74 <HAL_RCC_ClockConfig+0x1c4>)
 8003ce8:	681b      	ldr	r3, [r3, #0]
 8003cea:	f003 030f 	and.w	r3, r3, #15
 8003cee:	683a      	ldr	r2, [r7, #0]
 8003cf0:	429a      	cmp	r2, r3
 8003cf2:	d001      	beq.n	8003cf8 <HAL_RCC_ClockConfig+0x48>
 8003cf4:	2301      	movs	r3, #1
 8003cf6:	e0b8      	b.n	8003e6a <HAL_RCC_ClockConfig+0x1ba>
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	f003 0302 	and.w	r3, r3, #2
 8003d00:	2b00      	cmp	r3, #0
 8003d02:	d020      	beq.n	8003d46 <HAL_RCC_ClockConfig+0x96>
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	f003 0304 	and.w	r3, r3, #4
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d005      	beq.n	8003d1c <HAL_RCC_ClockConfig+0x6c>
 8003d10:	4b59      	ldr	r3, [pc, #356]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003d12:	689b      	ldr	r3, [r3, #8]
 8003d14:	4a58      	ldr	r2, [pc, #352]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003d16:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8003d1a:	6093      	str	r3, [r2, #8]
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	f003 0308 	and.w	r3, r3, #8
 8003d24:	2b00      	cmp	r3, #0
 8003d26:	d005      	beq.n	8003d34 <HAL_RCC_ClockConfig+0x84>
 8003d28:	4b53      	ldr	r3, [pc, #332]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003d2a:	689b      	ldr	r3, [r3, #8]
 8003d2c:	4a52      	ldr	r2, [pc, #328]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003d2e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8003d32:	6093      	str	r3, [r2, #8]
 8003d34:	4b50      	ldr	r3, [pc, #320]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003d36:	689b      	ldr	r3, [r3, #8]
 8003d38:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	689b      	ldr	r3, [r3, #8]
 8003d40:	494d      	ldr	r1, [pc, #308]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003d42:	4313      	orrs	r3, r2
 8003d44:	608b      	str	r3, [r1, #8]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	f003 0301 	and.w	r3, r3, #1
 8003d4e:	2b00      	cmp	r3, #0
 8003d50:	d040      	beq.n	8003dd4 <HAL_RCC_ClockConfig+0x124>
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	685b      	ldr	r3, [r3, #4]
 8003d56:	2b01      	cmp	r3, #1
 8003d58:	d107      	bne.n	8003d6a <HAL_RCC_ClockConfig+0xba>
 8003d5a:	4b47      	ldr	r3, [pc, #284]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003d5c:	681b      	ldr	r3, [r3, #0]
 8003d5e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003d62:	2b00      	cmp	r3, #0
 8003d64:	d115      	bne.n	8003d92 <HAL_RCC_ClockConfig+0xe2>
 8003d66:	2301      	movs	r3, #1
 8003d68:	e07f      	b.n	8003e6a <HAL_RCC_ClockConfig+0x1ba>
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	685b      	ldr	r3, [r3, #4]
 8003d6e:	2b02      	cmp	r3, #2
 8003d70:	d107      	bne.n	8003d82 <HAL_RCC_ClockConfig+0xd2>
 8003d72:	4b41      	ldr	r3, [pc, #260]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003d7a:	2b00      	cmp	r3, #0
 8003d7c:	d109      	bne.n	8003d92 <HAL_RCC_ClockConfig+0xe2>
 8003d7e:	2301      	movs	r3, #1
 8003d80:	e073      	b.n	8003e6a <HAL_RCC_ClockConfig+0x1ba>
 8003d82:	4b3d      	ldr	r3, [pc, #244]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	f003 0302 	and.w	r3, r3, #2
 8003d8a:	2b00      	cmp	r3, #0
 8003d8c:	d101      	bne.n	8003d92 <HAL_RCC_ClockConfig+0xe2>
 8003d8e:	2301      	movs	r3, #1
 8003d90:	e06b      	b.n	8003e6a <HAL_RCC_ClockConfig+0x1ba>
 8003d92:	4b39      	ldr	r3, [pc, #228]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003d94:	689b      	ldr	r3, [r3, #8]
 8003d96:	f023 0203 	bic.w	r2, r3, #3
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	685b      	ldr	r3, [r3, #4]
 8003d9e:	4936      	ldr	r1, [pc, #216]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003da0:	4313      	orrs	r3, r2
 8003da2:	608b      	str	r3, [r1, #8]
 8003da4:	f7fd fe36 	bl	8001a14 <HAL_GetTick>
 8003da8:	60f8      	str	r0, [r7, #12]
 8003daa:	e00a      	b.n	8003dc2 <HAL_RCC_ClockConfig+0x112>
 8003dac:	f7fd fe32 	bl	8001a14 <HAL_GetTick>
 8003db0:	4602      	mov	r2, r0
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	1ad3      	subs	r3, r2, r3
 8003db6:	f241 3288 	movw	r2, #5000	; 0x1388
 8003dba:	4293      	cmp	r3, r2
 8003dbc:	d901      	bls.n	8003dc2 <HAL_RCC_ClockConfig+0x112>
 8003dbe:	2303      	movs	r3, #3
 8003dc0:	e053      	b.n	8003e6a <HAL_RCC_ClockConfig+0x1ba>
 8003dc2:	4b2d      	ldr	r3, [pc, #180]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003dc4:	689b      	ldr	r3, [r3, #8]
 8003dc6:	f003 020c 	and.w	r2, r3, #12
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	685b      	ldr	r3, [r3, #4]
 8003dce:	009b      	lsls	r3, r3, #2
 8003dd0:	429a      	cmp	r2, r3
 8003dd2:	d1eb      	bne.n	8003dac <HAL_RCC_ClockConfig+0xfc>
 8003dd4:	4b27      	ldr	r3, [pc, #156]	; (8003e74 <HAL_RCC_ClockConfig+0x1c4>)
 8003dd6:	681b      	ldr	r3, [r3, #0]
 8003dd8:	f003 030f 	and.w	r3, r3, #15
 8003ddc:	683a      	ldr	r2, [r7, #0]
 8003dde:	429a      	cmp	r2, r3
 8003de0:	d210      	bcs.n	8003e04 <HAL_RCC_ClockConfig+0x154>
 8003de2:	4b24      	ldr	r3, [pc, #144]	; (8003e74 <HAL_RCC_ClockConfig+0x1c4>)
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	f023 020f 	bic.w	r2, r3, #15
 8003dea:	4922      	ldr	r1, [pc, #136]	; (8003e74 <HAL_RCC_ClockConfig+0x1c4>)
 8003dec:	683b      	ldr	r3, [r7, #0]
 8003dee:	4313      	orrs	r3, r2
 8003df0:	600b      	str	r3, [r1, #0]
 8003df2:	4b20      	ldr	r3, [pc, #128]	; (8003e74 <HAL_RCC_ClockConfig+0x1c4>)
 8003df4:	681b      	ldr	r3, [r3, #0]
 8003df6:	f003 030f 	and.w	r3, r3, #15
 8003dfa:	683a      	ldr	r2, [r7, #0]
 8003dfc:	429a      	cmp	r2, r3
 8003dfe:	d001      	beq.n	8003e04 <HAL_RCC_ClockConfig+0x154>
 8003e00:	2301      	movs	r3, #1
 8003e02:	e032      	b.n	8003e6a <HAL_RCC_ClockConfig+0x1ba>
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	681b      	ldr	r3, [r3, #0]
 8003e08:	f003 0304 	and.w	r3, r3, #4
 8003e0c:	2b00      	cmp	r3, #0
 8003e0e:	d008      	beq.n	8003e22 <HAL_RCC_ClockConfig+0x172>
 8003e10:	4b19      	ldr	r3, [pc, #100]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003e12:	689b      	ldr	r3, [r3, #8]
 8003e14:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	68db      	ldr	r3, [r3, #12]
 8003e1c:	4916      	ldr	r1, [pc, #88]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003e1e:	4313      	orrs	r3, r2
 8003e20:	608b      	str	r3, [r1, #8]
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	681b      	ldr	r3, [r3, #0]
 8003e26:	f003 0308 	and.w	r3, r3, #8
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	d009      	beq.n	8003e42 <HAL_RCC_ClockConfig+0x192>
 8003e2e:	4b12      	ldr	r3, [pc, #72]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003e30:	689b      	ldr	r3, [r3, #8]
 8003e32:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	691b      	ldr	r3, [r3, #16]
 8003e3a:	00db      	lsls	r3, r3, #3
 8003e3c:	490e      	ldr	r1, [pc, #56]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003e3e:	4313      	orrs	r3, r2
 8003e40:	608b      	str	r3, [r1, #8]
 8003e42:	f000 f821 	bl	8003e88 <HAL_RCC_GetSysClockFreq>
 8003e46:	4602      	mov	r2, r0
 8003e48:	4b0b      	ldr	r3, [pc, #44]	; (8003e78 <HAL_RCC_ClockConfig+0x1c8>)
 8003e4a:	689b      	ldr	r3, [r3, #8]
 8003e4c:	091b      	lsrs	r3, r3, #4
 8003e4e:	f003 030f 	and.w	r3, r3, #15
 8003e52:	490a      	ldr	r1, [pc, #40]	; (8003e7c <HAL_RCC_ClockConfig+0x1cc>)
 8003e54:	5ccb      	ldrb	r3, [r1, r3]
 8003e56:	fa22 f303 	lsr.w	r3, r2, r3
 8003e5a:	4a09      	ldr	r2, [pc, #36]	; (8003e80 <HAL_RCC_ClockConfig+0x1d0>)
 8003e5c:	6013      	str	r3, [r2, #0]
 8003e5e:	4b09      	ldr	r3, [pc, #36]	; (8003e84 <HAL_RCC_ClockConfig+0x1d4>)
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	4618      	mov	r0, r3
 8003e64:	f7fd fd92 	bl	800198c <HAL_InitTick>
 8003e68:	2300      	movs	r3, #0
 8003e6a:	4618      	mov	r0, r3
 8003e6c:	3710      	adds	r7, #16
 8003e6e:	46bd      	mov	sp, r7
 8003e70:	bd80      	pop	{r7, pc}
 8003e72:	bf00      	nop
 8003e74:	40023c00 	.word	0x40023c00
 8003e78:	40023800 	.word	0x40023800
 8003e7c:	08004924 	.word	0x08004924
 8003e80:	20000054 	.word	0x20000054
 8003e84:	20000058 	.word	0x20000058

08003e88 <HAL_RCC_GetSysClockFreq>:
 8003e88:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003e8c:	b090      	sub	sp, #64	; 0x40
 8003e8e:	af00      	add	r7, sp, #0
 8003e90:	2300      	movs	r3, #0
 8003e92:	637b      	str	r3, [r7, #52]	; 0x34
 8003e94:	2300      	movs	r3, #0
 8003e96:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003e98:	2300      	movs	r3, #0
 8003e9a:	633b      	str	r3, [r7, #48]	; 0x30
 8003e9c:	2300      	movs	r3, #0
 8003e9e:	63bb      	str	r3, [r7, #56]	; 0x38
 8003ea0:	4b59      	ldr	r3, [pc, #356]	; (8004008 <HAL_RCC_GetSysClockFreq+0x180>)
 8003ea2:	689b      	ldr	r3, [r3, #8]
 8003ea4:	f003 030c 	and.w	r3, r3, #12
 8003ea8:	2b08      	cmp	r3, #8
 8003eaa:	d00d      	beq.n	8003ec8 <HAL_RCC_GetSysClockFreq+0x40>
 8003eac:	2b08      	cmp	r3, #8
 8003eae:	f200 80a1 	bhi.w	8003ff4 <HAL_RCC_GetSysClockFreq+0x16c>
 8003eb2:	2b00      	cmp	r3, #0
 8003eb4:	d002      	beq.n	8003ebc <HAL_RCC_GetSysClockFreq+0x34>
 8003eb6:	2b04      	cmp	r3, #4
 8003eb8:	d003      	beq.n	8003ec2 <HAL_RCC_GetSysClockFreq+0x3a>
 8003eba:	e09b      	b.n	8003ff4 <HAL_RCC_GetSysClockFreq+0x16c>
 8003ebc:	4b53      	ldr	r3, [pc, #332]	; (800400c <HAL_RCC_GetSysClockFreq+0x184>)
 8003ebe:	63bb      	str	r3, [r7, #56]	; 0x38
 8003ec0:	e09b      	b.n	8003ffa <HAL_RCC_GetSysClockFreq+0x172>
 8003ec2:	4b53      	ldr	r3, [pc, #332]	; (8004010 <HAL_RCC_GetSysClockFreq+0x188>)
 8003ec4:	63bb      	str	r3, [r7, #56]	; 0x38
 8003ec6:	e098      	b.n	8003ffa <HAL_RCC_GetSysClockFreq+0x172>
 8003ec8:	4b4f      	ldr	r3, [pc, #316]	; (8004008 <HAL_RCC_GetSysClockFreq+0x180>)
 8003eca:	685b      	ldr	r3, [r3, #4]
 8003ecc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003ed0:	637b      	str	r3, [r7, #52]	; 0x34
 8003ed2:	4b4d      	ldr	r3, [pc, #308]	; (8004008 <HAL_RCC_GetSysClockFreq+0x180>)
 8003ed4:	685b      	ldr	r3, [r3, #4]
 8003ed6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003eda:	2b00      	cmp	r3, #0
 8003edc:	d028      	beq.n	8003f30 <HAL_RCC_GetSysClockFreq+0xa8>
 8003ede:	4b4a      	ldr	r3, [pc, #296]	; (8004008 <HAL_RCC_GetSysClockFreq+0x180>)
 8003ee0:	685b      	ldr	r3, [r3, #4]
 8003ee2:	099b      	lsrs	r3, r3, #6
 8003ee4:	2200      	movs	r2, #0
 8003ee6:	623b      	str	r3, [r7, #32]
 8003ee8:	627a      	str	r2, [r7, #36]	; 0x24
 8003eea:	6a3b      	ldr	r3, [r7, #32]
 8003eec:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8003ef0:	2100      	movs	r1, #0
 8003ef2:	4b47      	ldr	r3, [pc, #284]	; (8004010 <HAL_RCC_GetSysClockFreq+0x188>)
 8003ef4:	fb03 f201 	mul.w	r2, r3, r1
 8003ef8:	2300      	movs	r3, #0
 8003efa:	fb00 f303 	mul.w	r3, r0, r3
 8003efe:	4413      	add	r3, r2
 8003f00:	4a43      	ldr	r2, [pc, #268]	; (8004010 <HAL_RCC_GetSysClockFreq+0x188>)
 8003f02:	fba0 1202 	umull	r1, r2, r0, r2
 8003f06:	62fa      	str	r2, [r7, #44]	; 0x2c
 8003f08:	460a      	mov	r2, r1
 8003f0a:	62ba      	str	r2, [r7, #40]	; 0x28
 8003f0c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003f0e:	4413      	add	r3, r2
 8003f10:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003f12:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003f14:	2200      	movs	r2, #0
 8003f16:	61bb      	str	r3, [r7, #24]
 8003f18:	61fa      	str	r2, [r7, #28]
 8003f1a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003f1e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8003f22:	f7fc f97d 	bl	8000220 <__aeabi_uldivmod>
 8003f26:	4602      	mov	r2, r0
 8003f28:	460b      	mov	r3, r1
 8003f2a:	4613      	mov	r3, r2
 8003f2c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003f2e:	e053      	b.n	8003fd8 <HAL_RCC_GetSysClockFreq+0x150>
 8003f30:	4b35      	ldr	r3, [pc, #212]	; (8004008 <HAL_RCC_GetSysClockFreq+0x180>)
 8003f32:	685b      	ldr	r3, [r3, #4]
 8003f34:	099b      	lsrs	r3, r3, #6
 8003f36:	2200      	movs	r2, #0
 8003f38:	613b      	str	r3, [r7, #16]
 8003f3a:	617a      	str	r2, [r7, #20]
 8003f3c:	693b      	ldr	r3, [r7, #16]
 8003f3e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8003f42:	f04f 0b00 	mov.w	fp, #0
 8003f46:	4652      	mov	r2, sl
 8003f48:	465b      	mov	r3, fp
 8003f4a:	f04f 0000 	mov.w	r0, #0
 8003f4e:	f04f 0100 	mov.w	r1, #0
 8003f52:	0159      	lsls	r1, r3, #5
 8003f54:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003f58:	0150      	lsls	r0, r2, #5
 8003f5a:	4602      	mov	r2, r0
 8003f5c:	460b      	mov	r3, r1
 8003f5e:	ebb2 080a 	subs.w	r8, r2, sl
 8003f62:	eb63 090b 	sbc.w	r9, r3, fp
 8003f66:	f04f 0200 	mov.w	r2, #0
 8003f6a:	f04f 0300 	mov.w	r3, #0
 8003f6e:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8003f72:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8003f76:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8003f7a:	ebb2 0408 	subs.w	r4, r2, r8
 8003f7e:	eb63 0509 	sbc.w	r5, r3, r9
 8003f82:	f04f 0200 	mov.w	r2, #0
 8003f86:	f04f 0300 	mov.w	r3, #0
 8003f8a:	00eb      	lsls	r3, r5, #3
 8003f8c:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003f90:	00e2      	lsls	r2, r4, #3
 8003f92:	4614      	mov	r4, r2
 8003f94:	461d      	mov	r5, r3
 8003f96:	eb14 030a 	adds.w	r3, r4, sl
 8003f9a:	603b      	str	r3, [r7, #0]
 8003f9c:	eb45 030b 	adc.w	r3, r5, fp
 8003fa0:	607b      	str	r3, [r7, #4]
 8003fa2:	f04f 0200 	mov.w	r2, #0
 8003fa6:	f04f 0300 	mov.w	r3, #0
 8003faa:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003fae:	4629      	mov	r1, r5
 8003fb0:	028b      	lsls	r3, r1, #10
 8003fb2:	4621      	mov	r1, r4
 8003fb4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003fb8:	4621      	mov	r1, r4
 8003fba:	028a      	lsls	r2, r1, #10
 8003fbc:	4610      	mov	r0, r2
 8003fbe:	4619      	mov	r1, r3
 8003fc0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003fc2:	2200      	movs	r2, #0
 8003fc4:	60bb      	str	r3, [r7, #8]
 8003fc6:	60fa      	str	r2, [r7, #12]
 8003fc8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003fcc:	f7fc f928 	bl	8000220 <__aeabi_uldivmod>
 8003fd0:	4602      	mov	r2, r0
 8003fd2:	460b      	mov	r3, r1
 8003fd4:	4613      	mov	r3, r2
 8003fd6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003fd8:	4b0b      	ldr	r3, [pc, #44]	; (8004008 <HAL_RCC_GetSysClockFreq+0x180>)
 8003fda:	685b      	ldr	r3, [r3, #4]
 8003fdc:	0c1b      	lsrs	r3, r3, #16
 8003fde:	f003 0303 	and.w	r3, r3, #3
 8003fe2:	3301      	adds	r3, #1
 8003fe4:	005b      	lsls	r3, r3, #1
 8003fe6:	633b      	str	r3, [r7, #48]	; 0x30
 8003fe8:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8003fea:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003fec:	fbb2 f3f3 	udiv	r3, r2, r3
 8003ff0:	63bb      	str	r3, [r7, #56]	; 0x38
 8003ff2:	e002      	b.n	8003ffa <HAL_RCC_GetSysClockFreq+0x172>
 8003ff4:	4b05      	ldr	r3, [pc, #20]	; (800400c <HAL_RCC_GetSysClockFreq+0x184>)
 8003ff6:	63bb      	str	r3, [r7, #56]	; 0x38
 8003ff8:	bf00      	nop
 8003ffa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003ffc:	4618      	mov	r0, r3
 8003ffe:	3740      	adds	r7, #64	; 0x40
 8004000:	46bd      	mov	sp, r7
 8004002:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004006:	bf00      	nop
 8004008:	40023800 	.word	0x40023800
 800400c:	00f42400 	.word	0x00f42400
 8004010:	017d7840 	.word	0x017d7840

08004014 <HAL_RCCEx_PeriphCLKConfig>:
 8004014:	b580      	push	{r7, lr}
 8004016:	b088      	sub	sp, #32
 8004018:	af00      	add	r7, sp, #0
 800401a:	6078      	str	r0, [r7, #4]
 800401c:	2300      	movs	r3, #0
 800401e:	617b      	str	r3, [r7, #20]
 8004020:	2300      	movs	r3, #0
 8004022:	613b      	str	r3, [r7, #16]
 8004024:	2300      	movs	r3, #0
 8004026:	61fb      	str	r3, [r7, #28]
 8004028:	2300      	movs	r3, #0
 800402a:	61bb      	str	r3, [r7, #24]
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	f003 0301 	and.w	r3, r3, #1
 8004034:	2b00      	cmp	r3, #0
 8004036:	d012      	beq.n	800405e <HAL_RCCEx_PeriphCLKConfig+0x4a>
 8004038:	4b65      	ldr	r3, [pc, #404]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800403a:	689b      	ldr	r3, [r3, #8]
 800403c:	4a64      	ldr	r2, [pc, #400]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800403e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8004042:	6093      	str	r3, [r2, #8]
 8004044:	4b62      	ldr	r3, [pc, #392]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004046:	689a      	ldr	r2, [r3, #8]
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800404c:	4960      	ldr	r1, [pc, #384]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800404e:	4313      	orrs	r3, r2
 8004050:	608b      	str	r3, [r1, #8]
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004056:	2b00      	cmp	r3, #0
 8004058:	d101      	bne.n	800405e <HAL_RCCEx_PeriphCLKConfig+0x4a>
 800405a:	2301      	movs	r3, #1
 800405c:	61fb      	str	r3, [r7, #28]
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	681b      	ldr	r3, [r3, #0]
 8004062:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004066:	2b00      	cmp	r3, #0
 8004068:	d017      	beq.n	800409a <HAL_RCCEx_PeriphCLKConfig+0x86>
 800406a:	4b59      	ldr	r3, [pc, #356]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800406c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004070:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004078:	4955      	ldr	r1, [pc, #340]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800407a:	4313      	orrs	r3, r2
 800407c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004084:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004088:	d101      	bne.n	800408e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 800408a:	2301      	movs	r3, #1
 800408c:	61fb      	str	r3, [r7, #28]
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004092:	2b00      	cmp	r3, #0
 8004094:	d101      	bne.n	800409a <HAL_RCCEx_PeriphCLKConfig+0x86>
 8004096:	2301      	movs	r3, #1
 8004098:	61bb      	str	r3, [r7, #24]
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	681b      	ldr	r3, [r3, #0]
 800409e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d017      	beq.n	80040d6 <HAL_RCCEx_PeriphCLKConfig+0xc2>
 80040a6:	4b4a      	ldr	r3, [pc, #296]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80040a8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80040ac:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80040b4:	4946      	ldr	r1, [pc, #280]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80040b6:	4313      	orrs	r3, r2
 80040b8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80040c0:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80040c4:	d101      	bne.n	80040ca <HAL_RCCEx_PeriphCLKConfig+0xb6>
 80040c6:	2301      	movs	r3, #1
 80040c8:	61fb      	str	r3, [r7, #28]
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80040ce:	2b00      	cmp	r3, #0
 80040d0:	d101      	bne.n	80040d6 <HAL_RCCEx_PeriphCLKConfig+0xc2>
 80040d2:	2301      	movs	r3, #1
 80040d4:	61bb      	str	r3, [r7, #24]
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	681b      	ldr	r3, [r3, #0]
 80040da:	f003 0320 	and.w	r3, r3, #32
 80040de:	2b00      	cmp	r3, #0
 80040e0:	f000 808b 	beq.w	80041fa <HAL_RCCEx_PeriphCLKConfig+0x1e6>
 80040e4:	4b3a      	ldr	r3, [pc, #232]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80040e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040e8:	4a39      	ldr	r2, [pc, #228]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80040ea:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80040ee:	6413      	str	r3, [r2, #64]	; 0x40
 80040f0:	4b37      	ldr	r3, [pc, #220]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80040f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040f4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80040f8:	60fb      	str	r3, [r7, #12]
 80040fa:	68fb      	ldr	r3, [r7, #12]
 80040fc:	4b35      	ldr	r3, [pc, #212]	; (80041d4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	4a34      	ldr	r2, [pc, #208]	; (80041d4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8004102:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004106:	6013      	str	r3, [r2, #0]
 8004108:	f7fd fc84 	bl	8001a14 <HAL_GetTick>
 800410c:	6178      	str	r0, [r7, #20]
 800410e:	e008      	b.n	8004122 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8004110:	f7fd fc80 	bl	8001a14 <HAL_GetTick>
 8004114:	4602      	mov	r2, r0
 8004116:	697b      	ldr	r3, [r7, #20]
 8004118:	1ad3      	subs	r3, r2, r3
 800411a:	2b64      	cmp	r3, #100	; 0x64
 800411c:	d901      	bls.n	8004122 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800411e:	2303      	movs	r3, #3
 8004120:	e2bc      	b.n	800469c <HAL_RCCEx_PeriphCLKConfig+0x688>
 8004122:	4b2c      	ldr	r3, [pc, #176]	; (80041d4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800412a:	2b00      	cmp	r3, #0
 800412c:	d0f0      	beq.n	8004110 <HAL_RCCEx_PeriphCLKConfig+0xfc>
 800412e:	4b28      	ldr	r3, [pc, #160]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004130:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004132:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004136:	613b      	str	r3, [r7, #16]
 8004138:	693b      	ldr	r3, [r7, #16]
 800413a:	2b00      	cmp	r3, #0
 800413c:	d035      	beq.n	80041aa <HAL_RCCEx_PeriphCLKConfig+0x196>
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004142:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004146:	693a      	ldr	r2, [r7, #16]
 8004148:	429a      	cmp	r2, r3
 800414a:	d02e      	beq.n	80041aa <HAL_RCCEx_PeriphCLKConfig+0x196>
 800414c:	4b20      	ldr	r3, [pc, #128]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800414e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004150:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004154:	613b      	str	r3, [r7, #16]
 8004156:	4b1e      	ldr	r3, [pc, #120]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004158:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800415a:	4a1d      	ldr	r2, [pc, #116]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 800415c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004160:	6713      	str	r3, [r2, #112]	; 0x70
 8004162:	4b1b      	ldr	r3, [pc, #108]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004164:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004166:	4a1a      	ldr	r2, [pc, #104]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004168:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800416c:	6713      	str	r3, [r2, #112]	; 0x70
 800416e:	4a18      	ldr	r2, [pc, #96]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004170:	693b      	ldr	r3, [r7, #16]
 8004172:	6713      	str	r3, [r2, #112]	; 0x70
 8004174:	4b16      	ldr	r3, [pc, #88]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8004176:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004178:	f003 0301 	and.w	r3, r3, #1
 800417c:	2b01      	cmp	r3, #1
 800417e:	d114      	bne.n	80041aa <HAL_RCCEx_PeriphCLKConfig+0x196>
 8004180:	f7fd fc48 	bl	8001a14 <HAL_GetTick>
 8004184:	6178      	str	r0, [r7, #20]
 8004186:	e00a      	b.n	800419e <HAL_RCCEx_PeriphCLKConfig+0x18a>
 8004188:	f7fd fc44 	bl	8001a14 <HAL_GetTick>
 800418c:	4602      	mov	r2, r0
 800418e:	697b      	ldr	r3, [r7, #20]
 8004190:	1ad3      	subs	r3, r2, r3
 8004192:	f241 3288 	movw	r2, #5000	; 0x1388
 8004196:	4293      	cmp	r3, r2
 8004198:	d901      	bls.n	800419e <HAL_RCCEx_PeriphCLKConfig+0x18a>
 800419a:	2303      	movs	r3, #3
 800419c:	e27e      	b.n	800469c <HAL_RCCEx_PeriphCLKConfig+0x688>
 800419e:	4b0c      	ldr	r3, [pc, #48]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80041a0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80041a2:	f003 0302 	and.w	r3, r3, #2
 80041a6:	2b00      	cmp	r3, #0
 80041a8:	d0ee      	beq.n	8004188 <HAL_RCCEx_PeriphCLKConfig+0x174>
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80041ae:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80041b2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80041b6:	d111      	bne.n	80041dc <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 80041b8:	4b05      	ldr	r3, [pc, #20]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80041ba:	689b      	ldr	r3, [r3, #8]
 80041bc:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 80041c0:	687b      	ldr	r3, [r7, #4]
 80041c2:	6a99      	ldr	r1, [r3, #40]	; 0x28
 80041c4:	4b04      	ldr	r3, [pc, #16]	; (80041d8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>)
 80041c6:	400b      	ands	r3, r1
 80041c8:	4901      	ldr	r1, [pc, #4]	; (80041d0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 80041ca:	4313      	orrs	r3, r2
 80041cc:	608b      	str	r3, [r1, #8]
 80041ce:	e00b      	b.n	80041e8 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 80041d0:	40023800 	.word	0x40023800
 80041d4:	40007000 	.word	0x40007000
 80041d8:	0ffffcff 	.word	0x0ffffcff
 80041dc:	4ba4      	ldr	r3, [pc, #656]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80041de:	689b      	ldr	r3, [r3, #8]
 80041e0:	4aa3      	ldr	r2, [pc, #652]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80041e2:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 80041e6:	6093      	str	r3, [r2, #8]
 80041e8:	4ba1      	ldr	r3, [pc, #644]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80041ea:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80041f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80041f4:	499e      	ldr	r1, [pc, #632]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80041f6:	4313      	orrs	r3, r2
 80041f8:	670b      	str	r3, [r1, #112]	; 0x70
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f003 0310 	and.w	r3, r3, #16
 8004202:	2b00      	cmp	r3, #0
 8004204:	d010      	beq.n	8004228 <HAL_RCCEx_PeriphCLKConfig+0x214>
 8004206:	4b9a      	ldr	r3, [pc, #616]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004208:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800420c:	4a98      	ldr	r2, [pc, #608]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800420e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004212:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8004216:	4b96      	ldr	r3, [pc, #600]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004218:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004220:	4993      	ldr	r1, [pc, #588]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004222:	4313      	orrs	r3, r2
 8004224:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004230:	2b00      	cmp	r3, #0
 8004232:	d00a      	beq.n	800424a <HAL_RCCEx_PeriphCLKConfig+0x236>
 8004234:	4b8e      	ldr	r3, [pc, #568]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004236:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800423a:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004242:	498b      	ldr	r1, [pc, #556]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004244:	4313      	orrs	r3, r2
 8004246:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800424a:	687b      	ldr	r3, [r7, #4]
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004252:	2b00      	cmp	r3, #0
 8004254:	d00a      	beq.n	800426c <HAL_RCCEx_PeriphCLKConfig+0x258>
 8004256:	4b86      	ldr	r3, [pc, #536]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004258:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800425c:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004264:	4982      	ldr	r1, [pc, #520]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004266:	4313      	orrs	r3, r2
 8004268:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	681b      	ldr	r3, [r3, #0]
 8004270:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004274:	2b00      	cmp	r3, #0
 8004276:	d00a      	beq.n	800428e <HAL_RCCEx_PeriphCLKConfig+0x27a>
 8004278:	4b7d      	ldr	r3, [pc, #500]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800427a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800427e:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8004282:	687b      	ldr	r3, [r7, #4]
 8004284:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004286:	497a      	ldr	r1, [pc, #488]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004288:	4313      	orrs	r3, r2
 800428a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	681b      	ldr	r3, [r3, #0]
 8004292:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004296:	2b00      	cmp	r3, #0
 8004298:	d00a      	beq.n	80042b0 <HAL_RCCEx_PeriphCLKConfig+0x29c>
 800429a:	4b75      	ldr	r3, [pc, #468]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800429c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80042a0:	f023 0203 	bic.w	r2, r3, #3
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80042a8:	4971      	ldr	r1, [pc, #452]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80042aa:	4313      	orrs	r3, r2
 80042ac:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	681b      	ldr	r3, [r3, #0]
 80042b4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80042b8:	2b00      	cmp	r3, #0
 80042ba:	d00a      	beq.n	80042d2 <HAL_RCCEx_PeriphCLKConfig+0x2be>
 80042bc:	4b6c      	ldr	r3, [pc, #432]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80042be:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80042c2:	f023 020c 	bic.w	r2, r3, #12
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80042ca:	4969      	ldr	r1, [pc, #420]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80042cc:	4313      	orrs	r3, r2
 80042ce:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d00a      	beq.n	80042f4 <HAL_RCCEx_PeriphCLKConfig+0x2e0>
 80042de:	4b64      	ldr	r3, [pc, #400]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80042e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80042e4:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80042ec:	4960      	ldr	r1, [pc, #384]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80042ee:	4313      	orrs	r3, r2
 80042f0:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	681b      	ldr	r3, [r3, #0]
 80042f8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80042fc:	2b00      	cmp	r3, #0
 80042fe:	d00a      	beq.n	8004316 <HAL_RCCEx_PeriphCLKConfig+0x302>
 8004300:	4b5b      	ldr	r3, [pc, #364]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004302:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004306:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800430e:	4958      	ldr	r1, [pc, #352]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004310:	4313      	orrs	r3, r2
 8004312:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800431e:	2b00      	cmp	r3, #0
 8004320:	d00a      	beq.n	8004338 <HAL_RCCEx_PeriphCLKConfig+0x324>
 8004322:	4b53      	ldr	r3, [pc, #332]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004324:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004328:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004330:	494f      	ldr	r1, [pc, #316]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004332:	4313      	orrs	r3, r2
 8004334:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004340:	2b00      	cmp	r3, #0
 8004342:	d00a      	beq.n	800435a <HAL_RCCEx_PeriphCLKConfig+0x346>
 8004344:	4b4a      	ldr	r3, [pc, #296]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004346:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800434a:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004352:	4947      	ldr	r1, [pc, #284]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004354:	4313      	orrs	r3, r2
 8004356:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004362:	2b00      	cmp	r3, #0
 8004364:	d00a      	beq.n	800437c <HAL_RCCEx_PeriphCLKConfig+0x368>
 8004366:	4b42      	ldr	r3, [pc, #264]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004368:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800436c:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004374:	493e      	ldr	r1, [pc, #248]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004376:	4313      	orrs	r3, r2
 8004378:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681b      	ldr	r3, [r3, #0]
 8004380:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8004384:	2b00      	cmp	r3, #0
 8004386:	d00a      	beq.n	800439e <HAL_RCCEx_PeriphCLKConfig+0x38a>
 8004388:	4b39      	ldr	r3, [pc, #228]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800438a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800438e:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004396:	4936      	ldr	r1, [pc, #216]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004398:	4313      	orrs	r3, r2
 800439a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	681b      	ldr	r3, [r3, #0]
 80043a2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80043a6:	2b00      	cmp	r3, #0
 80043a8:	d011      	beq.n	80043ce <HAL_RCCEx_PeriphCLKConfig+0x3ba>
 80043aa:	4b31      	ldr	r3, [pc, #196]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80043ac:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80043b0:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80043b8:	492d      	ldr	r1, [pc, #180]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80043ba:	4313      	orrs	r3, r2
 80043bc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80043c4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80043c8:	d101      	bne.n	80043ce <HAL_RCCEx_PeriphCLKConfig+0x3ba>
 80043ca:	2301      	movs	r3, #1
 80043cc:	61bb      	str	r3, [r7, #24]
 80043ce:	687b      	ldr	r3, [r7, #4]
 80043d0:	681b      	ldr	r3, [r3, #0]
 80043d2:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80043d6:	2b00      	cmp	r3, #0
 80043d8:	d00a      	beq.n	80043f0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
 80043da:	4b25      	ldr	r3, [pc, #148]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80043dc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80043e0:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80043e8:	4921      	ldr	r1, [pc, #132]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80043ea:	4313      	orrs	r3, r2
 80043ec:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80043f8:	2b00      	cmp	r3, #0
 80043fa:	d00a      	beq.n	8004412 <HAL_RCCEx_PeriphCLKConfig+0x3fe>
 80043fc:	4b1c      	ldr	r3, [pc, #112]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 80043fe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004402:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800440a:	4919      	ldr	r1, [pc, #100]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800440c:	4313      	orrs	r3, r2
 800440e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	681b      	ldr	r3, [r3, #0]
 8004416:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800441a:	2b00      	cmp	r3, #0
 800441c:	d00a      	beq.n	8004434 <HAL_RCCEx_PeriphCLKConfig+0x420>
 800441e:	4b14      	ldr	r3, [pc, #80]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 8004420:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004424:	f023 5200 	bic.w	r2, r3, #536870912	; 0x20000000
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800442c:	4910      	ldr	r1, [pc, #64]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800442e:	4313      	orrs	r3, r2
 8004430:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004434:	69fb      	ldr	r3, [r7, #28]
 8004436:	2b01      	cmp	r3, #1
 8004438:	d006      	beq.n	8004448 <HAL_RCCEx_PeriphCLKConfig+0x434>
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	681b      	ldr	r3, [r3, #0]
 800443e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004442:	2b00      	cmp	r3, #0
 8004444:	f000 809d 	beq.w	8004582 <HAL_RCCEx_PeriphCLKConfig+0x56e>
 8004448:	4b09      	ldr	r3, [pc, #36]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800444a:	681b      	ldr	r3, [r3, #0]
 800444c:	4a08      	ldr	r2, [pc, #32]	; (8004470 <HAL_RCCEx_PeriphCLKConfig+0x45c>)
 800444e:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8004452:	6013      	str	r3, [r2, #0]
 8004454:	f7fd fade 	bl	8001a14 <HAL_GetTick>
 8004458:	6178      	str	r0, [r7, #20]
 800445a:	e00b      	b.n	8004474 <HAL_RCCEx_PeriphCLKConfig+0x460>
 800445c:	f7fd fada 	bl	8001a14 <HAL_GetTick>
 8004460:	4602      	mov	r2, r0
 8004462:	697b      	ldr	r3, [r7, #20]
 8004464:	1ad3      	subs	r3, r2, r3
 8004466:	2b64      	cmp	r3, #100	; 0x64
 8004468:	d904      	bls.n	8004474 <HAL_RCCEx_PeriphCLKConfig+0x460>
 800446a:	2303      	movs	r3, #3
 800446c:	e116      	b.n	800469c <HAL_RCCEx_PeriphCLKConfig+0x688>
 800446e:	bf00      	nop
 8004470:	40023800 	.word	0x40023800
 8004474:	4b8b      	ldr	r3, [pc, #556]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800447c:	2b00      	cmp	r3, #0
 800447e:	d1ed      	bne.n	800445c <HAL_RCCEx_PeriphCLKConfig+0x448>
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	f003 0301 	and.w	r3, r3, #1
 8004488:	2b00      	cmp	r3, #0
 800448a:	d017      	beq.n	80044bc <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004490:	2b00      	cmp	r3, #0
 8004492:	d113      	bne.n	80044bc <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8004494:	4b83      	ldr	r3, [pc, #524]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004496:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800449a:	0e1b      	lsrs	r3, r3, #24
 800449c:	f003 030f 	and.w	r3, r3, #15
 80044a0:	613b      	str	r3, [r7, #16]
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	685b      	ldr	r3, [r3, #4]
 80044a6:	019a      	lsls	r2, r3, #6
 80044a8:	693b      	ldr	r3, [r7, #16]
 80044aa:	061b      	lsls	r3, r3, #24
 80044ac:	431a      	orrs	r2, r3
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	689b      	ldr	r3, [r3, #8]
 80044b2:	071b      	lsls	r3, r3, #28
 80044b4:	497b      	ldr	r1, [pc, #492]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80044b6:	4313      	orrs	r3, r2
 80044b8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80044c4:	2b00      	cmp	r3, #0
 80044c6:	d004      	beq.n	80044d2 <HAL_RCCEx_PeriphCLKConfig+0x4be>
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80044cc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80044d0:	d00a      	beq.n	80044e8 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80044da:	2b00      	cmp	r3, #0
 80044dc:	d024      	beq.n	8004528 <HAL_RCCEx_PeriphCLKConfig+0x514>
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80044e2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80044e6:	d11f      	bne.n	8004528 <HAL_RCCEx_PeriphCLKConfig+0x514>
 80044e8:	4b6e      	ldr	r3, [pc, #440]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80044ea:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80044ee:	0f1b      	lsrs	r3, r3, #28
 80044f0:	f003 0307 	and.w	r3, r3, #7
 80044f4:	613b      	str	r3, [r7, #16]
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	685b      	ldr	r3, [r3, #4]
 80044fa:	019a      	lsls	r2, r3, #6
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	68db      	ldr	r3, [r3, #12]
 8004500:	061b      	lsls	r3, r3, #24
 8004502:	431a      	orrs	r2, r3
 8004504:	693b      	ldr	r3, [r7, #16]
 8004506:	071b      	lsls	r3, r3, #28
 8004508:	4966      	ldr	r1, [pc, #408]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800450a:	4313      	orrs	r3, r2
 800450c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8004510:	4b64      	ldr	r3, [pc, #400]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004512:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004516:	f023 021f 	bic.w	r2, r3, #31
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	69db      	ldr	r3, [r3, #28]
 800451e:	3b01      	subs	r3, #1
 8004520:	4960      	ldr	r1, [pc, #384]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004522:	4313      	orrs	r3, r2
 8004524:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	681b      	ldr	r3, [r3, #0]
 800452c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004530:	2b00      	cmp	r3, #0
 8004532:	d00d      	beq.n	8004550 <HAL_RCCEx_PeriphCLKConfig+0x53c>
 8004534:	687b      	ldr	r3, [r7, #4]
 8004536:	685b      	ldr	r3, [r3, #4]
 8004538:	019a      	lsls	r2, r3, #6
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	68db      	ldr	r3, [r3, #12]
 800453e:	061b      	lsls	r3, r3, #24
 8004540:	431a      	orrs	r2, r3
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	689b      	ldr	r3, [r3, #8]
 8004546:	071b      	lsls	r3, r3, #28
 8004548:	4956      	ldr	r1, [pc, #344]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800454a:	4313      	orrs	r3, r2
 800454c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8004550:	4b54      	ldr	r3, [pc, #336]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	4a53      	ldr	r2, [pc, #332]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004556:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800455a:	6013      	str	r3, [r2, #0]
 800455c:	f7fd fa5a 	bl	8001a14 <HAL_GetTick>
 8004560:	6178      	str	r0, [r7, #20]
 8004562:	e008      	b.n	8004576 <HAL_RCCEx_PeriphCLKConfig+0x562>
 8004564:	f7fd fa56 	bl	8001a14 <HAL_GetTick>
 8004568:	4602      	mov	r2, r0
 800456a:	697b      	ldr	r3, [r7, #20]
 800456c:	1ad3      	subs	r3, r2, r3
 800456e:	2b64      	cmp	r3, #100	; 0x64
 8004570:	d901      	bls.n	8004576 <HAL_RCCEx_PeriphCLKConfig+0x562>
 8004572:	2303      	movs	r3, #3
 8004574:	e092      	b.n	800469c <HAL_RCCEx_PeriphCLKConfig+0x688>
 8004576:	4b4b      	ldr	r3, [pc, #300]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004578:	681b      	ldr	r3, [r3, #0]
 800457a:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800457e:	2b00      	cmp	r3, #0
 8004580:	d0f0      	beq.n	8004564 <HAL_RCCEx_PeriphCLKConfig+0x550>
 8004582:	69bb      	ldr	r3, [r7, #24]
 8004584:	2b01      	cmp	r3, #1
 8004586:	f040 8088 	bne.w	800469a <HAL_RCCEx_PeriphCLKConfig+0x686>
 800458a:	4b46      	ldr	r3, [pc, #280]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	4a45      	ldr	r2, [pc, #276]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004590:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004594:	6013      	str	r3, [r2, #0]
 8004596:	f7fd fa3d 	bl	8001a14 <HAL_GetTick>
 800459a:	6178      	str	r0, [r7, #20]
 800459c:	e008      	b.n	80045b0 <HAL_RCCEx_PeriphCLKConfig+0x59c>
 800459e:	f7fd fa39 	bl	8001a14 <HAL_GetTick>
 80045a2:	4602      	mov	r2, r0
 80045a4:	697b      	ldr	r3, [r7, #20]
 80045a6:	1ad3      	subs	r3, r2, r3
 80045a8:	2b64      	cmp	r3, #100	; 0x64
 80045aa:	d901      	bls.n	80045b0 <HAL_RCCEx_PeriphCLKConfig+0x59c>
 80045ac:	2303      	movs	r3, #3
 80045ae:	e075      	b.n	800469c <HAL_RCCEx_PeriphCLKConfig+0x688>
 80045b0:	4b3c      	ldr	r3, [pc, #240]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80045b8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80045bc:	d0ef      	beq.n	800459e <HAL_RCCEx_PeriphCLKConfig+0x58a>
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d003      	beq.n	80045d2 <HAL_RCCEx_PeriphCLKConfig+0x5be>
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80045ce:	2b00      	cmp	r3, #0
 80045d0:	d009      	beq.n	80045e6 <HAL_RCCEx_PeriphCLKConfig+0x5d2>
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80045da:	2b00      	cmp	r3, #0
 80045dc:	d024      	beq.n	8004628 <HAL_RCCEx_PeriphCLKConfig+0x614>
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80045e2:	2b00      	cmp	r3, #0
 80045e4:	d120      	bne.n	8004628 <HAL_RCCEx_PeriphCLKConfig+0x614>
 80045e6:	4b2f      	ldr	r3, [pc, #188]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 80045e8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80045ec:	0c1b      	lsrs	r3, r3, #16
 80045ee:	f003 0303 	and.w	r3, r3, #3
 80045f2:	613b      	str	r3, [r7, #16]
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	691b      	ldr	r3, [r3, #16]
 80045f8:	019a      	lsls	r2, r3, #6
 80045fa:	693b      	ldr	r3, [r7, #16]
 80045fc:	041b      	lsls	r3, r3, #16
 80045fe:	431a      	orrs	r2, r3
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	695b      	ldr	r3, [r3, #20]
 8004604:	061b      	lsls	r3, r3, #24
 8004606:	4927      	ldr	r1, [pc, #156]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004608:	4313      	orrs	r3, r2
 800460a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800460e:	4b25      	ldr	r3, [pc, #148]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004610:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004614:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	6a1b      	ldr	r3, [r3, #32]
 800461c:	3b01      	subs	r3, #1
 800461e:	021b      	lsls	r3, r3, #8
 8004620:	4920      	ldr	r1, [pc, #128]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004622:	4313      	orrs	r3, r2
 8004624:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004630:	2b00      	cmp	r3, #0
 8004632:	d018      	beq.n	8004666 <HAL_RCCEx_PeriphCLKConfig+0x652>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004638:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800463c:	d113      	bne.n	8004666 <HAL_RCCEx_PeriphCLKConfig+0x652>
 800463e:	4b19      	ldr	r3, [pc, #100]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004640:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004644:	0e1b      	lsrs	r3, r3, #24
 8004646:	f003 030f 	and.w	r3, r3, #15
 800464a:	613b      	str	r3, [r7, #16]
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	691b      	ldr	r3, [r3, #16]
 8004650:	019a      	lsls	r2, r3, #6
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	699b      	ldr	r3, [r3, #24]
 8004656:	041b      	lsls	r3, r3, #16
 8004658:	431a      	orrs	r2, r3
 800465a:	693b      	ldr	r3, [r7, #16]
 800465c:	061b      	lsls	r3, r3, #24
 800465e:	4911      	ldr	r1, [pc, #68]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004660:	4313      	orrs	r3, r2
 8004662:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004666:	4b0f      	ldr	r3, [pc, #60]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 8004668:	681b      	ldr	r3, [r3, #0]
 800466a:	4a0e      	ldr	r2, [pc, #56]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800466c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004670:	6013      	str	r3, [r2, #0]
 8004672:	f7fd f9cf 	bl	8001a14 <HAL_GetTick>
 8004676:	6178      	str	r0, [r7, #20]
 8004678:	e008      	b.n	800468c <HAL_RCCEx_PeriphCLKConfig+0x678>
 800467a:	f7fd f9cb 	bl	8001a14 <HAL_GetTick>
 800467e:	4602      	mov	r2, r0
 8004680:	697b      	ldr	r3, [r7, #20]
 8004682:	1ad3      	subs	r3, r2, r3
 8004684:	2b64      	cmp	r3, #100	; 0x64
 8004686:	d901      	bls.n	800468c <HAL_RCCEx_PeriphCLKConfig+0x678>
 8004688:	2303      	movs	r3, #3
 800468a:	e007      	b.n	800469c <HAL_RCCEx_PeriphCLKConfig+0x688>
 800468c:	4b05      	ldr	r3, [pc, #20]	; (80046a4 <HAL_RCCEx_PeriphCLKConfig+0x690>)
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8004694:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004698:	d1ef      	bne.n	800467a <HAL_RCCEx_PeriphCLKConfig+0x666>
 800469a:	2300      	movs	r3, #0
 800469c:	4618      	mov	r0, r3
 800469e:	3720      	adds	r7, #32
 80046a0:	46bd      	mov	sp, r7
 80046a2:	bd80      	pop	{r7, pc}
 80046a4:	40023800 	.word	0x40023800

080046a8 <calloc>:
 80046a8:	4b02      	ldr	r3, [pc, #8]	; (80046b4 <calloc+0xc>)
 80046aa:	460a      	mov	r2, r1
 80046ac:	4601      	mov	r1, r0
 80046ae:	6818      	ldr	r0, [r3, #0]
 80046b0:	f000 b802 	b.w	80046b8 <_calloc_r>
 80046b4:	200000ac 	.word	0x200000ac

080046b8 <_calloc_r>:
 80046b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80046ba:	fba1 2402 	umull	r2, r4, r1, r2
 80046be:	b94c      	cbnz	r4, 80046d4 <_calloc_r+0x1c>
 80046c0:	4611      	mov	r1, r2
 80046c2:	9201      	str	r2, [sp, #4]
 80046c4:	f000 f836 	bl	8004734 <_malloc_r>
 80046c8:	9a01      	ldr	r2, [sp, #4]
 80046ca:	4605      	mov	r5, r0
 80046cc:	b930      	cbnz	r0, 80046dc <_calloc_r+0x24>
 80046ce:	4628      	mov	r0, r5
 80046d0:	b003      	add	sp, #12
 80046d2:	bd30      	pop	{r4, r5, pc}
 80046d4:	220c      	movs	r2, #12
 80046d6:	6002      	str	r2, [r0, #0]
 80046d8:	2500      	movs	r5, #0
 80046da:	e7f8      	b.n	80046ce <_calloc_r+0x16>
 80046dc:	4621      	mov	r1, r4
 80046de:	f000 f8b5 	bl	800484c <memset>
 80046e2:	e7f4      	b.n	80046ce <_calloc_r+0x16>

080046e4 <malloc>:
 80046e4:	4b02      	ldr	r3, [pc, #8]	; (80046f0 <malloc+0xc>)
 80046e6:	4601      	mov	r1, r0
 80046e8:	6818      	ldr	r0, [r3, #0]
 80046ea:	f000 b823 	b.w	8004734 <_malloc_r>
 80046ee:	bf00      	nop
 80046f0:	200000ac 	.word	0x200000ac

080046f4 <sbrk_aligned>:
 80046f4:	b570      	push	{r4, r5, r6, lr}
 80046f6:	4e0e      	ldr	r6, [pc, #56]	; (8004730 <sbrk_aligned+0x3c>)
 80046f8:	460c      	mov	r4, r1
 80046fa:	6831      	ldr	r1, [r6, #0]
 80046fc:	4605      	mov	r5, r0
 80046fe:	b911      	cbnz	r1, 8004706 <sbrk_aligned+0x12>
 8004700:	f000 f8ac 	bl	800485c <_sbrk_r>
 8004704:	6030      	str	r0, [r6, #0]
 8004706:	4621      	mov	r1, r4
 8004708:	4628      	mov	r0, r5
 800470a:	f000 f8a7 	bl	800485c <_sbrk_r>
 800470e:	1c43      	adds	r3, r0, #1
 8004710:	d00a      	beq.n	8004728 <sbrk_aligned+0x34>
 8004712:	1cc4      	adds	r4, r0, #3
 8004714:	f024 0403 	bic.w	r4, r4, #3
 8004718:	42a0      	cmp	r0, r4
 800471a:	d007      	beq.n	800472c <sbrk_aligned+0x38>
 800471c:	1a21      	subs	r1, r4, r0
 800471e:	4628      	mov	r0, r5
 8004720:	f000 f89c 	bl	800485c <_sbrk_r>
 8004724:	3001      	adds	r0, #1
 8004726:	d101      	bne.n	800472c <sbrk_aligned+0x38>
 8004728:	f04f 34ff 	mov.w	r4, #4294967295
 800472c:	4620      	mov	r0, r4
 800472e:	bd70      	pop	{r4, r5, r6, pc}
 8004730:	20000684 	.word	0x20000684

08004734 <_malloc_r>:
 8004734:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004738:	1ccd      	adds	r5, r1, #3
 800473a:	f025 0503 	bic.w	r5, r5, #3
 800473e:	3508      	adds	r5, #8
 8004740:	2d0c      	cmp	r5, #12
 8004742:	bf38      	it	cc
 8004744:	250c      	movcc	r5, #12
 8004746:	2d00      	cmp	r5, #0
 8004748:	4607      	mov	r7, r0
 800474a:	db01      	blt.n	8004750 <_malloc_r+0x1c>
 800474c:	42a9      	cmp	r1, r5
 800474e:	d905      	bls.n	800475c <_malloc_r+0x28>
 8004750:	230c      	movs	r3, #12
 8004752:	603b      	str	r3, [r7, #0]
 8004754:	2600      	movs	r6, #0
 8004756:	4630      	mov	r0, r6
 8004758:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800475c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8004830 <_malloc_r+0xfc>
 8004760:	f000 f868 	bl	8004834 <__malloc_lock>
 8004764:	f8d8 3000 	ldr.w	r3, [r8]
 8004768:	461c      	mov	r4, r3
 800476a:	bb5c      	cbnz	r4, 80047c4 <_malloc_r+0x90>
 800476c:	4629      	mov	r1, r5
 800476e:	4638      	mov	r0, r7
 8004770:	f7ff ffc0 	bl	80046f4 <sbrk_aligned>
 8004774:	1c43      	adds	r3, r0, #1
 8004776:	4604      	mov	r4, r0
 8004778:	d155      	bne.n	8004826 <_malloc_r+0xf2>
 800477a:	f8d8 4000 	ldr.w	r4, [r8]
 800477e:	4626      	mov	r6, r4
 8004780:	2e00      	cmp	r6, #0
 8004782:	d145      	bne.n	8004810 <_malloc_r+0xdc>
 8004784:	2c00      	cmp	r4, #0
 8004786:	d048      	beq.n	800481a <_malloc_r+0xe6>
 8004788:	6823      	ldr	r3, [r4, #0]
 800478a:	4631      	mov	r1, r6
 800478c:	4638      	mov	r0, r7
 800478e:	eb04 0903 	add.w	r9, r4, r3
 8004792:	f000 f863 	bl	800485c <_sbrk_r>
 8004796:	4581      	cmp	r9, r0
 8004798:	d13f      	bne.n	800481a <_malloc_r+0xe6>
 800479a:	6821      	ldr	r1, [r4, #0]
 800479c:	1a6d      	subs	r5, r5, r1
 800479e:	4629      	mov	r1, r5
 80047a0:	4638      	mov	r0, r7
 80047a2:	f7ff ffa7 	bl	80046f4 <sbrk_aligned>
 80047a6:	3001      	adds	r0, #1
 80047a8:	d037      	beq.n	800481a <_malloc_r+0xe6>
 80047aa:	6823      	ldr	r3, [r4, #0]
 80047ac:	442b      	add	r3, r5
 80047ae:	6023      	str	r3, [r4, #0]
 80047b0:	f8d8 3000 	ldr.w	r3, [r8]
 80047b4:	2b00      	cmp	r3, #0
 80047b6:	d038      	beq.n	800482a <_malloc_r+0xf6>
 80047b8:	685a      	ldr	r2, [r3, #4]
 80047ba:	42a2      	cmp	r2, r4
 80047bc:	d12b      	bne.n	8004816 <_malloc_r+0xe2>
 80047be:	2200      	movs	r2, #0
 80047c0:	605a      	str	r2, [r3, #4]
 80047c2:	e00f      	b.n	80047e4 <_malloc_r+0xb0>
 80047c4:	6822      	ldr	r2, [r4, #0]
 80047c6:	1b52      	subs	r2, r2, r5
 80047c8:	d41f      	bmi.n	800480a <_malloc_r+0xd6>
 80047ca:	2a0b      	cmp	r2, #11
 80047cc:	d917      	bls.n	80047fe <_malloc_r+0xca>
 80047ce:	1961      	adds	r1, r4, r5
 80047d0:	42a3      	cmp	r3, r4
 80047d2:	6025      	str	r5, [r4, #0]
 80047d4:	bf18      	it	ne
 80047d6:	6059      	strne	r1, [r3, #4]
 80047d8:	6863      	ldr	r3, [r4, #4]
 80047da:	bf08      	it	eq
 80047dc:	f8c8 1000 	streq.w	r1, [r8]
 80047e0:	5162      	str	r2, [r4, r5]
 80047e2:	604b      	str	r3, [r1, #4]
 80047e4:	4638      	mov	r0, r7
 80047e6:	f104 060b 	add.w	r6, r4, #11
 80047ea:	f000 f829 	bl	8004840 <__malloc_unlock>
 80047ee:	f026 0607 	bic.w	r6, r6, #7
 80047f2:	1d23      	adds	r3, r4, #4
 80047f4:	1af2      	subs	r2, r6, r3
 80047f6:	d0ae      	beq.n	8004756 <_malloc_r+0x22>
 80047f8:	1b9b      	subs	r3, r3, r6
 80047fa:	50a3      	str	r3, [r4, r2]
 80047fc:	e7ab      	b.n	8004756 <_malloc_r+0x22>
 80047fe:	42a3      	cmp	r3, r4
 8004800:	6862      	ldr	r2, [r4, #4]
 8004802:	d1dd      	bne.n	80047c0 <_malloc_r+0x8c>
 8004804:	f8c8 2000 	str.w	r2, [r8]
 8004808:	e7ec      	b.n	80047e4 <_malloc_r+0xb0>
 800480a:	4623      	mov	r3, r4
 800480c:	6864      	ldr	r4, [r4, #4]
 800480e:	e7ac      	b.n	800476a <_malloc_r+0x36>
 8004810:	4634      	mov	r4, r6
 8004812:	6876      	ldr	r6, [r6, #4]
 8004814:	e7b4      	b.n	8004780 <_malloc_r+0x4c>
 8004816:	4613      	mov	r3, r2
 8004818:	e7cc      	b.n	80047b4 <_malloc_r+0x80>
 800481a:	230c      	movs	r3, #12
 800481c:	603b      	str	r3, [r7, #0]
 800481e:	4638      	mov	r0, r7
 8004820:	f000 f80e 	bl	8004840 <__malloc_unlock>
 8004824:	e797      	b.n	8004756 <_malloc_r+0x22>
 8004826:	6025      	str	r5, [r4, #0]
 8004828:	e7dc      	b.n	80047e4 <_malloc_r+0xb0>
 800482a:	605b      	str	r3, [r3, #4]
 800482c:	deff      	udf	#255	; 0xff
 800482e:	bf00      	nop
 8004830:	20000680 	.word	0x20000680

08004834 <__malloc_lock>:
 8004834:	4801      	ldr	r0, [pc, #4]	; (800483c <__malloc_lock+0x8>)
 8004836:	f000 b84b 	b.w	80048d0 <__retarget_lock_acquire_recursive>
 800483a:	bf00      	nop
 800483c:	200007c4 	.word	0x200007c4

08004840 <__malloc_unlock>:
 8004840:	4801      	ldr	r0, [pc, #4]	; (8004848 <__malloc_unlock+0x8>)
 8004842:	f000 b846 	b.w	80048d2 <__retarget_lock_release_recursive>
 8004846:	bf00      	nop
 8004848:	200007c4 	.word	0x200007c4

0800484c <memset>:
 800484c:	4402      	add	r2, r0
 800484e:	4603      	mov	r3, r0
 8004850:	4293      	cmp	r3, r2
 8004852:	d100      	bne.n	8004856 <memset+0xa>
 8004854:	4770      	bx	lr
 8004856:	f803 1b01 	strb.w	r1, [r3], #1
 800485a:	e7f9      	b.n	8004850 <memset+0x4>

0800485c <_sbrk_r>:
 800485c:	b538      	push	{r3, r4, r5, lr}
 800485e:	4d06      	ldr	r5, [pc, #24]	; (8004878 <_sbrk_r+0x1c>)
 8004860:	2300      	movs	r3, #0
 8004862:	4604      	mov	r4, r0
 8004864:	4608      	mov	r0, r1
 8004866:	602b      	str	r3, [r5, #0]
 8004868:	f7fd f812 	bl	8001890 <_sbrk>
 800486c:	1c43      	adds	r3, r0, #1
 800486e:	d102      	bne.n	8004876 <_sbrk_r+0x1a>
 8004870:	682b      	ldr	r3, [r5, #0]
 8004872:	b103      	cbz	r3, 8004876 <_sbrk_r+0x1a>
 8004874:	6023      	str	r3, [r4, #0]
 8004876:	bd38      	pop	{r3, r4, r5, pc}
 8004878:	200007c0 	.word	0x200007c0

0800487c <__errno>:
 800487c:	4b01      	ldr	r3, [pc, #4]	; (8004884 <__errno+0x8>)
 800487e:	6818      	ldr	r0, [r3, #0]
 8004880:	4770      	bx	lr
 8004882:	bf00      	nop
 8004884:	200000ac 	.word	0x200000ac

08004888 <__libc_init_array>:
 8004888:	b570      	push	{r4, r5, r6, lr}
 800488a:	4d0d      	ldr	r5, [pc, #52]	; (80048c0 <__libc_init_array+0x38>)
 800488c:	4c0d      	ldr	r4, [pc, #52]	; (80048c4 <__libc_init_array+0x3c>)
 800488e:	1b64      	subs	r4, r4, r5
 8004890:	10a4      	asrs	r4, r4, #2
 8004892:	2600      	movs	r6, #0
 8004894:	42a6      	cmp	r6, r4
 8004896:	d109      	bne.n	80048ac <__libc_init_array+0x24>
 8004898:	4d0b      	ldr	r5, [pc, #44]	; (80048c8 <__libc_init_array+0x40>)
 800489a:	4c0c      	ldr	r4, [pc, #48]	; (80048cc <__libc_init_array+0x44>)
 800489c:	f000 f81a 	bl	80048d4 <_init>
 80048a0:	1b64      	subs	r4, r4, r5
 80048a2:	10a4      	asrs	r4, r4, #2
 80048a4:	2600      	movs	r6, #0
 80048a6:	42a6      	cmp	r6, r4
 80048a8:	d105      	bne.n	80048b6 <__libc_init_array+0x2e>
 80048aa:	bd70      	pop	{r4, r5, r6, pc}
 80048ac:	f855 3b04 	ldr.w	r3, [r5], #4
 80048b0:	4798      	blx	r3
 80048b2:	3601      	adds	r6, #1
 80048b4:	e7ee      	b.n	8004894 <__libc_init_array+0xc>
 80048b6:	f855 3b04 	ldr.w	r3, [r5], #4
 80048ba:	4798      	blx	r3
 80048bc:	3601      	adds	r6, #1
 80048be:	e7f2      	b.n	80048a6 <__libc_init_array+0x1e>
 80048c0:	08004944 	.word	0x08004944
 80048c4:	08004944 	.word	0x08004944
 80048c8:	08004944 	.word	0x08004944
 80048cc:	08004948 	.word	0x08004948

080048d0 <__retarget_lock_acquire_recursive>:
 80048d0:	4770      	bx	lr

080048d2 <__retarget_lock_release_recursive>:
 80048d2:	4770      	bx	lr

080048d4 <_init>:
 80048d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80048d6:	bf00      	nop
 80048d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80048da:	bc08      	pop	{r3}
 80048dc:	469e      	mov	lr, r3
 80048de:	4770      	bx	lr

080048e0 <_fini>:
 80048e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80048e2:	bf00      	nop
 80048e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80048e6:	bc08      	pop	{r3}
 80048e8:	469e      	mov	lr, r3
 80048ea:	4770      	bx	lr
